// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	tfTypes "github.com/criblio/terraform-provider-criblio/internal/provider/types"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *CriblLakeHouseDataSourceModel) RefreshFromOperationsGetDefaultLakeLakehouseByIDResponseBody(ctx context.Context, resp *operations.GetDefaultLakeLakehouseByIDResponseBody) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Items = []tfTypes.Lakehouse{}

		for _, itemsItem := range resp.Items {
			var items tfTypes.Lakehouse

			items.Description = types.StringPointerValue(itemsItem.Description)
			items.ID = types.StringValue(itemsItem.ID)
			items.Status = types.StringPointerValue(itemsItem.Status)
			if itemsItem.TierSize != nil {
				items.TierSize = types.StringValue(string(*itemsItem.TierSize))
			} else {
				items.TierSize = types.StringNull()
			}

			r.Items = append(r.Items, items)
		}
	}

	return diags
}

func (r *CriblLakeHouseDataSourceModel) ToOperationsGetDefaultLakeLakehouseByIDRequest(ctx context.Context) (*operations.GetDefaultLakeLakehouseByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetDefaultLakeLakehouseByIDRequest{
		ID: id,
	}

	return &out, diags
}
