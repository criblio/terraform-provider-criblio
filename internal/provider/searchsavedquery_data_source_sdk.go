// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	tfTypes "github.com/criblio/terraform-provider-criblio/internal/provider/types"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SearchSavedQueryDataSourceModel) RefreshFromOperationsGetSavedQueryByIDResponseBody(ctx context.Context, resp *operations.GetSavedQueryByIDResponseBody) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Items = []tfTypes.SavedQuery{}

		for _, itemsItem := range resp.Items {
			var items tfTypes.SavedQuery

			items.Description = types.StringPointerValue(itemsItem.Description)
			items.Earliest = types.StringPointerValue(itemsItem.Earliest)
			items.ID = types.StringValue(itemsItem.ID)
			items.IsPrivate = types.BoolPointerValue(itemsItem.IsPrivate)
			items.Latest = types.StringPointerValue(itemsItem.Latest)
			items.Name = types.StringValue(itemsItem.Name)
			items.Query = types.StringValue(itemsItem.Query)
			if itemsItem.Schedule == nil {
				items.Schedule = nil
			} else {
				items.Schedule = &tfTypes.SavedQuerySchedule{}
				items.Schedule.CronSchedule = types.StringValue(itemsItem.Schedule.CronSchedule)
				items.Schedule.Enabled = types.BoolValue(itemsItem.Schedule.Enabled)
				items.Schedule.KeepLastN = types.Float64Value(itemsItem.Schedule.KeepLastN)
				items.Schedule.Notifications.Disabled = types.BoolValue(itemsItem.Schedule.Notifications.Disabled)
				items.Schedule.Tz = types.StringValue(itemsItem.Schedule.Tz)
			}

			r.Items = append(r.Items, items)
		}
	}

	return diags
}

func (r *SearchSavedQueryDataSourceModel) ToOperationsGetSavedQueryByIDRequest(ctx context.Context) (*operations.GetSavedQueryByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetSavedQueryByIDRequest{
		ID: id,
	}

	return &out, diags
}
