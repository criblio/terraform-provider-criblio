// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	tfTypes "github.com/criblio/terraform-provider-criblio/internal/provider/types"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SearchSavedQueryDataSourceModel) RefreshFromSharedSavedQuery(ctx context.Context, resp *shared.SavedQuery) diag.Diagnostics {
	var diags diag.Diagnostics

	r.Description = types.StringPointerValue(resp.Description)
	r.Earliest = types.StringPointerValue(resp.Earliest)
	r.ID = types.StringValue(resp.ID)
	r.IsPrivate = types.BoolPointerValue(resp.IsPrivate)
	r.Latest = types.StringPointerValue(resp.Latest)
	r.Name = types.StringValue(resp.Name)
	r.Query = types.StringValue(resp.Query)
	if resp.Schedule == nil {
		r.Schedule = nil
	} else {
		r.Schedule = &tfTypes.SavedQuerySchedule{}
		r.Schedule.CronSchedule = types.StringValue(resp.Schedule.CronSchedule)
		r.Schedule.Enabled = types.BoolValue(resp.Schedule.Enabled)
		r.Schedule.KeepLastN = types.Float64Value(resp.Schedule.KeepLastN)
		r.Schedule.Notifications.Disabled = types.BoolValue(resp.Schedule.Notifications.Disabled)
		r.Schedule.Tz = types.StringValue(resp.Schedule.Tz)
	}

	return diags
}

func (r *SearchSavedQueryDataSourceModel) ToOperationsGetSavedQueryByIDRequest(ctx context.Context) (*operations.GetSavedQueryByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetSavedQueryByIDRequest{
		ID: id,
	}

	return &out, diags
}
