// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	tfTypes "github.com/criblio/terraform-provider-criblio/internal/provider/types"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *ProjectDataSourceModel) RefreshFromSharedProjectConfig(ctx context.Context, resp *shared.ProjectConfig) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp.Consumers == nil {
		r.Consumers = nil
	} else {
		r.Consumers = &tfTypes.Consumers{}
	}
	r.Description = types.StringPointerValue(resp.Description)
	r.Destinations = make([]types.String, 0, len(resp.Destinations))
	for _, v := range resp.Destinations {
		r.Destinations = append(r.Destinations, types.StringValue(v))
	}
	r.ID = types.StringValue(resp.ID)
	r.Subscriptions = make([]types.String, 0, len(resp.Subscriptions))
	for _, v := range resp.Subscriptions {
		r.Subscriptions = append(r.Subscriptions, types.StringValue(v))
	}

	return diags
}

func (r *ProjectDataSourceModel) ToOperationsGetProjectByIDRequest(ctx context.Context) (*operations.GetProjectByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	var groupID string
	groupID = r.GroupID.ValueString()

	out := operations.GetProjectByIDRequest{
		ID:      id,
		GroupID: groupID,
	}

	return &out, diags
}
