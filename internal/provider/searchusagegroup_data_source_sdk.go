// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"encoding/json"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SearchUsageGroupDataSourceModel) RefreshFromSharedUsageGroup(ctx context.Context, resp *shared.UsageGroup) diag.Diagnostics {
	var diags diag.Diagnostics

	r.CoordinatorHeapMemoryLimit = types.Float64PointerValue(resp.CoordinatorHeapMemoryLimit)
	r.Description = types.StringPointerValue(resp.Description)
	r.Enabled = types.BoolPointerValue(resp.Enabled)
	r.ID = types.StringValue(resp.ID)
	rulesResult, _ := json.Marshal(resp.Rules)
	r.Rules = types.StringValue(string(rulesResult))
	r.UsersCount = types.Float64PointerValue(resp.UsersCount)

	return diags
}

func (r *SearchUsageGroupDataSourceModel) ToOperationsGetUsageGroupByIDRequest(ctx context.Context) (*operations.GetUsageGroupByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetUsageGroupByIDRequest{
		ID: id,
	}

	return &out, diags
}
