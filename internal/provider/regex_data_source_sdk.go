// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	tfTypes "github.com/criblio/terraform-provider-criblio/internal/provider/types"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *RegexDataSourceModel) RefreshFromOperationsGetRegexLibEntryByIDResponseBody(ctx context.Context, resp *operations.GetRegexLibEntryByIDResponseBody) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Items = []tfTypes.RegexLibEntry{}

		for _, itemsItem := range resp.Items {
			var items tfTypes.RegexLibEntry

			items.Description = types.StringPointerValue(itemsItem.Description)
			items.ID = types.StringValue(itemsItem.ID)
			items.Lib = types.StringPointerValue(itemsItem.Lib)
			items.Regex = types.StringValue(itemsItem.Regex)
			items.SampleData = types.StringPointerValue(itemsItem.SampleData)
			items.Tags = types.StringPointerValue(itemsItem.Tags)

			r.Items = append(r.Items, items)
		}
	}

	return diags
}

func (r *RegexDataSourceModel) ToOperationsGetRegexLibEntryByIDRequest(ctx context.Context) (*operations.GetRegexLibEntryByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	var groupID string
	groupID = r.GroupID.ValueString()

	out := operations.GetRegexLibEntryByIDRequest{
		ID:      id,
		GroupID: groupID,
	}

	return &out, diags
}
