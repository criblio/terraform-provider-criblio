// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/criblio/terraform-provider-criblio/internal/provider/typeconvert"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *WorkspaceDataSourceModel) RefreshFromSharedWorkspaceSchema(ctx context.Context, resp *shared.WorkspaceSchema) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Alias = types.StringPointerValue(resp.Alias)
		r.Description = types.StringPointerValue(resp.Description)
		r.LastUpdated = types.StringValue(typeconvert.TimeToString(resp.LastUpdated))
		r.LeaderFQDN = types.StringValue(resp.LeaderFQDN)
		r.Region = types.StringValue(string(resp.Region))
		r.State = types.StringValue(string(resp.State))
		r.Tags = make([]types.String, 0, len(resp.Tags))
		for _, v := range resp.Tags {
			r.Tags = append(r.Tags, types.StringValue(v))
		}
		r.WorkspaceID = types.StringValue(resp.WorkspaceID)
	}

	return diags
}

func (r *WorkspaceDataSourceModel) ToOperationsV1WorkspacesGetWorkspaceRequest(ctx context.Context) (*operations.V1WorkspacesGetWorkspaceRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var organizationID string
	organizationID = r.OrganizationID.ValueString()

	var workspaceID string
	workspaceID = r.WorkspaceID.ValueString()

	out := operations.V1WorkspacesGetWorkspaceRequest{
		OrganizationID: organizationID,
		WorkspaceID:    workspaceID,
	}

	return &out, diags
}
