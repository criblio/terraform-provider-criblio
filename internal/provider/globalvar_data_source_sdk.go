// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"encoding/json"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/hashicorp/terraform-plugin-framework-jsontypes/jsontypes"
	"github.com/hashicorp/terraform-plugin-framework/diag"
)

func (r *GlobalVarDataSourceModel) RefreshFromOperationsGetGlobalVariableByIDResponseBody(ctx context.Context, resp *operations.GetGlobalVariableByIDResponseBody) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Items = nil
		for _, itemsItem := range resp.Items {
			var items map[string]jsontypes.Normalized
			if len(itemsItem) > 0 {
				items = make(map[string]jsontypes.Normalized, len(itemsItem))
				for key, value := range itemsItem {
					result, _ := json.Marshal(value)
					items[key] = jsontypes.NewNormalizedValue(string(result))
				}
			}
			r.Items = append(r.Items, items)
		}
	}

	return diags
}

func (r *GlobalVarDataSourceModel) ToOperationsGetGlobalVariableByIDRequest(ctx context.Context) (*operations.GetGlobalVariableByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	var groupID string
	groupID = r.GroupID.ValueString()

	out := operations.GetGlobalVariableByIDRequest{
		ID:      id,
		GroupID: groupID,
	}

	return &out, diags
}
