// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/criblio/terraform-provider-criblio/internal/provider/typeconvert"
	tfTypes "github.com/criblio/terraform-provider-criblio/internal/provider/types"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SearchDatasetDataSourceModel) RefreshFromOperationsGetDatasetByIDResponseBody(ctx context.Context, resp *operations.GetDatasetByIDResponseBody) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Items = []tfTypes.GenericDataset{}

		for _, itemsItem := range resp.Items {
			var items tfTypes.GenericDataset

			if itemsItem.APIAwsDataset != nil {
				items.APIAwsDataset = &tfTypes.APIAwsDataset{}
				items.APIAwsDataset.Description = types.StringPointerValue(itemsItem.APIAwsDataset.Description)
				items.APIAwsDataset.EnabledEndpoints = make([]types.String, 0, len(itemsItem.APIAwsDataset.EnabledEndpoints))
				for _, v := range itemsItem.APIAwsDataset.EnabledEndpoints {
					items.APIAwsDataset.EnabledEndpoints = append(items.APIAwsDataset.EnabledEndpoints, types.StringValue(v))
				}
				items.APIAwsDataset.ID = types.StringValue(itemsItem.APIAwsDataset.ID)
				if itemsItem.APIAwsDataset.Metadata == nil {
					items.APIAwsDataset.Metadata = nil
				} else {
					items.APIAwsDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIAwsDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIAwsDataset.Metadata.Created))
					items.APIAwsDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIAwsDataset.Metadata.EnableAcceleration)
					items.APIAwsDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIAwsDataset.Metadata.Modified))
					items.APIAwsDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIAwsDataset.Metadata.Tags))
					for _, v := range itemsItem.APIAwsDataset.Metadata.Tags {
						items.APIAwsDataset.Metadata.Tags = append(items.APIAwsDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIAwsDataset.ProviderID = types.StringValue(itemsItem.APIAwsDataset.ProviderID)
				items.APIAwsDataset.Regions = make([]types.String, 0, len(itemsItem.APIAwsDataset.Regions))
				for _, v := range itemsItem.APIAwsDataset.Regions {
					items.APIAwsDataset.Regions = append(items.APIAwsDataset.Regions, types.StringValue(v))
				}
				items.APIAwsDataset.Type = types.StringValue(itemsItem.APIAwsDataset.Type)
			}
			if itemsItem.APIAzureDataExplorerDataset != nil {
				items.APIAzureDataExplorerDataset = &tfTypes.APIAzureDataExplorerDataset{}
				items.APIAzureDataExplorerDataset.Cluster = types.StringValue(itemsItem.APIAzureDataExplorerDataset.Cluster)
				items.APIAzureDataExplorerDataset.Database = types.StringValue(itemsItem.APIAzureDataExplorerDataset.Database)
				items.APIAzureDataExplorerDataset.Description = types.StringPointerValue(itemsItem.APIAzureDataExplorerDataset.Description)
				items.APIAzureDataExplorerDataset.ID = types.StringValue(itemsItem.APIAzureDataExplorerDataset.ID)
				items.APIAzureDataExplorerDataset.Location = types.StringValue(itemsItem.APIAzureDataExplorerDataset.Location)
				if itemsItem.APIAzureDataExplorerDataset.Metadata == nil {
					items.APIAzureDataExplorerDataset.Metadata = nil
				} else {
					items.APIAzureDataExplorerDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIAzureDataExplorerDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIAzureDataExplorerDataset.Metadata.Created))
					items.APIAzureDataExplorerDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIAzureDataExplorerDataset.Metadata.EnableAcceleration)
					items.APIAzureDataExplorerDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIAzureDataExplorerDataset.Metadata.Modified))
					items.APIAzureDataExplorerDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIAzureDataExplorerDataset.Metadata.Tags))
					for _, v := range itemsItem.APIAzureDataExplorerDataset.Metadata.Tags {
						items.APIAzureDataExplorerDataset.Metadata.Tags = append(items.APIAzureDataExplorerDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIAzureDataExplorerDataset.ProviderID = types.StringValue(itemsItem.APIAzureDataExplorerDataset.ProviderID)
				items.APIAzureDataExplorerDataset.Table = types.StringValue(itemsItem.APIAzureDataExplorerDataset.Table)
				items.APIAzureDataExplorerDataset.TimestampField = types.StringPointerValue(itemsItem.APIAzureDataExplorerDataset.TimestampField)
				items.APIAzureDataExplorerDataset.TimestampFieldContents = types.StringPointerValue(itemsItem.APIAzureDataExplorerDataset.TimestampFieldContents)
				items.APIAzureDataExplorerDataset.Type = types.StringValue(itemsItem.APIAzureDataExplorerDataset.Type)
			}
			if itemsItem.APIAzureDataset != nil {
				items.APIAzureDataset = &tfTypes.APIAzureDataset{}
				items.APIAzureDataset.Description = types.StringPointerValue(itemsItem.APIAzureDataset.Description)
				items.APIAzureDataset.EnabledEndpoints = make([]types.String, 0, len(itemsItem.APIAzureDataset.EnabledEndpoints))
				for _, v := range itemsItem.APIAzureDataset.EnabledEndpoints {
					items.APIAzureDataset.EnabledEndpoints = append(items.APIAzureDataset.EnabledEndpoints, types.StringValue(v))
				}
				items.APIAzureDataset.ID = types.StringValue(itemsItem.APIAzureDataset.ID)
				if itemsItem.APIAzureDataset.Metadata == nil {
					items.APIAzureDataset.Metadata = nil
				} else {
					items.APIAzureDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIAzureDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIAzureDataset.Metadata.Created))
					items.APIAzureDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIAzureDataset.Metadata.EnableAcceleration)
					items.APIAzureDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIAzureDataset.Metadata.Modified))
					items.APIAzureDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIAzureDataset.Metadata.Tags))
					for _, v := range itemsItem.APIAzureDataset.Metadata.Tags {
						items.APIAzureDataset.Metadata.Tags = append(items.APIAzureDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIAzureDataset.ProviderID = types.StringValue(itemsItem.APIAzureDataset.ProviderID)
				items.APIAzureDataset.SubscriptionIds = make([]types.String, 0, len(itemsItem.APIAzureDataset.SubscriptionIds))
				for _, v := range itemsItem.APIAzureDataset.SubscriptionIds {
					items.APIAzureDataset.SubscriptionIds = append(items.APIAzureDataset.SubscriptionIds, types.StringValue(v))
				}
				items.APIAzureDataset.Type = types.StringValue(itemsItem.APIAzureDataset.Type)
			}
			if itemsItem.APIElasticSearchDataset != nil {
				items.APIElasticSearchDataset = &tfTypes.APIElasticSearchDataset{}
				items.APIElasticSearchDataset.Description = types.StringPointerValue(itemsItem.APIElasticSearchDataset.Description)
				items.APIElasticSearchDataset.ID = types.StringValue(itemsItem.APIElasticSearchDataset.ID)
				items.APIElasticSearchDataset.Index = types.StringValue(itemsItem.APIElasticSearchDataset.Index)
				if itemsItem.APIElasticSearchDataset.Metadata == nil {
					items.APIElasticSearchDataset.Metadata = nil
				} else {
					items.APIElasticSearchDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIElasticSearchDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIElasticSearchDataset.Metadata.Created))
					items.APIElasticSearchDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIElasticSearchDataset.Metadata.EnableAcceleration)
					items.APIElasticSearchDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIElasticSearchDataset.Metadata.Modified))
					items.APIElasticSearchDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIElasticSearchDataset.Metadata.Tags))
					for _, v := range itemsItem.APIElasticSearchDataset.Metadata.Tags {
						items.APIElasticSearchDataset.Metadata.Tags = append(items.APIElasticSearchDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIElasticSearchDataset.ProviderID = types.StringValue(itemsItem.APIElasticSearchDataset.ProviderID)
				items.APIElasticSearchDataset.TimestampField = types.StringValue(itemsItem.APIElasticSearchDataset.TimestampField)
				items.APIElasticSearchDataset.Type = types.StringValue(itemsItem.APIElasticSearchDataset.Type)
			}
			if itemsItem.APIGcpDataset != nil {
				items.APIGcpDataset = &tfTypes.APIGcpDataset{}
				items.APIGcpDataset.Description = types.StringPointerValue(itemsItem.APIGcpDataset.Description)
				items.APIGcpDataset.EndpointConfigs = []tfTypes.GcpEndpointConfig{}

				for _, endpointConfigsItem := range itemsItem.APIGcpDataset.EndpointConfigs {
					var endpointConfigs tfTypes.GcpEndpointConfig

					endpointConfigs.EndpointName = types.StringValue(endpointConfigsItem.EndpointName)
					endpointConfigs.Region = types.StringPointerValue(endpointConfigsItem.Region)

					items.APIGcpDataset.EndpointConfigs = append(items.APIGcpDataset.EndpointConfigs, endpointConfigs)
				}
				items.APIGcpDataset.ID = types.StringValue(itemsItem.APIGcpDataset.ID)
				if itemsItem.APIGcpDataset.Metadata == nil {
					items.APIGcpDataset.Metadata = nil
				} else {
					items.APIGcpDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIGcpDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIGcpDataset.Metadata.Created))
					items.APIGcpDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIGcpDataset.Metadata.EnableAcceleration)
					items.APIGcpDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIGcpDataset.Metadata.Modified))
					items.APIGcpDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIGcpDataset.Metadata.Tags))
					for _, v := range itemsItem.APIGcpDataset.Metadata.Tags {
						items.APIGcpDataset.Metadata.Tags = append(items.APIGcpDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIGcpDataset.ProviderID = types.StringValue(itemsItem.APIGcpDataset.ProviderID)
				items.APIGcpDataset.Type = types.StringValue(itemsItem.APIGcpDataset.Type)
			}
			if itemsItem.APIGoogleWorkspaceDataset != nil {
				items.APIGoogleWorkspaceDataset = &tfTypes.APIGoogleWorkspaceDataset{}
				items.APIGoogleWorkspaceDataset.Description = types.StringPointerValue(itemsItem.APIGoogleWorkspaceDataset.Description)
				items.APIGoogleWorkspaceDataset.EnabledEndpoints = make([]types.String, 0, len(itemsItem.APIGoogleWorkspaceDataset.EnabledEndpoints))
				for _, v := range itemsItem.APIGoogleWorkspaceDataset.EnabledEndpoints {
					items.APIGoogleWorkspaceDataset.EnabledEndpoints = append(items.APIGoogleWorkspaceDataset.EnabledEndpoints, types.StringValue(v))
				}
				items.APIGoogleWorkspaceDataset.ID = types.StringValue(itemsItem.APIGoogleWorkspaceDataset.ID)
				if itemsItem.APIGoogleWorkspaceDataset.Metadata == nil {
					items.APIGoogleWorkspaceDataset.Metadata = nil
				} else {
					items.APIGoogleWorkspaceDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIGoogleWorkspaceDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIGoogleWorkspaceDataset.Metadata.Created))
					items.APIGoogleWorkspaceDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIGoogleWorkspaceDataset.Metadata.EnableAcceleration)
					items.APIGoogleWorkspaceDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIGoogleWorkspaceDataset.Metadata.Modified))
					items.APIGoogleWorkspaceDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIGoogleWorkspaceDataset.Metadata.Tags))
					for _, v := range itemsItem.APIGoogleWorkspaceDataset.Metadata.Tags {
						items.APIGoogleWorkspaceDataset.Metadata.Tags = append(items.APIGoogleWorkspaceDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIGoogleWorkspaceDataset.ProviderID = types.StringValue(itemsItem.APIGoogleWorkspaceDataset.ProviderID)
				items.APIGoogleWorkspaceDataset.Type = types.StringValue(itemsItem.APIGoogleWorkspaceDataset.Type)
			}
			if itemsItem.APIHTTPDataset != nil {
				items.APIHTTPDataset = &tfTypes.APIHTTPDataset{}
				items.APIHTTPDataset.Description = types.StringPointerValue(itemsItem.APIHTTPDataset.Description)
				items.APIHTTPDataset.EnabledEndpoints = make([]types.String, 0, len(itemsItem.APIHTTPDataset.EnabledEndpoints))
				for _, v := range itemsItem.APIHTTPDataset.EnabledEndpoints {
					items.APIHTTPDataset.EnabledEndpoints = append(items.APIHTTPDataset.EnabledEndpoints, types.StringValue(v))
				}
				items.APIHTTPDataset.ID = types.StringValue(itemsItem.APIHTTPDataset.ID)
				if itemsItem.APIHTTPDataset.Metadata == nil {
					items.APIHTTPDataset.Metadata = nil
				} else {
					items.APIHTTPDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIHTTPDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIHTTPDataset.Metadata.Created))
					items.APIHTTPDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIHTTPDataset.Metadata.EnableAcceleration)
					items.APIHTTPDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIHTTPDataset.Metadata.Modified))
					items.APIHTTPDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIHTTPDataset.Metadata.Tags))
					for _, v := range itemsItem.APIHTTPDataset.Metadata.Tags {
						items.APIHTTPDataset.Metadata.Tags = append(items.APIHTTPDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIHTTPDataset.ProviderID = types.StringValue(itemsItem.APIHTTPDataset.ProviderID)
				items.APIHTTPDataset.Type = types.StringValue(itemsItem.APIHTTPDataset.Type)
			}
			if itemsItem.APIMsGraphDataset != nil {
				items.APIMsGraphDataset = &tfTypes.APIMsGraphDataset{}
				items.APIMsGraphDataset.Description = types.StringPointerValue(itemsItem.APIMsGraphDataset.Description)
				items.APIMsGraphDataset.EnabledEndpoints = make([]types.String, 0, len(itemsItem.APIMsGraphDataset.EnabledEndpoints))
				for _, v := range itemsItem.APIMsGraphDataset.EnabledEndpoints {
					items.APIMsGraphDataset.EnabledEndpoints = append(items.APIMsGraphDataset.EnabledEndpoints, types.StringValue(v))
				}
				items.APIMsGraphDataset.ID = types.StringValue(itemsItem.APIMsGraphDataset.ID)
				if itemsItem.APIMsGraphDataset.Metadata == nil {
					items.APIMsGraphDataset.Metadata = nil
				} else {
					items.APIMsGraphDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIMsGraphDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIMsGraphDataset.Metadata.Created))
					items.APIMsGraphDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIMsGraphDataset.Metadata.EnableAcceleration)
					items.APIMsGraphDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIMsGraphDataset.Metadata.Modified))
					items.APIMsGraphDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIMsGraphDataset.Metadata.Tags))
					for _, v := range itemsItem.APIMsGraphDataset.Metadata.Tags {
						items.APIMsGraphDataset.Metadata.Tags = append(items.APIMsGraphDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIMsGraphDataset.ProviderID = types.StringValue(itemsItem.APIMsGraphDataset.ProviderID)
				items.APIMsGraphDataset.Type = types.StringValue(itemsItem.APIMsGraphDataset.Type)
			}
			if itemsItem.APIOktaDataset != nil {
				items.APIOktaDataset = &tfTypes.APIOktaDataset{}
				items.APIOktaDataset.Description = types.StringPointerValue(itemsItem.APIOktaDataset.Description)
				items.APIOktaDataset.EnabledEndpoints = make([]types.String, 0, len(itemsItem.APIOktaDataset.EnabledEndpoints))
				for _, v := range itemsItem.APIOktaDataset.EnabledEndpoints {
					items.APIOktaDataset.EnabledEndpoints = append(items.APIOktaDataset.EnabledEndpoints, types.StringValue(v))
				}
				items.APIOktaDataset.ID = types.StringValue(itemsItem.APIOktaDataset.ID)
				if itemsItem.APIOktaDataset.Metadata == nil {
					items.APIOktaDataset.Metadata = nil
				} else {
					items.APIOktaDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIOktaDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIOktaDataset.Metadata.Created))
					items.APIOktaDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIOktaDataset.Metadata.EnableAcceleration)
					items.APIOktaDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIOktaDataset.Metadata.Modified))
					items.APIOktaDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIOktaDataset.Metadata.Tags))
					for _, v := range itemsItem.APIOktaDataset.Metadata.Tags {
						items.APIOktaDataset.Metadata.Tags = append(items.APIOktaDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIOktaDataset.ProviderID = types.StringValue(itemsItem.APIOktaDataset.ProviderID)
				items.APIOktaDataset.Type = types.StringValue(itemsItem.APIOktaDataset.Type)
			}
			if itemsItem.APIOpenSearchDataset != nil {
				items.APIOpenSearchDataset = &tfTypes.APIOpenSearchDataset{}
				items.APIOpenSearchDataset.Description = types.StringPointerValue(itemsItem.APIOpenSearchDataset.Description)
				items.APIOpenSearchDataset.ID = types.StringValue(itemsItem.APIOpenSearchDataset.ID)
				items.APIOpenSearchDataset.Index = types.StringValue(itemsItem.APIOpenSearchDataset.Index)
				if itemsItem.APIOpenSearchDataset.Metadata == nil {
					items.APIOpenSearchDataset.Metadata = nil
				} else {
					items.APIOpenSearchDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIOpenSearchDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIOpenSearchDataset.Metadata.Created))
					items.APIOpenSearchDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIOpenSearchDataset.Metadata.EnableAcceleration)
					items.APIOpenSearchDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIOpenSearchDataset.Metadata.Modified))
					items.APIOpenSearchDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIOpenSearchDataset.Metadata.Tags))
					for _, v := range itemsItem.APIOpenSearchDataset.Metadata.Tags {
						items.APIOpenSearchDataset.Metadata.Tags = append(items.APIOpenSearchDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIOpenSearchDataset.ProviderID = types.StringValue(itemsItem.APIOpenSearchDataset.ProviderID)
				items.APIOpenSearchDataset.TimestampField = types.StringPointerValue(itemsItem.APIOpenSearchDataset.TimestampField)
				items.APIOpenSearchDataset.Type = types.StringValue(itemsItem.APIOpenSearchDataset.Type)
			}
			if itemsItem.APITailscaleDataset != nil {
				items.APITailscaleDataset = &tfTypes.APITailscaleDataset{}
				items.APITailscaleDataset.Description = types.StringPointerValue(itemsItem.APITailscaleDataset.Description)
				items.APITailscaleDataset.EnabledEndpoints = make([]types.String, 0, len(itemsItem.APITailscaleDataset.EnabledEndpoints))
				for _, v := range itemsItem.APITailscaleDataset.EnabledEndpoints {
					items.APITailscaleDataset.EnabledEndpoints = append(items.APITailscaleDataset.EnabledEndpoints, types.StringValue(v))
				}
				items.APITailscaleDataset.ID = types.StringValue(itemsItem.APITailscaleDataset.ID)
				if itemsItem.APITailscaleDataset.Metadata == nil {
					items.APITailscaleDataset.Metadata = nil
				} else {
					items.APITailscaleDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APITailscaleDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APITailscaleDataset.Metadata.Created))
					items.APITailscaleDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APITailscaleDataset.Metadata.EnableAcceleration)
					items.APITailscaleDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APITailscaleDataset.Metadata.Modified))
					items.APITailscaleDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APITailscaleDataset.Metadata.Tags))
					for _, v := range itemsItem.APITailscaleDataset.Metadata.Tags {
						items.APITailscaleDataset.Metadata.Tags = append(items.APITailscaleDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APITailscaleDataset.ProviderID = types.StringValue(itemsItem.APITailscaleDataset.ProviderID)
				items.APITailscaleDataset.Type = types.StringValue(itemsItem.APITailscaleDataset.Type)
			}
			if itemsItem.APIZoomDataset != nil {
				items.APIZoomDataset = &tfTypes.APIZoomDataset{}
				items.APIZoomDataset.Description = types.StringPointerValue(itemsItem.APIZoomDataset.Description)
				items.APIZoomDataset.EnabledEndpoints = make([]types.String, 0, len(itemsItem.APIZoomDataset.EnabledEndpoints))
				for _, v := range itemsItem.APIZoomDataset.EnabledEndpoints {
					items.APIZoomDataset.EnabledEndpoints = append(items.APIZoomDataset.EnabledEndpoints, types.StringValue(v))
				}
				items.APIZoomDataset.ID = types.StringValue(itemsItem.APIZoomDataset.ID)
				if itemsItem.APIZoomDataset.Metadata == nil {
					items.APIZoomDataset.Metadata = nil
				} else {
					items.APIZoomDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.APIZoomDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIZoomDataset.Metadata.Created))
					items.APIZoomDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.APIZoomDataset.Metadata.EnableAcceleration)
					items.APIZoomDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.APIZoomDataset.Metadata.Modified))
					items.APIZoomDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.APIZoomDataset.Metadata.Tags))
					for _, v := range itemsItem.APIZoomDataset.Metadata.Tags {
						items.APIZoomDataset.Metadata.Tags = append(items.APIZoomDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.APIZoomDataset.ProviderID = types.StringValue(itemsItem.APIZoomDataset.ProviderID)
				items.APIZoomDataset.Type = types.StringValue(itemsItem.APIZoomDataset.Type)
			}
			if itemsItem.AwsSecurityLakeDataset != nil {
				items.AwsSecurityLakeDataset = &tfTypes.AwsSecurityLakeDataset{}
				items.AwsSecurityLakeDataset.Description = types.StringPointerValue(itemsItem.AwsSecurityLakeDataset.Description)
				items.AwsSecurityLakeDataset.Filter = types.StringPointerValue(itemsItem.AwsSecurityLakeDataset.Filter)
				items.AwsSecurityLakeDataset.ID = types.StringValue(itemsItem.AwsSecurityLakeDataset.ID)
				if itemsItem.AwsSecurityLakeDataset.Metadata == nil {
					items.AwsSecurityLakeDataset.Metadata = nil
				} else {
					items.AwsSecurityLakeDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.AwsSecurityLakeDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.AwsSecurityLakeDataset.Metadata.Created))
					items.AwsSecurityLakeDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.AwsSecurityLakeDataset.Metadata.EnableAcceleration)
					items.AwsSecurityLakeDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.AwsSecurityLakeDataset.Metadata.Modified))
					items.AwsSecurityLakeDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.AwsSecurityLakeDataset.Metadata.Tags))
					for _, v := range itemsItem.AwsSecurityLakeDataset.Metadata.Tags {
						items.AwsSecurityLakeDataset.Metadata.Tags = append(items.AwsSecurityLakeDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.AwsSecurityLakeDataset.Path = types.StringPointerValue(itemsItem.AwsSecurityLakeDataset.Path)
				items.AwsSecurityLakeDataset.ProviderID = types.StringValue(itemsItem.AwsSecurityLakeDataset.ProviderID)
				items.AwsSecurityLakeDataset.SelectedBuckets = []tfTypes.S3Bucket{}

				for _, selectedBucketsItem := range itemsItem.AwsSecurityLakeDataset.SelectedBuckets {
					var selectedBuckets tfTypes.S3Bucket

					selectedBuckets.Name = types.StringPointerValue(selectedBucketsItem.Name)
					selectedBuckets.Region = types.StringPointerValue(selectedBucketsItem.Region)

					items.AwsSecurityLakeDataset.SelectedBuckets = append(items.AwsSecurityLakeDataset.SelectedBuckets, selectedBuckets)
				}
				items.AwsSecurityLakeDataset.Type = types.StringValue(itemsItem.AwsSecurityLakeDataset.Type)
			}
			if itemsItem.AzureBlobDataset != nil {
				items.AzureBlobDataset = &tfTypes.AzureBlobDataset{}
				items.AzureBlobDataset.ContainerName = types.StringValue(itemsItem.AzureBlobDataset.ContainerName)
				items.AzureBlobDataset.Description = types.StringPointerValue(itemsItem.AzureBlobDataset.Description)
				items.AzureBlobDataset.ExtraPaths = []tfTypes.AzureBlobDatasetExtraPath{}

				for _, extraPathsItem := range itemsItem.AzureBlobDataset.ExtraPaths {
					var extraPaths tfTypes.AzureBlobDatasetExtraPath

					extraPaths.ContainerName = types.StringValue(extraPathsItem.ContainerName)
					extraPaths.Filter = types.StringPointerValue(extraPathsItem.Filter)
					extraPaths.Path = types.StringPointerValue(extraPathsItem.Path)

					items.AzureBlobDataset.ExtraPaths = append(items.AzureBlobDataset.ExtraPaths, extraPaths)
				}
				items.AzureBlobDataset.Filter = types.StringPointerValue(itemsItem.AzureBlobDataset.Filter)
				items.AzureBlobDataset.ID = types.StringValue(itemsItem.AzureBlobDataset.ID)
				if itemsItem.AzureBlobDataset.Metadata == nil {
					items.AzureBlobDataset.Metadata = nil
				} else {
					items.AzureBlobDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.AzureBlobDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.AzureBlobDataset.Metadata.Created))
					items.AzureBlobDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.AzureBlobDataset.Metadata.EnableAcceleration)
					items.AzureBlobDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.AzureBlobDataset.Metadata.Modified))
					items.AzureBlobDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.AzureBlobDataset.Metadata.Tags))
					for _, v := range itemsItem.AzureBlobDataset.Metadata.Tags {
						items.AzureBlobDataset.Metadata.Tags = append(items.AzureBlobDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.AzureBlobDataset.Path = types.StringPointerValue(itemsItem.AzureBlobDataset.Path)
				items.AzureBlobDataset.ProviderID = types.StringValue(itemsItem.AzureBlobDataset.ProviderID)
				items.AzureBlobDataset.SkipEventTimeFilter = types.BoolPointerValue(itemsItem.AzureBlobDataset.SkipEventTimeFilter)
				items.AzureBlobDataset.StorageClasses = make([]types.String, 0, len(itemsItem.AzureBlobDataset.StorageClasses))
				for _, v := range itemsItem.AzureBlobDataset.StorageClasses {
					items.AzureBlobDataset.StorageClasses = append(items.AzureBlobDataset.StorageClasses, types.StringValue(v))
				}
				items.AzureBlobDataset.Type = types.StringValue(itemsItem.AzureBlobDataset.Type)
			}
			if itemsItem.ClickHouseDataset != nil {
				items.ClickHouseDataset = &tfTypes.ClickHouseDataset{}
				items.ClickHouseDataset.Database = types.StringPointerValue(itemsItem.ClickHouseDataset.Database)
				items.ClickHouseDataset.Description = types.StringPointerValue(itemsItem.ClickHouseDataset.Description)
				items.ClickHouseDataset.ID = types.StringValue(itemsItem.ClickHouseDataset.ID)
				if itemsItem.ClickHouseDataset.Metadata == nil {
					items.ClickHouseDataset.Metadata = nil
				} else {
					items.ClickHouseDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.ClickHouseDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.ClickHouseDataset.Metadata.Created))
					items.ClickHouseDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.ClickHouseDataset.Metadata.EnableAcceleration)
					items.ClickHouseDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.ClickHouseDataset.Metadata.Modified))
					items.ClickHouseDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.ClickHouseDataset.Metadata.Tags))
					for _, v := range itemsItem.ClickHouseDataset.Metadata.Tags {
						items.ClickHouseDataset.Metadata.Tags = append(items.ClickHouseDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.ClickHouseDataset.ProviderID = types.StringValue(itemsItem.ClickHouseDataset.ProviderID)
				items.ClickHouseDataset.Table = types.StringValue(itemsItem.ClickHouseDataset.Table)
				items.ClickHouseDataset.TimestampField = types.StringPointerValue(itemsItem.ClickHouseDataset.TimestampField)
				items.ClickHouseDataset.Type = types.StringValue(itemsItem.ClickHouseDataset.Type)
			}
			if itemsItem.CriblLeaderDataset != nil {
				items.CriblLeaderDataset = &tfTypes.CriblLeaderDataset{}
				items.CriblLeaderDataset.Description = types.StringPointerValue(itemsItem.CriblLeaderDataset.Description)
				items.CriblLeaderDataset.ExtraPaths = []tfTypes.CriblLeaderDatasetExtraPath{}

				for _, extraPathsItem1 := range itemsItem.CriblLeaderDataset.ExtraPaths {
					var extraPaths1 tfTypes.CriblLeaderDatasetExtraPath

					extraPaths1.Filter = types.StringPointerValue(extraPathsItem1.Filter)
					extraPaths1.Path = types.StringValue(extraPathsItem1.Path)

					items.CriblLeaderDataset.ExtraPaths = append(items.CriblLeaderDataset.ExtraPaths, extraPaths1)
				}
				items.CriblLeaderDataset.Filter = types.StringPointerValue(itemsItem.CriblLeaderDataset.Filter)
				items.CriblLeaderDataset.ID = types.StringValue(itemsItem.CriblLeaderDataset.ID)
				if itemsItem.CriblLeaderDataset.Metadata == nil {
					items.CriblLeaderDataset.Metadata = nil
				} else {
					items.CriblLeaderDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.CriblLeaderDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.CriblLeaderDataset.Metadata.Created))
					items.CriblLeaderDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.CriblLeaderDataset.Metadata.EnableAcceleration)
					items.CriblLeaderDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.CriblLeaderDataset.Metadata.Modified))
					items.CriblLeaderDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.CriblLeaderDataset.Metadata.Tags))
					for _, v := range itemsItem.CriblLeaderDataset.Metadata.Tags {
						items.CriblLeaderDataset.Metadata.Tags = append(items.CriblLeaderDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.CriblLeaderDataset.Path = types.StringValue(itemsItem.CriblLeaderDataset.Path)
				items.CriblLeaderDataset.ProviderID = types.StringValue(itemsItem.CriblLeaderDataset.ProviderID)
				items.CriblLeaderDataset.Type = types.StringValue(itemsItem.CriblLeaderDataset.Type)
			}
			if itemsItem.EdgeDataset != nil {
				items.EdgeDataset = &tfTypes.EdgeDataset{}
				items.EdgeDataset.Description = types.StringPointerValue(itemsItem.EdgeDataset.Description)
				items.EdgeDataset.Filter = types.StringPointerValue(itemsItem.EdgeDataset.Filter)
				items.EdgeDataset.Fleets = make([]types.String, 0, len(itemsItem.EdgeDataset.Fleets))
				for _, v := range itemsItem.EdgeDataset.Fleets {
					items.EdgeDataset.Fleets = append(items.EdgeDataset.Fleets, types.StringValue(v))
				}
				items.EdgeDataset.ID = types.StringValue(itemsItem.EdgeDataset.ID)
				if itemsItem.EdgeDataset.Metadata == nil {
					items.EdgeDataset.Metadata = nil
				} else {
					items.EdgeDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.EdgeDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.EdgeDataset.Metadata.Created))
					items.EdgeDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.EdgeDataset.Metadata.EnableAcceleration)
					items.EdgeDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.EdgeDataset.Metadata.Modified))
					items.EdgeDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.EdgeDataset.Metadata.Tags))
					for _, v := range itemsItem.EdgeDataset.Metadata.Tags {
						items.EdgeDataset.Metadata.Tags = append(items.EdgeDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.EdgeDataset.Path = types.StringValue(itemsItem.EdgeDataset.Path)
				items.EdgeDataset.ProviderID = types.StringValue(itemsItem.EdgeDataset.ProviderID)
				items.EdgeDataset.Type = types.StringValue(itemsItem.EdgeDataset.Type)
			}
			if itemsItem.GcsDataset != nil {
				items.GcsDataset = &tfTypes.GcsDataset{}
				items.GcsDataset.Bucket = types.StringValue(itemsItem.GcsDataset.Bucket)
				items.GcsDataset.Description = types.StringPointerValue(itemsItem.GcsDataset.Description)
				items.GcsDataset.ExtraPaths = []tfTypes.GcsDatasetExtraPath{}

				for _, extraPathsItem2 := range itemsItem.GcsDataset.ExtraPaths {
					var extraPaths2 tfTypes.GcsDatasetExtraPath

					extraPaths2.Bucket = types.StringValue(extraPathsItem2.Bucket)
					extraPaths2.Filter = types.StringPointerValue(extraPathsItem2.Filter)
					extraPaths2.Region = types.StringPointerValue(extraPathsItem2.Region)

					items.GcsDataset.ExtraPaths = append(items.GcsDataset.ExtraPaths, extraPaths2)
				}
				items.GcsDataset.Filter = types.StringPointerValue(itemsItem.GcsDataset.Filter)
				items.GcsDataset.ID = types.StringValue(itemsItem.GcsDataset.ID)
				if itemsItem.GcsDataset.Metadata == nil {
					items.GcsDataset.Metadata = nil
				} else {
					items.GcsDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.GcsDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.GcsDataset.Metadata.Created))
					items.GcsDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.GcsDataset.Metadata.EnableAcceleration)
					items.GcsDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.GcsDataset.Metadata.Modified))
					items.GcsDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.GcsDataset.Metadata.Tags))
					for _, v := range itemsItem.GcsDataset.Metadata.Tags {
						items.GcsDataset.Metadata.Tags = append(items.GcsDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.GcsDataset.ProviderID = types.StringValue(itemsItem.GcsDataset.ProviderID)
				items.GcsDataset.Region = types.StringPointerValue(itemsItem.GcsDataset.Region)
				items.GcsDataset.SkipEventTimeFilter = types.BoolPointerValue(itemsItem.GcsDataset.SkipEventTimeFilter)
				items.GcsDataset.StorageClasses = make([]types.String, 0, len(itemsItem.GcsDataset.StorageClasses))
				for _, v := range itemsItem.GcsDataset.StorageClasses {
					items.GcsDataset.StorageClasses = append(items.GcsDataset.StorageClasses, types.StringValue(v))
				}
				items.GcsDataset.Type = types.StringValue(itemsItem.GcsDataset.Type)
			}
			if itemsItem.MetaDataset != nil {
				items.MetaDataset = &tfTypes.MetaDataset{}
				items.MetaDataset.Datasets = make([]types.String, 0, len(itemsItem.MetaDataset.Datasets))
				for _, v := range itemsItem.MetaDataset.Datasets {
					items.MetaDataset.Datasets = append(items.MetaDataset.Datasets, types.StringValue(v))
				}
				items.MetaDataset.Description = types.StringPointerValue(itemsItem.MetaDataset.Description)
				items.MetaDataset.ID = types.StringValue(itemsItem.MetaDataset.ID)
				if itemsItem.MetaDataset.Metadata == nil {
					items.MetaDataset.Metadata = nil
				} else {
					items.MetaDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.MetaDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.MetaDataset.Metadata.Created))
					items.MetaDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.MetaDataset.Metadata.EnableAcceleration)
					items.MetaDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.MetaDataset.Metadata.Modified))
					items.MetaDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.MetaDataset.Metadata.Tags))
					for _, v := range itemsItem.MetaDataset.Metadata.Tags {
						items.MetaDataset.Metadata.Tags = append(items.MetaDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.MetaDataset.ProviderID = types.StringValue(itemsItem.MetaDataset.ProviderID)
				items.MetaDataset.Type = types.StringValue(itemsItem.MetaDataset.Type)
			}
			if itemsItem.PrometheusDataset != nil {
				items.PrometheusDataset = &tfTypes.PrometheusDataset{}
				items.PrometheusDataset.Description = types.StringPointerValue(itemsItem.PrometheusDataset.Description)
				items.PrometheusDataset.DesiredNumDataPoints = types.Float64PointerValue(itemsItem.PrometheusDataset.DesiredNumDataPoints)
				items.PrometheusDataset.ID = types.StringValue(itemsItem.PrometheusDataset.ID)
				if itemsItem.PrometheusDataset.Metadata == nil {
					items.PrometheusDataset.Metadata = nil
				} else {
					items.PrometheusDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.PrometheusDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.PrometheusDataset.Metadata.Created))
					items.PrometheusDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.PrometheusDataset.Metadata.EnableAcceleration)
					items.PrometheusDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.PrometheusDataset.Metadata.Modified))
					items.PrometheusDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.PrometheusDataset.Metadata.Tags))
					for _, v := range itemsItem.PrometheusDataset.Metadata.Tags {
						items.PrometheusDataset.Metadata.Tags = append(items.PrometheusDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.PrometheusDataset.MetricNamePattern = types.StringPointerValue(itemsItem.PrometheusDataset.MetricNamePattern)
				items.PrometheusDataset.ProviderID = types.StringValue(itemsItem.PrometheusDataset.ProviderID)
				if itemsItem.PrometheusDataset.StepMode != nil {
					items.PrometheusDataset.StepMode = types.StringValue(string(*itemsItem.PrometheusDataset.StepMode))
				} else {
					items.PrometheusDataset.StepMode = types.StringNull()
				}
				items.PrometheusDataset.Type = types.StringValue(itemsItem.PrometheusDataset.Type)
			}
			if itemsItem.S3Dataset != nil {
				items.S3Dataset = &tfTypes.S3Dataset{}
				items.S3Dataset.AutoDetectRegion = types.BoolPointerValue(itemsItem.S3Dataset.AutoDetectRegion)
				items.S3Dataset.Bucket = types.StringValue(itemsItem.S3Dataset.Bucket)
				items.S3Dataset.Description = types.StringPointerValue(itemsItem.S3Dataset.Description)
				items.S3Dataset.ExtraPaths = []tfTypes.S3DatasetExtraPath{}

				for _, extraPathsItem3 := range itemsItem.S3Dataset.ExtraPaths {
					var extraPaths3 tfTypes.S3DatasetExtraPath

					extraPaths3.AutoDetectRegion = types.BoolPointerValue(extraPathsItem3.AutoDetectRegion)
					extraPaths3.Bucket = types.StringValue(extraPathsItem3.Bucket)
					extraPaths3.Filter = types.StringPointerValue(extraPathsItem3.Filter)
					extraPaths3.Path = types.StringPointerValue(extraPathsItem3.Path)
					extraPaths3.Region = types.StringPointerValue(extraPathsItem3.Region)

					items.S3Dataset.ExtraPaths = append(items.S3Dataset.ExtraPaths, extraPaths3)
				}
				items.S3Dataset.Filter = types.StringPointerValue(itemsItem.S3Dataset.Filter)
				items.S3Dataset.ID = types.StringValue(itemsItem.S3Dataset.ID)
				if itemsItem.S3Dataset.Metadata == nil {
					items.S3Dataset.Metadata = nil
				} else {
					items.S3Dataset.Metadata = &tfTypes.DatasetMetadata{}
					items.S3Dataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.S3Dataset.Metadata.Created))
					items.S3Dataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.S3Dataset.Metadata.EnableAcceleration)
					items.S3Dataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.S3Dataset.Metadata.Modified))
					items.S3Dataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.S3Dataset.Metadata.Tags))
					for _, v := range itemsItem.S3Dataset.Metadata.Tags {
						items.S3Dataset.Metadata.Tags = append(items.S3Dataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.S3Dataset.Path = types.StringPointerValue(itemsItem.S3Dataset.Path)
				items.S3Dataset.ProviderID = types.StringValue(itemsItem.S3Dataset.ProviderID)
				items.S3Dataset.Region = types.StringPointerValue(itemsItem.S3Dataset.Region)
				items.S3Dataset.SkipEventTimeFilter = types.BoolPointerValue(itemsItem.S3Dataset.SkipEventTimeFilter)
				items.S3Dataset.StorageClasses = make([]types.String, 0, len(itemsItem.S3Dataset.StorageClasses))
				for _, v := range itemsItem.S3Dataset.StorageClasses {
					items.S3Dataset.StorageClasses = append(items.S3Dataset.StorageClasses, types.StringValue(v))
				}
				items.S3Dataset.Type = types.StringValue(itemsItem.S3Dataset.Type)
			}
			if itemsItem.SnowflakeDataset != nil {
				items.SnowflakeDataset = &tfTypes.SnowflakeDataset{}
				items.SnowflakeDataset.Database = types.StringPointerValue(itemsItem.SnowflakeDataset.Database)
				items.SnowflakeDataset.Description = types.StringPointerValue(itemsItem.SnowflakeDataset.Description)
				items.SnowflakeDataset.ID = types.StringValue(itemsItem.SnowflakeDataset.ID)
				if itemsItem.SnowflakeDataset.Metadata == nil {
					items.SnowflakeDataset.Metadata = nil
				} else {
					items.SnowflakeDataset.Metadata = &tfTypes.DatasetMetadata{}
					items.SnowflakeDataset.Metadata.Created = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.SnowflakeDataset.Metadata.Created))
					items.SnowflakeDataset.Metadata.EnableAcceleration = types.BoolPointerValue(itemsItem.SnowflakeDataset.Metadata.EnableAcceleration)
					items.SnowflakeDataset.Metadata.Modified = types.StringPointerValue(typeconvert.TimePointerToStringPointer(itemsItem.SnowflakeDataset.Metadata.Modified))
					items.SnowflakeDataset.Metadata.Tags = make([]types.String, 0, len(itemsItem.SnowflakeDataset.Metadata.Tags))
					for _, v := range itemsItem.SnowflakeDataset.Metadata.Tags {
						items.SnowflakeDataset.Metadata.Tags = append(items.SnowflakeDataset.Metadata.Tags, types.StringValue(v))
					}
				}
				items.SnowflakeDataset.ProviderID = types.StringValue(itemsItem.SnowflakeDataset.ProviderID)
				items.SnowflakeDataset.Role = types.StringPointerValue(itemsItem.SnowflakeDataset.Role)
				items.SnowflakeDataset.Schema = types.StringPointerValue(itemsItem.SnowflakeDataset.Schema)
				items.SnowflakeDataset.Table = types.StringValue(itemsItem.SnowflakeDataset.Table)
				items.SnowflakeDataset.TimestampField = types.StringPointerValue(itemsItem.SnowflakeDataset.TimestampField)
				items.SnowflakeDataset.Type = types.StringValue(itemsItem.SnowflakeDataset.Type)
				items.SnowflakeDataset.Warehouse = types.StringPointerValue(itemsItem.SnowflakeDataset.Warehouse)
			}

			r.Items = append(r.Items, items)
		}
	}

	return diags
}

func (r *SearchDatasetDataSourceModel) ToOperationsGetDatasetByIDRequest(ctx context.Context) (*operations.GetDatasetByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetDatasetByIDRequest{
		ID: id,
	}

	return &out, diags
}
