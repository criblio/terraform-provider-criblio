// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/criblio/terraform-provider-criblio/internal/provider/typeconvert"
	tfTypes "github.com/criblio/terraform-provider-criblio/internal/provider/types"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *WorkspacesDataSourceModel) RefreshFromSharedWorkspacesListResponseDTO(ctx context.Context, resp *shared.WorkspacesListResponseDTO) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Items = []tfTypes.WorkspaceSchema{}

		for _, itemsItem := range resp.Items {
			var items tfTypes.WorkspaceSchema

			items.Alias = types.StringPointerValue(itemsItem.Alias)
			items.Description = types.StringPointerValue(itemsItem.Description)
			items.LastUpdated = types.StringValue(typeconvert.TimeToString(itemsItem.LastUpdated))
			items.LeaderFQDN = types.StringValue(itemsItem.LeaderFQDN)
			items.Region = types.StringValue(string(itemsItem.Region))
			items.State = types.StringValue(string(itemsItem.State))
			items.Tags = make([]types.String, 0, len(itemsItem.Tags))
			for _, v := range itemsItem.Tags {
				items.Tags = append(items.Tags, types.StringValue(v))
			}
			items.WorkspaceID = types.StringValue(itemsItem.WorkspaceID)

			r.Items = append(r.Items, items)
		}
	}

	return diags
}

func (r *WorkspacesDataSourceModel) ToOperationsV1WorkspacesListWorkspacesRequest(ctx context.Context) (*operations.V1WorkspacesListWorkspacesRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var organizationID string
	organizationID = r.OrganizationID.ValueString()

	out := operations.V1WorkspacesListWorkspacesRequest{
		OrganizationID: organizationID,
	}

	return &out, diags
}
