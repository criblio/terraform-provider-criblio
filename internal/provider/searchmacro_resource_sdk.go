// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/operations"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SearchMacroResourceModel) RefreshFromSharedSearchMacro(ctx context.Context, resp *shared.SearchMacro) diag.Diagnostics {
	var diags diag.Diagnostics

	r.Created = types.Float64PointerValue(resp.Created)
	r.CreatedBy = types.StringPointerValue(resp.CreatedBy)
	r.Description = types.StringPointerValue(resp.Description)
	r.ID = types.StringValue(resp.ID)
	r.Modified = types.Float64PointerValue(resp.Modified)
	r.Replacement = types.StringValue(resp.Replacement)
	r.Tags = types.StringPointerValue(resp.Tags)

	return diags
}

func (r *SearchMacroResourceModel) ToOperationsDeleteSearchMacroByIDRequest(ctx context.Context) (*operations.DeleteSearchMacroByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.DeleteSearchMacroByIDRequest{
		ID: id,
	}

	return &out, diags
}

func (r *SearchMacroResourceModel) ToOperationsUpdateSearchMacroByIDRequest(ctx context.Context) (*operations.UpdateSearchMacroByIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	searchMacro, searchMacroDiags := r.ToSharedSearchMacro(ctx)
	diags.Append(searchMacroDiags...)

	if diags.HasError() {
		return nil, diags
	}

	out := operations.UpdateSearchMacroByIDRequest{
		ID:          id,
		SearchMacro: *searchMacro,
	}

	return &out, diags
}

func (r *SearchMacroResourceModel) ToSharedSearchMacro(ctx context.Context) (*shared.SearchMacro, diag.Diagnostics) {
	var diags diag.Diagnostics

	created := new(float64)
	if !r.Created.IsUnknown() && !r.Created.IsNull() {
		*created = r.Created.ValueFloat64()
	} else {
		created = nil
	}
	createdBy := new(string)
	if !r.CreatedBy.IsUnknown() && !r.CreatedBy.IsNull() {
		*createdBy = r.CreatedBy.ValueString()
	} else {
		createdBy = nil
	}
	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	var id string
	id = r.ID.ValueString()

	modified := new(float64)
	if !r.Modified.IsUnknown() && !r.Modified.IsNull() {
		*modified = r.Modified.ValueFloat64()
	} else {
		modified = nil
	}
	var replacement string
	replacement = r.Replacement.ValueString()

	tags := new(string)
	if !r.Tags.IsUnknown() && !r.Tags.IsNull() {
		*tags = r.Tags.ValueString()
	} else {
		tags = nil
	}
	out := shared.SearchMacro{
		Created:     created,
		CreatedBy:   createdBy,
		Description: description,
		ID:          id,
		Modified:    modified,
		Replacement: replacement,
		Tags:        tags,
	}

	return &out, diags
}
