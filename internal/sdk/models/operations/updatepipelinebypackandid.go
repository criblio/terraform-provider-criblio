// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type UpdatePipelineByPackAndIDRequest struct {
	// Unique ID to PATCH for pack
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// pack ID to PATCH
	Pack     string `pathParam:"style=simple,explode=false,name=pack"`
	Disabled *bool  `queryParam:"style=form,explode=true,name=disabled"`
	// group Id
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// New Pipeline object
	Pipeline shared.Pipeline `request:"mediaType=application/json"`
}

func (u *UpdatePipelineByPackAndIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdatePipelineByPackAndIDRequest) GetPack() string {
	if u == nil {
		return ""
	}
	return u.Pack
}

func (u *UpdatePipelineByPackAndIDRequest) GetDisabled() *bool {
	if u == nil {
		return nil
	}
	return u.Disabled
}

func (u *UpdatePipelineByPackAndIDRequest) GetGroupID() string {
	if u == nil {
		return ""
	}
	return u.GroupID
}

func (u *UpdatePipelineByPackAndIDRequest) GetPipeline() shared.Pipeline {
	if u == nil {
		return shared.Pipeline{}
	}
	return u.Pipeline
}

// UpdatePipelineByPackAndIDResponseBody - a list of Pipeline objects
type UpdatePipelineByPackAndIDResponseBody struct {
	Items []shared.Pipeline `json:"items,omitempty"`
}

func (u *UpdatePipelineByPackAndIDResponseBody) GetItems() []shared.Pipeline {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdatePipelineByPackAndIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of Pipeline objects
	Object *UpdatePipelineByPackAndIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (u *UpdatePipelineByPackAndIDResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpdatePipelineByPackAndIDResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpdatePipelineByPackAndIDResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpdatePipelineByPackAndIDResponse) GetObject() *UpdatePipelineByPackAndIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}

func (u *UpdatePipelineByPackAndIDResponse) GetError() *shared.Error {
	if u == nil {
		return nil
	}
	return u.Error
}
