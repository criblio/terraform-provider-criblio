// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type CreateSystemProjectsVersionCommitByProjectIDRequest struct {
	// Project Id
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// ProjectGitCommitParams object
	ProjectGitCommitParams shared.ProjectGitCommitParams `request:"mediaType=application/json"`
}

func (c *CreateSystemProjectsVersionCommitByProjectIDRequest) GetProjectID() string {
	if c == nil {
		return ""
	}
	return c.ProjectID
}

func (c *CreateSystemProjectsVersionCommitByProjectIDRequest) GetProjectGitCommitParams() shared.ProjectGitCommitParams {
	if c == nil {
		return shared.ProjectGitCommitParams{}
	}
	return c.ProjectGitCommitParams
}

// CreateSystemProjectsVersionCommitByProjectIDResponseBody - a list of GitCommitSummary objects
type CreateSystemProjectsVersionCommitByProjectIDResponseBody struct {
	Items []shared.GitCommitSummary `json:"items,omitempty"`
}

func (c *CreateSystemProjectsVersionCommitByProjectIDResponseBody) GetItems() []shared.GitCommitSummary {
	if c == nil {
		return nil
	}
	return c.Items
}

type CreateSystemProjectsVersionCommitByProjectIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of GitCommitSummary objects
	Object *CreateSystemProjectsVersionCommitByProjectIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (c *CreateSystemProjectsVersionCommitByProjectIDResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateSystemProjectsVersionCommitByProjectIDResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateSystemProjectsVersionCommitByProjectIDResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateSystemProjectsVersionCommitByProjectIDResponse) GetObject() *CreateSystemProjectsVersionCommitByProjectIDResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}

func (c *CreateSystemProjectsVersionCommitByProjectIDResponse) GetError() *shared.Error {
	if c == nil {
		return nil
	}
	return c.Error
}
