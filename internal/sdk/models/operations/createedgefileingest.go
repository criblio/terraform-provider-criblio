// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type CreateEdgeFileIngestRequest struct {
	// Absolute path to file to ingest.
	FilePath *string `queryParam:"style=form,explode=true,name=filePath"`
	// Id of the pipeline to use.
	PipelineID *string `queryParam:"style=form,explode=true,name=pipelineId"`
	// Destination to send events to.
	OutputID *string `queryParam:"style=form,explode=true,name=outputId"`
	// Id to the pre-processing pipeline to use for routes.
	PreProcessingPipelineID *string `queryParam:"style=form,explode=true,name=preProcessingPipelineId"`
	// boolean condition required on whether to send events to routes.
	SendToRoutes *string `queryParam:"style=form,explode=true,name=sendToRoutes"`
	// Breaker rules to use on the file.
	BreakerRuleSet *string `queryParam:"style=form,explode=true,name=breakerRuleSet"`
}

func (c *CreateEdgeFileIngestRequest) GetFilePath() *string {
	if c == nil {
		return nil
	}
	return c.FilePath
}

func (c *CreateEdgeFileIngestRequest) GetPipelineID() *string {
	if c == nil {
		return nil
	}
	return c.PipelineID
}

func (c *CreateEdgeFileIngestRequest) GetOutputID() *string {
	if c == nil {
		return nil
	}
	return c.OutputID
}

func (c *CreateEdgeFileIngestRequest) GetPreProcessingPipelineID() *string {
	if c == nil {
		return nil
	}
	return c.PreProcessingPipelineID
}

func (c *CreateEdgeFileIngestRequest) GetSendToRoutes() *string {
	if c == nil {
		return nil
	}
	return c.SendToRoutes
}

func (c *CreateEdgeFileIngestRequest) GetBreakerRuleSet() *string {
	if c == nil {
		return nil
	}
	return c.BreakerRuleSet
}

// CreateEdgeFileIngestResponseBody - a list of any objects
type CreateEdgeFileIngestResponseBody struct {
	Items []map[string]any `json:"items,omitempty"`
}

func (c *CreateEdgeFileIngestResponseBody) GetItems() []map[string]any {
	if c == nil {
		return nil
	}
	return c.Items
}

type CreateEdgeFileIngestResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of any objects
	Object *CreateEdgeFileIngestResponseBody
	// Unexpected error
	Error *shared.Error
}

func (c *CreateEdgeFileIngestResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateEdgeFileIngestResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateEdgeFileIngestResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateEdgeFileIngestResponse) GetObject() *CreateEdgeFileIngestResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}

func (c *CreateEdgeFileIngestResponse) GetError() *shared.Error {
	if c == nil {
		return nil
	}
	return c.Error
}
