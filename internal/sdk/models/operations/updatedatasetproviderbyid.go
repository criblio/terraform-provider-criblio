// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type UpdateDatasetProviderByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// DatasetProvider object to be updated
	GenericProvider shared.GenericProvider `request:"mediaType=application/json"`
}

func (u *UpdateDatasetProviderByIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdateDatasetProviderByIDRequest) GetGenericProvider() shared.GenericProvider {
	if u == nil {
		return shared.GenericProvider{}
	}
	return u.GenericProvider
}

// UpdateDatasetProviderByIDResponseBody - a list of DatasetProvider objects
type UpdateDatasetProviderByIDResponseBody struct {
	Items []shared.GenericProvider `json:"items,omitempty"`
}

func (u *UpdateDatasetProviderByIDResponseBody) GetItems() []shared.GenericProvider {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdateDatasetProviderByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of DatasetProvider objects
	Object *UpdateDatasetProviderByIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (u *UpdateDatasetProviderByIDResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpdateDatasetProviderByIDResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpdateDatasetProviderByIDResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpdateDatasetProviderByIDResponse) GetObject() *UpdateDatasetProviderByIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}

func (u *UpdateDatasetProviderByIDResponse) GetError() *shared.Error {
	if u == nil {
		return nil
	}
	return u.Error
}
