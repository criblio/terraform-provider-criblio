// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

// DeleteCriblLakeDatasetByLakeIDAndIDLakeID - lake id that contains the Datasets
type DeleteCriblLakeDatasetByLakeIDAndIDLakeID string

const (
	DeleteCriblLakeDatasetByLakeIDAndIDLakeIDDefault DeleteCriblLakeDatasetByLakeIDAndIDLakeID = "default"
)

func (e DeleteCriblLakeDatasetByLakeIDAndIDLakeID) ToPointer() *DeleteCriblLakeDatasetByLakeIDAndIDLakeID {
	return &e
}
func (e *DeleteCriblLakeDatasetByLakeIDAndIDLakeID) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "default":
		*e = DeleteCriblLakeDatasetByLakeIDAndIDLakeID(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteCriblLakeDatasetByLakeIDAndIDLakeID: %v", v)
	}
}

type DeleteCriblLakeDatasetByLakeIDAndIDRequest struct {
	// lake id that contains the Datasets
	LakeID DeleteCriblLakeDatasetByLakeIDAndIDLakeID `pathParam:"style=simple,explode=false,name=lakeId"`
	// dataset id to delete
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (d *DeleteCriblLakeDatasetByLakeIDAndIDRequest) GetLakeID() DeleteCriblLakeDatasetByLakeIDAndIDLakeID {
	if d == nil {
		return DeleteCriblLakeDatasetByLakeIDAndIDLakeID("")
	}
	return d.LakeID
}

func (d *DeleteCriblLakeDatasetByLakeIDAndIDRequest) GetID() string {
	if d == nil {
		return ""
	}
	return d.ID
}

// DeleteCriblLakeDatasetByLakeIDAndIDResponseBody - a list of CriblLakeDataset objects
type DeleteCriblLakeDatasetByLakeIDAndIDResponseBody struct {
	Items []shared.CriblLakeDataset `json:"items,omitempty"`
}

func (d *DeleteCriblLakeDatasetByLakeIDAndIDResponseBody) GetItems() []shared.CriblLakeDataset {
	if d == nil {
		return nil
	}
	return d.Items
}

type DeleteCriblLakeDatasetByLakeIDAndIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of CriblLakeDataset objects
	Object *DeleteCriblLakeDatasetByLakeIDAndIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (d *DeleteCriblLakeDatasetByLakeIDAndIDResponse) GetContentType() string {
	if d == nil {
		return ""
	}
	return d.ContentType
}

func (d *DeleteCriblLakeDatasetByLakeIDAndIDResponse) GetStatusCode() int {
	if d == nil {
		return 0
	}
	return d.StatusCode
}

func (d *DeleteCriblLakeDatasetByLakeIDAndIDResponse) GetRawResponse() *http.Response {
	if d == nil {
		return nil
	}
	return d.RawResponse
}

func (d *DeleteCriblLakeDatasetByLakeIDAndIDResponse) GetObject() *DeleteCriblLakeDatasetByLakeIDAndIDResponseBody {
	if d == nil {
		return nil
	}
	return d.Object
}

func (d *DeleteCriblLakeDatasetByLakeIDAndIDResponse) GetError() *shared.Error {
	if d == nil {
		return nil
	}
	return d.Error
}
