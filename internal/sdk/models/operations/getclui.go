// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

// Context - Search query context
type Context string

const (
	ContextStream Context = "stream"
	ContextEdge   Context = "edge"
)

func (e Context) ToPointer() *Context {
	return &e
}
func (e *Context) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stream":
		fallthrough
	case "edge":
		*e = Context(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Context: %v", v)
	}
}

type GetCluiRequest struct {
	// Search query
	Query string `queryParam:"style=form,explode=true,name=query"`
	// Search query context
	Context *Context `queryParam:"style=form,explode=true,name=context"`
}

func (g *GetCluiRequest) GetQuery() string {
	if g == nil {
		return ""
	}
	return g.Query
}

func (g *GetCluiRequest) GetContext() *Context {
	if g == nil {
		return nil
	}
	return g.Context
}

// GetCluiResponseBody - a list of CluiItem objects
type GetCluiResponseBody struct {
	Items []shared.CluiItem `json:"items,omitempty"`
}

func (g *GetCluiResponseBody) GetItems() []shared.CluiItem {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetCluiResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of CluiItem objects
	Object *GetCluiResponseBody
	// Unexpected error
	Error *shared.Error
}

func (g *GetCluiResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetCluiResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetCluiResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetCluiResponse) GetObject() *GetCluiResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}

func (g *GetCluiResponse) GetError() *shared.Error {
	if g == nil {
		return nil
	}
	return g.Error
}
