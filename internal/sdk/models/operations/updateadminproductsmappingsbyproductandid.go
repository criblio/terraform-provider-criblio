// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

// UpdateAdminProductsMappingsByProductAndIDProduct - Name of the Cribl product to update the mappings for
type UpdateAdminProductsMappingsByProductAndIDProduct string

const (
	UpdateAdminProductsMappingsByProductAndIDProductStream UpdateAdminProductsMappingsByProductAndIDProduct = "stream"
	UpdateAdminProductsMappingsByProductAndIDProductEdge   UpdateAdminProductsMappingsByProductAndIDProduct = "edge"
)

func (e UpdateAdminProductsMappingsByProductAndIDProduct) ToPointer() *UpdateAdminProductsMappingsByProductAndIDProduct {
	return &e
}
func (e *UpdateAdminProductsMappingsByProductAndIDProduct) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stream":
		fallthrough
	case "edge":
		*e = UpdateAdminProductsMappingsByProductAndIDProduct(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAdminProductsMappingsByProductAndIDProduct: %v", v)
	}
}

type UpdateAdminProductsMappingsByProductAndIDRequest struct {
	// Name of the Cribl product to update the mappings for
	Product UpdateAdminProductsMappingsByProductAndIDProduct `pathParam:"style=simple,explode=false,name=product"`
	// The id of the mapping ruleset to update
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// MappingRuleset object
	MappingRuleset shared.MappingRuleset `request:"mediaType=application/json"`
}

func (u *UpdateAdminProductsMappingsByProductAndIDRequest) GetProduct() UpdateAdminProductsMappingsByProductAndIDProduct {
	if u == nil {
		return UpdateAdminProductsMappingsByProductAndIDProduct("")
	}
	return u.Product
}

func (u *UpdateAdminProductsMappingsByProductAndIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdateAdminProductsMappingsByProductAndIDRequest) GetMappingRuleset() shared.MappingRuleset {
	if u == nil {
		return shared.MappingRuleset{}
	}
	return u.MappingRuleset
}

// UpdateAdminProductsMappingsByProductAndIDResponseBody - a list of MappingRuleset objects
type UpdateAdminProductsMappingsByProductAndIDResponseBody struct {
	Items []shared.MappingRuleset `json:"items,omitempty"`
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponseBody) GetItems() []shared.MappingRuleset {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdateAdminProductsMappingsByProductAndIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of MappingRuleset objects
	Object *UpdateAdminProductsMappingsByProductAndIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponse) GetObject() *UpdateAdminProductsMappingsByProductAndIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}

func (u *UpdateAdminProductsMappingsByProductAndIDResponse) GetError() *shared.Error {
	if u == nil {
		return nil
	}
	return u.Error
}
