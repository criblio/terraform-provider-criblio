// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

// CreateCriblLakeDatasetByLakeIDLakeID - lake id that contains the Datasets
type CreateCriblLakeDatasetByLakeIDLakeID string

const (
	CreateCriblLakeDatasetByLakeIDLakeIDDefault CreateCriblLakeDatasetByLakeIDLakeID = "default"
)

func (e CreateCriblLakeDatasetByLakeIDLakeID) ToPointer() *CreateCriblLakeDatasetByLakeIDLakeID {
	return &e
}
func (e *CreateCriblLakeDatasetByLakeIDLakeID) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "default":
		*e = CreateCriblLakeDatasetByLakeIDLakeID(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCriblLakeDatasetByLakeIDLakeID: %v", v)
	}
}

type CreateCriblLakeDatasetByLakeIDRequest struct {
	// lake id that contains the Datasets
	LakeID CreateCriblLakeDatasetByLakeIDLakeID `pathParam:"style=simple,explode=false,name=lakeId"`
	// CriblLakeDataset object
	CriblLakeDataset shared.CriblLakeDataset `request:"mediaType=application/json"`
}

func (c *CreateCriblLakeDatasetByLakeIDRequest) GetLakeID() CreateCriblLakeDatasetByLakeIDLakeID {
	if c == nil {
		return CreateCriblLakeDatasetByLakeIDLakeID("")
	}
	return c.LakeID
}

func (c *CreateCriblLakeDatasetByLakeIDRequest) GetCriblLakeDataset() shared.CriblLakeDataset {
	if c == nil {
		return shared.CriblLakeDataset{}
	}
	return c.CriblLakeDataset
}

// CreateCriblLakeDatasetByLakeIDResponseBody - a list of CriblLakeDataset objects
type CreateCriblLakeDatasetByLakeIDResponseBody struct {
	Items []shared.CriblLakeDataset `json:"items,omitempty"`
}

func (c *CreateCriblLakeDatasetByLakeIDResponseBody) GetItems() []shared.CriblLakeDataset {
	if c == nil {
		return nil
	}
	return c.Items
}

type CreateCriblLakeDatasetByLakeIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of CriblLakeDataset objects
	Object *CreateCriblLakeDatasetByLakeIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (c *CreateCriblLakeDatasetByLakeIDResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateCriblLakeDatasetByLakeIDResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateCriblLakeDatasetByLakeIDResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateCriblLakeDatasetByLakeIDResponse) GetObject() *CreateCriblLakeDatasetByLakeIDResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}

func (c *CreateCriblLakeDatasetByLakeIDResponse) GetError() *shared.Error {
	if c == nil {
		return nil
	}
	return c.Error
}
