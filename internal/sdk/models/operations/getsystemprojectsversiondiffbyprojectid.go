// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type GetSystemProjectsVersionDiffByProjectIDRequest struct {
	// Project Id
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// Commit hash (default is HEAD)
	Commit *string `queryParam:"style=form,explode=true,name=commit"`
	// Filename
	Filename *string `queryParam:"style=form,explode=true,name=filename"`
	// Limit maximum lines in the diff
	DiffLineLimit *float64 `queryParam:"style=form,explode=true,name=diffLineLimit"`
}

func (g *GetSystemProjectsVersionDiffByProjectIDRequest) GetProjectID() string {
	if g == nil {
		return ""
	}
	return g.ProjectID
}

func (g *GetSystemProjectsVersionDiffByProjectIDRequest) GetCommit() *string {
	if g == nil {
		return nil
	}
	return g.Commit
}

func (g *GetSystemProjectsVersionDiffByProjectIDRequest) GetFilename() *string {
	if g == nil {
		return nil
	}
	return g.Filename
}

func (g *GetSystemProjectsVersionDiffByProjectIDRequest) GetDiffLineLimit() *float64 {
	if g == nil {
		return nil
	}
	return g.DiffLineLimit
}

// GetSystemProjectsVersionDiffByProjectIDResponseBody - a list of any objects
type GetSystemProjectsVersionDiffByProjectIDResponseBody struct {
	Items []map[string]any `json:"items,omitempty"`
}

func (g *GetSystemProjectsVersionDiffByProjectIDResponseBody) GetItems() []map[string]any {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetSystemProjectsVersionDiffByProjectIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of any objects
	Object *GetSystemProjectsVersionDiffByProjectIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (g *GetSystemProjectsVersionDiffByProjectIDResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetSystemProjectsVersionDiffByProjectIDResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetSystemProjectsVersionDiffByProjectIDResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetSystemProjectsVersionDiffByProjectIDResponse) GetObject() *GetSystemProjectsVersionDiffByProjectIDResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}

func (g *GetSystemProjectsVersionDiffByProjectIDResponse) GetError() *shared.Error {
	if g == nil {
		return nil
	}
	return g.Error
}
