// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

// GetCriblLakeDatasetByLakeIDAndIDLakeID - lake id that contains the Datasets
type GetCriblLakeDatasetByLakeIDAndIDLakeID string

const (
	GetCriblLakeDatasetByLakeIDAndIDLakeIDDefault GetCriblLakeDatasetByLakeIDAndIDLakeID = "default"
)

func (e GetCriblLakeDatasetByLakeIDAndIDLakeID) ToPointer() *GetCriblLakeDatasetByLakeIDAndIDLakeID {
	return &e
}
func (e *GetCriblLakeDatasetByLakeIDAndIDLakeID) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "default":
		*e = GetCriblLakeDatasetByLakeIDAndIDLakeID(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCriblLakeDatasetByLakeIDAndIDLakeID: %v", v)
	}
}

type GetCriblLakeDatasetByLakeIDAndIDRequest struct {
	// lake id that contains the Datasets
	LakeID GetCriblLakeDatasetByLakeIDAndIDLakeID `pathParam:"style=simple,explode=false,name=lakeId"`
	// dataset id to get
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetCriblLakeDatasetByLakeIDAndIDRequest) GetLakeID() GetCriblLakeDatasetByLakeIDAndIDLakeID {
	if o == nil {
		return GetCriblLakeDatasetByLakeIDAndIDLakeID("")
	}
	return o.LakeID
}

func (o *GetCriblLakeDatasetByLakeIDAndIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetCriblLakeDatasetByLakeIDAndIDResponseBody - a list of CriblLakeDataset objects
type GetCriblLakeDatasetByLakeIDAndIDResponseBody struct {
	Items []shared.CriblLakeDataset `json:"items,omitempty"`
}

func (o *GetCriblLakeDatasetByLakeIDAndIDResponseBody) GetItems() []shared.CriblLakeDataset {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetCriblLakeDatasetByLakeIDAndIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of CriblLakeDataset objects
	Object *GetCriblLakeDatasetByLakeIDAndIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *GetCriblLakeDatasetByLakeIDAndIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetCriblLakeDatasetByLakeIDAndIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetCriblLakeDatasetByLakeIDAndIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetCriblLakeDatasetByLakeIDAndIDResponse) GetObject() *GetCriblLakeDatasetByLakeIDAndIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *GetCriblLakeDatasetByLakeIDAndIDResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
