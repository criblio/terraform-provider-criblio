// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type CreateSubscriptionRequest struct {
	// The consumer group to which this instance belongs. Defaults to 'Cribl'.
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// Project Id
	Disabled *bool `queryParam:"style=form,explode=true,name=disabled"`
	// Project description
	Description *string `queryParam:"style=form,explode=true,name=description"`
	// filter
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// pipeline to be used
	Pipeline string `queryParam:"style=form,explode=true,name=pipeline"`
	// pipeline to be used
	ID string `queryParam:"style=form,explode=true,name=id"`
	// Subscription object
	Subscription shared.Subscription `request:"mediaType=application/json"`
}

func (c *CreateSubscriptionRequest) GetGroupID() string {
	if c == nil {
		return ""
	}
	return c.GroupID
}

func (c *CreateSubscriptionRequest) GetDisabled() *bool {
	if c == nil {
		return nil
	}
	return c.Disabled
}

func (c *CreateSubscriptionRequest) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CreateSubscriptionRequest) GetFilter() *string {
	if c == nil {
		return nil
	}
	return c.Filter
}

func (c *CreateSubscriptionRequest) GetPipeline() string {
	if c == nil {
		return ""
	}
	return c.Pipeline
}

func (c *CreateSubscriptionRequest) GetID() string {
	if c == nil {
		return ""
	}
	return c.ID
}

func (c *CreateSubscriptionRequest) GetSubscription() shared.Subscription {
	if c == nil {
		return shared.Subscription{}
	}
	return c.Subscription
}

// CreateSubscriptionResponseBody - a list of Subscription objects
type CreateSubscriptionResponseBody struct {
	Items []shared.Subscription `json:"items,omitempty"`
}

func (c *CreateSubscriptionResponseBody) GetItems() []shared.Subscription {
	if c == nil {
		return nil
	}
	return c.Items
}

type CreateSubscriptionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of Subscription objects
	Object *CreateSubscriptionResponseBody
	// Unexpected error
	Error *shared.Error
}

func (c *CreateSubscriptionResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateSubscriptionResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateSubscriptionResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateSubscriptionResponse) GetObject() *CreateSubscriptionResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}

func (c *CreateSubscriptionResponse) GetError() *shared.Error {
	if c == nil {
		return nil
	}
	return c.Error
}
