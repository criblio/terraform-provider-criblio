// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type GetSystemProjectsVersionCountByProjectIDRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// Commit ID
	ID *string `queryParam:"style=form,explode=true,name=ID"`
}

func (g *GetSystemProjectsVersionCountByProjectIDRequest) GetProjectID() string {
	if g == nil {
		return ""
	}
	return g.ProjectID
}

func (g *GetSystemProjectsVersionCountByProjectIDRequest) GetID() *string {
	if g == nil {
		return nil
	}
	return g.ID
}

// GetSystemProjectsVersionCountByProjectIDResponseBody - a list of any objects
type GetSystemProjectsVersionCountByProjectIDResponseBody struct {
	Items []map[string]any `json:"items,omitempty"`
}

func (g *GetSystemProjectsVersionCountByProjectIDResponseBody) GetItems() []map[string]any {
	if g == nil {
		return nil
	}
	return g.Items
}

type GetSystemProjectsVersionCountByProjectIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of any objects
	Object *GetSystemProjectsVersionCountByProjectIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (g *GetSystemProjectsVersionCountByProjectIDResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetSystemProjectsVersionCountByProjectIDResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetSystemProjectsVersionCountByProjectIDResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetSystemProjectsVersionCountByProjectIDResponse) GetObject() *GetSystemProjectsVersionCountByProjectIDResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}

func (g *GetSystemProjectsVersionCountByProjectIDResponse) GetError() *shared.Error {
	if g == nil {
		return nil
	}
	return g.Error
}
