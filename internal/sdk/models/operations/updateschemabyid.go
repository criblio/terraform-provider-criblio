// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type UpdateSchemaByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The consumer group to which this instance belongs. Defaults to 'Cribl'.
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// Schema object to be updated
	SchemaLibEntry shared.SchemaLibEntry `request:"mediaType=application/json"`
}

func (u *UpdateSchemaByIDRequest) GetID() string {
	if u == nil {
		return ""
	}
	return u.ID
}

func (u *UpdateSchemaByIDRequest) GetGroupID() string {
	if u == nil {
		return ""
	}
	return u.GroupID
}

func (u *UpdateSchemaByIDRequest) GetSchemaLibEntry() shared.SchemaLibEntry {
	if u == nil {
		return shared.SchemaLibEntry{}
	}
	return u.SchemaLibEntry
}

// UpdateSchemaByIDResponseBody - a list of Schema objects
type UpdateSchemaByIDResponseBody struct {
	Items []shared.SchemaLibEntry `json:"items,omitempty"`
}

func (u *UpdateSchemaByIDResponseBody) GetItems() []shared.SchemaLibEntry {
	if u == nil {
		return nil
	}
	return u.Items
}

type UpdateSchemaByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of Schema objects
	Object *UpdateSchemaByIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (u *UpdateSchemaByIDResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpdateSchemaByIDResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpdateSchemaByIDResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpdateSchemaByIDResponse) GetObject() *UpdateSchemaByIDResponseBody {
	if u == nil {
		return nil
	}
	return u.Object
}

func (u *UpdateSchemaByIDResponse) GetError() *shared.Error {
	if u == nil {
		return nil
	}
	return u.Error
}
