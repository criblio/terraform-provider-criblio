// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type ListSubscriptionRequest struct {
	// The consumer group to which this instance belongs. Defaults to 'Cribl'.
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// Project Id
	Disabled *bool `queryParam:"style=form,explode=true,name=disabled"`
	// Project description
	Description *string `queryParam:"style=form,explode=true,name=description"`
	// filter
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// pipeline to be used
	Pipeline *string `queryParam:"style=form,explode=true,name=pipeline"`
}

func (o *ListSubscriptionRequest) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

func (o *ListSubscriptionRequest) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *ListSubscriptionRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListSubscriptionRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *ListSubscriptionRequest) GetPipeline() *string {
	if o == nil {
		return nil
	}
	return o.Pipeline
}

// ListSubscriptionResponseBody - a list of Subscription objects
type ListSubscriptionResponseBody struct {
	Items []shared.Subscription `json:"items,omitempty"`
}

func (o *ListSubscriptionResponseBody) GetItems() []shared.Subscription {
	if o == nil {
		return nil
	}
	return o.Items
}

type ListSubscriptionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of Subscription objects
	Object *ListSubscriptionResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *ListSubscriptionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListSubscriptionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListSubscriptionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListSubscriptionResponse) GetObject() *ListSubscriptionResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *ListSubscriptionResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
