// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type GetBreakersByPackRequest struct {
	// pack ID to GET
	Pack string `pathParam:"style=simple,explode=false,name=pack"`
	// group ID to GET
	GroupID             string                      `pathParam:"style=simple,explode=false,name=groupId"`
	EventBreakerRuleset *shared.EventBreakerRuleset `request:"mediaType=application/json"`
}

func (o *GetBreakersByPackRequest) GetPack() string {
	if o == nil {
		return ""
	}
	return o.Pack
}

func (o *GetBreakersByPackRequest) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

func (o *GetBreakersByPackRequest) GetEventBreakerRuleset() *shared.EventBreakerRuleset {
	if o == nil {
		return nil
	}
	return o.EventBreakerRuleset
}

// GetBreakersByPackResponseBody - a list of Routes objects
type GetBreakersByPackResponseBody struct {
	Items []shared.Routes `json:"items,omitempty"`
}

func (o *GetBreakersByPackResponseBody) GetItems() []shared.Routes {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetBreakersByPackResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of Routes objects
	Object *GetBreakersByPackResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *GetBreakersByPackResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetBreakersByPackResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetBreakersByPackResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetBreakersByPackResponse) GetObject() *GetBreakersByPackResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *GetBreakersByPackResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
