// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/models/shared"
	"net/http"
)

type CreatePackOutputRequest struct {
	// The consumer group to which this instance belongs. Defaults to 'Cribl'.
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	Pack    string `pathParam:"style=simple,explode=false,name=pack"`
	ID      string `queryParam:"style=form,explode=true,name=id"`
	// New Output object
	Output shared.Output `request:"mediaType=application/json"`
}

func (c *CreatePackOutputRequest) GetGroupID() string {
	if c == nil {
		return ""
	}
	return c.GroupID
}

func (c *CreatePackOutputRequest) GetPack() string {
	if c == nil {
		return ""
	}
	return c.Pack
}

func (c *CreatePackOutputRequest) GetID() string {
	if c == nil {
		return ""
	}
	return c.ID
}

func (c *CreatePackOutputRequest) GetOutput() shared.Output {
	if c == nil {
		return shared.Output{}
	}
	return c.Output
}

// CreatePackOutputResponseBody - a list of Output objects
type CreatePackOutputResponseBody struct {
}

type CreatePackOutputResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of Output objects
	Object *CreatePackOutputResponseBody
	// Unexpected error
	Error *shared.Error
}

func (c *CreatePackOutputResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreatePackOutputResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreatePackOutputResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreatePackOutputResponse) GetObject() *CreatePackOutputResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}

func (c *CreatePackOutputResponse) GetError() *shared.Error {
	if c == nil {
		return nil
	}
	return c.Error
}
