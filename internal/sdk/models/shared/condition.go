// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Condition struct {
	Conf     map[string]any `json:"__conf"`
	Filename string         `json:"__filename"`
	Disabled bool           `json:"disabled"`
	Group    string         `json:"group"`
	ID       string         `json:"id"`
	InitTime float64        `json:"initTime"`
	LoadTime float64        `json:"loadTime"`
	ModTime  float64        `json:"modTime"`
	Name     string         `json:"name"`
	Uischema map[string]any `json:"uischema"`
	Version  string         `json:"version"`
}

func (c *Condition) GetConf() map[string]any {
	if c == nil {
		return map[string]any{}
	}
	return c.Conf
}

func (c *Condition) GetFilename() string {
	if c == nil {
		return ""
	}
	return c.Filename
}

func (c *Condition) GetDisabled() bool {
	if c == nil {
		return false
	}
	return c.Disabled
}

func (c *Condition) GetGroup() string {
	if c == nil {
		return ""
	}
	return c.Group
}

func (c *Condition) GetID() string {
	if c == nil {
		return ""
	}
	return c.ID
}

func (c *Condition) GetInitTime() float64 {
	if c == nil {
		return 0.0
	}
	return c.InitTime
}

func (c *Condition) GetLoadTime() float64 {
	if c == nil {
		return 0.0
	}
	return c.LoadTime
}

func (c *Condition) GetModTime() float64 {
	if c == nil {
		return 0.0
	}
	return c.ModTime
}

func (c *Condition) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *Condition) GetUischema() map[string]any {
	if c == nil {
		return map[string]any{}
	}
	return c.Uischema
}

func (c *Condition) GetVersion() string {
	if c == nil {
		return ""
	}
	return c.Version
}
