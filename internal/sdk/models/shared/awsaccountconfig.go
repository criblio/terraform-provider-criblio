// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/internal/utils"
)

type AwsAccountConfig struct {
	// Account name
	Name string `json:"name"`
	// ARN of the role to assume
	AssumeRoleArn *string `json:"assumeRoleArn,omitempty"`
	// External ID for role assumption
	AssumeRoleExternalID *string `json:"assumeRoleExternalId,omitempty"`
	// AWS access key
	AwsAPIKey *string `json:"awsApiKey,omitempty"`
	// AWS secret key
	AwsSecretKey *string `json:"awsSecretKey,omitempty"`
}

func (a AwsAccountConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AwsAccountConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (a *AwsAccountConfig) GetName() string {
	if a == nil {
		return ""
	}
	return a.Name
}

func (a *AwsAccountConfig) GetAssumeRoleArn() *string {
	if a == nil {
		return nil
	}
	return a.AssumeRoleArn
}

func (a *AwsAccountConfig) GetAssumeRoleExternalID() *string {
	if a == nil {
		return nil
	}
	return a.AssumeRoleExternalID
}

func (a *AwsAccountConfig) GetAwsAPIKey() *string {
	if a == nil {
		return nil
	}
	return a.AwsAPIKey
}

func (a *AwsAccountConfig) GetAwsSecretKey() *string {
	if a == nil {
		return nil
	}
	return a.AwsSecretKey
}
