// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type SystemInfoConf struct {
	ConfVersion *string `json:"confVersion,omitempty"`
	Inputs      float64 `json:"inputs"`
	Name        *string `json:"name,omitempty"`
	Outputs     float64 `json:"outputs"`
	Pipelines   float64 `json:"pipelines"`
	Routes      float64 `json:"routes"`
	Rules       float64 `json:"rules"`
}

func (s *SystemInfoConf) GetConfVersion() *string {
	if s == nil {
		return nil
	}
	return s.ConfVersion
}

func (s *SystemInfoConf) GetInputs() float64 {
	if s == nil {
		return 0.0
	}
	return s.Inputs
}

func (s *SystemInfoConf) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *SystemInfoConf) GetOutputs() float64 {
	if s == nil {
		return 0.0
	}
	return s.Outputs
}

func (s *SystemInfoConf) GetPipelines() float64 {
	if s == nil {
		return 0.0
	}
	return s.Pipelines
}

func (s *SystemInfoConf) GetRoutes() float64 {
	if s == nil {
		return 0.0
	}
	return s.Routes
}

func (s *SystemInfoConf) GetRules() float64 {
	if s == nil {
		return 0.0
	}
	return s.Rules
}

type Cpus struct {
	Model string         `json:"model"`
	Speed float64        `json:"speed"`
	Times map[string]any `json:"times"`
}

func (c *Cpus) GetModel() string {
	if c == nil {
		return ""
	}
	return c.Model
}

func (c *Cpus) GetSpeed() float64 {
	if c == nil {
		return 0.0
	}
	return c.Speed
}

func (c *Cpus) GetTimes() map[string]any {
	if c == nil {
		return map[string]any{}
	}
	return c.Times
}

type DiskUsage struct {
	BytesAvailable float64 `json:"bytesAvailable"`
	BytesUsed      float64 `json:"bytesUsed"`
	DiskPath       string  `json:"diskPath"`
	TotalDiskSize  float64 `json:"totalDiskSize"`
}

func (d *DiskUsage) GetBytesAvailable() float64 {
	if d == nil {
		return 0.0
	}
	return d.BytesAvailable
}

func (d *DiskUsage) GetBytesUsed() float64 {
	if d == nil {
		return 0.0
	}
	return d.BytesUsed
}

func (d *DiskUsage) GetDiskPath() string {
	if d == nil {
		return ""
	}
	return d.DiskPath
}

func (d *DiskUsage) GetTotalDiskSize() float64 {
	if d == nil {
		return 0.0
	}
	return d.TotalDiskSize
}

type Env struct {
}

type SystemInfoSamples struct {
	MaxSize string `json:"maxSize"`
}

func (s *SystemInfoSamples) GetMaxSize() string {
	if s == nil {
		return ""
	}
	return s.MaxSize
}

type SystemInfoLimits struct {
	Samples SystemInfoSamples `json:"samples"`
}

func (s *SystemInfoLimits) GetSamples() SystemInfoSamples {
	if s == nil {
		return SystemInfoSamples{}
	}
	return s.Samples
}

type SystemInfoMemory struct {
	Free  float64 `json:"free"`
	Total float64 `json:"total"`
}

func (s *SystemInfoMemory) GetFree() float64 {
	if s == nil {
		return 0.0
	}
	return s.Free
}

func (s *SystemInfoMemory) GetTotal() float64 {
	if s == nil {
		return 0.0
	}
	return s.Total
}

type SystemInfoOs struct {
	Arch       string `json:"arch"`
	Endianness string `json:"endianness"`
	Platform   string `json:"platform"`
	Release    string `json:"release"`
	Type       string `json:"type"`
}

func (s *SystemInfoOs) GetArch() string {
	if s == nil {
		return ""
	}
	return s.Arch
}

func (s *SystemInfoOs) GetEndianness() string {
	if s == nil {
		return ""
	}
	return s.Endianness
}

func (s *SystemInfoOs) GetPlatform() string {
	if s == nil {
		return ""
	}
	return s.Platform
}

func (s *SystemInfoOs) GetRelease() string {
	if s == nil {
		return ""
	}
	return s.Release
}

func (s *SystemInfoOs) GetType() string {
	if s == nil {
		return ""
	}
	return s.Type
}

type SystemInfo struct {
	Build             map[string]any    `json:"BUILD"`
	APIPort           float64           `json:"apiPort"`
	Conf              SystemInfoConf    `json:"conf"`
	ConfigPath        string            `json:"configPath"`
	Cpus              []Cpus            `json:"cpus"`
	DiskUsage         DiskUsage         `json:"diskUsage"`
	DistMode          AppMode           `json:"distMode"`
	Env               Env               `json:"env"`
	GUID              string            `json:"guid"`
	HasCloudWorkspace *bool             `json:"hasCloudWorkspace,omitempty"`
	Hostname          string            `json:"hostname"`
	InstallPath       string            `json:"installPath"`
	IsCriblSandbox    *bool             `json:"isCriblSandbox,omitempty"`
	IsFedRampEnabled  *bool             `json:"isFedRampEnabled,omitempty"`
	IsFipsEnabled     *bool             `json:"isFipsEnabled,omitempty"`
	License           LicenseInfo       `json:"license"`
	Limits            SystemInfoLimits  `json:"limits"`
	Loadavg           []float64         `json:"loadavg"`
	Memory            SystemInfoMemory  `json:"memory"`
	Messages          []BulletinMessage `json:"messages"`
	Net               map[string]any    `json:"net"`
	Os                SystemInfoOs      `json:"os"`
	SystemConf        SystemConf        `json:"systemConf"`
	Uptime            float64           `json:"uptime"`
	Version           string            `json:"version"`
	WorkerProcesses   float64           `json:"workerProcesses"`
}

func (s *SystemInfo) GetBuild() map[string]any {
	if s == nil {
		return map[string]any{}
	}
	return s.Build
}

func (s *SystemInfo) GetAPIPort() float64 {
	if s == nil {
		return 0.0
	}
	return s.APIPort
}

func (s *SystemInfo) GetConf() SystemInfoConf {
	if s == nil {
		return SystemInfoConf{}
	}
	return s.Conf
}

func (s *SystemInfo) GetConfigPath() string {
	if s == nil {
		return ""
	}
	return s.ConfigPath
}

func (s *SystemInfo) GetCpus() []Cpus {
	if s == nil {
		return []Cpus{}
	}
	return s.Cpus
}

func (s *SystemInfo) GetDiskUsage() DiskUsage {
	if s == nil {
		return DiskUsage{}
	}
	return s.DiskUsage
}

func (s *SystemInfo) GetDistMode() AppMode {
	if s == nil {
		return AppMode("")
	}
	return s.DistMode
}

func (s *SystemInfo) GetEnv() Env {
	if s == nil {
		return Env{}
	}
	return s.Env
}

func (s *SystemInfo) GetGUID() string {
	if s == nil {
		return ""
	}
	return s.GUID
}

func (s *SystemInfo) GetHasCloudWorkspace() *bool {
	if s == nil {
		return nil
	}
	return s.HasCloudWorkspace
}

func (s *SystemInfo) GetHostname() string {
	if s == nil {
		return ""
	}
	return s.Hostname
}

func (s *SystemInfo) GetInstallPath() string {
	if s == nil {
		return ""
	}
	return s.InstallPath
}

func (s *SystemInfo) GetIsCriblSandbox() *bool {
	if s == nil {
		return nil
	}
	return s.IsCriblSandbox
}

func (s *SystemInfo) GetIsFedRampEnabled() *bool {
	if s == nil {
		return nil
	}
	return s.IsFedRampEnabled
}

func (s *SystemInfo) GetIsFipsEnabled() *bool {
	if s == nil {
		return nil
	}
	return s.IsFipsEnabled
}

func (s *SystemInfo) GetLicense() LicenseInfo {
	if s == nil {
		return LicenseInfo{}
	}
	return s.License
}

func (s *SystemInfo) GetLimits() SystemInfoLimits {
	if s == nil {
		return SystemInfoLimits{}
	}
	return s.Limits
}

func (s *SystemInfo) GetLoadavg() []float64 {
	if s == nil {
		return []float64{}
	}
	return s.Loadavg
}

func (s *SystemInfo) GetMemory() SystemInfoMemory {
	if s == nil {
		return SystemInfoMemory{}
	}
	return s.Memory
}

func (s *SystemInfo) GetMessages() []BulletinMessage {
	if s == nil {
		return []BulletinMessage{}
	}
	return s.Messages
}

func (s *SystemInfo) GetNet() map[string]any {
	if s == nil {
		return map[string]any{}
	}
	return s.Net
}

func (s *SystemInfo) GetOs() SystemInfoOs {
	if s == nil {
		return SystemInfoOs{}
	}
	return s.Os
}

func (s *SystemInfo) GetSystemConf() SystemConf {
	if s == nil {
		return SystemConf{}
	}
	return s.SystemConf
}

func (s *SystemInfo) GetUptime() float64 {
	if s == nil {
		return 0.0
	}
	return s.Uptime
}

func (s *SystemInfo) GetVersion() string {
	if s == nil {
		return ""
	}
	return s.Version
}

func (s *SystemInfo) GetWorkerProcesses() float64 {
	if s == nil {
		return 0.0
	}
	return s.WorkerProcesses
}
