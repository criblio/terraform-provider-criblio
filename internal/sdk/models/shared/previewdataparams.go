// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PreviewDataParamsMode string

const (
	PreviewDataParamsModePipe         PreviewDataParamsMode = "pipe"
	PreviewDataParamsModeRoute        PreviewDataParamsMode = "route"
	PreviewDataParamsModeRouteAndSend PreviewDataParamsMode = "routeAndSend"
)

func (e PreviewDataParamsMode) ToPointer() *PreviewDataParamsMode {
	return &e
}
func (e *PreviewDataParamsMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pipe":
		fallthrough
	case "route":
		fallthrough
	case "routeAndSend":
		*e = PreviewDataParamsMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PreviewDataParamsMode: %v", v)
	}
}

type PreviewDataParams struct {
	CPUProfile           *bool                 `json:"cpuProfile,omitempty"`
	Dropped              *bool                 `json:"dropped,omitempty"`
	EnhanceMetricsOutput *bool                 `json:"enhanceMetricsOutput,omitempty"`
	Events               []map[string]any      `json:"events,omitempty"`
	InputID              *string               `json:"inputId,omitempty"`
	Level                *float64              `json:"level,omitempty"`
	Memory               *float64              `json:"memory,omitempty"`
	Mode                 PreviewDataParamsMode `json:"mode"`
	PipelineID           string                `json:"pipelineId"`
	SampleID             string                `json:"sampleId"`
	SamplePipelineID     *string               `json:"samplePipelineId,omitempty"`
	Timeout              *float64              `json:"timeout,omitempty"`
}

func (p *PreviewDataParams) GetCPUProfile() *bool {
	if p == nil {
		return nil
	}
	return p.CPUProfile
}

func (p *PreviewDataParams) GetDropped() *bool {
	if p == nil {
		return nil
	}
	return p.Dropped
}

func (p *PreviewDataParams) GetEnhanceMetricsOutput() *bool {
	if p == nil {
		return nil
	}
	return p.EnhanceMetricsOutput
}

func (p *PreviewDataParams) GetEvents() []map[string]any {
	if p == nil {
		return nil
	}
	return p.Events
}

func (p *PreviewDataParams) GetInputID() *string {
	if p == nil {
		return nil
	}
	return p.InputID
}

func (p *PreviewDataParams) GetLevel() *float64 {
	if p == nil {
		return nil
	}
	return p.Level
}

func (p *PreviewDataParams) GetMemory() *float64 {
	if p == nil {
		return nil
	}
	return p.Memory
}

func (p *PreviewDataParams) GetMode() PreviewDataParamsMode {
	if p == nil {
		return PreviewDataParamsMode("")
	}
	return p.Mode
}

func (p *PreviewDataParams) GetPipelineID() string {
	if p == nil {
		return ""
	}
	return p.PipelineID
}

func (p *PreviewDataParams) GetSampleID() string {
	if p == nil {
		return ""
	}
	return p.SampleID
}

func (p *PreviewDataParams) GetSamplePipelineID() *string {
	if p == nil {
		return nil
	}
	return p.SamplePipelineID
}

func (p *PreviewDataParams) GetTimeout() *float64 {
	if p == nil {
		return nil
	}
	return p.Timeout
}
