// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BulletinMessageSeverity string

const (
	BulletinMessageSeverityInfo  BulletinMessageSeverity = "info"
	BulletinMessageSeverityWarn  BulletinMessageSeverity = "warn"
	BulletinMessageSeverityError BulletinMessageSeverity = "error"
	BulletinMessageSeverityFatal BulletinMessageSeverity = "fatal"
)

func (e BulletinMessageSeverity) ToPointer() *BulletinMessageSeverity {
	return &e
}
func (e *BulletinMessageSeverity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "info":
		fallthrough
	case "warn":
		fallthrough
	case "error":
		fallthrough
	case "fatal":
		*e = BulletinMessageSeverity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BulletinMessageSeverity: %v", v)
	}
}

type BulletinMessageMetadatum struct {
}

type BulletinMessage struct {
	ID       string                     `json:"id"`
	Severity *BulletinMessageSeverity   `json:"severity,omitempty"`
	Title    *string                    `json:"title,omitempty"`
	Text     string                     `json:"text"`
	Time     *float64                   `json:"time,omitempty"`
	Group    *string                    `json:"group,omitempty"`
	Metadata []BulletinMessageMetadatum `json:"metadata,omitempty"`
}

func (o *BulletinMessage) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BulletinMessage) GetSeverity() *BulletinMessageSeverity {
	if o == nil {
		return nil
	}
	return o.Severity
}

func (o *BulletinMessage) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *BulletinMessage) GetText() string {
	if o == nil {
		return ""
	}
	return o.Text
}

func (o *BulletinMessage) GetTime() *float64 {
	if o == nil {
		return nil
	}
	return o.Time
}

func (o *BulletinMessage) GetGroup() *string {
	if o == nil {
		return nil
	}
	return o.Group
}

func (o *BulletinMessage) GetMetadata() []BulletinMessageMetadatum {
	if o == nil {
		return nil
	}
	return o.Metadata
}
