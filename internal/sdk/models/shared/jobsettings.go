// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type JobSettings struct {
	ConcurrentJobLimit          float64 `json:"concurrentJobLimit"`
	ConcurrentScheduledJobLimit float64 `json:"concurrentScheduledJobLimit"`
	ConcurrentSystemJobLimit    float64 `json:"concurrentSystemJobLimit"`
	ConcurrentSystemTaskLimit   float64 `json:"concurrentSystemTaskLimit"`
	ConcurrentTaskLimit         float64 `json:"concurrentTaskLimit"`
	DisableTasks                *bool   `json:"disableTasks,omitempty"`
	FinishedJobArtifactsLimit   float64 `json:"finishedJobArtifactsLimit"`
	FinishedTaskArtifactsLimit  float64 `json:"finishedTaskArtifactsLimit"`
	JobArtifactsReaperPeriod    string  `json:"jobArtifactsReaperPeriod"`
	JobTimeout                  string  `json:"jobTimeout"`
	MaxTaskPerc                 float64 `json:"maxTaskPerc"`
	SchedulingPolicy            string  `json:"schedulingPolicy"`
	TaskHeartbeatPeriod         float64 `json:"taskHeartbeatPeriod"`
	TaskManifestFlushPeriodMs   float64 `json:"taskManifestFlushPeriodMs"`
	TaskManifestMaxBufferSize   float64 `json:"taskManifestMaxBufferSize"`
	TaskManifestReadBufferSize  string  `json:"taskManifestReadBufferSize"`
	TaskPollTimeoutMs           float64 `json:"taskPollTimeoutMs"`
}

func (j *JobSettings) GetConcurrentJobLimit() float64 {
	if j == nil {
		return 0.0
	}
	return j.ConcurrentJobLimit
}

func (j *JobSettings) GetConcurrentScheduledJobLimit() float64 {
	if j == nil {
		return 0.0
	}
	return j.ConcurrentScheduledJobLimit
}

func (j *JobSettings) GetConcurrentSystemJobLimit() float64 {
	if j == nil {
		return 0.0
	}
	return j.ConcurrentSystemJobLimit
}

func (j *JobSettings) GetConcurrentSystemTaskLimit() float64 {
	if j == nil {
		return 0.0
	}
	return j.ConcurrentSystemTaskLimit
}

func (j *JobSettings) GetConcurrentTaskLimit() float64 {
	if j == nil {
		return 0.0
	}
	return j.ConcurrentTaskLimit
}

func (j *JobSettings) GetDisableTasks() *bool {
	if j == nil {
		return nil
	}
	return j.DisableTasks
}

func (j *JobSettings) GetFinishedJobArtifactsLimit() float64 {
	if j == nil {
		return 0.0
	}
	return j.FinishedJobArtifactsLimit
}

func (j *JobSettings) GetFinishedTaskArtifactsLimit() float64 {
	if j == nil {
		return 0.0
	}
	return j.FinishedTaskArtifactsLimit
}

func (j *JobSettings) GetJobArtifactsReaperPeriod() string {
	if j == nil {
		return ""
	}
	return j.JobArtifactsReaperPeriod
}

func (j *JobSettings) GetJobTimeout() string {
	if j == nil {
		return ""
	}
	return j.JobTimeout
}

func (j *JobSettings) GetMaxTaskPerc() float64 {
	if j == nil {
		return 0.0
	}
	return j.MaxTaskPerc
}

func (j *JobSettings) GetSchedulingPolicy() string {
	if j == nil {
		return ""
	}
	return j.SchedulingPolicy
}

func (j *JobSettings) GetTaskHeartbeatPeriod() float64 {
	if j == nil {
		return 0.0
	}
	return j.TaskHeartbeatPeriod
}

func (j *JobSettings) GetTaskManifestFlushPeriodMs() float64 {
	if j == nil {
		return 0.0
	}
	return j.TaskManifestFlushPeriodMs
}

func (j *JobSettings) GetTaskManifestMaxBufferSize() float64 {
	if j == nil {
		return 0.0
	}
	return j.TaskManifestMaxBufferSize
}

func (j *JobSettings) GetTaskManifestReadBufferSize() string {
	if j == nil {
		return ""
	}
	return j.TaskManifestReadBufferSize
}

func (j *JobSettings) GetTaskPollTimeoutMs() float64 {
	if j == nil {
		return 0.0
	}
	return j.TaskPollTimeoutMs
}
