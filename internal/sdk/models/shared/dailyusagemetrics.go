// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type DailyUsageMetrics struct {
	DroppedBytes           *float64 `json:"droppedBytes,omitempty"`
	EndTime                float64  `json:"endTime"`
	ExemptedLicenseInBytes float64  `json:"exemptedLicenseInBytes"`
	InBytes                float64  `json:"inBytes"`
	InEvents               float64  `json:"inEvents"`
	InMetricsEvents        *float64 `json:"inMetricsEvents,omitempty"`
	OutBytes               float64  `json:"outBytes"`
	OutEvents              float64  `json:"outEvents"`
	StartTime              float64  `json:"startTime"`
}

func (d *DailyUsageMetrics) GetDroppedBytes() *float64 {
	if d == nil {
		return nil
	}
	return d.DroppedBytes
}

func (d *DailyUsageMetrics) GetEndTime() float64 {
	if d == nil {
		return 0.0
	}
	return d.EndTime
}

func (d *DailyUsageMetrics) GetExemptedLicenseInBytes() float64 {
	if d == nil {
		return 0.0
	}
	return d.ExemptedLicenseInBytes
}

func (d *DailyUsageMetrics) GetInBytes() float64 {
	if d == nil {
		return 0.0
	}
	return d.InBytes
}

func (d *DailyUsageMetrics) GetInEvents() float64 {
	if d == nil {
		return 0.0
	}
	return d.InEvents
}

func (d *DailyUsageMetrics) GetInMetricsEvents() *float64 {
	if d == nil {
		return nil
	}
	return d.InMetricsEvents
}

func (d *DailyUsageMetrics) GetOutBytes() float64 {
	if d == nil {
		return 0.0
	}
	return d.OutBytes
}

func (d *DailyUsageMetrics) GetOutEvents() float64 {
	if d == nil {
		return 0.0
	}
	return d.OutEvents
}

func (d *DailyUsageMetrics) GetStartTime() float64 {
	if d == nil {
		return 0.0
	}
	return d.StartTime
}
