// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/internal/utils"
)

// ParserLibEntryType - Parser or formatter type to use
type ParserLibEntryType string

const (
	ParserLibEntryTypeCsv   ParserLibEntryType = "csv"
	ParserLibEntryTypeElff  ParserLibEntryType = "elff"
	ParserLibEntryTypeClf   ParserLibEntryType = "clf"
	ParserLibEntryTypeKvp   ParserLibEntryType = "kvp"
	ParserLibEntryTypeJSON  ParserLibEntryType = "json"
	ParserLibEntryTypeDelim ParserLibEntryType = "delim"
	ParserLibEntryTypeRegex ParserLibEntryType = "regex"
	ParserLibEntryTypeGrok  ParserLibEntryType = "grok"
)

func (e ParserLibEntryType) ToPointer() *ParserLibEntryType {
	return &e
}
func (e *ParserLibEntryType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "csv":
		fallthrough
	case "elff":
		fallthrough
	case "clf":
		fallthrough
	case "kvp":
		fallthrough
	case "json":
		fallthrough
	case "delim":
		fallthrough
	case "regex":
		fallthrough
	case "grok":
		*e = ParserLibEntryType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ParserLibEntryType: %v", v)
	}
}

type ParserLibEntry struct {
	ID          string  `json:"id"`
	Lib         *string `json:"lib,omitempty"`
	Description *string `json:"description,omitempty"`
	// Optionally, add tags that you can use for filtering
	Tags *string `json:"tags,omitempty"`
	// Parser or formatter type to use
	Type *ParserLibEntryType `default:"csv" json:"type"`
}

func (p ParserLibEntry) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ParserLibEntry) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"id"}); err != nil {
		return err
	}
	return nil
}

func (p *ParserLibEntry) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *ParserLibEntry) GetLib() *string {
	if p == nil {
		return nil
	}
	return p.Lib
}

func (p *ParserLibEntry) GetDescription() *string {
	if p == nil {
		return nil
	}
	return p.Description
}

func (p *ParserLibEntry) GetTags() *string {
	if p == nil {
		return nil
	}
	return p.Tags
}

func (p *ParserLibEntry) GetType() *ParserLibEntryType {
	if p == nil {
		return nil
	}
	return p.Type
}
