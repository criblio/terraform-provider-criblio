// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type DistributedSummaryGroups struct {
	Count        float64 `json:"count"`
	Destinations float64 `json:"destinations"`
	Pipelines    float64 `json:"pipelines"`
	Routes       float64 `json:"routes"`
	Sources      float64 `json:"sources"`
}

func (d *DistributedSummaryGroups) GetCount() float64 {
	if d == nil {
		return 0.0
	}
	return d.Count
}

func (d *DistributedSummaryGroups) GetDestinations() float64 {
	if d == nil {
		return 0.0
	}
	return d.Destinations
}

func (d *DistributedSummaryGroups) GetPipelines() float64 {
	if d == nil {
		return 0.0
	}
	return d.Pipelines
}

func (d *DistributedSummaryGroups) GetRoutes() float64 {
	if d == nil {
		return 0.0
	}
	return d.Routes
}

func (d *DistributedSummaryGroups) GetSources() float64 {
	if d == nil {
		return 0.0
	}
	return d.Sources
}

type DistributedSummaryWorkers struct {
	Alive            float64 `json:"alive"`
	ConfVersions     float64 `json:"confVersions"`
	Count            float64 `json:"count"`
	Groups           float64 `json:"groups"`
	SoftwareVersions float64 `json:"softwareVersions"`
	Unhealthy        float64 `json:"unhealthy"`
}

func (d *DistributedSummaryWorkers) GetAlive() float64 {
	if d == nil {
		return 0.0
	}
	return d.Alive
}

func (d *DistributedSummaryWorkers) GetConfVersions() float64 {
	if d == nil {
		return 0.0
	}
	return d.ConfVersions
}

func (d *DistributedSummaryWorkers) GetCount() float64 {
	if d == nil {
		return 0.0
	}
	return d.Count
}

func (d *DistributedSummaryWorkers) GetGroups() float64 {
	if d == nil {
		return 0.0
	}
	return d.Groups
}

func (d *DistributedSummaryWorkers) GetSoftwareVersions() float64 {
	if d == nil {
		return 0.0
	}
	return d.SoftwareVersions
}

func (d *DistributedSummaryWorkers) GetUnhealthy() float64 {
	if d == nil {
		return 0.0
	}
	return d.Unhealthy
}

type DistributedSummary struct {
	Groups  DistributedSummaryGroups  `json:"groups"`
	Workers DistributedSummaryWorkers `json:"workers"`
}

func (d *DistributedSummary) GetGroups() DistributedSummaryGroups {
	if d == nil {
		return DistributedSummaryGroups{}
	}
	return d.Groups
}

func (d *DistributedSummary) GetWorkers() DistributedSummaryWorkers {
	if d == nil {
		return DistributedSummaryWorkers{}
	}
	return d.Workers
}
