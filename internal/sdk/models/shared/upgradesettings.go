// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type UpgradeSettings struct {
	AutomaticUpgradeCheckPeriod *string              `json:"automaticUpgradeCheckPeriod,omitempty"`
	DisableAutomaticUpgrade     bool                 `json:"disableAutomaticUpgrade"`
	EnableLegacyEdgeUpgrade     bool                 `json:"enableLegacyEdgeUpgrade"`
	PackageUrls                 []UpgradePackageUrls `json:"packageUrls,omitempty"`
	UpgradeSource               string               `json:"upgradeSource"`
}

func (u *UpgradeSettings) GetAutomaticUpgradeCheckPeriod() *string {
	if u == nil {
		return nil
	}
	return u.AutomaticUpgradeCheckPeriod
}

func (u *UpgradeSettings) GetDisableAutomaticUpgrade() bool {
	if u == nil {
		return false
	}
	return u.DisableAutomaticUpgrade
}

func (u *UpgradeSettings) GetEnableLegacyEdgeUpgrade() bool {
	if u == nil {
		return false
	}
	return u.EnableLegacyEdgeUpgrade
}

func (u *UpgradeSettings) GetPackageUrls() []UpgradePackageUrls {
	if u == nil {
		return nil
	}
	return u.PackageUrls
}

func (u *UpgradeSettings) GetUpgradeSource() string {
	if u == nil {
		return ""
	}
	return u.UpgradeSource
}
