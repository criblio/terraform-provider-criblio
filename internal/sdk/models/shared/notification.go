// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/criblio/terraform-provider-criblio/internal/sdk/internal/utils"
)

// ConditionSpecificConfigs - Configuration specific to the notification condition
type ConditionSpecificConfigs struct {
}

type Notification struct {
	// Unique identifier for the notification
	ID string `json:"id"`
	// Whether the notification is disabled
	Disabled *bool `default:"false" json:"disabled"`
	// The condition that triggers this notification
	Condition string `json:"condition"`
	// Targets to send any notifications to
	Targets []string `json:"targets,omitempty"`
	// Configuration for notification targets
	TargetConfigs []NotificationTargetConfig `json:"targetConfigs,omitempty"`
	// Configuration specific to the notification condition
	Conf *ConditionSpecificConfigs `json:"conf,omitempty"`
	// Additional metadata for the notification
	Metadata []MetadataItem `json:"metadata,omitempty"`
	// Group identifier for the notification
	Group *string `json:"group,omitempty"`
}

func (n Notification) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *Notification) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Notification) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Notification) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *Notification) GetCondition() string {
	if o == nil {
		return ""
	}
	return o.Condition
}

func (o *Notification) GetTargets() []string {
	if o == nil {
		return nil
	}
	return o.Targets
}

func (o *Notification) GetTargetConfigs() []NotificationTargetConfig {
	if o == nil {
		return nil
	}
	return o.TargetConfigs
}

func (o *Notification) GetConf() *ConditionSpecificConfigs {
	if o == nil {
		return nil
	}
	return o.Conf
}

func (o *Notification) GetMetadata() []MetadataItem {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *Notification) GetGroup() *string {
	if o == nil {
		return nil
	}
	return o.Group
}
