// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Executor struct {
	Conf     map[string]any `json:"__conf"`
	Filename string         `json:"__filename"`
	Disabled bool           `json:"disabled"`
	Group    string         `json:"group"`
	ID       string         `json:"id"`
	InitTime float64        `json:"initTime"`
	LoadTime float64        `json:"loadTime"`
	ModTime  float64        `json:"modTime"`
	Name     string         `json:"name"`
	Uischema map[string]any `json:"uischema"`
	Version  string         `json:"version"`
}

func (e *Executor) GetConf() map[string]any {
	if e == nil {
		return map[string]any{}
	}
	return e.Conf
}

func (e *Executor) GetFilename() string {
	if e == nil {
		return ""
	}
	return e.Filename
}

func (e *Executor) GetDisabled() bool {
	if e == nil {
		return false
	}
	return e.Disabled
}

func (e *Executor) GetGroup() string {
	if e == nil {
		return ""
	}
	return e.Group
}

func (e *Executor) GetID() string {
	if e == nil {
		return ""
	}
	return e.ID
}

func (e *Executor) GetInitTime() float64 {
	if e == nil {
		return 0.0
	}
	return e.InitTime
}

func (e *Executor) GetLoadTime() float64 {
	if e == nil {
		return 0.0
	}
	return e.LoadTime
}

func (e *Executor) GetModTime() float64 {
	if e == nil {
		return 0.0
	}
	return e.ModTime
}

func (e *Executor) GetName() string {
	if e == nil {
		return ""
	}
	return e.Name
}

func (e *Executor) GetUischema() map[string]any {
	if e == nil {
		return map[string]any{}
	}
	return e.Uischema
}

func (e *Executor) GetVersion() string {
	if e == nil {
		return ""
	}
	return e.Version
}
