// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type PublishPackResponseGit struct {
	Branch        string `json:"branch"`
	CommitHash    string `json:"commitHash"`
	CommitMessage string `json:"commitMessage"`
}

func (o *PublishPackResponseGit) GetBranch() string {
	if o == nil {
		return ""
	}
	return o.Branch
}

func (o *PublishPackResponseGit) GetCommitHash() string {
	if o == nil {
		return ""
	}
	return o.CommitHash
}

func (o *PublishPackResponseGit) GetCommitMessage() string {
	if o == nil {
		return ""
	}
	return o.CommitMessage
}

type PublishPackResponse struct {
	Git     *PublishPackResponseGit     `json:"git,omitempty"`
	ID      string                      `json:"id"`
	Message *string                     `json:"message,omitempty"`
	Source  *string                     `json:"source,omitempty"`
	Status  *PublishPackToGitStatusType `json:"status,omitempty"`
}

func (o *PublishPackResponse) GetGit() *PublishPackResponseGit {
	if o == nil {
		return nil
	}
	return o.Git
}

func (o *PublishPackResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PublishPackResponse) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *PublishPackResponse) GetSource() *string {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *PublishPackResponse) GetStatus() *PublishPackToGitStatusType {
	if o == nil {
		return nil
	}
	return o.Status
}
