// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/internal/utils"
)

type PaginationType string

const (
	PaginationTypeNone   PaginationType = "none"
	PaginationTypeOffset PaginationType = "offset"
	PaginationTypeCursor PaginationType = "cursor"
	PaginationTypePage   PaginationType = "page"
)

func (e PaginationType) ToPointer() *PaginationType {
	return &e
}
func (e *PaginationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "offset":
		fallthrough
	case "cursor":
		fallthrough
	case "page":
		*e = PaginationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaginationType: %v", v)
	}
}

type PaginationConfig struct {
	Type             *PaginationType `default:"none" json:"type"`
	OffsetField      *string         `json:"offsetField,omitempty"`
	LimitField       *string         `json:"limitField,omitempty"`
	Limit            *int64          `default:"100" json:"limit"`
	MaxPages         *int64          `default:"0" json:"maxPages"`
	ZeroIndexed      *bool           `default:"false" json:"zeroIndexed"`
	PageField        *string         `json:"pageField,omitempty"`
	SizeField        *string         `json:"sizeField,omitempty"`
	Size             *int64          `default:"50" json:"size"`
	Attribute        []string        `json:"attribute,omitempty"`
	LastPageExpr     *string         `json:"lastPageExpr,omitempty"`
	Offset           *int64          `json:"offset,omitempty"`
	TotalRecordField *string         `json:"totalRecordField,omitempty"`
}

func (p PaginationConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaginationConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (p *PaginationConfig) GetType() *PaginationType {
	if p == nil {
		return nil
	}
	return p.Type
}

func (p *PaginationConfig) GetOffsetField() *string {
	if p == nil {
		return nil
	}
	return p.OffsetField
}

func (p *PaginationConfig) GetLimitField() *string {
	if p == nil {
		return nil
	}
	return p.LimitField
}

func (p *PaginationConfig) GetLimit() *int64 {
	if p == nil {
		return nil
	}
	return p.Limit
}

func (p *PaginationConfig) GetMaxPages() *int64 {
	if p == nil {
		return nil
	}
	return p.MaxPages
}

func (p *PaginationConfig) GetZeroIndexed() *bool {
	if p == nil {
		return nil
	}
	return p.ZeroIndexed
}

func (p *PaginationConfig) GetPageField() *string {
	if p == nil {
		return nil
	}
	return p.PageField
}

func (p *PaginationConfig) GetSizeField() *string {
	if p == nil {
		return nil
	}
	return p.SizeField
}

func (p *PaginationConfig) GetSize() *int64 {
	if p == nil {
		return nil
	}
	return p.Size
}

func (p *PaginationConfig) GetAttribute() []string {
	if p == nil {
		return nil
	}
	return p.Attribute
}

func (p *PaginationConfig) GetLastPageExpr() *string {
	if p == nil {
		return nil
	}
	return p.LastPageExpr
}

func (p *PaginationConfig) GetOffset() *int64 {
	if p == nil {
		return nil
	}
	return p.Offset
}

func (p *PaginationConfig) GetTotalRecordField() *string {
	if p == nil {
		return nil
	}
	return p.TotalRecordField
}
