// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/internal/utils"
)

type LookupFileMode string

const (
	LookupFileModeMemory LookupFileMode = "memory"
	LookupFileModeDisk   LookupFileMode = "disk"
)

func (e LookupFileMode) ToPointer() *LookupFileMode {
	return &e
}
func (e *LookupFileMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "memory":
		fallthrough
	case "disk":
		*e = LookupFileMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LookupFileMode: %v", v)
	}
}

type LookupFile struct {
	ID          string  `json:"id"`
	Description *string `json:"description,omitempty"`
	// One or more tags related to this lookup. Optional.
	Tags *string `json:"tags,omitempty"`
	// File content.
	Content *string         `json:"content,omitempty"`
	Mode    *LookupFileMode `default:"memory" json:"mode"`
}

func (l LookupFile) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *LookupFile) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, []string{"id"}); err != nil {
		return err
	}
	return nil
}

func (l *LookupFile) GetID() string {
	if l == nil {
		return ""
	}
	return l.ID
}

func (l *LookupFile) GetDescription() *string {
	if l == nil {
		return nil
	}
	return l.Description
}

func (l *LookupFile) GetTags() *string {
	if l == nil {
		return nil
	}
	return l.Tags
}

func (l *LookupFile) GetContent() *string {
	if l == nil {
		return nil
	}
	return l.Content
}

func (l *LookupFile) GetMode() *LookupFileMode {
	if l == nil {
		return nil
	}
	return l.Mode
}
