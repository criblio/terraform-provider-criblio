// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Provider string

const (
	ProviderAws   Provider = "aws"
	ProviderAzure Provider = "azure"
)

func (e Provider) ToPointer() *Provider {
	return &e
}
func (e *Provider) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws":
		fallthrough
	case "azure":
		*e = Provider(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Provider: %v", v)
	}
}

type Cloud struct {
	Provider Provider `json:"provider"`
	Region   string   `json:"region"`
}

func (c *Cloud) GetProvider() Provider {
	if c == nil {
		return Provider("")
	}
	return c.Provider
}

func (c *Cloud) GetRegion() string {
	if c == nil {
		return ""
	}
	return c.Region
}

type Group struct {
	OnPrem             *bool    `json:"onPrem,omitempty"`
	WorkerRemoteAccess *bool    `json:"workerRemoteAccess,omitempty"`
	Streamtags         []string `json:"streamtags,omitempty"`
	Cloud              *Cloud   `json:"cloud,omitempty"`
	Provisioned        bool     `json:"provisioned"`
	// Must be true if product is 'edge'
	IsFleet             *bool    `json:"isFleet,omitempty"`
	EstimatedIngestRate *float64 `json:"estimatedIngestRate,omitempty"`
	Name                *string  `json:"name,omitempty"`
	ID                  string   `json:"id"`
}

func (g *Group) GetOnPrem() *bool {
	if g == nil {
		return nil
	}
	return g.OnPrem
}

func (g *Group) GetWorkerRemoteAccess() *bool {
	if g == nil {
		return nil
	}
	return g.WorkerRemoteAccess
}

func (g *Group) GetStreamtags() []string {
	if g == nil {
		return nil
	}
	return g.Streamtags
}

func (g *Group) GetCloud() *Cloud {
	if g == nil {
		return nil
	}
	return g.Cloud
}

func (g *Group) GetProvisioned() bool {
	if g == nil {
		return false
	}
	return g.Provisioned
}

func (g *Group) GetIsFleet() *bool {
	if g == nil {
		return nil
	}
	return g.IsFleet
}

func (g *Group) GetEstimatedIngestRate() *float64 {
	if g == nil {
		return nil
	}
	return g.EstimatedIngestRate
}

func (g *Group) GetName() *string {
	if g == nil {
		return nil
	}
	return g.Name
}

func (g *Group) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}
