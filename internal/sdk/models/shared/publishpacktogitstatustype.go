// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PublishPackToGitStatusType string

const (
	PublishPackToGitStatusTypeError   PublishPackToGitStatusType = "error"
	PublishPackToGitStatusTypeSuccess PublishPackToGitStatusType = "success"
	PublishPackToGitStatusTypeNoop    PublishPackToGitStatusType = "noop"
)

func (e PublishPackToGitStatusType) ToPointer() *PublishPackToGitStatusType {
	return &e
}
func (e *PublishPackToGitStatusType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "error":
		fallthrough
	case "success":
		fallthrough
	case "noop":
		*e = PublishPackToGitStatusType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublishPackToGitStatusType: %v", v)
	}
}
