// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type SearchJobResults struct {
	IsFinished          bool     `json:"isFinished"`
	Job                 any      `json:"job"`
	Limit               *float64 `json:"limit,omitempty"`
	Offset              float64  `json:"offset"`
	PersistedEventCount float64  `json:"persistedEventCount"`
	TotalEventCount     float64  `json:"totalEventCount"`
}

func (s *SearchJobResults) GetIsFinished() bool {
	if s == nil {
		return false
	}
	return s.IsFinished
}

func (s *SearchJobResults) GetJob() any {
	if s == nil {
		return nil
	}
	return s.Job
}

func (s *SearchJobResults) GetLimit() *float64 {
	if s == nil {
		return nil
	}
	return s.Limit
}

func (s *SearchJobResults) GetOffset() float64 {
	if s == nil {
		return 0.0
	}
	return s.Offset
}

func (s *SearchJobResults) GetPersistedEventCount() float64 {
	if s == nil {
		return 0.0
	}
	return s.PersistedEventCount
}

func (s *SearchJobResults) GetTotalEventCount() float64 {
	if s == nil {
		return 0.0
	}
	return s.TotalEventCount
}
