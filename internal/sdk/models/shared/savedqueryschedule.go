// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Notifications struct {
	Disabled bool           `json:"disabled"`
	Items    []Notification `json:"items,omitempty"`
}

func (n *Notifications) GetDisabled() bool {
	if n == nil {
		return false
	}
	return n.Disabled
}

func (n *Notifications) GetItems() []Notification {
	if n == nil {
		return nil
	}
	return n.Items
}

type SavedQuerySchedule struct {
	CronSchedule  string        `json:"cronSchedule"`
	Enabled       bool          `json:"enabled"`
	KeepLastN     float64       `json:"keepLastN"`
	Notifications Notifications `json:"notifications"`
	ResumeMissed  *bool         `json:"resumeMissed,omitempty"`
	ResumeOnBoot  *bool         `json:"resumeOnBoot,omitempty"`
	Tz            string        `json:"tz"`
}

func (s *SavedQuerySchedule) GetCronSchedule() string {
	if s == nil {
		return ""
	}
	return s.CronSchedule
}

func (s *SavedQuerySchedule) GetEnabled() bool {
	if s == nil {
		return false
	}
	return s.Enabled
}

func (s *SavedQuerySchedule) GetKeepLastN() float64 {
	if s == nil {
		return 0.0
	}
	return s.KeepLastN
}

func (s *SavedQuerySchedule) GetNotifications() Notifications {
	if s == nil {
		return Notifications{}
	}
	return s.Notifications
}

func (s *SavedQuerySchedule) GetResumeMissed() *bool {
	if s == nil {
		return nil
	}
	return s.ResumeMissed
}

func (s *SavedQuerySchedule) GetResumeOnBoot() *bool {
	if s == nil {
		return nil
	}
	return s.ResumeOnBoot
}

func (s *SavedQuerySchedule) GetTz() string {
	if s == nil {
		return ""
	}
	return s.Tz
}
