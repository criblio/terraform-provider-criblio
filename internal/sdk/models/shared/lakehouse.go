// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/criblio/terraform-provider-criblio/internal/sdk/internal/utils"
)

// TierSize - Size of the lakehouse tier
type TierSize string

const (
	TierSizeSmall       TierSize = "small"
	TierSizeMedium      TierSize = "medium"
	TierSizeLarge       TierSize = "large"
	TierSizeXlarge      TierSize = "xlarge"
	TierSizeTwoxlarge   TierSize = "2xlarge"
	TierSizeThreexlarge TierSize = "3xlarge"
	TierSizeSixxlarge   TierSize = "6xlarge"
)

func (e TierSize) ToPointer() *TierSize {
	return &e
}
func (e *TierSize) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "small":
		fallthrough
	case "medium":
		fallthrough
	case "large":
		fallthrough
	case "xlarge":
		fallthrough
	case "2xlarge":
		fallthrough
	case "3xlarge":
		fallthrough
	case "6xlarge":
		*e = TierSize(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TierSize: %v", v)
	}
}

type Lakehouse struct {
	// Unique identifier for the lakehouse
	ID string `json:"id"`
	// Description of the lakehouse
	Description *string `json:"description,omitempty"`
	// Size of the lakehouse tier
	TierSize *TierSize `default:"small" json:"tierSize"`
}

func (l Lakehouse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *Lakehouse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Lakehouse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Lakehouse) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Lakehouse) GetTierSize() *TierSize {
	if o == nil {
		return nil
	}
	return o.TierSize
}
