openapi: 3.0.2
info:
  title: Cribl Terraform Provider
  description: |
    The Cribl Terraform provider offers a streamlined, repeatable approach for configuring end-to-end infrastructure as code (IaC) and managing resources consistently across Cribl Organizations and Workspaces.

    This Preview feature is still being developed. We do not recommend using it in a production environment, because the feature might not be fully tested or optimized for performance, and related documentation could be incomplete.

    Complementary API reference documentation is available at https://docs.cribl.io/api-reference/. Product documentation is available at https://docs.cribl.io.
  version: 4.12.2-4b17c8d4
  contact:
    name: Support
    email: support@cribl.io
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    clientOauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://login.cribl.cloud/oauth/token
          scopes: {}
  schemas:
    Pack:
      x-speakeasy-entity: Pack
      type: object
      properties:
        displayName:
          type: string
          example: "myPackDisplayName"
        id:
          type: string
          example: "myUniquePackId"
        description:
          type: string
          example: "My description of my new pack"
        version:
          type: string
          example: "212b3cc"
        source:
          type: string
          x-speakeasy-xor-with:
            - filename
          example: "mySourcePackName"
        disabled:
          type: boolean
          example: true
      required:
        - id
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: "This is my error message string"
    BannerMessage:
      type: object
      additionalProperties: false
      required:
        - type
        - message
        - theme
        - enabled
      properties:
        id:
          type: string
          title: Banner ID
          example: "myUniqueBannerMessageId"
        enabled:
          type: boolean
          title: Enable banner
          description: Show a banner on top of all pages
          example: true
        type:
          enum:
            - custom
            - system
          type: string
          title: Banner type
          example: custom
        created:
          type: number
          title: Time
          description: Time created
          example: "2025-09-29T14:15:00Z"
        theme:
          type: string
          title: Background color
          pattern: ^((#?[0-9a-fA-F]{6})|(orange)|(yellow)|(green)|(blue)|(purple)|(magenta)|(red)){1}$
          example: purple
        invertFontColor:
          type: boolean
          title: Invert font color
          example: false
        message:
          type: string
          title: Banner message
          maxLength: 100
          description: Enter a message to display to all your Organization's users, across
            all Cribl products. Limited to one line and 100 characters; will be
            truncated as needed.
          example: "This is the banner message to be displayed"
        link:
          type: string
          title: Link URL
          description: Optionally, provide a URL to append to the message
          pattern: ^https?://
          example: "https://thisisarealwebsite.com"
        linkDisplay:
          type: string
          title: Link display
          maxLength: 100
          description: Optionally, display your link with a short text label instead of
            the raw URL (100-character limit)
          example: "This flavor text redirects to link"
        customThemes:
          type: array
          items:
            type: string
          example: [ "themes" ]
    Certificate:
      type: object
      required:
        - id
        - cert
        - privKey
      properties:
        id:
          type: string
          title: Name
          pattern: ^[a-zA-Z0-9_-]+$
          example: "myUniqueCertId"
        description:
          type: string
          title: Description
          example: "Short description of x509 certificate"
        cert:
          type: string
          title: Certificate
          description: Drag/drop or upload host certificate in PEM/Base64 format, or paste
            its contents here
          example: "LS0tLS1CR...FLS0tLS0K"
        privKey:
          type: string
          title: Private key
          example: "dont-share-this-key"
        passphrase:
          type: string
          title: Passphrase
          example: "Security.jpg"
        ca:
          type: string
          title: CA certificate
          description: Optionally, drag/drop or upload all CA certificates in PEM/Base64
            format. Or, paste certificate contents here. Certificates can be
            used for client and/or server authentication.
          example: "LS0tLS1CR...FLS0tLS0K"
        inUse:
          type: array
          title: Referenced
          description: List of configurations that reference this certificate
          items:
            type: string
          example: [ "list", "of", "configurations" ]
    FeaturesEntry:
      type: object
      properties:
        disabled:
          type: boolean
          example: true
        id:
          type: string
          example: "myUniqueFeatureEntry"
      required:
        - disabled
        - id
    SavedJobCollection:
      required:
        - collector
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: "myUniqueJobCollectionId"
        description:
          type: string
          title: Description
          example: "my job collection description"
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          example: "collection"
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: "1h"
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for
            example, aws*) are allowed. This is useful when discovery returns
            sensitive fields that should not be exposed in the Jobs user
            interface.
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: "fieldName"
          example: ["fields", "to", "remove"]
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to
            restart during job execution
          default: false
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: "dev"
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/15 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be
                running at any time
              default: 1
              minimum: 1
              example: 3
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits
              default: true
              example: false
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              type: object
              required:
                - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 3
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                  example: "warn"
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to
                    seconds if not specified (examples: 30, 45s, 15m). Enter 0
                    for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "60s"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                  example: "list"
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: "60m"
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 1
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 5
                timestampTimezone: {}
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "1GB"
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "5GB"
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
            example: "tag1"
          example: ["list", "of", "strings"]
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled, tasks are created and run by the same Worker Node
          default: false
          example: false
        collector:
          type: object
          required:
            - type
            - conf
          properties:
            type:
              type: string
              title: Collector type
              description: The type of collector to run
              example: "Azure Blob"
            conf:
              type: object
              title: Collector-specific settings
              properties: {}
              example: {}
            destructive:
              type: boolean
              title: Destructive
              description: Delete any files collected (where applicable)
              default: false
              example: true
            encoding:
              type: string
              title: Encoding
              description: Character encoding to use when parsing ingested data. When not set,
                @{product} will default to UTF-8 but may incorrectly interpret
                multi-byte characters.
              example: "UTF-8"
        input:
          type: object
          properties:
            type:
              type: string
              enum:
                - collection
              default: collection
              example: "collection"
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event-breaking rulesets that will be applied, in order,
                to the input data stream
              items:
                type: string
                example: "ruleName"
              example: ["list", "of", "rulesets", "in", "order"]
            staleChannelFlushMs:
              type: number
              title: Event Breaker buffer timeout (ms)
              description: How long (in milliseconds) the Event Breaker will wait for new data
                to be sent to a specific channel before flushing the data stream
                out, as is, to the Pipelines
              default: 10000
              minimum: 10
              maximum: 43200000
              example: 20000000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: Send events to normal routing and event processing. Disable to
                select a specific Pipeline/Destination combination.
              default: true
              example: true
            preprocess:
              type: object
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output
                    (stdout)
                  example: "echo"
                args:
                  type: array
                  title: Arguments
                  description: Arguments to be added to the custom command
                  items:
                    type: string
                    example: "arg"
                  example: ["args", "to", "echo"]
            throttleRatePerSec:
              type: string
              title: Throttling
              description: "Rate (in bytes per second) to throttle while writing to an output.
                Accepts values with multiple-byte units, such as KB, MB, and GB.
                (Example: 42 MB) Default value of 0 specifies no throttling."
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
              example: "53 MB"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Field Name
                    example: "myFieldName"
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes
                      or backticks. (Can evaluate to a constant.)
                    example: "`${my_field_name}_extended`"
              example: [{"name":"source","value":"app"}]
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results
              example: "myTargetProcessingPipeline"
            output:
              type: string
              title: Destination
              description: Destination to send results to
              example: "myOutputDestination"
      type: object
    SavedJobExecutor:
      type: object
      required:
        - executor
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: "myUniqueExecutorJobId"
        description:
          type: string
          title: Description
          example: "My executor job description"
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          example: "executor"
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: "2h"
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: true
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for
            example, aws*) are allowed. This is useful when discovery returns
            sensitive fields that should not be exposed in the Jobs user
            interface.
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: "fieldName"
          example: ["fieldA", "fieldB"]
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to
            restart during job execution
          default: false
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: "production"
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "0 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be
                running at any time
              default: 1
              minimum: 1
              example: 2
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits
              default: true
              example: false
            resumeMissed:
              type: boolean
              title: Resume missed
              example: false
            run:
              type: object
              title: Run settings
              type: object
              required:
                - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 3
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                  example: "debug"
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to
                    seconds if not specified (examples: 30, 45s, 15m). Enter 0
                    for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "45m"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode.
                  default: list
                  example: "run"
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: "absolute"
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 0
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 10
                timestampTimezone:
                  type: string
                  example: "UTC"
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                  example: "status=200"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: "Limits the bundle size for small tasks."
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "5MB"
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: "Limits the bundle size for files above the lower task bundle size."
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "50MB"
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
            example: "tagA"
          example: ["tagA", "tagB"]
        executor:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Executor type
              description: The type of executor to run
              example: "SparkExecutor"
            storeTaskResults:
              type: boolean
              title: Store task results
              description: Determines whether or not to write task results to disk
              default: true
              example: false
            conf:
              type: object
              title: Executor-specific settings
              properties: {}
              example: {"setting": "value"}
      type: object
    SavedJobScheduledSearch:
      required:
        - savedQueryId
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: "myScheduledSearchJobId"
        description:
          type: string
          title: Description
          example: "Scheduled search job description"
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          example: "scheduledSearch"
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: "6h"
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for
            example, aws*) are allowed. This is useful when discovery returns
            sensitive fields that should not be exposed in the Jobs user
            interface.
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: "fieldName"
          example: ["secretField"]
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to
            restart during job execution
          default: false
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: "staging"
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/30 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be
                running at any time
              default: 1
              minimum: 1
              example: 5
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits
              default: true
              example: false
            resumeMissed: {}
            run:
              title: Run settings
              type: object
              required:
                - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 2
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                  example: "debug"
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to
                    seconds if not specified (examples: 30, 45s, 15m). Enter 0
                    for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "20m"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                  example: "list"
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: "absolute"
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 0
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 10
                timestampTimezone: {}
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                  example: "status=500"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "10MB"
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "100MB"
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
            example: "tagX"
          example: ["analytics","alerts"]
        savedQueryId:
          type: string
          title: ID of the SavedQuery
          description: Identifies which search query to run
          example: "mySavedQueryId"
      type: object
    SavedJob:
      oneOf:
        - $ref: "#/components/schemas/SavedJobCollection"
        - $ref: "#/components/schemas/SavedJobExecutor"
        - $ref: "#/components/schemas/SavedJobScheduledSearch"
    InputCollectorBase:
      type: object
      required:
        - collector
        - type
      properties:
        # Common Job-Level Properties
        id:
          type: string
          title: Job ID
          example: "myInputCollectorJobId"
        type:
          type: string
          enum: [collection]
          default: collection
          x-speakeasy-terraform-ignore: true
          example: "collection"
        ttl:
          type: string
          default: 4h
          example: "2h"
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore group jobs limit
          default: false
          example: false
        removeFields:
          type: array
          title: Remove fields
          default: []
          items:
            type: string
            example: "fieldName"
          example: ["field1","field2"]
        resumeOnBoot:
          type: boolean
          title: Resume on boot
          default: true
          example: true
        environment:
          type: string
          title: Environment
          example: "production"
        savedState:
          type: object
          title: Saved state
          description: Saved state for the collector
          default: {}
          example: {}
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "0 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
              example: 2
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
              example: false
            resumeMissed:
              type: boolean
              title: Resume missed
              description: Resume missed scheduled runs
              default: false
              example: true
            run:
              type: object
              title: Run settings
              required:
                - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 3
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum: [error, warn, info, debug, silly]
                  default: info
                  example: "debug"
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "30m"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                  enum: [list, preview, run]
                  example: "list"
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  enum: [relative, absolute]
                  example: "relative"
                earliest:
                  type: number
                  default: 0
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 0
                latest:
                  type: number
                  default: 1
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 10
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: "Limits the bundle size for small tasks. For example, if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task."
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "1GB"
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: "Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB, you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks."
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "10GB"
                timeWarning:
                  type: object
                  title: Time warning
                  description: Time warning configuration
                  example: {}
                stateTracking:
                  type: object
                  title: State tracking
                  description: State tracking configuration
                  properties:
                    stateUpdateExpression:
                      type: string
                      title: State update expression
                      example: "state = state + 1"
                    stateMergeExpression:
                      type: string
                      title: State merge expression
                      example: "merge(state,newState)"
                    enabled:
                      type: boolean
                      title: Enabled
                      default: false
                      example: true
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping
          default: []
          items:
            type: string
            example: "tag1"
          example: ["tag1","tag2"]
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled, tasks are created and run by the same Worker Node
          default: false
          example: false
        # Input Configuration
        input:
          type: object
          properties:
            type:
              type: string
              enum: [collection]
              default: collection
              example: "collection"
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
              items:
                type: string
                example: "breakerRule"
              example: ["rule1","rule2"]
            staleChannelFlushMs:
              type: number
              title: Event Breaker buffer timeout (ms)
              description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
              default: 10000
              minimum: 10
              maximum: 43200000
              example: 20000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
              default: true
              example: true
            preprocess:
              type: object
              required: [disabled]
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output (stdout)
                  example: "cat"
                args:
                  type: array
                  title: Arguments
                  description: Arguments to be added to the custom command
                  items:
                    type: string
                    example: "arg"
                  example: ["--flag","value"]
            throttleRatePerSec:
              type: string
              title: Throttling
              description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
              example: "42 MB"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input
              items:
                type: object
                required: [name, value]
                properties:
                  name:
                    type: string
                    title: Field Name
                    example: "sourceType"
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                    example: "`value_expression`"
              example: [{"name":"source","value":"app"}]
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results
              example: "defaultPipeline"
            output:
              type: string
              title: Destination
              description: Destination to send results to
              example: "defaultDestination"
        # Common collector properties
        collector:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [splunk, s3, azureblob, cribllake, database, gcs, healthcheck, rest]
              title: Collector Type
              example: "splunk"
            destructive:
              type: boolean
              title: Destructive
              description: Delete any files collected (where applicable)
              default: false
              example: false
            encoding:
              type: string
              title: Encoding
              description: Character encoding to use when parsing ingested data
              default: "utf8"
              example: "utf8"
    # Specific collector type implementations
    InputCollectorSplunk:
      allOf:
        - $ref: '#/components/schemas/InputCollectorBase'
        - type: object
          properties:
            collector:
              type: object
              required: [type]
              properties:
                type:
                  type: string
                  enum: [splunk]
                  example: "splunk"
                conf:
                  type: object
                  properties:
                    searchHead:
                      type: string
                      title: Search head
                      description: Search head base URL
                      example: "https://splunk.example.com"
                    search:
                      type: string
                      title: Search
                      description: Splunk search query
                      example: "index=main sourcetype=syslog | stats count"
                    earliest:
                      type: string
                      title: Earliest
                      description: Earliest time boundary for the search
                      example: "-24h"
                    latest:
                      type: string
                      title: Latest
                      description: Latest time boundary for the search
                      example: "now"
                    endpoint:
                      type: string
                      title: Search endpoint
                      description: REST API endpoint used to create a search
                      example: "/services/search/jobs"
                    outputMode:
                      type: string
                      enum: [csv, json]
                      title: Output mode
                      example: "json"
                    authentication:
                      type: string
                      enum: [none, basic, basicSecret, token, tokenSecret, login, loginSecret, oauth, oauthSecret, google_oauth, google_oauthSecret, hmac]
                      title: Authentication
                      example: "token"
                    timeout:
                      type: integer
                      minimum: 0
                      maximum: 1800
                      title: Timeout (secs)
                      example: 60
                    useRoundRobinDns:
                      type: boolean
                      title: Use round robin DNS
                      example: false
                    disableTimeFilter:
                      type: boolean
                      title: Disable time filter
                      example: false
                    rejectUnauthorized:
                      type: boolean
                      title: Reject unauthorized certificates
                      example: true
                    handleEscapedChars:
                      type: boolean
                      title: Handle escaped characters
                      example: true
                    username:
                      type: string
                      title: Username
                      example: "splunkUser"
                    password:
                      type: string
                      title: Password
                      example: "splunkPassword"
                    credentialsSecret:
                      type: string
                      title: Credentials secret
                      example: "splunkCredentialsSecret"
                    token:
                      type: string
                      title: Bearer token
                      example: "splunkBearerToken"
                    tokenSecret:
                      type: string
                      title: Bearer token secret
                      example: "splunkBearerTokenSecret"
    InputCollectorRest:
      allOf:
        - $ref: '#/components/schemas/InputCollectorBase'
        - type: object
          properties:
            collector:
              type: object
              required: [type]
              properties:
                type:
                  type: string
                  enum: [rest]
                  example: "rest"
                conf:
                  type: object
                  properties:
                    # Authentication Properties
                    authentication:
                      type: string
                      enum: [none, basic, basicSecret, token, tokenSecret, login, loginSecret, oauth, oauthSecret, google_oauth, google_oauthSecret, hmac]
                      title: Authentication
                      example: "basic"
                    username:
                      type: string
                      title: Username
                      example: "restUser"
                    password:
                      type: string
                      title: Password
                      example: "restPassword"
                    credentialsSecret:
                      type: string
                      title: Credentials secret
                      example: "restCredentialsSecret"
                    token:
                      type: string
                      title: Bearer token
                      example: "restBearerToken"
                    tokenSecret:
                      type: string
                      title: Bearer token secret
                      example: "restBearerTokenSecret"
                    loginUrl:
                      type: string
                      title: Login URL
                      description: URL for authentication login
                      example: "https://api.example.com/login"
                    loginBody:
                      type: string
                      title: Login body
                      description: Body content for login request
                      example: '{"username":"user","password":"pass"}'
                    authHeaderKey:
                      type: string
                      title: Auth header key
                      description: Header key for authentication
                      example: "Authorization"
                    authHeaderExpr:
                      type: string
                      title: Auth header expression
                      description: Expression for auth header value
                      example: "Bearer ${token}"
                    clientSecretParamName:
                      type: string
                      title: Client secret parameter name
                      example: "client_secret"
                    authRequestParams:
                      type: array
                      title: Auth request parameters
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            title: Parameter name
                            example: "param1"
                          value:
                            type: string
                            title: Parameter value
                            example: "value1"
                      example: [{"name": "param1", "value": "value1"}]
                    tokenRespAttribute:
                      type: string
                      title: Token response attribute
                      description: Attribute name for token in response
                      example: "access_token"
                    authRequestHeaders:
                      type: array
                      title: Auth request headers
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            title: Header name
                            example: "Content-Type"
                          value:
                            type: string
                            title: Header value
                            example: "application/json"
                      example: [{"name": "Content-Type", "value": "application/json"}]
                    # Collection Properties
                    collectUrl:
                      type: string
                      title: Collect URL
                      description: URL to use for the Collect operation
                      example: "https://api.example.com/data"
                    collectMethod:
                      type: string
                      title: Collect method
                      enum: [get, post, post_with_body, other]
                      example: "get"
                    collectRequestHeaders:
                      type: array
                      title: Collect request headers
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            title: Header name
                            example: "Accept"
                          value:
                            type: string
                            title: Header value
                            example: "application/json"
                      example: [{"name": "Accept", "value": "application/json"}]
                    collectRequestParams:
                      type: array
                      title: Collect request parameters
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            title: Parameter name
                            example: "limit"
                          value:
                            type: string
                            title: Parameter value
                            example: "100"
                      example: [{"name": "limit", "value": "100"}]
                    # Request Configuration
                    timeout:
                      type: integer
                      minimum: 0
                      maximum: 1800
                      title: Timeout (secs)
                      example: 30
                    useRoundRobinDns:
                      type: boolean
                      title: Use round robin DNS
                      example: false
                    disableTimeFilter:
                      type: boolean
                      title: Disable time filter
                      example: false
                    decodeUrl:
                      type: boolean
                      title: Decode URL
                      default: false
                      example: true
                    rejectUnauthorized:
                      type: boolean
                      title: Reject unauthorized certificates
                      example: true
                    captureHeaders:
                      type: boolean
                      title: Capture headers
                      default: false
                      example: true
                    safeHeaders:
                      type: array
                      title: Safe headers
                      items:
                        type: string
                        example: "Authorization"
                      example: ["Content-Type","Authorization"]
                    # Discovery Configuration
                    discovery:
                      type: object
                      title: Discovery Configuration
                      properties:
                        discoverType:
                          type: string
                          title: Discover type
                          enum: [http]
                          example: "http"
                        discoverMethod:
                          type: string
                          title: Discover method
                          enum: [get, post, post_with_body, other]
                          example: "get"
                        pagination:
                          $ref: '#/components/schemas/PaginationConfig'
                        enableDiscoverCode:
                          type: boolean
                          title: Enable discover code
                          default: false
                          example: true
                        itemList:
                          type: array
                          title: Item list
                          items:
                            type: string
                            example: "item1"
                          example: ["item1","item2"]
                        discoverUrl:
                          type: string
                          title: Discover URL
                          example: "https://api.example.com/discover"
                        discoverRequestHeaders:
                          type: array
                          title: Discover request headers
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                title: Header name
                                example: "Authorization"
                              value:
                                type: string
                                title: Header value
                                example: "Bearer token"
                          example: [{"name": "Authorization", "value": "Bearer token"}]
                        discoverRequestParams:
                          type: array
                          title: Discover request parameters
                          items:
                            type: object
                            example: {"param": "value"}
                          example: [{"param": "value"}]
                        discoverBody:
                          type: string
                          title: Discover body
                          example: '{"discover":true}'
                        formatResultCode:
                          type: string
                          title: Format result code
                          example: "200"
                        discoverDataField:
                          type: string
                          title: Discover data field
                          example: "results"
                    # Pagination Configuration
                    pagination:
                      $ref: '#/components/schemas/PaginationConfig'
                    # Retry Rules
                    retryRules:
                      type: object
                      title: Retry Rules Configuration
                      properties:
                        type:
                          type: string
                          title: Retry type
                          enum: [backoff, fixed]
                          default: backoff
                          example: "backoff"
                        interval:
                          type: integer
                          title: Interval (ms)
                          default: 1000
                          example: 500
                        limit:
                          type: integer
                          title: Retry limit
                          default: 5
                          example: 3
                        multiplier:
                          type: number
                          title: Multiplier
                          default: 2
                          example: 1.5
                        maxIntervalMs:
                          type: integer
                          title: Max interval (ms)
                          default: 20000
                          example: 10000
                        codes:
                          type: array
                          title: HTTP status codes to retry
                          items:
                            type: integer
                            example: 500
                          default: [429, 503]
                          example: [429, 500]
                        enableHeader:
                          type: boolean
                          title: Enable header
                          default: true
                          example: true
                        retryConnectTimeout:
                          type: boolean
                          title: Retry connect timeout
                          default: false
                          example: true
                        retryConnectReset:
                          type: boolean
                          title: Retry connect reset
                          default: false
                          example: false
                        retryHeaderName:
                          type: string
                          title: Retry header name
                          default: "retry-after"
                          example: "Retry-After"
                    # Internal Scheduling
                    __scheduling:
                      type: object
                      title: Internal scheduling
                      properties:
                        stateTracking:
                          type: object
                          title: State tracking
                          example: {"enabled": true}
    InputCollectorS3:
      allOf:
        - $ref: '#/components/schemas/InputCollectorBase'
        - type: object
          properties:
            collector:
              type: object
              required: [type]
              properties:
                type:
                  type: string
                  enum: [s3]
                  example: "s3"
                conf:
                  type: object
                  properties:
                    bucket:
                      type: string
                      title: S3 bucket
                      description: S3 Bucket from which to collect data
                      example: "my-s3-bucket"
                    region:
                      type: string
                      title: Region
                      description: AWS region from which to retrieve data
                      example: "us-east-1"
                    path:
                      type: string
                      title: Path
                      description: Directory where data will be collected
                      example: "logs/2025/10/"
                    awsAuthenticationMethod:
                      type: string
                      title: Authentication method
                      enum: [auto, manual, secret]
                      example: "auto"
                    awsApiKey:
                      type: string
                      title: Access key
                      example: "AKIAIOSFODNN7EXAMPLE"
                    awsSecretKey:
                      type: string
                      title: Secret key
                      example: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
                    awsSecret:
                      type: string
                      title: Secret key pair
                      example: "awsSecretPairId"
                    recurse:
                      type: boolean
                      title: Recursive
                      example: true
                    extractors:
                      type: array
                      title: Path extractors
                      items:
                        type: object
                        example: {"pattern": ".*.gz"}
                      example: [{"pattern": ".*.gz"}]
                    maxBatchSize:
                      type: integer
                      title: Batch size limit
                      minimum: 1
                      example: 100
    InputCollectorAzureBlob:
      allOf:
        - $ref: '#/components/schemas/InputCollectorBase'
        - type: object
          properties:
            collector:
              type: object
              required: [type]
              properties:
                type:
                  type: string
                  enum: [azureblob]
                  example: "azureblob"
                conf:
                  type: object
                  properties:
                    containerName:
                      type: string
                      title: Container name
                      description: Azure container to collect from
                      example: "my-container"
                    storageAccountName:
                      type: string
                      title: Storage account name
                      example: "mystorageaccount"
                    connectionString:
                      type: string
                      title: Connection string
                      description: Azure storage account Connection String
                      example: "DefaultEndpointsProtocol=https;AccountName=mystorageaccount;AccountKey=abc123;EndpointSuffix=core.windows.net"
                    authType:
                      type: string
                      title: Authentication method
                      enum: [manual, secret, clientSecret, clientCert]
                      example: "manual"
                    path:
                      type: string
                      title: Path
                      description: Directory where data will be collected
                      example: "container/logs/2025/10/"
                    recurse:
                      type: boolean
                      title: Recursive
                      example: true
                    extractors:
                      type: array
                      title: Path extractors
                      items:
                        type: object
                        example: {"pattern": ".*.json"}
                      example: [{"pattern": ".*.json"}]
                    maxBatchSize:
                      type: integer
                      title: Batch size limit
                      minimum: 1
                      example: 500
    InputCollectorCriblLake:
      allOf:
        - $ref: '#/components/schemas/InputCollectorBase'
        - type: object
          properties:
            collector:
              type: object
              required: [type]
              properties:
                type:
                  type: string
                  enum: [cribllake]
                  example: "cribllake"
                conf:
                  type: object
                  properties:
                    dataset:
                      type: string
                      title: Lake dataset
                      description: Lake dataset to collect data from
                      example: "my-dataset"
    InputCollectorDatabase:
      allOf:
        - $ref: '#/components/schemas/InputCollectorBase'
        - type: object
          properties:
            collector:
              type: object
              required: [type]
              properties:
                type:
                  type: string
                  enum: [database]
                  example: "database"
                conf:
                  type: object
                  properties:
                    connectionId:
                      type: string
                      title: Connection
                      description: Select an existing Database Connection
                      example: "myDatabaseConnection"
                    query:
                      type: string
                      title: SQL Query
                      description: Query string for selecting data from the database
                      example: "SELECT * FROM logs WHERE severity = 'ERROR'"
                    queryValidationEnabled:
                      type: boolean
                      title: Validate Query
                      example: true
    InputCollectorGCS:
      allOf:
        - $ref: '#/components/schemas/InputCollectorBase'
        - type: object
          properties:
            collector:
              type: object
              required: [type]
              properties:
                type:
                  type: string
                  enum: [gcs]
                  example: "gcs"
                conf:
                  type: object
                  properties:
                    serviceAccountCredentials:
                      type: string
                      title: Service account credentials
                      example: "-----BEGIN PRIVATE KEY-----\nMIIEv...example...IDAQAB\n-----END PRIVATE KEY-----\n"
                    bucket:
                      type: string
                      title: GCS bucket
                      description: GCS Bucket from which to collect data
                      example: "my-gcs-bucket"
                    path:
                      type: string
                      title: Path
                      description: Directory where data will be collected
                      example: "logs/2025/10/"
                    authType:
                      type: string
                      title: Authentication method
                      enum: [manual, secret, clientSecret, clientCert]
                      example: "manual"
                    recurse:
                      type: boolean
                      title: Recursive
                      example: true
                    extractors:
                      type: array
                      title: Path extractors
                      items:
                        type: object
                        example: {"pattern": ".*.csv"}
                      example: [{"pattern": ".*.csv"}]
                    maxBatchSize:
                      type: integer
                      title: Batch size limit
                      minimum: 1
                      example: 200
    InputCollectorHealthCheck:
      allOf:
        - $ref: '#/components/schemas/InputCollectorBase'
        - type: object
          properties:
            collector:
              type: object
              required: [type]
              properties:
                type:
                  type: string
                  enum: [healthcheck]
                  example: "healthcheck"
                conf:
                  type: object
                  properties:
                    collectUrl:
                      type: string
                      title: Collect URL
                      description: URL to use for the Collect operation
                      example: "https://api.example.com/health"
                    collectMethod:
                      type: string
                      title: Collect method
                      enum: [get, post, post_with_body, other]
                      example: "get"
                    authentication:
                      type: string
                      enum: [none, basic, basicSecret, token, tokenSecret, login, loginSecret, oauth, oauthSecret, google_oauth, google_oauthSecret, hmac]
                      title: Authentication
                      example: "none"
                    timeout:
                      type: integer
                      minimum: 0
                      maximum: 1800
                      title: Timeout (secs)
                      example: 10
                    rejectUnauthorized:
                      type: boolean
                      title: Reject unauthorized certificates
                      example: true
                    username:
                      type: string
                      title: Username
                      example: "healthUser"
                    password:
                      type: string
                      title: Password
                      example: "healthPassword"
                    credentialsSecret:
                      type: string
                      title: Credentials secret
                      example: "healthCredSecret"
    # Supporting Schemas
    PaginationConfig:
      type: object
      title: Pagination Configuration
      properties:
        type:
          type: string
          title: Pagination type
          enum: [none, offset, cursor, page]
          default: none
          example: "offset"
        offsetField:
          type: string
          title: Offset field
          example: "offset"
        limitField:
          type: string
          title: Limit field
          example: "limit"
        limit:
          type: integer
          title: Limit
          default: 100
          example: 100
        maxPages:
          type: integer
          title: Max pages
          default: 0
          example: 10
        zeroIndexed:
          type: boolean
          title: Zero indexed
          default: false
          example: true
        pageField:
          type: string
          title: Page field
          example: "page"
        sizeField:
          type: string
          title: Size field
          example: "pageSize"
        size:
          type: integer
          title: Size
          default: 50
          example: 50
        attribute:
          type: array
          title: Attribute
          items:
            type: string
            example: "records"
          example: ["records"]
        lastPageExpr:
          type: string
          title: Last page expression
          example: "$.data.isLastPage"
        offset:
          type: integer
          title: Offset
          example: 0
        totalRecordField:
          type: string
          title: Total record field
          example: "totalRecords"
    # Main InputCollector that uses oneOf to discriminate between types
    InputCollector:
      oneOf:
        - $ref: '#/components/schemas/InputCollectorSplunk'
        - $ref: '#/components/schemas/InputCollectorRest'
        - $ref: '#/components/schemas/InputCollectorS3'
        - $ref: '#/components/schemas/InputCollectorAzureBlob'
        - $ref: '#/components/schemas/InputCollectorCriblLake'
        - $ref: '#/components/schemas/InputCollectorDatabase'
        - $ref: '#/components/schemas/InputCollectorGCS'
        - $ref: '#/components/schemas/InputCollectorHealthCheck'
    KeyMetadataEntity:
      type: object
      required:
        - keyId
        - algorithm
        - kms
        - keyclass
      properties:
        keyId:
          type: string
          title: Key ID
          example: "myKeyId"
        description:
          type: string
          title: Description
          example: "My Key Metadata"
        algorithm:
          type: string
          title: Encryption algorithm
          default: aes-256-cbc
          enum:
            - aes-256-cbc
            - aes-256-gcm
          example: "aes-256-cbc"
        kms:
          type: string
          title: KMS for this key
          default: local
          enum:
            - local
          example: "local"
        keyclass:
          type: number
          title: Key class
          default: 0
          minimum: 0
          example: 0
        created:
          type: number
          title: Creation time
          example: 1759324416
        expires:
          type: number
          title: Expiration time
          example: 1759325416
        plainKey:
          type: string
          title: Plain text key
          example: "thisismyplaintextkeystring"
        cipherKey:
          type: string
          title: Encrypted key
          example: "encryptedkeystring"
        useIV:
          type: boolean
          title: Use initialization vector
          description: Seed encryption with a
            [nonce](https://en.wikipedia.org/wiki/Cryptographic_nonce) to make
            the key more random and unique. Must be enabled with the aes-256-gcm
            algorithm.
          default: false
          example: true
        ivSize:
          type: integer
          title: Initialization vector size
          enum:
            - 12
            - 13
            - 14
            - 15
            - 16
          default: 12
          description: Length of the initialization vector, in bytes
          example: 12
        group:
          type: string
          title: Group/Fleet
          description: Name of the Group/Fleet that created this key
          example: "myKeyGroup"
    BulletinMessage:
      type: object
      additionalProperties: false
      required:
        - id
        - text
      properties:
        id:
          type: string
          title: Message ID
          example: "myMessageId"
        severity:
          type: string
          title: Severity
          enum:
            - info
            - warn
            - error
            - fatal
          example: "info"
        title:
          type: string
          title: Title
          example: "My Message Title"
        text:
          type: string
          title: Text
          example: "My message text"
        time:
          type: number
          title: Occurrence Time
          example: 1759324416
        group:
          type: string
          title: Group
          example: "myMessageGroup"
        metadata:
          type: array
          items:
            type: object
            example: {"key": "value"}
          example: [{"source": "system"}]
    NotificationTarget:
      oneOf:
        - $ref: '#/components/schemas/WebhookTarget'
        - $ref: '#/components/schemas/PagerDutyTarget'
        - $ref: '#/components/schemas/SlackTarget'
        - $ref: '#/components/schemas/SnsTarget'
        - $ref: '#/components/schemas/SmtpTarget'
    Notification:
      type: object
      required:
        - id
        - condition
      properties:
        id:
          type: string
          title: "Notification ID"
          description: "Unique identifier for the notification"
          pattern: '^[a-zA-Z0-9_-]+$'
          maxLength: 512
          example: "myUniqueNotificationId"
        disabled:
          type: boolean
          title: "Disabled"
          description: "Whether the notification is disabled"
          default: false
          example: false
        condition:
          type: string
          title: "Condition"
          description: "The condition that triggers this notification"
          example: "true"
        targets:
          type: array
          title: "Notification targets"
          description: "Targets to send any notifications to"
          items:
            type: string
            example: "targetId"
          default: []
          example: ["target1", "target2"]
        targetConfigs:
          type: array
          title: "Target configuration"
          description: "Configuration for notification targets"
          items:
            $ref: '#/components/schemas/TargetConfig'
          example: [{"id": "webhookTarget"}]
        conf:
          type: object
          title: "Condition-specific configs"
          description: "Configuration specific to the notification condition"
          properties:
            savedQueryId:
              type: string
              description: "ID of the saved query this notification is associated with"
              example: "savedQueryId"
            message:
              type: string
              description: "Message template for the notification"
              example: "Message for notification"
            triggerType:
              type: string
              description: "Type of trigger (e.g., resultsCount)"
              example: "resultsCount"
            triggerComparator:
              type: string
              description: "Comparison operator (e.g., >, <, =)"
              example: ">"
            triggerCount:
              type: number
              description: "Threshold count for the trigger"
              example: 10
          required:
            - savedQueryId
            - message
          example: 
            savedQueryId: "savedQuery123"
            message: "Alert triggered"
            triggerType: "resultsCount"
            triggerComparator: ">"
            triggerCount: 5
        metadata:
          type: array
          title: "Metadata"
          description: "Additional metadata for the notification"
          items:
            $ref: '#/components/schemas/MetadataItem'
          x-speakeasy-terraform-ignore: true
          example: [{"name": "env", "value": "prod"}]
        group:
          type: string
          title: "Group"
          description: "Group identifier for the notification"
          default: "default_search"
          example: "myNotificationGroup"
    # Notification Target Types
    WebhookTarget:
      type: object
      required:
        - id
        - type
        - url
        - format
        - method
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: "myWebhookTarget"
        type:
          type: string
          enum: [webhook]
          example: "webhook"
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: ["cribl_host"]
          items:
            type: string
            example: "cribl_pipe"
          example: ["cribl_host","cribl_pipe"]
        url:
          type: string
          title: "Webhook URL"
          description: "URL to send the webhook to"
          pattern: '^https?://.+'
          example: "https://hooks.example.com/webhook"
        format:
          type: string
          title: "Format"
          description: "Format of the webhook payload"
          enum: [ndjson, json_array, custom]
          example: "ndjson"
        method:
          type: string
          title: "HTTP Method"
          description: "HTTP method to use for the webhook"
          enum: [POST, PATCH, PUT]
          example: "POST"
        authType:
          type: string
          title: "Authentication Type"
          description: "Authentication method for the webhook"
          enum: [none, token, basic]
          default: none
          example: "token"
        token:
          type: string
          title: "Token"
          description: "Authentication token"
          example: "myWebhookSecretToken"
        username:
          type: string
          title: "Username"
          description: "Basic authentication username"
          example: "webhookUser"
        password:
          type: string
          title: "Password"
          description: "Basic authentication password"
          example: "webhookPass"
    PagerDutyTarget:
      type: object
      required:
        - id
        - type
        - routingKey
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: "myPagerDutyTarget"
        type:
          type: string
          enum: [pager_duty]
          example: "pager_duty"
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: ["cribl_host"]
          items:
            type: string
            example: "cribl_host"
          example: ["cribl_host","cribl_pipe"]
        routingKey:
          type: string
          title: "Routing key"
          description: "32-character integration key for an integration on a service or global ruleset"
          example: "0123456789abcdef0123456789abcdef"
        group:
          type: string
          title: "Group"
          description: "Optional, default group value"
          example: "oncall-team"
        class:
          type: string
          title: "Class"
          description: "Optional, default class value"
          example: "incident-class"
        component:
          type: string
          title: "Component"
          description: "Optional, default component value"
          default: "logstream"
          example: "webserver"
        severity:
          type: string
          title: "Severity"
          description: "Default value for message severity. Defaults to info. The __severity value, if set, will overwrite this."
          default: "info"
          enum: [info, warning, error, critical]
          enumNames: ["Info", "Warning", "Error", "Critical"]
          example: "critical"
    SlackTarget:
      type: object
      required:
        - id
        - type
        - url
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: "mySlackTarget"
        type:
          type: string
          enum: [slack]
          example: "slack"
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: ["cribl_host"]
          items:
            type: string
            example: "cribl_host"
          example: ["cribl_host","cribl_pipe"]
        url:
          type: string
          title: "Webhook URL"
          description: "Slack's Incoming Webhook URL"
          pattern: '^https?://[a-zA-Z0-9-.]+'
          example: "https://hooks.slack.com/services/THISisanExample"
    SnsTarget:
      type: object
      required:
        - id
        - type
        - region
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: "mySnsTarget"
        type:
          type: string
          enum: [sns]
          example: "sns"
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: ["cribl_host"]
          items:
            type: string
            example: "cribl_host"
          example: ["cribl_host","cribl_pipe"]
        awsAuthenticationMethod:
          type: string
          title: "Authentication method"
          description: "AWS authentication method"
          enum: [auto, manual, secret]
          enumNames: ["AssumeRole", "AWS keys", "Secret"]
          example: "manual"
        assumeRoleArn:
          type: string
          title: "Assume Role ARN"
          description: "ARN of the role to assume"
          example: "arn:aws:iam::123456789012:role/MyRole"
        assumeRoleExternalId:
          type: string
          title: "External ID"
          description: "External ID for role assumption"
          example: "external-id-123"
        awsApiKey:
          type: string
          title: "Access Key"
          description: "AWS access key"
          example: "AKIAIOSFODNN7EXAMPLE"
        awsSecretKey:
          type: string
          title: "Secret Key"
          description: "AWS secret key"
          example: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
        region:
          type: string
          title: "Region"
          description: "AWS region"
          example: "us-east-1"
        endpoint:
          type: string
          title: "Endpoint"
          description: "SNS endpoint URL"
          example: "https://sns.us-east-1.amazonaws.com"
        allowlist:
          type: array
          title: "Phone number allowlist"
          description: "Wildcard list of allowed phone numbers. This is not enforced if the notification is sent to topic."
          default: []
          items:
            type: string
            example: "+15551234567"
          example: ["+15551234567","+15559876543"]
        destinationType:
          type: string
          title: "Destination type"
          description: "The type of destination to send notifications to"
          enum: [phoneNumber, topic]
          enumNames: ["Phone number", "Topic ARN"]
          default: "topic"
          example: "topic"
        phoneNumber:
          type: string
          title: "Default Phone Number"
          description: "The default phone number to send the notification to. This value can be overridden by the notification event __phoneNumber field."
          example: "+15557654321"
        topicArn:
          type: string
          title: "Default topic ARN"
          description: "The default ARN of the SNS topic to send notifications to"
          example: "arn:aws:sns:us-east-1:123456789012:my-topic"
        topicType:
          type: string
          title: "Topic type"
          description: "Type of the topic selected in AWS SNS"
          default: "fifo"
          enum: [standard, fifo]
          enumNames: ["Standard", "FIFO"]
          example: "fifo"
        messageGroupId:
          type: string
          title: "Message Group ID"
          description: "Message group ID for FIFO topics"
          example: "my-message-group-id"
    SmtpTarget:
      type: object
      required:
        - id
        - type
        - host
        - port
        - from
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: "mySmtpTarget"
        type:
          type: string
          enum: [smtp]
          example: "smtp"
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: ["cribl_host"]
          items:
            type: string
            example: "cribl_host"
          example: ["cribl_host","cribl_pipe"]
        host:
          type: string
          title: "SMTP Host"
          description: "SMTP server hostname"
          example: "smtp.example.com"
        port:
          type: integer
          title: "SMTP Port"
          description: "SMTP server port"
          minimum: 1
          maximum: 65535
          example: 587
        from:
          type: string
          title: "From Address"
          description: "Email address to send from"
          format: email
          example: "alerts@example.com"
        username:
          type: string
          title: "Username"
          description: "SMTP authentication username"
          example: "smtpUser"
        password:
          type: string
          title: "Password"
          description: "SMTP authentication password"
          example: "smtpPass123"
        encryptionOption:
          type: string
          title: "Encryption"
          description: "Encryption method for SMTP"
          enum: [NONE, STARTTLS, SSL]
          enumNames: ["None", "STARTTLS", "SSL"]
          default: "NONE"
          example: "STARTTLS"
        tls:
          type: object
          title: "TLS Configuration"
          description: "TLS configuration options"
          properties:
            rejectUnauthorized:
              type: boolean
              title: "Reject Unauthorized"
              description: "Whether to reject unauthorized certificates"
              default: true
              example: true
            minVersion:
              type: string
              title: "Minimum TLS Version"
              description: "Minimum TLS version to accept"
              enum: [TLSv1, TLSv1.1, TLSv1.2, TLSv1.3]
              default: "TLSv1.2"
              example: "TLSv1.2"
            maxVersion:
              type: string
              title: "Maximum TLS Version"
              description: "Maximum TLS version to accept"
              enum: [TLSv1, TLSv1.1, TLSv1.2, TLSv1.3]
              default: "TLSv1.3"
              example: "TLSv1.3"
    TargetConfig:
      type: object
      properties:
        id:
          type: string
          description: "ID of the notification target"
          example: "myTargetConfigId"
        conf:
          $ref: '#/components/schemas/TargetConfigConf'
      required: ["id"]
      additionalProperties: false
    TargetConfigConf:
      type: object
      properties:
        includeResults:
          type: boolean
          description: Whether to include search results in the notification
          default: false
          example: true
        attachmentType:
          type: string
          description: Type of attachment for the notification
          enum: ["inline", "attachment"]
          default: "inline"
          example: "attachment"
      required: []
      additionalProperties: false
    # Supporting schemas
    NotificationTargetConfig:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          title: "Notification target ID"
          description: "ID of the notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: "myNotificationTargetConfigId"
        conf:
          $ref: '#/components/schemas/SmtpTargetConfig'
    SmtpTargetConfig:
      type: object
      title: "Notification config for SMTP target"
      properties:
        subject:
          type: string
          title: "Subject"
          description: "Email subject"
          example: "System Alert - High CPU Usage"
        body:
          type: string
          title: "Message"
          description: "Email body"
          example: "The CPU usage has exceeded the threshold."
        emailRecipient:
          $ref: '#/components/schemas/EmailRecipient'
    EmailRecipient:
      type: object
      required:
        - to
      properties:
        to:
          type: string
          title: "To"
          description: "Recipients' email addresses"
          format: email
          example: "alerts@example.com"
        cc:
          type: string
          title: "Cc"
          description: "Cc: Recipients' email addresses"
          format: email
          example: "team@example.com"
        bcc:
          type: string
          title: "Bcc"
          description: "Bcc: Recipients' email addresses"
          format: email
          example: "audit@example.com"
    MetadataItem:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          title: "Name"
          description: "Metadata field name"
          example: "env"
        value:
          type: string
          title: "Value"
          description: "Metadata field value"
          example: "production"
    PolicyRule:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
            example: "arg1"
          example: ["arg1", "arg2"]
        description:
          type: string
          example: "My policy rule description"
        id:
          type: string
          example: "myPolicyRuleId"
        template:
          type: array
          items:
            type: string
            example: "templateValue"
          example: ["my", "template"]
        title:
          type: string
          example: "My Policy Rule Title"
      required:
        - id
        - template
    Role:
      type: object
      properties:
        description:
          type: string
          example: "My role description"
        id:
          type: string
          example: "myRoleId"
        policy:
          type: array
          items:
            type: string
            example: "policyId"
          example: ["policies", "attached", "to", "role"]
        tags:
          type: array
          items:
            type: string
            example: "tag1"
          example: ["list", "of", "tags"]
        title:
          type: string
          example: "My Role Title"
      required:
        - id
        - policy
    ScriptLibEntry:
      type: object
      additionalProperties: true
      required:
        - id
        - command
      properties:
        id:
          type: string
          title: ID
          example: "myScriptLibEntryId"
        command:
          type: string
          title: Command
          description: Command to execute for this script
          example: "echo hello"
        description:
          type: string
          title: Description
          example: "My script lib entry description"
        args:
          type: array
          items:
            type: string
            example: "arg1"
          title: Arguments
          description: Arguments to pass when executing this script
          example: ["my", "list", "of", "args"]
        env:
          type: object
          title: Env variables
          properties: {}
          additionalProperties:
            type: string
            example: "value"
          description: Extra environment variables to set when executing script
          example: {"ENV_VAR": "value"}
    Team:
      type: object
      properties:
        description:
          type: string
          example: "My team description"
        id:
          type: string
          example: "myUniqueTeamId"
        name:
          type: string
          example: "MyTeamName"
        roles:
          type: array
          items:
            type: string
            example: "roleId"
          example: ["roles", "attached", "to", "team"]
        ssoGroupIds:
          type: array
          items:
            type: string
            example: "ssoGroupId"
          example: ["SSO", "Group", "Ids"]
      required:
        - description
        - id
        - name
        - roles
    RbacResource:
      type: string
      enum:
        - groups
        - datasets
        - dataset-providers
        - projects
        - dashboards
        - macros
      example: "groups"
    ResourcePolicy:
      type: object
      properties:
        gid:
          type: string
          example: "group-id-123"
        id:
          type: string
          example: "resource-id-abc"
        policy:
          type: string
        type:
          $ref: "#/components/schemas/RbacResource"
      required:
        - gid
        - policy
        - type
    MembershipSchema:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
          example: ["array", "of", "added", "properties"]
        rm:
          type: array
          items:
            type: string
          example: ["array", "of", "removed", "properties"]
    User:
      type: object
      properties:
        currentPassword:
          type: string
          example: "currentHashedPassword"
        disabled:
          type: boolean
          example: false
        email:
          type: string
          example: "foo.bar@cribl.com"
        first:
          type: string
          example: "foo"
        id:
          type: string
          example: "myUserId"
        last:
          type: string
          example: "bar"
        password:
          type: string
          example: "hashedPassword"
        roles:
          type: array
          items:
            type: string
          example: ["roles", "attached"]
        teams:
          type: array
          items:
            type: string
          example: ["teams", "attached"]
        username:
          type: string
          example: "username"
      required:
        - disabled
        - email
        - first
        - id
        - last
        - username
    UserProfile:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        email:
          type: string
          example: "foo.bar@cribl.com"
        first:
          type: string
          example: "foo"
        id:
          type: string
          example: "myUserId"
        last:
          type: string
          example: "bar"
        password:
          type: string
          example: "myStrongPassword"
        roles:
          type: array
          items:
            type: string
          example: ["my", "attached", "roles"]
        username:
          type: string
          example: "myUsername"
      required:
        - disabled
        - email
        - first
        - id
        - last
        - username
    UserInfo:
      type: object
      properties:
        currentPassword:
          type: string
          example: "myCurrentPassword"
        disabled:
          type: boolean
          example: false
        email:
          type: string
          example: "foo.bar@cribl.com"
        first:
          type: string
          example: "foo"
        id:
          type: string
          example: "myUserInfoId"
        last:
          type: string
          example: "bar"
        password:
          type: string
          example: "myPassword"
        roles:
          type: array
          items:
            type: string
          example: ["my", "attached", "roles"]
        username:
          type: string
          example: "myUsername"
      required:
        - disabled
        - email
        - first
        - id
        - last
        - username
    CacheConnection:
      type: object
      properties:
        acceleratedFields:
          type: array
          items:
            type: string
            example: "fieldName"
          example: ["field1", "field2"]
        cacheRef:
          type: string
          example: "myCacheReference"
        createdAt:
          type: number
          example: 1759324416
        migrationQueryId:
          type: string
          example: "myMigrationQueryId"
        retentionInDays:
          type: number
          example: 30
      required:
        - cacheRef
        - createdAt
        - retentionInDays
    DatasetMetadataRunInfo:
      type: object
      properties:
        earliestScannedTime:
          type: number
          example: 1759324416
        finishedAt:
          type: number
          example: 1759325416
        latestScannedTime:
          type: number
          example: 1759326416
        objectCount:
          type: number
          example: 5000
    DatasetMetadata:
      type: object
      properties:
        earliest:
          type: string
          example: "2025-09-30T13:41:44Z"
        enableAcceleration:
          type: boolean
          example: true
        fieldList:
          type: array
          items:
            type: string
            example: "fieldName"
          example: ["field1", "field2"]
        latestRunInfo:
          $ref: "#/components/schemas/DatasetMetadataRunInfo"
        scanMode:
          type: string
          enum:
            - detailed
            - quick
          example: "detailed"
      required:
        - earliest
        - enableAcceleration
        - fieldList
        - scanMode
    LakeDatasetSearchConfig:
      type: object
      properties:
        datatypes:
          type: array
          items:
            type: string
            example: "json"
          example: ["json", "parquet"]
        metadata:
          $ref: "#/components/schemas/DatasetMetadata"
          example:
            earliest: "2025-09-30T13:41:44Z"
            enableAcceleration: true
            fieldList: ["field1","field2"]
            scanMode: "detailed"
    CriblLakeDataset:
      type: object
      properties:
        acceleratedFields:
          type: array
          items:
            type: string
          example: ["fields", "to", "accelerate"]
        bucketName:
          type: string
          default: "lake-${workspaceName}-${organizationId}"
          example: "my-Lake-bucket-name"
        description:
          type: string
          example: "My description for this beautiful lake dataset"
        format:
          type: string
          enum:
            - json
            - ddss
            - parquet
          example: "json"
        id:
          type: string
          example: "myLakeDatasetId"
        retentionPeriodInDays:
          type: number
          example: 30
        searchConfig:
          $ref: "#/components/schemas/LakeDatasetSearchConfig"
      required:
        - bucketName
        - id
    DashboardCategory:
      type: object
      properties:
        description:
          type: string
          example: "My dashboard category description"
        id:
          type: string
          example: "myDashboardCategoryId"
        isPack:
          type: boolean
          example: false
        name:
          type: string
          example: "MyDashboardCategoryName"
      required:
        - id
        - name
    LimitRuleDefinitions: {}
    UsageGroup:
      type: object
      properties:
        coordinatorHeapMemoryLimit:
          type: number
          example: 2048
        description:
          type: string
          example: "My Usage Group Description"
        enabled:
          type: boolean
          example: false
        id:
          type: string
          example: "myUsageGroupId"
        rules:
          $ref: "#/components/schemas/LimitRuleDefinitions"
        usersCount:
          type: number
          example: 1
      required:
        - id
        - rules
    DatasetOrigin:
      type: string
      enum:
        - leader_local
        - remote
        - worker_local
      example: "remote"
    OriginConfig:
      type: object
      properties:
        filterExpression:
          type: string
          example: "status==200"
        origin:
          $ref: "#/components/schemas/DatasetOrigin"
          example: "leader_local"
      required:
        - origin
    DatasetProviderType:
      type: object
      properties:
        description:
          type: string
          example: "My dataset provider type description"
        id:
          type: string
          enum:
            - prometheus
            - cribl_lake
            - s3
            - gcs
            - azure_blob
            - cribl_leader
            - cribl_edge
            - amazon_security_lake
            - api_http
            - api_aws
            - api_azure
            - api_gcp
            - api_google_workspace
            - api_msgraph
            - api_okta
            - api_tailscale
            - api_zoom
            - api_opensearch
            - api_elasticsearch
            - api_azure_data_explorer
            - snowflake
            - clickhouse
            - cribl_meta
          example: "cribl_meta"
        locality:
          $ref: "#/components/schemas/OriginConfig"
      required:
        - id
    GenericDataset:
      type: object
      required:
        - id
        - provider
        - type
      properties:
        id:
          type: string
          description: Unique identifier for the dataset
          pattern: '^[a-zA-Z0-9_-]+$'
          maxLength: 512
          example: "myGenericDatasetId"
        description:
          type: string
          description: Description of the dataset
          example: "This is a generic dataset"
        provider:
          type: string
          description: Dataset provider ID
          x-speakeasy-name-override: provider_id
          example: "myProviderId"
        type:
          type: string
          description: Dataset provider type, set automatically from the dataset provider
          example: "cribl_lake"
        metadata:
          $ref: '#/components/schemas/DatasetMetadata'
          example:
            earliest: "2025-09-30T13:41:44Z"
            enableAcceleration: true
            fieldList: ["field1", "field2"]
            scanMode: "detailed"
      oneOf:
        - $ref: '#/components/schemas/ApiHttpDataset'
        - $ref: '#/components/schemas/ApiAwsDataset'
        - $ref: '#/components/schemas/ApiAzureDataset'
        - $ref: '#/components/schemas/ApiGcpDataset'
        - $ref: '#/components/schemas/ApiGoogleWorkspaceDataset'
        - $ref: '#/components/schemas/ApiMsGraphDataset'
        - $ref: '#/components/schemas/ApiOktaDataset'
        - $ref: '#/components/schemas/ApiTailscaleDataset'
        - $ref: '#/components/schemas/ApiZoomDataset'
        - $ref: '#/components/schemas/ApiAzureDataExplorerDataset'
        - $ref: '#/components/schemas/SnowflakeDataset'
        - $ref: '#/components/schemas/ClickHouseDataset'
        - $ref: '#/components/schemas/PrometheusDataset'
        - $ref: '#/components/schemas/ApiOpenSearchDataset'
        - $ref: '#/components/schemas/ApiElasticSearchDataset'
        - $ref: '#/components/schemas/S3Dataset'
        - $ref: '#/components/schemas/CriblLeaderDataset'
        - $ref: '#/components/schemas/MetaDataset'
        - $ref: '#/components/schemas/EdgeDataset'
        - $ref: '#/components/schemas/AzureBlobDataset'
        - $ref: '#/components/schemas/GcsDataset'
        - $ref: '#/components/schemas/AwsSecurityLakeDataset'
    GenericProvider:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: Unique identifier for the provider
          example: "myUniqueGenericProviderId"
        type:
          type: string
          description: Type of the provider
          example: "generic"
        description:
          type: string
          description: Description of the provider
          example: "my generic provider description"
      oneOf:
        - $ref: '#/components/schemas/ApiHttpProvider'
        - $ref: '#/components/schemas/ApiAwsProvider'
        - $ref: '#/components/schemas/ApiAzureProvider'
        - $ref: '#/components/schemas/ApiGcpProvider'
        - $ref: '#/components/schemas/ApiGoogleWorkspaceProvider'
        - $ref: '#/components/schemas/ApiMsGraphProvider'
        - $ref: '#/components/schemas/ApiOktaProvider'
        - $ref: '#/components/schemas/ApiTailscaleProvider'
        - $ref: '#/components/schemas/ApiZoomProvider'
        - $ref: '#/components/schemas/ApiAzureDataExplorerProvider'
        - $ref: '#/components/schemas/SnowflakeProvider'
        - $ref: '#/components/schemas/ClickHouseProvider'
        - $ref: '#/components/schemas/PrometheusProvider'
        - $ref: '#/components/schemas/ApiOpenSearchProvider'
        - $ref: '#/components/schemas/ApiElasticSearchProvider'
        - $ref: '#/components/schemas/AwsSecurityLakeProvider'
        - $ref: '#/components/schemas/S3Provider'
        - $ref: '#/components/schemas/CriblLeaderProvider'
        - $ref: '#/components/schemas/MetaProvider'
        - $ref: '#/components/schemas/EdgeProvider'
        - $ref: '#/components/schemas/AzureBlobProvider'
        - $ref: '#/components/schemas/GcsProvider'
    # Base schemas
    Dataset:
      type: object
      required:
        - id
        - provider
        - type
      properties:
        id:
          type: string
          description: Unique identifier for the dataset
          pattern: '^[a-zA-Z0-9_-]+$'
          maxLength: 512
          example: "myDatasetId"
        description:
          type: string
          description: Description of the dataset
          example: "This is a dataset description"
        provider:
          type: string
          description: Dataset provider ID
          x-speakeasy-name-override: provider_id
          example: "myProviderId"
        type:
          type: string
          description: Dataset provider type, set automatically from the dataset provider
          example: "cribl_lake"
        metadata:
          $ref: '#/components/schemas/DatasetMetadata'
          example:
            earliest: "2025-09-30T13:41:44Z"
            enableAcceleration: true
            fieldList: ["field1", "field2"]
            scanMode: "detailed"
    Provider:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: Unique identifier for the provider
          pattern: '^[a-zA-Z0-9_-]+$'
          maxLength: 512
          example: "myProviderId"
        type:
          type: string
          description: The type of provider
          example: "s3"
        description:
          type: string
          description: Human-readable description of the provider
          example: "Provider for ingesting data from S3"
    DatasetMetadata:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-10-06T12:00:00Z"
        modified:
          type: string
          format: date-time
          description: Last modification timestamp
          example: "2025-10-06T12:34:56Z"
        tags:
          type: array
          items:
            type: string
          description: Tags associated with the dataset
          example:
            - "prod"
            - "pii"
        enableAcceleration:
          type: boolean
          description: "Whether acceleration is enabled for this dataset"
          default: false
          example: true
    # HTTP API Dataset Schemas
    ApiHttpDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - enabledEndpoints
          properties:
            type:
              type: string
              enum: [api_http]
              example: "api_http"
            enabledEndpoints:
              type: array
              title: Enabled endpoints
              description: A list of the endpoints that are enabled in this dataset
              items:
                type: string
                title: Endpoint
                example: "getUsers"
              example: ["getUsers", "getEvents"]
    ApiHttpProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - availableEndpoints
          properties:
            type:
              type: string
              enum: [api_http]
              example: "api_http"
            availableEndpoints:
              type: array
              title: Available endpoints
              description: A list of the available endpoints for this provider
              items:
                $ref: '#/components/schemas/HttpEndpoint'
              example:
                - name: "getUsers"
                  method: "GET"
                  url: "https://api.example.com/users"
            authenticationMethod:
              type: string
              title: Authentication method
              description: The authentication method for API calls
              default: none
              enum: [none, basic, login, oauth]
              enumNames: [None, Basic, Login, OAuth]
              example: "basic"
    HttpEndpoint:
      type: object
      required:
        - name
        - url
        - method
      properties:
        name:
          type: string
          title: Name
          example: "getUsers"
        dataField:
          type: string
          title: Data field
          description: Within the response JSON, name of the field or array element to pull results from
          example: "users"
        method:
          type: string
          title: Method
          description: Method for the endpoint
          enum: [GET, POST]
          default: GET
          example: "GET"
        url:
          type: string
          title: URL
          description: The URL for this endpoint
          example: "https://api.example.com/users"
        headers:
          type: array
          title: Headers
          description: Optional headers for the endpoint
          items:
            $ref: '#/components/schemas/HttpHeader'
          example:
            - name: "Authorization"
              value: "Bearer token123"
    HttpHeader:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          title: Name
          description: Header name
          example: "Authorization"
        value:
          type: string
          title: Value
          description: Header value
          example: "Bearer token123"
    # AWS API Dataset Schemas
    ApiAwsDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - enabledEndpoints
            - regions
          properties:
            type:
              type: string
              enum: [api_aws]
              example: "api_aws"
            enabledEndpoints:
              type: array
              minLength: 1
              title: Enabled endpoints
              description: A list of the endpoints that are enabled in this dataset
              uniqueItems: true
              items:
                type: string
                title: Endpoint
                description: AWS endpoint
                example: "CloudTrail"
              example: ["CloudTrail", "CloudWatch"]
            regions:
              type: array
              minLength: 1
              title: AWS regions
              description: A list of the AWS regions to query for this endpoint
              items:
                type: string
                title: AWS region
                example: "us-east-1"
              example: ["us-east-1", "us-west-2"]
    ApiAwsProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountConfigs
          properties:
            type:
              type: string
              enum: [api_aws]
              example: "api_aws"
            accountConfigs:
              type: array
              minLength: 1
              title: Account configurations
              description: A list of account configurations
              items:
                $ref: '#/components/schemas/AwsAccountConfig'
              example:
                - name: "aws-account-1"
                  assumeRoleArn: "arn:aws:iam::123456789012:role/MyRole"
                  awsApiKey: "AKIAIOSFODNN7EXAMPLE"
                  awsSecretKey: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    AwsAccountConfig:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          title: Name
          description: Account name
          example: "aws-account-1"
        assumeRoleArn:
          type: string
          title: Assume Role ARN
          description: ARN of the role to assume
          example: "arn:aws:iam::123456789012:role/MyRole"
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID for role assumption
          example: "external-id-123"
        awsApiKey:
          type: string
          title: Access Key
          description: AWS access key
          example: "AKIAIOSFODNN7EXAMPLE"
        awsSecretKey:
          type: string
          title: Secret Key
          description: AWS secret key
          example: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    ApiAzureDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - enabledEndpoints
            - subscriptionIds
          properties:
            type:
              type: string
              enum: [api_azure]
              example: "api_azure"
            enabledEndpoints:
              type: array
              minLength: 1
              title: Enabled endpoints
              description: A list of the endpoints that are enabled in this dataset
              uniqueItems: true
              items:
                type: string
                title: Endpoint
                description: Azure endpoint
                example: "ActivityLogs"
              example: ["ActivityLogs","SignInLogs"]
            subscriptionIds:
              type: array
              minLength: 1
              title: Subscription IDs
              description: A list of the subscription ids within the tenant to query with this dataset
              uniqueItems: true
              items:
                type: string
                title: Subscription ID
                description: Subscription Id within the tenant
                example: "sub-12345"
              example: ["sub-12345","sub-67890"]
    ApiAzureProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountConfigs
          properties:
            type:
              type: string
              enum: [api_azure]
              example: "api_azure"
            accountConfigs:
              type: array
              minLength: 1
              title: Account configurations
              description: A list of account configurations
              items:
                $ref: '#/components/schemas/AzureAccountConfig'
              example:
                - name: "azure-account-1"
                  clientId: "12345678-aaaa-bbbb-cccc-123456789abc"
                  clientSecret: "superSecret"
                  tenantId: "tenant-12345"
    AzureAccountConfig:
      type: object
      required:
        - name
        - clientId
        - clientSecret
        - tenantId
      properties:
        name:
          type: string
          title: Name
          description: Account name
          example: "azure-account-1"
        clientId:
          type: string
          title: Client ID
          description: The clientId of the service principal
          minLength: 1
          example: "12345678-aaaa-bbbb-cccc-123456789abc"
        clientSecret:
          type: string
          title: Client Secret
          description: The client secret of the service principal
          minLength: 1
          example: "superSecret"
        tenantId:
          type: string
          title: Tenant ID
          description: The ID of your Azure tenant
          minLength: 1
          example: "tenant-12345"
    ApiGcpDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - endpointConfigs
          properties:
            type:
              type: string
              enum: [api_gcp]
              example: "api_gcp"
            endpointConfigs:
              type: array
              minLength: 1
              title: Enabled endpoints
              description: A list of the endpoint configurations that are enabled in this dataset
              uniqueItems: true
              items:
                $ref: '#/components/schemas/GcpEndpointConfig'
              example:
                - endpointName: "pubsub"
                  region: "us-central1"
    GcpEndpointConfig:
      type: object
      required:
        - endpointName
      properties:
        endpointName:
          type: string
          title: Endpoint
          description: GCP endpoint
          example: "pubsub"
        region:
          type: string
          title: Region
          description: GCP region (required for some endpoints)
          example: "us-central1"
    ApiGcpProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountConfigs
          properties:
            type:
              type: string
              enum: [api_gcp]
              example: "api_gcp"
            accountConfigs:
              type: array
              minLength: 1
              title: Account configurations
              description: A list of account configurations
              items:
                $ref: '#/components/schemas/GcpAccountConfig'
              example:
                - name: "gcp-account-1"
                  serviceAccountCredentials: "{...}"
    GcpAccountConfig:
      type: object
      required:
        - name
        - serviceAccountCredentials
      properties:
        name:
          type: string
          title: Name
          description: Account name
          example: "gcp-account-1"
        serviceAccountCredentials:
          type: string
          title: Service Account Credentials
          description: JSON blob downloaded from the Google Cloud Console, containing creds for a service account
          example: "{...}"
    ApiGoogleWorkspaceDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - enabledEndpoints
          properties:
            type:
              type: string
              enum: [api_google_workspace]
              example: "api_google_workspace"
            enabledEndpoints:
              type: array
              minLength: 1
              title: Enabled endpoints
              description: A list of the endpoints that are enabled in this dataset
              uniqueItems: true
              items:
                type: string
                title: Endpoint
                description: Reports API endpoint
                example: "login"
              example: ["login","admin"]
    ApiGoogleWorkspaceProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountConfigs
          properties:
            type:
              type: string
              enum: [api_google_workspace]
              example: "api_google_workspace"
            accountConfigs:
              type: array
              minLength: 1
              title: Account configurations
              description: A list of account configurations
              items:
                $ref: '#/components/schemas/GoogleWorkspaceAccountConfig'
              example:
                - name: "workspace-account-1"
                  subject: "admin@example.com"
                  serviceAccountCredentials: "{...}"
    GoogleWorkspaceAccountConfig:
      type: object
      required:
        - name
        - subject
        - serviceAccountCredentials
      properties:
        name:
          type: string
          title: Account name
          example: "workspace-account-1"
        subject:
          type: string
          title: Impersonated account's email address
          description: Email matching Google service account of the authorized principal whose role this integration is assuming
          example: "admin@example.com"
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of Google Cloud service account credentials (JSON keys) file
          minLength: 1
          example: "{...}"
    ApiMsGraphDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - enabledEndpoints
          properties:
            type:
              type: string
              enum: [api_msgraph]
              example: "api_msgraph"
            enabledEndpoints:
              type: array
              minLength: 1
              title: Enabled endpoints
              description: A list of the endpoints that are enabled in this dataset
              uniqueItems: true
              items:
                type: string
                title: Endpoint
                description: Microsoft Graph endpoint
                example: "auditLogs"
              example: ["auditLogs","signIns"]
    ApiMsGraphProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountConfigs
          properties:
            type:
              type: string
              enum: [api_msgraph]
              example: "api_msgraph"
            accountConfigs:
              type: array
              minLength: 1
              title: Account configurations
              description: A list of account configurations
              items:
                $ref: '#/components/schemas/MsGraphAccountConfig'
              example:
                - name: "msgraph-account-1"
                  tenantId: "tenant-123"
                  clientId: "client-456"
                  clientSecret: "secret-789"
    MsGraphAccountConfig:
      type: object
      required:
        - name
        - tenantId
        - clientId
        - clientSecret
      properties:
        name:
          type: string
          title: Account Name
          description: Azure account name
          example: "msgraph-account-1"
        tenantId:
          type: string
          title: Tenant ID
          example: "tenant-123"
        clientId:
          type: string
          title: Client ID
          example: "client-456"
        clientSecret:
          type: string
          title: Client Secret
          example: "secret-789"
    ApiOktaDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - enabledEndpoints
          properties:
            type:
              type: string
              enum: [api_okta]
              example: "api_okta"
            enabledEndpoints:
              type: array
              minLength: 1
              title: Enabled endpoints
              description: A list of the endpoints that are enabled in this dataset
              uniqueItems: true
              items:
                type: string
                title: Endpoint
                description: Okta endpoint
                example: "users"
              example: ["users", "events"]
    ApiOktaProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountConfigs
          properties:
            type:
              type: string
              enum: [api_okta]
              example: "api_okta"
            accountConfigs:
              type: array
              minLength: 1
              title: Account configurations
              description: A list of account configurations
              items:
                $ref: '#/components/schemas/OktaAccountConfig'
              example:
                - name: "okta-account-1"
                  domainEndpoint: "https://dev-123456.okta.com"
                  apiToken: "00aBcDefGhIjKlMnOpQrStUvWxYz123456"
    OktaAccountConfig:
      type: object
      required:
        - apiToken
        - name
        - domainEndpoint
      properties:
        name:
          type: string
          title: Account Name
          description: Okta account name
          example: "okta-account-1"
        domainEndpoint:
          type: string
          title: Domain Endpoint
          description: "URL for the subdomain of your organization. Example: subdomain.okta.com"
          example: "https://dev-123456.okta.com"
        apiToken:
          type: string
          title: API Token
          description: "API token for authorizing requests"
          example: "00aBcDefGhIjKlMnOpQrStUvWxYz123456"
    # Tailscale API Dataset Schemas
    ApiTailscaleDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - enabledEndpoints
          properties:
            type:
              type: string
              enum: [api_tailscale]
              example: "api_tailscale"
            enabledEndpoints:
              type: array
              minLength: 1
              title: Enabled endpoints
              description: A list of the endpoints that are enabled in this dataset
              uniqueItems: true
              items:
                type: string
                title: Endpoint
                description: Tailscale endpoint
                example: "devices"
              example: ["devices", "connections"]
    ApiTailscaleProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountConfigs
          properties:
            type:
              type: string
              enum: [api_tailscale]
              example: "api_tailscale"
            accountConfigs:
              type: array
              minLength: 1
              title: Account configurations
              description: A list of account configuration
              items:
                $ref: '#/components/schemas/TailscaleAccountConfig'
              example:
                - name: "tailscale-account-1"
                  apiKey: "tskey-1234567890abcdef"
    # S3 Dataset Schemas
    S3Dataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - bucket
          properties:
            type:
              type: string
              enum: [s3]
            bucket:
              type: string
              title: "Bucket"
              description: "S3 bucket name"
              minLength: 1
            path:
              type: string
              title: "Path"
              description: "The templated path under which to look for data"
              minLength: 1
              templated: true
            filter:
              type: string
              title: "Path Filter"
              description: "A JavaScript filter expression to be evaluated against the provided path"
              minLength: 1
              templated: true
              jsExpression: true
              default: "true"
            region:
              type: string
              title: "Region"
              description: "AWS region where the bucket is located"
            autoDetectRegion:
              type: boolean
              title: "Auto Detect Region"
              description: "Whether to automatically detect the region"
            extraPaths:
              type: array
              title: "Extra paths"
              description: "Additional bucket paths that are included in this dataset"
              items:
                type: object
                required:
                  - bucket
                properties:
                  bucket:
                    type: string
                    title: "Bucket"
                    description: "S3 bucket name"
                    minLength: 1
                  path:
                    type: string
                    title: "Path"
                    description: "The templated path under which to look for data"
                    minLength: 1
                    templated: true
                  filter:
                    type: string
                    title: "Path Filter"
                    description: "A JavaScript filter expression to be evaluated against the provided path"
                    minLength: 1
                    templated: true
                    jsExpression: true
                    default: "true"
                  region:
                    type: string
                    title: "Region"
                    description: "AWS region where the bucket is located"
                  autoDetectRegion:
                    type: boolean
                    title: "Auto Detect Region"
                    description: "Whether to automatically detect the region"
            storageClasses:
              type: array
              title: "Storage classes"
              description: "Storage classes to include in the search"
              items:
                type: string
              minItems: 1
              uniqueItems: true
            skipEventTimeFilter:
              type: boolean
              title: "Skip Event Time Filter"
              description: "Whether to skip event time filtering"
    S3Provider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - signatureVersion
          properties:
            type:
              type: string
              enum: [s3]
              example: "s3"
            awsAuthenticationMethod:
              type: string
              title: "Authentication method"
              description: "AWS authentication method"
              enum: [auto, manual]
              enumNames: ["AssumeRole", "AWS keys"]
              example: "auto"
            assumeRoleArn:
              type: string
              title: "Assume Role ARN"
              description: "ARN of the role to assume"
              example: "arn:aws:iam::123456789012:role/my-s3-role"
            assumeRoleExternalId:
              type: string
              title: "External ID"
              description: "External ID for role assumption"
              example: "external-id-123"
            awsApiKey:
              type: string
              title: "Access Key"
              description: "AWS access key"
              example: "AKIAEXAMPLE"
            awsSecretKey:
              type: string
              title: "Secret Key"
              description: "AWS secret key"
              example: "mySecretKey123"
            bucket:
              type: string
              title: "Bucket"
              description: "S3 bucket name"
              example: "my-s3-bucket"
            region:
              type: string
              title: "Region"
              description: "AWS region"
              example: "us-east-1"
            endpoint:
              type: string
              title: "Endpoint"
              description: "S3 endpoint URL"
              example: "https://s3.us-east-1.amazonaws.com"
            signatureVersion:
              type: string
              title: "Signature Version"
              description: "AWS signature version"
              enum: [v2, v4]
              example: "v4"
            rejectUnauthorized:
              type: boolean
              title: "Reject Unauthorized"
              description: "Whether to reject unauthorized requests"
              example: true
            reuseConnections:
              type: boolean
              title: "Reuse Connections"
              description: "Reuse existing S3 connections"
              example: true
            enableAssumeRole:
              type: boolean
              title: "Enable Assume Role"
              description: "Whether to enable role assumption"
              example: true
            bucketPathSuggestion:
              type: string
              title: "Bucket Path Suggestion"
              description: "Suggested bucket path"
              example: "https://s3.us-east-1.amazonaws.com/mybucket"
            sessionToken:
              type: string
              title: "Session Token"
              description: "AWS session token"
              example: "MyAWSSessionToken"
            enableAbacTagging:
              type: boolean
              title: "Enable ABAC Tagging"
              description: "Whether to enable ABAC source-ip tagging"
              example: true
    # Cribl Leader Dataset Schemas
    CriblLeaderDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - path
          properties:
            type:
              type: string
              enum: [cribl_leader]
              example: "cribl_leader"
            path:
              type: string
              title: "Path"
              description: "The directory from which to collect data"
              minLength: 1
              templated: true
              example: "/var/log/cribl"
            filter:
              type: string
              title: "Path filter"
              description: "A JavaScript filter expression to be evaluated against the provided path"
              minLength: 1
              templated: true
              jsExpression: true
              default: "true"
              example: "filename.endsWith('.log')"
            extraPaths:
              type: array
              title: "Extra paths"
              description: "Additional paths that are included in this dataset"
              items:
                type: object
                required:
                  - path
                properties:
                  path:
                    type: string
                    title: "Path"
                    description: "The directory from which to collect data"
                    minLength: 1
                    templated: true
                    example: "path/to/dir"
                  filter:
                    type: string
                    title: "Path filter"
                    description: "A JavaScript filter expression to be evaluated against the provided path"
                    minLength: 1
                    templated: true
                    jsExpression: true
                    default: "true"
                    example: "truthy"
    CriblLeaderProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          properties:
            type:
              type: string
              enum: [cribl_leader]
              example: "cribl_leader"
    MetaDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - datasets
          properties:
            type:
              type: string
              enum: [cribl_meta]
              example: "cribl_meta"
            datasets:
              type: array
              title: "Dataset list"
              description: "IDs of the datasets that are searched by default"
              items:
                type: string
              minLength: 1
              example: ["dataset1", "dataset2"]
    MetaProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          properties:
            type:
              type: string
              enum: [cribl_meta]
              example: "cribl_meta"
    EdgeDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - fleets
            - path
          properties:
            type:
              type: string
              enum: [cribl_edge]
              example: "cribl_edge"
            fleets:
              type: array
              title: "Fleets to query"
              description: "Fleets to query. '*' for all"
              items:
                type: string
              minItems: 1
              default: []
              example: ["fleetA", "fleetB"]
            path:
              type: string
              title: "Path"
              description: "The directory where data will be collected. Environment variables and templating are supported."
              minLength: 1
              templated: true
              example: "/data/edge"
            filter:
              type: string
              title: "Path Filter"
              description: "A JavaScript filter expression to be evaluated against the provided path"
              minLength: 1
              templated: true
              jsExpression: true
              default: "true"
              example: "size > 0"
    EdgeProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          properties:
            type:
              type: string
              enum: [cribl_edge]
              example: "cribl_edge"
    # Azure Blob Dataset Schemas
    AzureBlobDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - containerName
          properties:
            type:
              type: string
              enum: [azure_blob]
              example: "azure_blob"
            containerName:
              type: string
              title: "Container name"
              description: "Azure Blob Storage container name"
              minLength: 1
              example: "my-container"
            path:
              type: string
              title: "Path"
              description: "The templated path under which to look for data"
              minLength: 1
              templated: true
              example: "logs/2025/10/01/"
            filter:
              type: string
              title: "Path Filter"
              description: "A JavaScript filter expression to be evaluated against the provided path"
              minLength: 1
              templated: true
              jsExpression: true
              default: "true"
              example: "path.endsWith('.json')"
            extraPaths:
              type: array
              title: "Extra paths"
              description: "Additional container paths that are included in this dataset"
              items:
                type: object
                required:
                  - containerName
                properties:
                  containerName:
                    type: string
                    title: "Container name"
                    description: "Name of the additional container"
                    example: "my-other-container"
                    minLength: 1
                  path:
                    title: "Path"
                    type: string
                    description: "Path inside the additional container"
                    example: "archive/2025/"
                    minLength: 1
                    templated: true
                  filter:
                    type: string
                    title: "Path Filter"
                    description: "A JavaScript filter expression to be evaluated against the provided path"
                    minLength: 1
                    templated: true
                    jsExpression: true
                    default: "true"
                    example: "truthy"
            storageClasses:
              type: array
              title: "Storage classes"
              description: "Storage classes to include in the search"
              items:
                type: string
              minItems: 1
              uniqueItems: true
              example: [ "glacier", "standard"]
            skipEventTimeFilter:
              type: boolean
              title: "Skip Event Time Filter"
              description: "Whether to skip event time filtering"
              example: true
    AzureBlobProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - location
          properties:
            type:
              type: string
              enum: [azure_blob]
              example: "azure_blob"
            authenticationMethod:
              type: string
              title: "Authentication method"
              description: "Azure Storage authentication method"
              default: "connection_string"
              enum: [connection_string, blob_sas_url, client_secret]
              enumNames: ["Connection String", "Blob SAS URL", "Client Secret"]
              example: "connection_string"
            location:
              type: string
              title: "Location"
              description: "Primary region in which the storage account is located"
              example: "eastus2"
            connectionString:
              type: string
              title: "Connection string"
              description: "Storage account connection string"
              minLength: 1
              example: "DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=myKey;EndpointSuffix=core.windows.net"
            sasConfigs:
              type: array
              title: "SAS configurations"
              description: "A list of container-specific SAS configurations"
              items:
                type: object
                required:
                  - containerName
                  - blobSasUrl
                properties:
                  containerName:
                    type: string
                    title: "Container name"
                    example: "my-container"
                    description: "Name of the Azure Blob Storage container"
                  blobSasUrl:
                    type: string
                    title: "Blob SAS URL"
                    example: "https://myaccount.blob.core.windows.net/my-container?sp=rl&st=2025-09-30T00:00:00Z&se=2025-10-01T00:00:00Z&spr=https&sv=2021-08-06&sr=c&sig=mysignature"
                    description: "Container-specific Blob SAS URL"
            storageAccountName:
              type: string
              title: "Storage account name"
              description: "The name of your Azure storage account" 
              example: "myAccountName"
            tenantId:
              type: string
              title: "Tenant ID"
              description: "Azure AD tenant ID"
              example: "11111111-1111-1111-1111-111111111111"
            clientId:
              type: string
              title: "Client ID"
              description: "Azure AD application client ID"
              example: "00000000-0000-0000-0000-000000000000"
            clientSecret:
              type: string
              title: "Client Secret"
              description: "Azure AD application client secret"
              example: "superSecretClientKey"
              minLength: 1
    GcsDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - bucket
          properties:
            type:
              type: string
              enum: [gcs]
              example: "gcs"
            bucket:
              type: string
              title: "Bucket path"
              description: "Google Cloud Storage bucket path. Templating is supported."
              minLength: 1
              templated: true
              example: "my-gcs-bucket"
            filter:
              type: string
              title: "Path filter"
              description: "A JavaScript filter expression to be evaluated against the provided path"
              minLength: 1
              templated: true
              jsExpression: true
              default: "true"
              example: "path.endsWith('.json')"
            region:
              type: string
              title: "Region"
              description: "Where the bucket is located"
              example: "us-central1"
            extraPaths:
              type: array
              title: "Extra paths"
              description: "Additional bucket paths that are included in this dataset"
              items:
                type: object
                required:
                  - bucket
                properties:
                  bucket:
                    type: string
                    title: "Bucket path"
                    description: "Google Cloud Storage bucket path"
                    minLength: 1
                    templated: true
                    example: "my-extra-bucket"
                  filter:
                    type: string
                    title: "Path filter"
                    description: "A JavaScript filter expression to be evaluated against the provided path"
                    minLength: 1
                    templated: true
                    jsExpression: true
                    default: "true"
                    example: "path.includes('archive')"
                  region:
                    type: string
                    title: "Region"
                    description: "Where the extra bucket is located"
                    example: "europe-west1"
            storageClasses:
              type: array
              title: "Storage classes"
              description: "Storage classes to include in the search"
              items:
                type: string
                example: "STANDARD"
              minItems: 1
              uniqueItems: true
              example: ["STANDARD", "NEARLINE"]
            skipEventTimeFilter:
              type: boolean
              title: "Skip Event Time Filter"
              description: "Whether to skip event time filtering"
              example: false
    GcsProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - serviceAccountCredentials
          properties:
            type:
              type: string
              enum: [gcs]
              example: "gcs"
            serviceAccountCredentials:
              type: string
              title: "Service account credentials"
              description: "Contents of Google Cloud service account credentials (JSON keys) file"
              minLength: 1
              example: |
                { \n
                  "type": "service_account", \n
                  "project_id": "my-gcp-project", \n
                  "private_key_id": "abcd1234efgh5678ijkl90", \n
                  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9...==\n-----END PRIVATE KEY-----\n", \n
                  "client_email": "my-service-account@my-gcp-project.iam.gserviceaccount.com", \n
                  "client_id": "123456789012345678901", \n
                  "auth_uri": "https://accounts.google.com/o/oauth2/auth", \n
                  "token_uri": "https://oauth2.googleapis.com/token", \n
                  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs", \n
                  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/my-service-account%40my-gcp-project.iam.gserviceaccount.com" \n
                } \n
            endpoint:
              type: string
              title: "Endpoint"
              description: "Google Cloud Storage service endpoint"
              example: "https://storage.googleapis.com"
    # AWS Security Lake Dataset Schemas
    AwsSecurityLakeDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - selectedBuckets
          properties:
            type:
              type: string
              enum: [amazon_security_lake]
              example: "amazon_security_lake"
            path:
              type: string
              title: "Path"
              description: "The templated path under which to look for data, in each folder"
              minLength: 1
              templated: true
              default: "${vendor}/${sourceLocation}/${pathVersion}/region=${region}/accountId=${accountId}/eventDay=${_time:%Y%m%d}/"
              example: "AWS/CloudTrail/v1/region=us-east-1/accountId=123456789012/eventDay=20251001/"
            filter:
              type: string
              title: "Path Filter"
              description: "A JavaScript filter expression to be evaluated against the provided path"
              minLength: 1
              templated: true
              jsExpression: true
              default: "true"
              example: "path.includes('CloudTrail')"
            selectedBuckets:
              type: array
              minLength: 1
              title: "Selected buckets"
              description: "A list of the buckets that should be searched by this dataset"
              uniqueItems: true
              items:
                type: object
                title: "S3 bucket"
                description: "S3 bucket configuration"
                minLength: 1
                properties:
                  name:
                    type: string
                    title: "Bucket name"
                    description: "S3 bucket name"
                    templated: true
                    example: "aws-securitylake-us-east-1"
                    minLength: 1
                  region:
                    type: string
                    title: "Region"
                    description: "AWS region where the bucket is located"
                    example: "us-east-1"
    AwsSecurityLakeProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - signatureVersion
          properties:
            type:
              type: string
              enum: [amazon_security_lake]
              example: "amazon_security_lake"
            awsAuthenticationMethod:
              type: string
              title: "Authentication method"
              description: "AWS authentication method"
              enum: [auto, manual]
              enumNames: ["AssumeRole", "AWS keys"]
              example: "auto"
            assumeRoleArn:
              type: string
              title: "Assume Role ARN"
              description: "ARN of the role to assume"
              example: "arn:aws:iam::123456789012:role/SecurityLakeRole"
            assumeRoleExternalId:
              type: string
              title: "External ID"
              description: "External ID for role assumption"
              example: "external-id-123"
            awsApiKey:
              type: string
              title: "Access Key"
              description: "AWS access key"
              example: "AKIAIOSFODNN7EXAMPLE"
            awsSecretKey:
              type: string
              title: "Secret Key"
              description: "AWS secret key"
              example: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
            bucket:
              type: string
              title: "Bucket"
              description: "S3 bucket name"
              example: "aws-securitylake-bucket"
            region:
              type: string
              title: "Region"
              description: "AWS region"
              example: "us-east-1"
            endpoint:
              type: string
              title: "Endpoint"
              description: "S3 endpoint URL"
              example: "https://s3.us-east-1.amazonaws.com"
            signatureVersion:
              type: string
              title: "Signature Version"
              description: "AWS signature version"
              example: "v4"
              enum: [v2, v4]
            rejectUnauthorized:
              type: boolean
              title: "Reject Unauthorized"
              description: "Whether to reject unauthorized requests"
              example: true
            reuseConnections:
              type: boolean
              title: "Reuse Connections"
              description: "Whether to reuse connections"
              example: false
            enableAssumeRole:
              type: boolean
              title: "Enable Assume Role"
              description: "Whether to enable role assumption"
              example: true
            bucketPathSuggestion:
              type: string
              title: "Bucket Path Suggestion"
              description: "Suggested bucket path"
              example: "https://{bucket}.s3.amazonaws.com"
            sessionToken:
              type: string
              title: "Session Token"
              description: "AWS session token"
              example: "Thisismysessiontoken"
            enableAbacTagging:
              type: boolean
              title: "Enable ABAC Tagging"
              description: "Whether to enable ABAC source-ip tagging" 
              example: true
    TailscaleAccountConfig:
      type: object
      required:
        - clientId
        - clientSecret
        - name
      properties:
        name:
          type: string
          title: "Account Name"
          description: "Tailscale account name"
          example: "my-tailscale-account"
        clientId:
          type: string
          title: "Client ID"
          description: "Client ID string"
          example: "tailscale-client-id-123"
        clientSecret:
          type: string
          title: "Client Secret"
          description: "Client secret string"
          example: "tailscale-client-secret-abc"
    # Zoom API Dataset Schemas
    ApiZoomDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - enabledEndpoints
          properties:
            type:
              type: string
              enum: [api_zoom]
              example: "api_zoom"
            enabledEndpoints:
              type: array
              minLength: 1
              title: "Enabled endpoints"
              description: "A list of the endpoints that are enabled in this dataset"
              uniqueItems: true
              items:
                type: string
                title: "Endpoint"
                description: "Zoom endpoint"
                example: "meetings"
              example: ["users", "meetings", "recordings"]
    ApiZoomProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountConfigs
          properties:
            type:
              type: string
              enum: [api_zoom]
              example: "api_zoom"
            accountConfigs:
              type: array
              minLength: 1
              title: "Account configurations"
              description: "A list of account configurations"
              items:
                $ref: '#/components/schemas/ZoomAccountConfig'
              example:
                - name: "Zoom Account 1"
                  accountId: "123456"
                  clientId: "zoom-client-id-abc"
                  clientSecret: "zoom-client-secret-xyz"
                - name: "Zoom Account 2"
                  accountId: "654321"
                  clientId: "zoom-client-id-def"
                  clientSecret: "zoom-client-secret-uvw"
    ZoomAccountConfig:
      type: object
      required:
        - accountId
        - clientId
        - clientSecret
        - name
      properties:
        name:
          type: string
          title: "Account Name"
          description: "Zoom account name"
          example: "my-zoom-account"
        accountId:
          type: string
          title: "Account ID"
          description: "Zoom account ID"
          example: "123456789"
        clientId:
          type: string
          title: "Client ID"
          description: "Client ID string"
          example: "zoom-client-id-abc"
        clientSecret:
          type: string
          title: "Client Secret"
          description: "Client secret string"
          example: "zoom-client-secret-xyz"
    # Azure Data Explorer Dataset Schemas
    ApiAzureDataExplorerDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - cluster
            - location
            - database
            - table
            - timestampFieldContents
          properties:
            type:
              type: string
              enum: [api_azure_data_explorer]
              example: "api_azure_data_explorer"
            cluster:
              type: string
              title: Cluster
              description: Azure Data Explorer cluster name
              minLength: 1
              example: "myadxcluster"
            location:
              type: string
              title: Location
              description: Location (region) of the Azure Data Explorer cluster
              minLength: 1
              example: "eastus2"
            database:
              type: string
              title: Database
              description: Azure Data Explorer database name
              minLength: 1
              example: "logsdb"
            table:
              type: string
              title: Table or Query
              description: "Name of the table to query. May be a simple name (Example: logs) or a Kusto query"
              minLength: 1
              example: "logs"
            timestampField:
              type: string
              title: Timestamp field
              description: Optional name of the field holding the timestamp of the event
              minLength: 1
              example: "event_time"
            timestampFieldContents:
              type: string
              title: Timestamp field contents
              description: Type of the data stored in the timestamp field
              minLength: 1
              default: kusto_datetime
              example: "kusto_datetime"
    ApiAzureDataExplorerProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - tenantId
            - clientId
            - clientSecret
          properties:
            type:
              type: string
              enum: [api_azure_data_explorer]
              example: "api_azure_data_explorer"
            tenantId:
              type: string
              title: Tenant ID
              description: The Tenant ID of the authorized application
              minLength: 1
              example: "00000000-0000-0000-0000-000000000000"
            clientId:
              type: string
              title: Client ID
              description: The Client ID (also known as Secret ID) of the authorized application
              minLength: 1
              example: "11111111-1111-1111-1111-111111111111"
            clientSecret:
              type: string
              title: Client Secret
              description: The Client Secret of the authorized application
              minLength: 1
              example: "superSecretAzureKey"
    # Snowflake Dataset Schemas
    SnowflakeDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - table
          properties:
            type:
              type: string
              enum: [snowflake]
              example: "snowflake"
            warehouse:
              type: string
              title: Warehouse name
              description: If not set, uses DEFAULT_WAREHOUSE
              minLength: 1
              example: "COMPUTE_WH"
            database:
              type: string
              title: Database name
              minLength: 1
              example: "analytics_db"
            schema:
              type: string
              title: Schema name
              description: The schema in the database that contains the table(s) to query
              minLength: 1
              example: "public"
            table:
              type: string
              title: Table name, view, or query
              description: "May be a simple name (Example: logs) or a SQL query (Example: select * from logs)"
              minLength: 1
              example: "logs"
            timestampField:
              type: string
              title: Timestamp field
              description: Optional name of the column holding the timestamp of the event to query
              minLength: 1
              example: "event_time"
            role:
              type: string
              title: Role
              description: Optional Snowflake role to use when executing the statement
              minLength: 1
              example: "SYSADMIN"
    SnowflakeProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - accountIdentifier
            - username
            - privKey
          properties:
            type:
              type: string
              enum: [snowflake]
              example: "snowflake"
            accountIdentifier:
              type: string
              title: Account identifier
              description: The Snowflake account identifier, in the format <orgname>-<account_name>
              minLength: 1
              example: "myorg-myaccount"
            username:
              type: string
              title: Username
              description: The Snowflake user for key pair authentication
              minLength: 1
              example: "snowflake_user"
            privKey:
              type: string
              title: Private Key
              description: The private key string out of the key file, from the pair of keys generated for authentication
              minLength: 1
              example: "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqh...\n-----END PRIVATE KEY-----"
            passphrase:
              type: string
              title: Key Password
              description: The key password for the private key
              example: "myPassphrase"
            maxConcurrency:
              type: integer
              title: Max Concurrency
              description: Total number of concurrent executors for processing Snowflake partitions
              example: 10
            endpoint:
              type: string
              title: Endpoint
              description: Optional endpoint to override default REST API endpoint
              example: "https://myorg-myaccount.snowflakecomputing.com"
    # ClickHouse Dataset Schemas
    ClickHouseDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - table
          properties:
            type:
              type: string
              enum: [clickhouse]
              example: "clickhouse"
            database:
              type: string
              title: Database name
              minLength: 1
              example: "analytics_db"
            table:
              type: string
              title: Table name, view, or query
              description: "May be a simple name (Example: logs) or a SQL query (Example: select * from logs). Results will be limited to 100K for tables without sorting keys and queries."
              minLength: 1
              example: "logs"
            timestampField:
              type: string
              title: Timestamp field
              description: Optional name of the column holding the timestamp of the event to query
              minLength: 1
              example: "event_time"
    ClickHouseProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - username
            - endpoint
          properties:
            type:
              type: string
              enum: [clickhouse]
              example: "clickhouse"
            username:
              type: string
              title: Username
              description: The ClickHouse username for authentication
              minLength: 1
              example: "click_user"
            password:
              type: string
              title: Password
              description: The ClickHouse user password for authentication
              minLength: 1
              example: "click_password"
            endpoint:
              type: string
              title: Endpoint
              description: "URL to ClickHouse server with HTTP interface enabled. Ideally should be HTTPS over port 8443."
              minLength: 1
              example: "https://clickhouse.example.com:8443"
    # Prometheus Dataset Schemas
    PrometheusDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - desiredNumDataPoints
            - stepMode
          properties:
            type:
              type: string
              enum: [prometheus]
              example: "prometheus"
            desiredNumDataPoints:
              type: number
              title: Number of data points
              description: "Number of data points you want in each result set. Defaults to 250. Can be overridden on the query with a 'step' predicate."
              minimum: 1
              maximum: 11000
              default: 250
              example: 500
            stepMode:
              type: string
              title: Step mode
              description: How to calculate the "step," or time range increment per data point, for the Prometheus query request
              default: exact
              enum: [exact, nearest_unit]
              enumNames: [Exact number of data points, Snap to nearest unit]
              example: "nearest_unit"
            metricNamePattern:
              type: string
              title: Metric name pattern
              description: Optional regular expression used to filter metric names. When defined, only metrics whose name matches this pattern will be searched.
              example: "http_requests_total"
    PrometheusProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - endpoint
            - authType
            - maxConcurrency
          properties:
            type:
              type: string
              enum: [prometheus]
              example: "prometheus"
            endpoint:
              type: string
              title: Endpoint
              description: "Prometheus API endpoint URL. Example: https://prometheus.goats.biz"
              pattern: '^https?://.+'
              example: "https://prometheus.example.com"
            authType:
              type: string
              title: Authentication Type
              enum: [none, basic, token]
              default: none
              example: "basic"
            username:
              type: string
              title: Username
              description: Basic auth username
              example: "prom_user"
            password:
              type: string
              title: Password
              description: Basic auth password
              example: "prom_pass"
            token:
              type: string
              title: Bearer Token
              description: Bearer token
              example: "prometheusBearerToken123"
            maxConcurrency:
              type: number
              title: Concurrency limit
              description: Maximum number of concurrent API requests
              default: 3
              example: 10
    # OpenSearch Dataset Schemas
    ApiOpenSearchDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - index
            - timestampField
          properties:
            type:
              type: string
              enum: [api_opensearch]
              example: "api_opensearch"
            index:
              type: string
              title: Index
              description: Name of the OpenSearch index to search
              minLength: 1
              example: "logs-*"
            timestampField:
              type: string
              title: Timestamp field
              description: Name of the field holding the timestamp of the event
              minLength: 1
              default: '@timestamp'
              example: "@timestamp"
    ApiOpenSearchProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - username
            - password
            - endpoint
          properties:
            type:
              type: string
              enum: [api_opensearch]
              example: "api_opensearch"
            username:
              type: string
              title: Username
              description: OpenSearch username for authentication
              minLength: 1
              example: "opensearch_user"
            password:
              type: string
              title: Password
              description: OpenSearch password for authentication
              minLength: 1
              example: "opensearch_pass"
            endpoint:
              type: string
              title: Endpoint
              description: "OpenSearch API endpoint URL. Example: https://opensearch.mycompany.com"
              minLength: 1
              example: "https://opensearch.example.com"
    # ElasticSearch Dataset Schemas
    ApiElasticSearchDataset:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          required:
            - index
            - timestampField
          properties:
            type:
              type: string
              enum: [api_elasticsearch]
              example: "api_elasticsearch"
            index:
              type: string
              title: Index
              description: Name of the Elasticsearch index to search
              minLength: 1
              example: "metrics-*"
            timestampField:
              type: string
              title: Timestamp field
              description: Name of the field holding the timestamp of the event
              minLength: 1
              example: "@timestamp"
    ApiElasticSearchProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - username
            - password
            - endpoint
          properties:
            type:
              type: string
              enum: [api_elasticsearch]
              example: "api_elasticsearch"
            username:
              type: string
              title: Username
              description: Elasticsearch username for authentication
              minLength: 1
              example: "elastic_user"
            password:
              type: string
              title: Password
              description: Elasticsearch password for authentication
              minLength: 1
              example: "elastic_pass"
            endpoint:
              type: string
              title: Endpoint
              description: Elasticsearch API endpoint URL
              minLength: 1
              example: "https://elasticsearch.example.com"
    # Amazon Security Lake Provider Schema
    AwsSecurityLakeProvider:
      allOf:
        - $ref: '#/components/schemas/Provider'
        - type: object
          required:
            - id
            - type
          properties:
            type:
              type: string
              enum: [amazon_security_lake]
              example: "amazon_security_lake"
            description:
              type: string
              description: Description of the Amazon Security Lake provider
              example: "Provider for AWS Security Lake ingestion"
    Lakehouse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the lakehouse
          example: "MyLakehouseId"
        description:
          type: string
          description: Description of the lakehouse
          example: "My Lakehouse description"
        status:
          type: string
          description: Status of the lakehouse
          example: "operational"
        tierSize:
          type: string
          description: Size of the lakehouse tier
          default: "small"
          enum:
            - small
            - medium
            - large
            - xlarge
            - 2xlarge
            - 3xlarge
            - 6xlarge
          example: "small"
      required:
        - id
        - tierSize
    UserAccessControlList:
      type: object
      properties:
        perms:
          type: array
          items:
            $ref: "#/components/schemas/ResourcePolicy"
        user:
          type: string
          example: "myTestUser"
      required:
        - perms
        - user
    AccessControl:
      type: object
    AccessControlSchema:
      type: object
      properties:
        add:
          $ref: "#/components/schemas/AccessControl"
        rm:
          $ref: "#/components/schemas/AccessControl"
    AppscopeTransport:
      type: object
      properties:
        buffer:
          type: string
          enum:
            - line
            - full
          example: "line"
        host:
          type: string
          example: "localhost"
        path:
          type: string
          example: "/var/run/appscope.sock"
        port:
          type: number
          example: 8080
        tls:
          type: object
          properties:
            cacertpath:
              type: string
              example: "/etc/ssl/certs/ca-certificates.crt"
            enable:
              type: boolean
              example: true
            validateserver:
              type: boolean
              example: false
        type:
          type: string
          example: "tcp"
    AppscopeConfig:
      type: object
      properties:
        cribl:
          type: object
          properties:
            authtoken:
              type: string
              example: "myAuthToken123"
            enable:
              type: boolean
              example: true
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            useScopeSourceTransport:
              type: boolean
              example: false
        event:
          type: object
          properties:
            enable:
              type: boolean
              example: true
            format:
              type: object
              properties:
                enhancefs:
                  type: boolean
                  example: false
                maxeventpersec:
                  type: number
                  example: 100
              required:
                - enhancefs
                - maxeventpersec
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            type:
              type: string
              enum:
                - ndjson
              example: "ndjson"
            watch:
              type: array
              items:
                type: object
                properties:
                  allowbinary:
                    type: boolean
                    example: false
                  enabled:
                    type: boolean
                    example: true
                  field:
                    type: string
                    example: "http.method"
                  headers:
                    type: array
                    items:
                      type: string
                      example: "Content-Type"
                  name:
                    type: string
                    example: "RequestEvents"
                  type:
                    type: string
                    example: "match"
                  value:
                    type: string
                    example: "GET"
                required:
                  - type
              example:
                - name: "RequestEvents"
                  type: "match"
                  field: "http.method"
                  value: "GET"
                  enabled: true
                  allowbinary: false
          required:
            - enable
            - format
            - transport
            - type
            - watch
        libscope:
          type: object
          properties:
            commanddir:
              type: string
              example: "/opt/appscope"
            configevent:
              type: boolean
              example: false
            log:
              type: object
              properties:
                level:
                  type: string
                  enum:
                    - error
                    - debug
                    - info
                    - warning
                    - none
                  example: "info"
                transport:
                  $ref: "#/components/schemas/AppscopeTransport"
              example:
                level: "info"
                transport:
                  type: "tcp"
                  host: "127.0.0.1"
                  port: 9090
            summaryperiod:
              type: number
              example: 60
        metric:
          type: object
          properties:
            enable:
              type: boolean
              example: true
            format:
              type: object
              properties:
                statsdmaxlen:
                  type: number
                  example: 512
                statsdprefix:
                  type: string
                  example: "webshop.prod."
                type:
                  type: string
                  example: "statsd"
                verbosity:
                  type: number
                  example: 3
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            watch:
              type: array
              items:
                type: object
              example:
                - type: "process"
                  match: "nginx"
                - type: "file"
                  path: "/var/log/nginx/access.log"
          required:
            - enable
            - format
            - transport
            - watch
          example:
            enable: true
            format:
              statsdmaxlen: 512
              statsdprefix: "webshop.prod."
              type: "statsd"
              verbosity: 3
            transport:
              type: "udp"
              host: "127.0.0.1"
              port: 8125
            watch:
              - type: "process"
                match: "nginx"
              - type: "file"
                path: "/var/log/nginx/access.log"
        payload:
          type: object
          properties:
            dir:
              type: string
              example: "/var/lib/appscope/payloads"
            enable:
              type: boolean
              example: true
          required:
            - dir
            - enable
          example:
            dir: "/var/lib/appscope/payloads"
            enable: true
        protocol:
          type: array
          items:
            type: object
            properties:
              binary:
                type: boolean
                example: false
              detect:
                type: boolean
                example: true
              len:
                type: number
                example: 128
              name:
                type: string
                example: "http"
              payload:
                type: boolean
                example: true
              regex:
                type: string
                example: ".*"
            required:
              - binary
              - detect
              - len
              - name
              - payload
              - regex
        tags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                example: "env"
              value:
                type: string
                example: "prod"
            required:
              - key
              - value
    AppscopeCustom:
      type: object
      properties:
        ancestor:
          type: string
          example: "parentProcess"
        arg:
          type: string
          example: "--debug"
        config:
          $ref: "#/components/schemas/AppscopeConfig"
        env:
          type: string
          example: "production"
        hostname:
          type: string
          example: "host123.example.com"
        procname:
          type: string
          example: "myprocess"
        username:
          type: string
          example: "appuser"
      required:
        - config
    AppscopeConfigWithCustom:
      type: object
      properties:
        cribl:
          type: object
          properties:
            authtoken:
              type: string
              example: "myAuthToken123"
            enable:
              type: boolean
              example: true
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            useScopeSourceTransport:
              type: boolean
              example: false
        custom:
          type: array
          items:
            $ref: "#/components/schemas/AppscopeCustom"
          example:
            - procname: "nginx"
              env: "prod"
              config: {}
        event:
          type: object
          properties:
            enable:
              type: boolean
              example: true
            format:
              type: object
              properties:
                enhancefs:
                  type: boolean
                  example: false
                maxeventpersec:
                  type: number
                  example: 100
              required:
                - enhancefs
                - maxeventpersec
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            type:
              type: string
              enum:
                - ndjson
              example: "ndjson"
            watch:
              type: array
              items:
                type: object
                properties:
                  allowbinary:
                    type: boolean
                    example: false
                  enabled:
                    type: boolean
                    example: true
                  field:
                    type: string
                    example: "http.method"
                  headers:
                    type: array
                    items:
                      type: string
                      example: "Content-Type"
                  name:
                    type: string
                    example: "RequestEvents"
                  type:
                    type: string
                    example: "match"
                  value:
                    type: string
                    example: "GET"
                required:
                  - type
              example:
                - name: "RequestEvents"
                  type: "match"
                  field: "http.method"
                  value: "GET"
                  enabled: true
                  allowbinary: false
          required:
            - enable
            - format
            - transport
            - type
            - watch
        libscope:
          type: object
          properties:
            commanddir:
              type: string
              example: "/var/run/appscope/commands"
            configevent:
              type: boolean
              example: true
            log:
              type: object
              properties:
                level:
                  type: string
                  enum:
                    - error
                    - debug
                    - info
                    - warning
                    - none
                  example: "info"
                transport:
                  $ref: "#/components/schemas/AppscopeTransport"
              example:
                level: "info"
                transport:
                  type: "file"
                  path: "/var/log/appscope/appscope.log"
            summaryperiod:
              type: number
              example: 60
        metric:
          type: object
          properties:
            enable:
              type: boolean
              example: true
            format:
              type: object
              properties:
                statsdmaxlen:
                  type: number
                  example: 512
                statsdprefix:
                  type: string
                  example: "webshop.prod."
                type:
                  type: string
                  example: "statsd"
                verbosity:
                  type: number
                  example: 3
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            watch:
              type: array
              items:
                type: object
              example:
                - type: "process"
                  match: "nginx"
                - type: "file"
                  path: "/var/log/nginx/access.log"
          required:
            - enable
            - format
            - transport
            - watch
          example:
            enable: true
            format:
              statsdmaxlen: 512
              statsdprefix: "webshop.prod."
              type: "statsd"
              verbosity: 3
            transport:
              type: "udp"
              host: "127.0.0.1"
              port: 8125
            watch:
              - type: "process"
                match: "nginx"
              - type: "file"
                path: "/var/log/nginx/access.log"
        payload:
          type: object
          properties:
            dir:
              type: string
              example: "/var/lib/appscope/payloads"
            enable:
              type: boolean
              example: true
          required:
            - dir
            - enable
          example:
            dir: "/var/lib/appscope/payloads"
            enable: true
        protocol:
          type: array
          items:
            type: object
            properties:
              binary:
                type: boolean
                example: false
              detect:
                type: boolean
                example: true
              len:
                type: number
                example: 128
              name:
                type: string
                example: "http"
              payload:
                type: boolean
                example: true
              regex:
                type: string
                example: ".*"
            required:
              - binary
              - detect
              - len
              - name
              - payload
              - regex
        tags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                example: "env"
              value:
                type: string
                example: "prod"
            required:
              - key
              - value
    CriblLib:
      type: string
      enum:
        - cribl
        - cribl-custom
        - custom
      example: "cribl"
    AppscopeLibEntry:
      type: object
      required:
        - id
        - config
      properties:
        id:
          type: string
          title: ID
          description: Unique ID for this Appscope config
          example: "appscopeConfig1"
        description:
          type: string
          title: Description
          example: "Custom Appscope configuration for nginx"
        tags:
          type: string
          title: Tags
          example: "scope,nginx"
        config:
          $ref: "#/components/schemas/AppscopeConfigWithCustom"
        lib:
          $ref: "#/components/schemas/CriblLib"
      required:
        - config
        - description
        - id
        - lib
    GrokFile:
      type: object
      properties:
        content:
          type: string
          example: "%%{IPV4:client} %%{WORD:method} %%{URIPATHPARAM:request}"
        id:
          type: string
          example: "myGrokFile"
        size:
          type: number
          example: 1024
        tags:
          type: string
          example: "logs,patterns"
      required:
        - content
        - id
        - size
    LookupFile:
      type: object
      required:
        - id
      properties:
        id:
          title: Filename
          type: string
          pattern: ^\w[\w -]+(?:\.csv|\.gz|\.csv\.gz|\.mmdb)?$
          example: "countries.csv"
        description:
          type: string
          title: Description
          example: "Country code to name lookup"
        tags:
          type: string
          title: Tags
          description: One or more tags related to this lookup. Optional.
          example: "geo,reference"
        version:
          type: string
          description: Unique string generated for each modification of this lookup
          readOnly: true
          example: "v1.2.3"
        content:
          type: string
          description: File content.
          example: "US,United States\nCA,Canada"
        mode:
          type: string
          title: Mode
          default: memory
          enum:
            - memory
            - disk
          example: "memory"
        pendingTask:
          type: object
          readOnly: true
          properties:
            id:
              type: string
              description: Task ID (generated).
              readOnly: true
              example: "task-1234"
            type:
              type: string
              description: Task type
              enum:
                - IMPORT
                - INDEX
              readOnly: true
              example: "IMPORT"
            error:
              type: string
              description: Error message if task has failed
              readOnly: true
              example: "File parsing failed"
    LookupFileInfoResponse:
      type: object
      properties:
        filename:
          type: string
          example: "countries.csv"
        rows:
          type: number
          example: 200
        size:
          type: number
          example: 4096
      required:
        - filename
        - rows
        - size
    ParserLibEntry:
      type: object
      additionalProperties: false
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: ID
          example: "parser1"
        lib:
          type: string
          title: Library
          example: "custom"
        description:
          type: string
          title: Description
          example: "Parser for CSV log format"
        tags:
          type: string
          title: Tags
          description: Optionally, add tags that you can use for filtering
          example: "csv,logs"
        type:
          title: Type
          description: Parser or formatter type to use
          type: string
          enum:
            - csv
            - elff
            - clf
            - kvp
            - json
            - delim
            - regex
            - grok
          default: csv
          example: "csv"
    ProtobufEncodingConfig:
      type: object
      properties:
        eventModel:
          type: string
          example: "EventModel1"
        id:
          type: string
          example: "protobufEncoding1"
        name:
          type: string
          example: "My Protobuf Encoding"
        wrapping:
          type: object
          properties:
            wrapperField:
              type: string
              example: "data"
            wrapperFieldType:
              type: string
              enum:
                - single
                - array
              example: "array"
            wrapperModel:
              type: string
              example: "WrapperModel1"
          required:
            - wrapperField
            - wrapperFieldType
            - wrapperModel
      required:
        - eventModel
        - id
        - name
    ProtobufBytesConversion:
      type: string
      enum:
        - buffer
        - array
        - string
      example: "string"
    ProtobufEnumConversion:
      type: string
      enum:
        - string
        - number
      example: "number"
    ProtobufLongConversion:
      type: string
      enum:
        - number
        - string
        - object
      example: "object"
    ProtobufLibraryConversionConfig:
      type: object
      properties:
        arrays:
          type: boolean
          example: true
        bytes:
          $ref: "#/components/schemas/ProtobufBytesConversion"
          example: "array"
        defaults:
          type: boolean
          example: false
        enums:
          $ref: "#/components/schemas/ProtobufEnumConversion"
          example: "string"
        json:
          type: boolean
          example: true
        longs:
          $ref: "#/components/schemas/ProtobufLongConversion"
          example: "number"
        objects:
          type: boolean
          example: true
        oneofs:
          type: boolean
          example: false
    ProtobufLibraryConfig:
      type: object
      properties:
        availableEncodings:
          type: array
          items:
            $ref: "#/components/schemas/ProtobufEncodingConfig"
          example:
            - id: "enc1"
              name: "Encoding One"
              eventModel: "EventModel1"
        conversion:
          $ref: "#/components/schemas/ProtobufLibraryConversionConfig"
          example:
            arrays: true
            bytes: "buffer"
            enums: "number"
        dependsOn:
          type: array
          items:
            type: string
            example: "lib-dependency"
          example: ["common-lib"]
        description:
          type: string
          example: "This is a protobuf library config"
        id:
          type: string
          example: "protobufLib1"
        name:
          type: string
          example: "My Protobuf Library"
        tags:
          type: string
          example: "protobuf,encoding"
      required:
        - dependsOn
        - description
        - id
        - name
    RegexLibEntry:
      type: object
      additionalProperties: false
      required:
        - id
        - regex
      properties:
        id:
          type: string
          title: ID
          example: "regexEntry1"
        lib:
          type: string
          title: Library
          example: "custom"
        description:
          type: string
          title: Description
          example: "Regex for IPv4 addresses"
        regex:
          type: string
          title: Regex pattern
          example: "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b"
        sampleData:
          type: string
          title: Sample data
          description: Optionally, paste in sample data to match against this regex
          maxLength: 4096
          example: "192.168.1.1, 10.0.0.1"
        tags:
          type: string
          title: Tags
          example: "network,ip"
    DataSample:
      type: object
      additionalProperties: true
      required:
        - id
        - sampleName
      properties:
        id:
          type: string
          title: ID
          example: "sample123"
        sampleName:
          type: string
          title: File name
          example: "access_logs.json"
        pipelineId:
          type: string
          title: Associate with Pipeline
          description: Select a pipeline to associate with sample with. Select GLOBAL if not sure. Deprecated.
          example: "pipeline1"
        description:
          type: string
          title: Description
          description: Brief description of this sample file. Optional.
          example: "Sample log data for testing"
        ttl:
          type: number
          title: Expiration (hours)
          description: Time to live (TTL) for the sample; reset after each use. Leave empty to never expire.
          example: 24
        tags:
          type: string
          title: Tags
          description: One or more tags related to this sample file. Optional.
          example: "test,logs"
    SampleContent:
      type: array
      items:
        type: object
        additionalProperties: true
        example:
          field1: "value1"
          field2: 123
    DashboardLayout:
      type: object
      properties:
        h:
          type: number
          example: 0
        w:
          type: number
          example: 9
        x:
          type: number
          example: 8
        y:
          type: number
          example: 2
      required:
        - h
        - w
        - x
        - y
    SavesSearchRunMode:
      type: string
      enum:
        - newSearch
        - lastRun
      example: "lastRun"
    SearchQuery:
      oneOf:
        - type: object
          properties:
            query:
              type: string
              example: "dataset=my_dataset | stats count"
            queryId:
              type: string
              example: "query123"
            runMode:
              $ref: "#/components/schemas/SavesSearchRunMode"
              example: "newSearch"
            type:
              type: string
              enum:
                - saved
              example: "saved"
          required:
            - queryId
            - type
        - type: object
          properties:
            earliest:
              oneOf:
                - type: string
                  nullable: true
                  example: "-1h"
                - type: number
                  nullable: true
                  example: 1696166400
            latest:
              oneOf:
                - type: string
                  nullable: true
                  example: "now"
                - type: number
                  nullable: true
                  example: 1696170000
            parentSearchId:
              type: string
              example: "parentSearch1"
            query:
              oneOf:
                - type: string
                  nullable: true
                  example: "error OR warn"
            sampleRate:
              type: number
              example: 0.5
            timezone:
              type: string
              example: "UTC"
            type:
              type: string
              enum:
                - inline
              example: "inline"
          required:
            - earliest
            - latest
            - query
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - values
              example: "values"
            values:
              type: array
              items:
                type: string
                example: "value1"
              example: ["val1", "val2"]
          required:
            - type
            - values
    DashboardElementType:
      type: string
      enum:
        - chart.line
        - chart.column
        - chart.horizontalBar
        - chart.area
        - chart.scatter
        - chart.pie
        - chart.funnel
        - chart.gauge
        - chart.map
        - list.events
        - list.table
        - counter.single
        - input.timerange
        - input.dropdown
        - input.text
        - input.number
      example: "chart.line"
    DashboardElementVariant:
      type: string
      enum:
        - visualization
        - input
        - markdown
      example: "markdown"
    SavedQuerySchedule:
      type: object
      properties:
        cronSchedule:
          type: string
          example: "0 * * * *"
        enabled:
          type: boolean
          example: true
        keepLastN:
          type: number
          example: 5
        notifications:
          type: object
          properties:
            disabled:
              type: boolean
              example: false
            items:
              type: array
              x-speakeasy-terraform-ignore: true
              items:
                $ref: "#/components/schemas/Notification"
              example:
                - id: "notif1"
                  condition: "true"
          required:
            - disabled
        resumeMissed:
          type: boolean
          x-speakeasy-terraform-ignore: true
          example: true
        resumeOnBoot:
          type: boolean
          x-speakeasy-terraform-ignore: true
          example: false
        tz:
          type: string
          example: "UTC"
      required:
        - cronSchedule
        - enabled
        - keepLastN
        - notifications
        - tz
    SearchDashboard:
      type: object
      properties:
        cacheTTLSeconds:
          type: number
          example: 300
        category:
          type: string
          example: "observability"
        created:
          type: number
          example: 1696166400
        createdBy:
          type: string
          example: "user123"
        description:
          type: string
          example: "Dashboard for monitoring system metrics"
        displayCreatedBy:
          type: string
          example: "User 123"
        displayModifiedBy:
          type: string
          example: "User 456"
        elements:
          type: array
          items:
            oneOf:
              - type: object
                properties:
                  description:
                    type: string
                    example: "5xx error rate for checkout"
                  empty:
                    type: boolean
                    example: false
                  hidePanel:
                    type: boolean
                    example: false
                  horizontalChart:
                    type: boolean
                    example: false
                  id:
                    type: string
                    example: "panel-http-5xx"
                  index:
                    type: number
                    example: 3
                  inputId:
                    type: string
                    example: "service"
                  layout:
                    $ref: "#/components/schemas/DashboardLayout"
                    example:
                      x: 0
                      y: 6
                      w: 12
                      h: 4
                  search:
                    $ref: "#/components/schemas/SearchQuery"
                    example:
                      query: "status:>=500 service:checkout env:prod"
                      timeRange:
                        from: "now-1h"
                        to: "now"
                  title:
                    type: string
                    example: "HTTP 5xx errors"
                  type:
                    $ref: "#/components/schemas/DashboardElementType"
                    example: "timeseries"
                  value:
                    type: object
                    additionalProperties: true
                    example:
                      metric: "http.server.requests"
                      aggregation: "rate_5m"
                      groupBy:
                        - "route"
                      unit: "req/s"
                      thresholds:
                        - value: 50
                          color: "yellow"
                        - value: 100
                          color: "red"
                  variant:
                    $ref: "#/components/schemas/DashboardElementVariant"
                    example: "line"
                required:
                  - id
                  - layout
                  - search
                  - type
              - type: object
                properties:
                  description:
                    type: string
                    example: "Markdown panel for release notes"
                  empty:
                    type: boolean
                    example: false
                  hidePanel:
                    type: boolean
                    example: false
                  id:
                    type: string
                    example: "panel-markdown-release-notes"
                  index:
                    type: number
                    example: 7
                  layout:
                    $ref: "#/components/schemas/DashboardLayout"
                    example:
                      x: 0
                      y: 10
                      w: 12
                      h: 4
                  title:
                    type: string
                    example: "Release notes"
                  type:
                    type: string
                    enum:
                      - markdown.default
                    example: "markdown.default"
                  value:
                    type: string
                    example: |
                      ## Release notes
                      - Added payment retry logic
                      - Improved log verbosity controls
                  variant:
                    type: string
                    enum:
                      - markdown
                    example: "markdown"
                example:
                  description: "Markdown panel for release notes"
                  empty: false
                  hidePanel: false
                  id: "panel-markdown-release-notes"
                  index: 7
                  layout:
                    x: 0
                    y: 10
                    w: 12
                    h: 4
                  title: "Release notes"
                  type: "markdown.default"
                  value: |
                    ## Release notes
                    - Added payment retry logic
                    - Improved log verbosity controls
                  variant: "markdown"
                required:
                  - id
                  - layout
                  - type
                  - variant
        id:
          type: string
          example: "dashboard123"
        modified:
          type: number
          example: 1696170000
        modifiedBy:
          type: string
          example: "user456"
        name:
          type: string
          example: "System Metrics Dashboard"
        packId:
          type: string
          example: "New Pack Id"
        refreshRate:
          type: number
          example: 60
        resolvedDatasetIds:
          type: array
          items:
            type: string
            example: "int"
          example: ["string", "int"]
        schedule:
          $ref: "#/components/schemas/SavedQuerySchedule"
      required:
        - created
        - createdBy
        - elements
        - id
        - modified
        - name
    SearchMacro:
      type: object
      properties:
        created:
          type: number
        createdBy:
          type: string
        description:
          type: string
        id:
          type: string
        modified:
          type: number
        replacement:
          type: string
        tags:
          type: string
      required:
        - id
        - replacement
    ChartData:
      type: array
      items:
        type: object
    ChartType:
      type: string
      enum:
        - area
        - column
        - events
        - funnel
        - gauge
        - horizontalBar
        - line
        - map
        - pie
        - scatter
        - single
        - table
    ChartSeries:
      type: object
      properties:
        color:
          type: string
        data:
          $ref: "#/components/schemas/ChartData"
        map:
          type: string
        name:
          type: string
        type:
          $ref: "#/components/schemas/ChartType"
        yAxisField:
          type: string
      required:
        - name
    ChartConfig:
      type: object
      properties:
        applyThreshold:
          type: boolean
        axis:
          type: object
          properties:
            xAxis:
              type: string
            yAxis:
              type: array
              items:
                type: string
            yAxisExcluded:
              type: array
              items:
                type: string
        color:
          type: string
        colorPalette:
          type: number
        colorPaletteReversed:
          type: boolean
        colorThresholds:
          type: object
          properties:
            thresholds:
              type: array
              items:
                type: object
                properties:
                  color:
                    type: string
                  threshold:
                    type: number
                required:
                  - color
                  - threshold
          required:
            - thresholds
        customData:
          type: object
          properties:
            connectNulls:
              type: string
            dataFields:
              type: array
              items:
                type: string
            isPointColor:
              type: boolean
            limitToTopN:
              type: number
            lines:
              type: boolean
            nameField:
              type: string
            pointColorPalette:
              type: number
            pointColorPaletteReversed:
              type: boolean
            pointScale:
              oneOf:
                - type: string
                - type: number
            pointScaleDataField:
              type: string
            seriesCount:
              type: number
            splitBy:
              type: string
            stack:
              type: boolean
            summarizeOthers:
              type: boolean
            trellis:
              type: boolean
        decimals:
          type: number
        label:
          type: string
        legend:
          type: object
          properties:
            position:
              type: string
            truncate:
              type: boolean
        mapDetails:
          type: object
          properties:
            latitudeField:
              type: string
            longitudeField:
              type: string
            mapSourceID:
              type: string
            mapType:
              type: string
            nameField:
              type: string
            pointScale:
              oneOf:
                - type: string
                - type: number
            valueField:
              type: string
        onClickAction:
          type: object
          properties:
            search:
              type: string
            selectedDashboardId:
              type: string
            selectedInputId:
              type: string
            selectedLinkId:
              type: string
            selectedTimerangeInputId:
              type: string
            type:
              type: string
        prefix:
          type: string
        separator:
          type: boolean
        series:
          type: array
          items:
            $ref: "#/components/schemas/ChartSeries"
        shouldApplyUserChartSettings:
          type: boolean
        style:
          type: boolean
        suffix:
          type: string
        type:
          type: string
        xAxis:
          type: object
          properties:
            dataField:
              type: string
            inverse:
              type: boolean
            labelInterval:
              type: string
            labelOrientation:
              type: number
            name:
              type: string
            offset:
              type: number
            position:
              type: string
            type:
              type: string
        yAxis:
          type: object
          properties:
            dataField:
              type: array
              items:
                type: string
            interval:
              type: number
            max:
              type: number
            min:
              type: number
            position:
              type: string
            scale:
              type: string
            splitLine:
              type: boolean
            type:
              type: string
      required:
        - colorPalette
        - type
    object:
      type: string
    SavedQuery:
      type: object
      properties:
        name:
          type: string
          description: Name of the saved query
          example: "test_saved"
        isPrivate:
          type: boolean
          description: Whether the saved query is private
          example: true
        query:
          type: string
          description: The search query string
          example: "dataset=\"cribl_edge_appscope_metrics\" | limit 1000"
        earliest:
          type: string
          description: Earliest time for the search range
          example: "-1h"
        latest:
          type: string
          description: Latest time for the search range
          example: "now"
        description:
          type: string
          description: Description of the saved query
          example: "test saved query"
        schedule:
          $ref: '#/components/schemas/SavedQuerySchedule'
        user:
          type: string
          description: User ID who created the saved query
          example: "google-oauth2|115928590796700585084"
          x-speakeasy-terraform-ignore: true
        displayUsername:
          type: string
          description: Display name of the user
          example: "First Last"
          x-speakeasy-terraform-ignore: true
        id:
          type: string
          description: Unique identifier for the saved query
          example: "test_saved"
      required:
        - id
        - name
        - query
    CPUTimeMetric:
      type: object
      properties:
        billableCPUSeconds:
          type: number
          example: 12345.67
        totalCPUSeconds:
          type: number
          example: 98765.43
        totalExecCPUSeconds:
          type: number
          example: 54321.9
      required:
        - totalCPUSeconds
        - totalExecCPUSeconds
    EventBreakerRuleset:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          title: ID
          pattern: ^[a-zA-Z0-9\-_ ]+$
          example: access-logs-v1
        lib:
          type: string
          title: Library
          enum:
            - custom
            - cribl-custom
          default: custom
          example: custom
        description:
          type: string
          title: Description
          example: Break HTTP access logs into events
        tags:
          type: string
          title: Tags
          example: nginx,access,prod
        minRawLength:
          type: number
          title: Min raw length
          description: The  minimum number of characters in _raw to determine which rule
            to use
          default: 256
          minimum: 50
          maximum: 100000
          example: 512
        rules:
          type: array
          title: Rules
          description: A list of rules that will be applied, in order, to the input data
            stream
          example:
            - name: nginx-access
              condition: /GET|POST|PUT|DELETE/.test(_raw)
              type: regex
              timestampAnchorRegex: /\d{2}\/[A-Za-z]{3}\/\d{4}:\d{2}:\d{2}:\d{2}/
              eventBreakerRegex: /\n(?=\S)/
              timestamp:
                type: format
                length: 150
                format: "%d/%b/%Y:%H:%M:%S %z"
              timestampTimezone: UTC
              timestampEarliest: -90days
              timestampLatest: +1day
              maxEventBytes: 65536
              fields:
                - name: source
                  value: '"nginx_access"'
                - name: sourcetype
                  value: '"nginx:access"'
              disabled: false
              parserEnabled: false
              shouldUseDataRaw: false
          items:
            type: object
            required:
              - name
              - type
              - condition
              - timestampAnchorRegex
              - timestamp
            properties:
              name:
                type: string
                title: Name
                example: nginx-access
              condition:
                type: string
                title: Filter condition
                description: JavaScript expression applied to the beginning of a file or object,
                  to determine whether the rule applies to all contained events.
                default: "true"
                example: /GET|POST|PUT|DELETE/.test(_raw)
              type:
                type: string
                title: Event Breaker type
                enum:
                  - regex
                  - json
                  - json_array
                  - header
                  - timestamp
                  - csv
                  - aws_cloudtrail
                  - aws_vpcflow
                default: regex
                example: regex
              timestampAnchorRegex:
                type: string
                title: Timestamp anchor
                description: The regex to match before attempting timestamp extraction. Use $
                  (end-of-string anchor) to prevent extraction.
                default: /^/
                example: /\d{2}\/[A-Za-z]{3}\/\d{4}:\d{2}:\d{2}:\d{2}/
              eventBreakerRegex:
                type: string
                title: Event breaker regex
                description: The regex to match before attempting event breaker extraction.
                  Use $ (end-of-string anchor) to prevent extraction.
                default: /[\\n\\r]+(?!\\s)/
                example: /\n(?=\S)/
              timestamp:
                type: object
                required:
                  - type
                title: Timestamp format
                description: Auto, manual format (strptime), or current time
                properties:
                  type:
                    type: string
                    title: Timestamp type
                    default: auto
                    enum:
                      - auto
                      - format
                      - current
                    example: format
                  length:
                    type: number
                    title: Length
                    minimum: 2
                    default: 150
                    example: 150
                  format:
                    type: string
                    title: Format
                    example: "%d/%b/%Y:%H:%M:%S %z"
              timestampTimezone:
                type: string
                title: Default timezone
                description: Timezone to assign to timestamps without timezone info
                default: local
                example: UTC
              timestampEarliest:
                title: Earliest timestamp allowed
                description: "The earliest timestamp value allowed relative to now. Example:
                  -42years. Parsed values prior to this date will be set to
                  current time."
                type: string
                default: -420weeks
                example: -90days
              timestampLatest:
                title: Future timestamp allowed
                description: "The latest timestamp value allowed relative to now. Example:
                  +42days. Parsed values after this date will be set to current
                  time."
                type: string
                default: +1week
                example: +1day
              maxEventBytes:
                type: number
                title: Max event bytes
                description: The maximum number of bytes in an event before it is flushed to the
                  pipelines
                default: 51200
                minimum: 1
                maximum: 134217728
                example: 65536
              fields:
                title: Fields
                description: Key-value pairs to be added to each event
                type: array
                example:
                  - name: source
                    value: '"nginx_access"'
                  - name: sourcetype
                    value: '"nginx:access"'
                items:
                  type: object
                  required:
                    - value
                  properties:
                    name:
                      type: string
                      title: Name
                      example: source
                    value:
                      type: string
                      title: Value expression
                      description: The JavaScript expression used to compute the field's value (can be
                        constant)
                      example: '"nginx_access"'
              disabled:
                title: Disabled
                type: boolean
                default: false
                description: Disable this breaker rule (enabled by default)
                example: false
              parserEnabled:
                title: Parser
                type: boolean
                default: false
                example: false
              shouldUseDataRaw:
                title: Data _raw
                type: boolean
                default: false
                description: Enable to set an internal field on events indicating that the field
                  in the data called _raw should be used. This can be useful for
                  post processors that want to use that field for event._raw,
                  instead of replacing it with the actual raw event.
                example: false
    DatatypeOverrides:
      type: object
      properties:
        breakerRulesets:
          type: array
          items:
            $ref: "#/components/schemas/EventBreakerRuleset"
          example:
            - id: access-logs-v1
              lib: custom
              description: Break HTTP access logs into events
              minRawLength: 512
              rules:
                - name: nginx-access
                  condition: /GET|POST|PUT|DELETE/.test(_raw)
                  type: regex
                  timestampAnchorRegex: /\d{2}\/[A-Za-z]{3}\/\d{4}:\d{2}:\d{2}:\d{2}/
                  eventBreakerRegex: /\n(?=\S)/
                  timestamp:
                    type: format
                    length: 150
                    format: "%d/%b/%Y:%H:%M:%S %z"
        disableBreakers:
          type: boolean
          example: false
      required:
        - disableBreakers
    SearchJobErrorStateConfig:
      type: object
      properties:
        coordinated:
          type: boolean
          example: true
        errorMessages:
          type: array
          items:
            type: string
          example:
            - Timeout contacting indexer
            - Shard 3 unavailable
      required:
        - coordinated
        - errorMessages
    SearchJobMetadata:
      type: object
      properties: {}
      example: {}
    SearchParameterValue:
      oneOf:
        - type: string
          example: source:nginx AND status:500
        - type: number
          example: 86400
        - type: boolean
          example: true
    SearchParameterType:
      type: string
      enum:
        - string
        - number
        - boolean
      example: string
    SearchParameter:
      type: object
      properties:
        defaultValue:
          $ref: "#/components/schemas/SearchParameterValue"
        name:
          type: string
          example: status
        type:
          $ref: "#/components/schemas/SearchParameterType"
      required:
        - name
        - type
      example:
        name: status
        type: string
        defaultValue: 500
    SearchParameters: {}
    CacheStatusByDatasetId: {}
    StageId:
      type: string
      example: stage-parse-01
    StageDependencyType:
      type: string
      enum:
        - stage
        - stage-scalar
      example: stage
    StageDependency:
      type: object
      properties:
        dependentFields:
          type: array
          items:
            type: string
          example:
            - _raw
            - timestamp
        id:
          $ref: "#/components/schemas/StageId"
        type:
          $ref: "#/components/schemas/StageDependencyType"
      required:
        - id
        - type
      example:
        id: stage-parse-01
        type: stage
        dependentFields:
          - _raw
          - timestamp
    JobExecutionWarning:
      type: object
      properties:
        text:
          type: string
          example: Approximate results due to sampling
        type:
          type: string
          example: sampling
      required:
        - type
    SearchTerm:
      type: object
      properties:
        isCaseSensitive:
          type: boolean
          example: false
        term:
          type: string
          example: error OR warn
      required:
        - isCaseSensitive
        - term
    SortByField:
      type: object
      properties:
        direction:
          type: string
          enum:
            - ascending
            - descending
          example: descending
        fieldName:
          type: string
          example: timestamp
        nullPosition:
          type: string
          enum:
            - nullsFirst
            - nullsLast
          example: nullsLast
      required:
        - direction
        - fieldName
        - nullPosition
    SearchConfig:
      type: object
      properties:
        canComputeMetadataDistributively:
          type: boolean
          example: true
        datasets:
          type: array
          items:
            type: string
          example:
            - auth_logs
            - nginx_access
        hasSendOperator:
          type: boolean
          example: false
        orderedFieldNames:
          type: array
          items:
            type: string
          example:
            - timestamp
            - host
            - status
        referencedFieldNames:
          type: array
          items:
            type: string
          example:
            - source
            - sourcetype
        searchTerms:
          type: array
          items:
            $ref: "#/components/schemas/SearchTerm"
          example:
            - isCaseSensitive: false
              term: error OR warn
        sortFields:
          type: array
          items:
            $ref: "#/components/schemas/SortByField"
          example:
            - direction: descending
              fieldName: timestamp
              nullPosition: nullsLast
        useFormattedVisualization:
          type: boolean
          example: true
      required:
        - datasets
        - hasSendOperator
        - orderedFieldNames
        - searchTerms
        - useFormattedVisualization
    SearchJobStageConfig:
      type: object
      properties:
        cacheStatusByDatasetId:
          $ref: "#/components/schemas/CacheStatusByDatasetId"
        dependencies:
          type: array
          items:
            $ref: "#/components/schemas/StageDependency"
          example:
            - id: stage-parse-01
              type: stage
              dependentFields:
                - _raw
        earliest:
          oneOf:
            - type: string
            - type: number
          example: -24h
        executionWarnings:
          type: array
          items:
            $ref: "#/components/schemas/JobExecutionWarning"
          example:
            - type: sampling
              text: Approximate results due to sampling
        filter:
          type: string
          example: source:nginx
        id:
          type: string
          example: stage-parse-01
        latest:
          oneOf:
            - type: string
            - type: number
          example: now
        resolvedDatasetIds:
          type: array
          items:
            type: string
          example:
            - nginx_access
            - auth_logs
        searchConfig:
          $ref: "#/components/schemas/SearchConfig"
        status:
          type: string
          enum:
            - new
            - failed
            - running
            - completed
            - canceled
            - queued
          example: completed
        subQueryText:
          type: string
          example: parse nginx access logs
      required:
        - dependencies
        - filter
        - id
        - resolvedDatasetIds
        - searchConfig
        - status
        - subQueryText
      example:
        cacheStatusByDatasetId: {}
        dependencies:
          - id: stage-parse-01
            type: stage
            dependentFields:
              - _raw
        earliest: -24h
        executionWarnings:
          - type: sampling
            text: Approximate results due to sampling
        filter: source:nginx
        id: stage-parse-01
        latest: now
        resolvedDatasetIds:
          - nginx_access
        searchConfig:
          canComputeMetadataDistributively: true
          datasets:
            - nginx_access
          hasSendOperator: false
          orderedFieldNames:
            - timestamp
            - host
          referencedFieldNames:
            - source
          searchTerms:
            - isCaseSensitive: false
              term: error OR warn
          sortFields:
            - direction: descending
              fieldName: timestamp
              nullPosition: nullsLast
          useFormattedVisualization: true
        status: completed
        subQueryText: parse nginx access logs
    ColumnSetting: {}
    ColumnFilterSettings:
      type: object
      properties:
        contains:
          $ref: "#/components/schemas/ColumnSetting"
      required:
        - contains
      example:
        contains:
          value: error
    ColumnFormatSettings:
      type: object
      properties:
        palette:
          $ref: "#/components/schemas/ColumnSetting"
        precision:
          $ref: "#/components/schemas/ColumnSetting"
        prefix:
          $ref: "#/components/schemas/ColumnSetting"
        suffix:
          $ref: "#/components/schemas/ColumnSetting"
      required:
        - palette
        - precision
        - prefix
        - suffix
      example:
        palette:
          scheme: viridis
        precision:
          digits: 2
        prefix:
          text: "$"
        suffix:
          text: ms
    ColumnOrderSettings:
      type: object
      properties:
        order:
          $ref: "#/components/schemas/ColumnSetting"
      required:
        - order
      example:
        order:
          fields:
            - timestamp
            - host
            - status
    ColumnSortSettings:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/ColumnSetting"
      required:
        - sort
      example:
        sort:
          by: timestamp
          direction: descending
    TableViewSettings:
      type: object
      properties:
        columnFilterSettings:
          $ref: "#/components/schemas/ColumnFilterSettings"
        columnFormatSettings:
          $ref: "#/components/schemas/ColumnFormatSettings"
        columnOrderSettings:
          $ref: "#/components/schemas/ColumnOrderSettings"
        columnSortSettings:
          $ref: "#/components/schemas/ColumnSortSettings"
        eventDetailsPanel:
          type: boolean
          example: true
        eventTableFields:
          type: array
          items:
            type: string
          example:
            - timestamp
            - host
            - status
            - _raw
        rowNumberColumnWidth:
          type: number
          example: 48
        showColumnTotals:
          type: boolean
          example: true
        showColumnTotalsPinned:
          type: boolean
          example: false
        showRowNumbers:
          type: boolean
          example: true
        showRowTotals:
          type: boolean
          example: false
        showRowTotalsPinned:
          type: boolean
          example: false
        wrapCells:
          type: boolean
          example: false
      required:
        - showColumnTotals
        - showColumnTotalsPinned
        - showRowNumbers
        - showRowTotals
        - showRowTotalsPinned
        - wrapCells
      example:
        columnFilterSettings:
          contains:
            value: error
        columnFormatSettings:
          palette:
            scheme: viridis
          precision:
            digits: 2
          prefix:
            text: "$"
          suffix:
            text: ms
        columnOrderSettings:
          order:
            fields:
              - timestamp
              - host
              - status
        columnSortSettings:
          sort:
            by: timestamp
            direction: descending
        eventDetailsPanel: true
        eventTableFields:
          - timestamp
          - host
          - status
          - _raw
        rowNumberColumnWidth: 48
        showColumnTotals: true
        showColumnTotalsPinned: false
        showRowNumbers: true
        showRowTotals: false
        showRowTotalsPinned: false
        wrapCells: false
    SearchAuditMetrics:
      type: object
      properties:
        bytesIn:
          type: number
          example: 104857600
        bytesOut:
          type: number
          example: 52428800
        eventsIn:
          type: number
          example: 1250000
        eventsOut:
          type: number
          example: 1200000
        objects:
          type: object
          properties:
            discovered:
              type: number
              example: 2500
            scanned:
              type: number
              example: 2400
            skipped:
              type: number
              example: 100
          required:
            - discovered
            - scanned
            - skipped
        time:
          type: object
          properties:
            queuedSec:
              type: number
              example: 2.1
            runningSec:
              type: number
              example: 45.3
            taskCompletionTotalSec:
              type: number
              example: 120.5
            taskReceivingTotalSec:
              type: number
              example: 15.7
          required:
            - queuedSec
            - runningSec
            - taskCompletionTotalSec
            - taskReceivingTotalSec
      required:
        - bytesIn
        - bytesOut
        - eventsIn
        - eventsOut
        - objects
        - time
    SearchJob:
      type: object
      properties:
        accelerated:
          type: boolean
          example: false
        aliasOfOriginalJobId:
          type: string
          example: job-1234
        compatibilityChecks:
          type: object
          properties:
            datatypes:
              type: boolean
              example: true
            stageIds:
              type: array
              items:
                type: string
              example:
                - stage-parse-01
                - stage-filter-02
        completionInfo:
          type: string
          example: Completed successfully
        context:
          type: string
          example: default
        correlationId:
          type: string
          example: c0a80123-4567-89ab-cdef-0123456789ab
        cpuMetrics:
          $ref: "#/components/schemas/CPUTimeMetric"
        datatypeOverrides:
          $ref: "#/components/schemas/DatatypeOverrides"
        disableNotifications:
          type: boolean
          example: false
        displayUsername:
          type: string
          example: alice
        earliest:
          oneOf:
            - type: string
            - type: number
          example: -24h
        earliestEpoch:
          type: number
          example: 1696200000
        errorStateConfig:
          $ref: "#/components/schemas/SearchJobErrorStateConfig"
        group:
          type: string
          example: analytics
        id:
          type: string
          example: job-9f8e7d6c
        isPrivate:
          type: boolean
          example: true
        latest:
          oneOf:
            - type: string
            - type: number
          example: now
        latestEpoch:
          type: number
          example: 1696286400
        metadata:
          $ref: "#/components/schemas/SearchJobMetadata"
        numEventsAfter:
          type: number
          example: 120
        numEventsBefore:
          type: number
          example: 35
        query:
          type: string
          example: search source:nginx status>=500 | stats count by host
        queryWithMacrosResolved:
          type: string
          example: search index=main source=nginx_access status>=500 | stats count by host
        sampleRate:
          type: number
          example: 1
        savedQueryName:
          type: string
          example: error_rate_by_host
        searchParameterDeclarations:
          type: array
          items:
            $ref: "#/components/schemas/SearchParameter"
          example:
            - name: status
              type: string
              defaultValue: 500
        searchParameterValues:
          $ref: "#/components/schemas/SearchParameters"
        stages:
          type: array
          items:
            $ref: "#/components/schemas/SearchJobStageConfig"
          example:
            - dependencies: []
              filter: source:nginx
              id: stage-parse-01
              resolvedDatasetIds:
                - nginx_access
              searchConfig:
                canComputeMetadataDistributively: true
                datasets:
                  - nginx_access
                hasSendOperator: false
                orderedFieldNames:
                  - timestamp
                  - host
                referencedFieldNames:
                  - source
                searchTerms:
                  - isCaseSensitive: false
                    term: error OR warn
                sortFields:
                  - direction: descending
                    fieldName: timestamp
                    nullPosition: nullsLast
                useFormattedVisualization: true
              status: completed
              subQueryText: parse nginx access logs
        status:
          type: string
          enum:
            - new
            - failed
            - running
            - completed
            - canceled
            - queued
          example: completed
        tableConfig:
          $ref: "#/components/schemas/TableViewSettings"
        targetEventTime:
          type: number
          example: 1696286400
        timeCompleted:
          type: number
          example: 1696286450
        timeCreated:
          type: number
          example: 1696286300
        timeStarted:
          type: number
          example: 1696286320
        timeToFirstByte:
          type: number
          example: 0.146
        totalBytesScanned:
          type: number
          example: 987654321
        totalEventCount:
          type: number
          example: 1234567
        type:
          type: string
          enum:
            - command
            - standard
            - datatypePreview
            - scheduled
            - dashboard
          example: standard
        usageGroupId:
          type: string
          example: team-analytics
        usageMetrics:
          $ref: "#/components/schemas/SearchAuditMetrics"
        user:
          type: string
          example: alice
      required:
        - displayUsername
        - group
        - id
        - query
        - status
        - timeCreated
        - timeStarted
        - user
    DatabaseConnectionType:
      type: string
      enum:
        - mysql
        - oracle
        - postgres
        - sqlserver
      example: postgres
    DatabaseConnectionConfig:
      type: object
      properties:
        authType:
          type: string
          example: password
        configObj:
          type: string
          example: '{"ssl":true}'
        connectionString:
          type: string
          example: postgresql://db.example.com:5432/appdb
        connectionTimeout:
          type: number
          example: 30
        databaseType:
          $ref: "#/components/schemas/DatabaseConnectionType"
        description:
          type: string
          example: Primary application database
        id:
          type: string
          example: db-prod-01
        password:
          type: string
          example: $${{secret:db_password}
        requestTimeout:
          type: number
          example: 60
        tags:
          type: string
          example: prod,db
        user:
          type: string
          example: appuser
      required:
        - authType
        - databaseType
        - description
        - id
      example:
        authType: password
        configObj: '{"ssl":true}'
        connectionString: postgresql://db.example.com:5432/appdb
        connectionTimeout: 30
        databaseType: postgres
        description: Primary application database
        id: db-prod-01
        password: $${{secret:db_password}
        requestTimeout: 60
        tags: prod,db
        user: appuser
    DatabaseConnectionTestResult:
      type: object
      properties:
        errorMsg:
          type: string
          example: Connection refused
        success:
          type: boolean
          example: false
      required:
        - success
    DatabaseConnectionTest:
      type: object
      properties:
        authType:
          type: string
          example: password
        configObj:
          type: string
          example: '{"ssl":false}'
        connectionString:
          type: string
          example: postgresql://db.example.com:5432/appdb
        connectionTimeout:
          type: number
          example: 15
        databaseType:
          type: string
          example: postgres
        password:
          type: string
          example: $${{secret:db_password}
        textSecret:
          type: string
          example: token-abc123
        user:
          type: string
          example: appuser
      required:
        - authType
        - databaseType
    GlobalVar:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Name
          pattern: ^[a-zA-Z0-9_-]+$
          description: Global variable name.
          example: "test_var"
        lib:
          type: string
          title: Library
          example: "custom"
        description:
          type: string
          title: Description
          description: Brief description of this variable. Optional.
          example: "This is a test var."
        type:
          type: string
          title: Type
          enum:
            - string
            - number
            - encryptedString
            - boolean
            - array
            - object
            - expression
            - any
          default: any
          description: Type of variable
          example: number
        value:
          type: string
          title: Value
          description: Value of variable
          example: 100
        tags:
          type: string
          title: Tags
          description: One or more tags related to this variable. Optional.
          example: "test"
    HmacFunction:
      type: object
      properties:
        description:
          type: string
          example: Compute HMAC-SHA256 over method:path:timestamp
        headerExpression:
          type: string
          example: hmac('sha256', secret, parts.join(':'))
        headerName:
          type: string
          example: X-Signature
        id:
          type: string
          example: hmac-default
        lib:
          $ref: "#/components/schemas/CriblLib"
        stringBuilders:
          type: array
          items:
            type: string
          example:
            - request.method
            - request.path
            - request.headers['x-timestamp']
        stringDelim:
          type: string
          example: ":"
      required:
        - headerExpression
        - headerName
        - id
        - lib
        - stringBuilders
    InputCollection:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: collect-nginx
        type:
          type: string
          enum:
            - collection
          default: collection
          example: collection
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process results
          example: default
        sendToRoutes:
          type: boolean
          default: true
          title: Send to Routes
          description: Send events to normal routing and event processing. Disable to
            select a specific Pipeline/Destination combination.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - nginx
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/nginx
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - access-logs-v1
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 15000
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
              example: jq
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
              example:
                - -c
                - '.message |= upcase'
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: 10 MB
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"collection"'
        output:
          type: string
          title: Destination
          description: Destination to send results to
          example: datalake
      type: object
    InputKafka:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: kafka-nginx
        type:
          type: string
          enum:
            - kafka
          example: kafka
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - kafka
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/nginx
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify the
            hostname and port (such as mykafkabroker:9092) or just the hostname
            (in which case @{product} will assign port 9092).
          minItems: 1
          items:
            type: string
            minLength: 1
          example:
            - kafka-1:9092
            - kafka-2:9092
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl
            suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
          example:
            - nginx_access
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to
            'Cribl'.
          example: web-team
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a
            topic, to read starting with the earliest available message
          example: true
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example:
                http://localhost:8081. To connect over TLS, use https instead of
                http."
              default: http://localhost:8081
              example: http://schema-registry:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete
                successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a
                request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema
                Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 3
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry
                using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: schema-basic-auth
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                  example: schema-registry
                certificateName:
                  type: string
                  title: Certificate
                  example: schema-registry-cert
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                  example: /etc/ssl/certs/ca.pem
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/private/client.key
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/certs/client.crt
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: $${{secret:kafka_key_pass}
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.2
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.3
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 15000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 10
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and
            minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180
            seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 120000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum
            is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 500
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency
            for failed messages. For faster retries, use a lower multiplier. For
            slower retries with more delay between attempts, use a higher
            multiplier. The multiplier is used in an exponential backoff
            formula; see the Kafka
            [documentation](https://kafka.js.org/docs/retry-detailed) for
            details.
          default: 2
          minimum: 2
          maximum: 20
          example: 3
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 15000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backward from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 300000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              example: scram-sha-512
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: kafka-1
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: kafka-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:kafka_key_pass}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: >-2
              
                Timeout used to detect client failures when using Kafka's group-management facilities.
                If the client sends no heartbeats to the broker before the timeout expires, 
                the broker will remove the client from the group and initiate a rebalance.
                Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
          example: 30000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: >-2
              
                Maximum allowed time for each worker to join the group after a rebalance begins.
                If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: >-2
              
                Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
          example: 3000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit
            threshold are set, @{product} commits offsets when either condition
            is met. If both are empty, @{product} commits offsets after each
            batch.
          minimum: 1000
          maximum: 3600000
          example: 5000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both
            this and Offset commit interval are set, @{product} commits offsets
            when either condition is met. If both are empty, @{product} commits
            offsets after each batch.
          minimum: 1
          maximum: 10000
          example: 1000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per
            fetch request. Must equal or exceed the maximum message size
            (maxBytesPerPartition) that Kafka is configured to allow. Otherwise,
            @{product} can get stuck trying to retrieve messages. Defaults to
            1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
          example: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request.
            Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
          example: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a
            socket
          minimum: 0
          maximum: 100
          default: 0
          example: 10
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"kafka"'
          example:
            - name: source
              value: '"kafka"'
        description:
          type: string
          title: Description
          example: "My Kafka Input description for documentation"
      type: object
    InputMsk:
      required:
        - brokers
        - topics
        - region
        - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: msk-nginx
        type:
          type: string
          enum:
            - msk
          example: msk
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - msk
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/nginx
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify the
            hostname and port (such as mykafkabroker:9092) or just the hostname
            (in which case @{product} will assign port 9092).
          minItems: 1
          items:
            type: string
            minLength: 1
          example:
            - b-1.msk-cluster.a1b2c3d4.e1.kafka.us-east-1.amazonaws.com:9092
            - b-2.msk-cluster.a1b2c3d4.e1.kafka.us-east-1.amazonaws.com:9092
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl
            suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
          example:
            - nginx_access
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to
            'Cribl'.
          example: web-team
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a
            topic, to read starting with the earliest available message
          example: true
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: >-2
              
                Timeout used to detect client failures when using Kafka's group-management facilities.
                If the client sends no heartbeats to the broker before the timeout expires, 
                the broker will remove the client from the group and initiate a rebalance.
                Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
          example: 30000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: >-2
              
                Maximum allowed time for each worker to join the group after a rebalance begins.
                If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: >-2
              
                Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
          example: 3000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"msk"'
          example:
            - name: source
              value: '"msk"'
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example:
                http://localhost:8081. To connect over TLS, use https instead of
                http."
              default: http://localhost:8081
              example: http://schema-registry:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete
                successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a
                request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema
                Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 3
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry
                using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: schema-basic-auth
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the CA
                    certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                  example: schema-registry
                certificateName:
                  type: string
                  title: Certificate
                  example: schema-registry-cert
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                  example: /etc/ssl/certs/ca.pem
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/private/client.key
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/certs/client.crt
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: $${{secret:kafka_key_pass}
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.2
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.3
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 15000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 10
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and
            minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180
            seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 120000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum
            is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 500
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency
            for failed messages. For faster retries, use a lower multiplier. For
            slower retries with more delay between attempts, use a higher
            multiplier. The multiplier is used in an exponential backoff
            formula; see the Kafka
            [documentation](https://kafka.js.org/docs/retry-detailed) for
            details.
          default: 2
          minimum: 2
          maximum: 20
          example: 3
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 15000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: "secret"
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
          example: us-east-1
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backward from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 300000
        awsSecretKey:
          type: string
          title: Secret key
          example: $${{secret:aws_secret_access_key}
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to the AWS
            Region-specific endpoint. Otherwise, it must point to MSK
            cluster-compatible endpoint.
          example: https://kafka.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/msk-readonly
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: msk-broker-1
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: msk-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:kafka_key_pass}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit
            threshold are set, @{product} commits offsets when either condition
            is met. If both are empty, @{product} commits offsets after each
            batch.
          minimum: 1000
          maximum: 3600000
          example: 5000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both
            this and Offset commit interval are set, @{product} commits offsets
            when either condition is met. If both are empty, @{product} commits
            offsets after each batch.
          minimum: 1
          maximum: 10000
          example: 1000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per
            fetch request. Must equal or exceed the maximum message size
            (maxBytesPerPartition) that Kafka is configured to allow. Otherwise,
            @{product} can get stuck trying to retrieve messages. Defaults to
            1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
          example: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request.
            Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
          example: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a
            socket
          minimum: 0
          maximum: 100
          default: 0
          example: 0
        description:
          type: string
          title: Description
          example: MSK consumer for nginx access logs
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: $${{secret:aws_access_key_id}
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-msk-credentials
      type: object
    InputHttp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: http-listener
        type:
          type: string
          enum:
            - http
          example: http
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - http
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/http
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 8088
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: string
          example:
            - secret-token-1
            - secret-token-2
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: http-listener-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:http_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck: {}
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        criblAPI:
          type: string
          title: Cribl HTTP event API
          description: Absolute path on which to listen for the Cribl HTTP API requests.
            Only _bulk (default /cribl/_bulk) is available. Use empty string to
            disable.
          default: /cribl
          pattern: ^/|^$
          example: /cribl
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint (Bulk API)
          description: Absolute path on which to listen for the Elasticsearch API
            requests. Only _bulk (default /elastic/_bulk) is available. Use
            empty string to disable.
          default: /elastic
          pattern: ^/|^$
          example: /elastic
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which listen for the Splunk HTTP Event Collector
            API requests. Use empty string to disable.
          default: /services/collector
          pattern: ^/|^$
          example: /services/collector
        splunkHecAcks:
          type: boolean
          title: Enable Splunk HEC acknowledgements
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"http"'
          example:
            - name: source
              value: '"http"'
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization:
                  <token>)"
                example: secret-token-1
              description:
                type: string
                title: Description
                example: Token for webhook ingestion
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: sourcetype
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes
                        or backticks. (Can evaluate to a constant.)
                      example: '"http:webhook"'
          example:
            - token: secret-token-1
              description: Token for webhook ingestion
              metadata:
                - name: sourcetype
                  value: '"http:webhook"'
        description:
          type: string
          title: Description
          example: HTTP listener for webhook events
      type: object
    InputSplunk:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: splunk-listener
        type:
          type: string
          enum:
            - splunk
          example: splunk
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - splunk
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/splunk
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 8089
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: splunk-listener-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:splunk_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a
            connection
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process.
            Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 2000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. After this time, the connection will be
            closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 60
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a
            client to close its end of the connection. If the client doesn't
            close the connection within this time, the server will forcefully
            terminate the socket to prevent resource leaks and ensure efficient
            connection cleanup and system stability. Leave at 0 for no inactive
            socket monitoring.
          default: 30
          minimum: 0
          example: 15
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This
            helps manage resources and mitigate issues caused by TCP pinning.
            Set to 0 to disable.
          default: 0
          minimum: 0
          example: 3600
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy
            protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"splunk"'
          example:
            - name: source
              value: '"splunk"'
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - access-logs-v1
            - syslog-breaker
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 15000
        authTokens:
          type: array
          title: Auth tokens
          description: Shared secrets to be provided by any Splunk forwarder. If empty,
            unauthorized access is permitted.
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: Shared secrets to be provided by any Splunk forwarder. If empty,
                  unauthorized access is permitted.
                example: UF-secret-1
              description:
                type: string
                title: Description
                example: Token for prod universal forwarders
          example:
            - token: UF-secret-1
              description: Token for prod universal forwarders
            - token: UF-secret-2
              description: Token for staging
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
            - v3
            - v4
          default: v3
          example: v4
        description:
          type: string
          title: Description
          example: Splunk S2S listener for UF/HF
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone
          default: true
          description: Event Breakers will determine events' time zone from UF-provided
            metadata, when TZ can't be inferred from the raw event
          example: true
        dropControlFields:
          type: boolean
          title: Drop control fields
          description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If
            disabled, control fields are stored in the internal field
            `__ctrlFields`.
          default: true
          example: true
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Extract and process Splunk-generated metrics as Cribl metrics
          default: false
          example: true
        compress:
          type: string
          title: Compression
          description: Controls whether to support reading compressed data from a
            forwarder. Select 'Automatic' to match the forwarder's
            configuration, or 'Disabled' to reject compressed connections.
          default: disabled
          enum:
            - disabled
            - auto
            - always
          example: auto
      type: object
    InputSplunkSearch:
      required:
        - searchHead
        - search
        - cronSchedule
        - endpoint
        - outputMode
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: splunk-search-errors
        type:
          type: string
          enum:
            - splunk_search
          example: splunk_search
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - splunk
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/splunk
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        searchHead:
          title: Search head
          type: string
          default: https://localhost:8089
          description: Search head base URL. Can be an expression. Default is
            https://localhost:8089.
          example: https://splunk.example.com:8089
        search:
          type: string
          title: Search
          description: "Enter Splunk search here. Examples: 'index=myAppLogs level=error
            channel=myApp' OR '| mstats avg(myStat) as myStat WHERE
            index=myStatsIndex.'"
          example: search index=main sourcetype=access_combined status>=500 | stats count by host
        earliest:
          title: Earliest
          type: string
          description: "The earliest time boundary for the search. Can be an exact or
            relative time. Examples: '2022-01-14T12:00:00Z' or '-16m@m'"
          default: -16m@m
          example: -1h@h
        latest:
          title: Latest
          type: string
          description: "The latest time boundary for the search. Can be an exact or
            relative time. Examples: '2022-01-14T12:00:00Z' or '-1m@m'"
          default: -1m@m
          example: now
        cronSchedule:
          type: string
          title: Cron schedule
          description: A cron schedule on which to run this job
          default: "*/15 * * * *"
          example: "*/5 * * * *"
        endpoint:
          type: string
          title: Search endpoint
          default: /services/search/v2/jobs/export
          description: REST API used to create a search
          example: /services/search/v2/jobs/export
        outputMode:
          type: string
          title: Output mode
          description: Format of the returned output
          enum:
            - csv
            - json
          default: json
          example: json
        endpointParams:
          title: Endpoint parameters
          type: array
          description: Optional request parameters to send to the endpoint
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                title: Parameter Name
                type: string
                example: earliest_time
              value:
                title: Value
                type: string
                description: JavaScript expression to compute the parameter's value, normally
                  enclosed in backticks (e.g., `${earliest}`). If a constant,
                  use single quotes (e.g., 'earliest'). Values without
                  delimiters (e.g., earliest) are evaluated as strings.
                example: '${earliest}'
          example:
            - name: earliest_time
              value: '${earliest}'
            - name: latest_time
              value: '${latest}'
        endpointHeaders:
          title: Endpoint headers
          description: Optional request headers to send to the endpoint
          type: array
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Header Name
                example: Authorization
              value:
                type: string
                title: Value
                description: JavaScript expression to compute the header's value, normally
                  enclosed in backticks (e.g., `${earliest}`). If a constant,
                  use single quotes (e.g., 'earliest'). Values without
                  delimiters (e.g., earliest) are evaluated as strings.
                example: '"Bearer $${{secret:splunk_token}"'
          example:
            - name: Authorization
              value: '"Bearer $${{secret:splunk_token}"'
        logLevel:
          type: string
          title: Log level
          enum:
            - error
            - warn
            - info
            - debug
          description: Collector runtime log level (verbosity)
          example: info
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Use 0 for no timeout.
          minimum: 0
          maximum: 2400
          default: 0
          example: 120
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: When a DNS server returns multiple addresses, @{product} will cycle
            through them in the order returned
          default: false
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA
            (such as self-signed certificates)
          default: false
          example: false
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set,
            @{product} will default to UTF-8 but may incorrectly interpret
            multi-byte characters.
          example: UTF-8
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
          example: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: 15m
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"splunk_search"'
          example:
            - name: source
              value: '"splunk_search"'
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff).
                Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will
                occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of HTTP codes that trigger a retry. Leave empty to use the
                default list of 429 and 503.
              minItems: 1
              default:
                - 429
                - 503
              items:
                type: number
                minLength: 1
              example:
                - 429
                - 503
                - 502
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or
                a timestamp after which to retry the request. The delay is
                limited to 20 seconds, even if the Retry-After header specifies
                a longer delay. When disabled, all Retry-After headers are
                ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT)
                error occurs
              default: false
              example: true
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          default:
            - Splunk Search Ruleset
          items:
            type: string
          example:
            - Splunk Search Ruleset
            - access-logs-v1
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 15000
        authType:
          type: string
          title: Authentication type
          description: Splunk Search authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: basic
          example: basic
        description:
          type: string
          title: Description
          example: Scheduled Splunk search for error rates
        username:
          type: string
          title: Username
          example: splunk_user
        password:
          type: string
          title: Password
          example: $${{secret:splunk_password}
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: $${{secret:splunk_token}
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: splunk-credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: splunk-token-secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://splunk.example.com:8089/services/auth/login
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: password
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: $${{secret:splunk_oauth_secret}
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
          example:
            - name: grant_type
              value: client_credentials
            - name: scope
              value: search:read
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
          example:
            - name: Accept
              value: application/json
      type: object
    InputSplunkHec:
      required:
        - host
        - port
        - splunkHecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: splunk-hec-listener
        type:
          type: string
          enum:
            - splunk_hec
          example: splunk_hec
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - splunk
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/splunk
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 8088
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              authType:
                title: Authentication method
                type: string
                enum:
                  - manual
                  - secret
                default: manual
                description: Select Manual to enter an auth token directly, or select Secret to
                  use a text secret to authenticate
                example: manual
              tokenSecret: {}
              token: {}
              enabled:
                type: boolean
                title: Enable token
                default: true
                example: true
              description:
                type: string
                title: Description
                description: Optional token description
                example: Token for HEC webhooks
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at
                  the token level. Supports wildcards. To skip validation, leave
                  blank.
                minItems: 0
                items:
                  type: string
                  minLength: 1
                example:
                  - main
                  - metrics
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: sourcetype
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes
                        or backticks. (Can evaluate to a constant.)
                      example: '"http:hec"'
          example:
            - authType: manual
              token: secret-token-1
              enabled: true
              description: Token for HEC webhooks
              allowedIndexesAtToken:
                - main
              metadata:
                - name: sourcetype
                  value: '"http:hec"'
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: splunk-hec-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:hec_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which to listen for the Splunk HTTP Event
            Collector API requests. This input supports the /event, /raw and
            /s2s endpoints.
          default: /services/collector
          pattern: ^/
          example: /services/collector
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. Overrides fields added at the token
            or request level. See [the Source
            documentation](https://docs.cribl.io/stream/sources-splunk-hec/#fields)
            for more info.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"hec"'
          example:
            - name: source
              value: '"hec"'
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip
            validation. Supports wildcards. The values here can expand index
            validation at the token level.
          minItems: 0
          items:
            type: string
            minLength: 1
          example:
            - main
            - metrics
        splunkHecAcks:
          type: boolean
          title: Splunk HEC acks
          description: Enable Splunk HEC acknowledgements
          default: false
          example: false
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - access-logs-v1
            - syslog-breaker
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 15000
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone (S2S only)
          default: true
          description: Event Breakers will determine events' time zone from UF-provided
            metadata, when TZ can't be inferred from the raw event
          example: true
        dropControlFields:
          type: boolean
          title: Drop control fields (S2S only)
          description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If
            disabled, control fields are stored in the internal field
            `__ctrlFields`.
          default: true
          example: true
        extractMetrics:
          type: boolean
          title: Extract metrics (S2S only)
          description: Extract and process Splunk-generated metrics as Cribl metrics
          default: false
          example: true
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS
            (cross-origin resource sharing) Access-Control-Allow-* headers.
            Supports wildcards.
          minItems: 0
          items:
            type: string
            minLength: 1
          example:
            - https://app.example.com
            - https://grafana.example.com
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed
            origins as "Access-Control-Allow-Headers" in a CORS preflight
            response. Use "*" to allow all headers.
          minItems: 0
          items:
            type: string
            minLength: 1
          example:
            - Authorization
            - Content-Type
        emitTokenMetrics:
          type: boolean
          title: Emit per-token request metrics
          description: Emit per-token (<prefix>.http.perToken) and summary
            (<prefix>.http.summary) request metrics
          default: false
          example: true
        description:
          type: string
          title: Description
          example: Splunk HEC listener for webhooks
      type: object
    InputAzureBlob:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: azure-blob-queue
        type:
          type: string
          enum:
            - azure_blob
          example: azure_blob
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - azure
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/azure
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        queueName:
          type: string
          title: Queue
          description: "The storage account queue name blob notifications will be read
            from. Value must be a JavaScript expression (which can evaluate to a
            constant value), enclosed in quotes or backticks. Can be evaluated
            only at initialization time. Example referencing a Global Variable:
            `myQueue-${C.vars.myVar}`"
          example: my-blob-notify-queue
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: ^logs/.*\.json$
        visibilityTimeout:
          type: number
          title: Visibility timeout (secs)
          description: The duration (in seconds) that the received messages are hidden
            from subsequent retrieve requests after being retrieved by a
            ReceiveMessage request.
          default: 600
          minimum: 0
          maximum: 604800
          example: 300
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the
            better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 4
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages to return in a poll request. Azure
            storage queues never returns more messages than this value (however,
            fewer messages might be returned). Valid values: 1 to 32."
          default: 1
          minimum: 1
          maximum: 32
          example: 16
        servicePeriodSecs:
          type: number
          title: Service period (secs)
          description: The duration (in seconds) which pollers should be validated and
            restarted if exited
          default: 5
          minimum: 1
          maximum: 10
          example: 5
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default,
            which allows retries after processing errors.
          default: false
          example: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"azure_blob"'
          example:
            - name: source
              value: '"azure_blob"'
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - access-logs-v1
            - json-breaker
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 15000
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
          example: 10
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk.
            Processing will stop if a chunk cannot be downloaded within the time
            specified.
          default: 600
          maximum: 3600
          minimum: 1
          example: 900
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - clientSecret
            - clientCert
          default: manual
          example: clientSecret
        description:
          type: string
          title: Description
          example: Azure Blob queue events ingester
        connectionString:
          type: string
          title: Connection string
          example: $${{secret:azure_storage_connection_string}
          description: Enter your Azure Storage account connection string. If left blank,
            Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select or create a stored text secret
        storageAccountName:
          type: string
          title: Storage account name
          description: The name of your Azure storage account
        tenantId:
          type: string
          title: Tenant ID
          description: The service principal's tenant ID
        clientId:
          type: string
          title: Client ID
          description: The service principal's client ID
        azureCloud:
          type: string
          title: Azure Cloud
          description: The Azure cloud to use. Defaults to Azure Public Cloud.
        endpointSuffix:
          type: string
          title: Endpoint suffix
          description: Endpoint suffix for the service URL. Takes precedence over the
            Azure Cloud setting. Defaults to core.windows.net.
        clientTextSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
        certificate:
          type: object
          required:
            - certificateName
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the
                Azure portal
      type: object
    InputElastic:
      required:
        - host
        - port
        - elasticAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: elastic-listener
        type:
          type: string
          enum:
            - elastic
          example: elastic
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - elastic
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/elastic
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 9200
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: elastic-listener-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:elastic_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint
          description: Absolute path on which to listen for Elasticsearch API requests.
            Defaults to /. _bulk will be appended automatically. For example,
            /myPath becomes /myPath/_bulk. Requests can then be made to either
            /myPath/_bulk or /myPath/<myIndexName>/_bulk. Other entries are
            faked as success.
          default: /
          pattern: ^/
          example: /ingest
        authType:
          type: string
          title: Authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - authTokens
          default: none
          example: basic
        apiVersion:
          type: string
          title: API version
          description: The API version to use for communicating with the server
          enum:
            - 6.8.4
            - 8.3.2
            - custom
          default: 8.3.2
          example: 8.3.2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
          default:
            - name: X-elastic-product
              value: Elasticsearch
          example:
            - name: X-elastic-product
              value: Elasticsearch
            - name: X-Request-ID
              value: ${C.requestId}
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"elastic"'
          example:
            - name: source
              value: '"elastic"'
        proxyMode:
          type: object
          title: ""
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable proxy mode
              default: false
              description: Enable proxying of non-bulk API requests to an external Elastic
                server. Enable this only if you understand the implications. See
                [Cribl
                Docs](https://docs.cribl.io/stream/sources-elastic/#proxy-mode)
                for more details.
              example: true
            url:
              type: string
              title: Proxy URL
              description: URL of the Elastic server to proxy non-bulk requests to, such as
                http://elastic:9200
              example: https://elastic.example.com:9200
            rejectUnauthorized:
              type: boolean
              title: Reject unauthorized certificates
              description: Reject certificates that cannot be verified against a valid CA
                (such as self-signed certificates)
              default: false
              example: false
            removeHeaders:
              type: array
              title: Remove headers
              description: List of headers to remove from the request to proxy
              minItems: 0
              items:
                type: string
                minLength: 1
              example:
                - Authorization
                - Content-Length
            timeoutSec:
              type: number
              default: 60
              minimum: 1
              maximum: 9007199254740991
              title: Proxy request timeout
              description: Amount of time, in seconds, to wait for a proxy request to complete
                before canceling it
              example: 60
            authType:
              title: Authentication method
              type: string
              enum:
                - none
                - manual
                - secret
              default: none
              description: Enter credentials directly, or select a stored secret
              example: manual
        description:
          type: string
          title: Description
          example: Elasticsearch bulk listener with proxy for non-bulk APIs
        username:
          type: string
          title: Username
          example: elastic
        password:
          type: string
          title: Password
          example: $${{secret:elastic_proxy_password}
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: elastic-proxy-credentials
        authTokens:
          type: array
          title: Token
          description: Bearer tokens to include in the authorization header
          items:
            type: string
          example:
            - es-api-token-1
            - es-api-token-2
        customAPIVersion:
          type: string
          title: Custom API Version
          description: Custom version information to respond to requests
          default: |-
            {
                "name": "AzU84iL",
                "cluster_name": "cribl",
                "cluster_uuid": "Js6_Z2VKS3KbfRSxPmPbaw",
                "version": {
                    "number": "8.3.2",
                    "build_type": "tar",
                    "build_hash": "bca0c8d",
                    "build_date": "2019-10-16T06:19:49.319352Z",
                    "build_snapshot": false,
                    "lucene_version": "9.7.2",
                    "minimum_wire_compatibility_version": "7.17.0",
                    "minimum_index_compatibility_version": "7.0.0"
                },
                "tagline": "You Know, for Search"
            }
          example: |-
            { \n
                "name": "Cribl Elastic Proxy", \n
                "cluster_name": "cribl", \n
                "cluster_uuid": "abcd1234efgh5678ijkl9012", \n
                "version": { \n
                    "number": "8.11.1", \n
                    "build_type": "tar", \n
                    "build_hash": "1a2b3c4", \n
                    "build_date": "2025-09-01T00:00:00.000Z", \n
                    "build_snapshot": false, \n
                    "lucene_version": "9.10.0", \n
                    "minimum_wire_compatibility_version": "7.17.0", \n
                    "minimum_index_compatibility_version": "7.0.0" \n
                }, \n
                "tagline": "You Know, for Search" \n
            }
      type: object
    InputConfluentCloud:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: ccloud-nginx
        type:
          type: string
          enum:
            - confluent_cloud
          example: confluent_cloud
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - ccloud
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/nginx
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        brokers:
          type: array
          title: Bootstrap servers
          description: List of Confluent Cloud bootstrap servers to use, such as
            yourAccount.confluent.cloud:9092
          minItems: 1
          items:
            type: string
            minLength: 1
          example:
            - pkc-12345.us-central1.gcp.confluent.cloud:9092
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: pkc-12345.us-central1.gcp.confluent.cloud
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: ccloud-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:ccloud_key_pass}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl
            suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
          example:
            - nginx_access
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to
            'Cribl'.
          example: web-team
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a
            topic, to read starting with the earliest available message
          example: true
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example:
                http://localhost:8081. To connect over TLS, use https instead of
                http."
              default: http://localhost:8081
              example: https://psrc-12345.us-central1.gcp.confluent.cloud
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete
                successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a
                request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema
                Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 3
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry
                using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: ccloud-schema-basic
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the CA
                    certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                  example: psrc-12345.us-central1.gcp.confluent.cloud
                certificateName:
                  type: string
                  title: Certificate
                  example: ccloud-schema-cert
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                  example: /etc/ssl/certs/ca.pem
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/private/client.key
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/certs/client.crt
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: $${{secret:ccloud_key_pass}
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.2
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.3
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 15000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 10
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and
            minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180
            seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 120000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum
            is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 500
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency
            for failed messages. For faster retries, use a lower multiplier. For
            slower retries with more delay between attempts, use a higher
            multiplier. The multiplier is used in an exponential backoff
            formula; see the Kafka
            [documentation](https://kafka.js.org/docs/retry-detailed) for
            details.
          default: 2
          minimum: 2
          maximum: 20
          example: 3
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 15000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backward from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 300000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              example: scram-sha-512
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: >-2
                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires,
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
          example: 30000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: >-2
                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: >-2
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
          example: 3000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit
            threshold are set, @{product} commits offsets when either condition
            is met. If both are empty, @{product} commits offsets after each
            batch.
          minimum: 1000
          maximum: 3600000
          example: 5000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both
            this and Offset commit interval are set, @{product} commits offsets
            when either condition is met. If both are empty, @{product} commits
            offsets after each batch.
          minimum: 1
          maximum: 10000
          example: 1000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per
            fetch request. Must equal or exceed the maximum message size
            (maxBytesPerPartition) that Kafka is configured to allow. Otherwise,
            @{product} can get stuck trying to retrieve messages. Defaults to
            1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
          example: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request.
            Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
          example: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a
            socket
          minimum: 0
          maximum: 100
          default: 0
          example: 0
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"ccloud"'
          example:
            - name: source
              value: '"ccloud"'
        description:
          type: string
          title: Description
          example: Confluent Cloud consumer for nginx access logs
      type: object
    InputGrafana:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: grafana-listener
        type:
          type: string
          enum:
            - grafana
          example: grafana
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - grafana
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/grafana
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 4318
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: grafana-listener-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:grafana_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep alive timeout (seconds)
          description: Maximum time to wait for additional data, after the last response
            was sent, before closing a socket connection. This can be very
            useful when Grafana Agent remote write's request frequency is high
            so, reusing connections, would help mitigating the cost of creating
            a new connection per request. Note that Grafana Agent's embedded
            Prometheus would attempt to keep connections open for up to 5
            minutes.
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Grafana Agent's Remote Write
            requests. Defaults to /api/prom/push, which will expand as:
            'http://<your‑upstream‑URL>:<your‑port>/api/prom/push'. Either this
            field or 'Logs API endpoint' must be configured."
          default: /api/prom/push
          pattern: ^/
          example: /api/prom/push
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults
            to /loki/api/v1/push, which will (in this example) expand as:
            'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'. Either
            this field or 'Remote Write API endpoint' must be configured."
          default: /loki/api/v1/push
          pattern: ^/
          example: /loki/api/v1/push
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Remote Write authentication type
              enum:
                - none
                - basic
                - credentialsSecret
                - token
                - textSecret
                - oauth
              default: none
              example: basic
            username:
              type: string
              title: Username
              example: grafana
            password:
              type: string
              title: Password
              example: $${{secret:prom_password}
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
              example: $${{secret:prom_token}
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
              example: prom-credentials
            textSecret:
              type: string
              title: Token (text secret)
              description: Select or create a stored text secret
              example: prom-token-secret
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
              example: https://grafana.example.com/oauth/token
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
              example: client_secret
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
              example: $${{secret:prom_oauth_secret}
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be
                top-level (e.g., 'token'); or nested, using a period (e.g.,
                'data.token').
              example: access_token
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to
                pass in requests. The value `${token}` is used to reference the
                token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
              example: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: number
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
              example: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request.
                @{product} will combine the secret with these parameters, and
                will send the URL-encoded result in a POST request to the
                endpoint specified in the 'Login URL'. We'll automatically add
                the content-type header 'application/x-www-form-urlencoded' when
                sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                    example: grant_type
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
                    example: client_credentials
              example:
                - name: grant_type
                  value: client_credentials
                - name: scope
                  value: metrics:write
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product}
                will automatically add the content-type header
                'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                    example: Accept
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
                    example: application/json
              example:
                - name: Accept
                  value: application/json
                - name: Content-Type
                  value: application/x-www-form-urlencoded
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Loki logs authentication type
              enum:
                - none
                - basic
                - credentialsSecret
                - token
                - textSecret
                - oauth
              default: none
              example: token
            username:
              type: string
              title: Username
              example: loki_user
            password:
              type: string
              title: Password
              example: $${{secret:loki_password}
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
              example: $${{secret:loki_token}
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
              example: loki-credentials
            textSecret:
              type: string
              title: Token (text secret)
              description: Select or create a stored text secret
              example: loki-token-secret
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
              example: https://loki.example.com/oauth/token
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
              example: client_secret
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
              example: $${{secret:loki_oauth_secret}
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be
                top-level (e.g., 'token'); or nested, using a period (e.g.,
                'data.token').
              example: access_token
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to
                pass in requests. The value `${token}` is used to reference the
                token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
              example: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: number
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
              example: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request.
                @{product} will combine the secret with these parameters, and
                will send the URL-encoded result in a POST request to the
                endpoint specified in the 'Login URL'. We'll automatically add
                the content-type header 'application/x-www-form-urlencoded' when
                sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                    example: grant_type
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
                    example: client_credentials
              example:
                - name: grant_type
                  value: client_credentials
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product}
                will automatically add the content-type header
                'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                    example: Accept
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
                    example: application/json
              example:
                - name: Accept
                  value: application/json
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"grafana"'
          example:
            - name: source
              value: '"grafana"'
        description:
          type: string
          title: Description
          example: Grafana listener supporting Prom remote write and Loki logs
      type: object
      anyOf:
        - required:
            - prometheusAPI
        - required:
            - lokiAPI
    InputLoki:
      required:
        - host
        - port
        - lokiAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: loki-listener
        type:
          type: string
          enum:
            - loki
          example: loki
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - loki
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/loki
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 3100
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: loki-listener-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:loki_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults
            to /loki/api/v1/push, which will (in this example) expand as:
            'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'."
          default: /loki/api/v1/push
          pattern: ^/
          example: /loki/api/v1/push
        authType:
          type: string
          title: Authentication type
          description: Loki logs authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          example: token
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"loki"'
          example:
            - name: source
              value: '"loki"'
        description:
          type: string
          title: Description
          example: Loki logs listener
        username:
          type: string
          title: Username
          example: loki_user
        password:
          type: string
          title: Password
          example: $${{secret:loki_password}
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: $${{secret:loki_token}
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: loki-credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: loki-token-secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://loki.example.com/oauth/token
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: client_secret
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: $${{secret:loki_oauth_secret}
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
          example:
            - name: grant_type
              value: client_credentials
            - name: scope
              value: logs:write
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
      type: object
    InputPrometheusRw:
      required:
        - host
        - port
        - prometheusAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: prom-rw-listener
        type:
          type: string
          enum:
            - prometheus_rw
          example: prometheus_rw
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - prometheus
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/prometheus
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 9090
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: prom-listener-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:prom_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Prometheus requests. Defaults
            to /write, which will expand as:
            http://<your‑upstream‑URL>:<your‑port>/write."
          default: /write
          pattern: ^/
          example: /write
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          example: basic
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"prometheus_rw"'
          example:
            - name: source
              value: '"prometheus_rw"'
        description:
          type: string
          title: Description
          example: Prometheus Remote Write listener
        username:
          type: string
          title: Username
          example: prom_user
        password:
          type: string
          title: Password
          example: $${{secret:prom_password}
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: $${{secret:prom_token}
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: prom-credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: prom-token-secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://prom.example.com/oauth/token
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: client_secret
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: $${{secret:prom_oauth_secret}
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
          example:
            - name: grant_type
              value: client_credentials
            - name: scope
              value: metrics:write
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
          example:
            - name: Accept
              value: application/json
            - name: X-Request-ID
              value: ${C.requestId}
      type: object
    InputPrometheus:
      required:
        - interval
        - logLevel
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: prometheus-scraper
        type:
          type: string
          enum:
            - prometheus
          example: prometheus
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - prometheus
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/prometheus
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        dimensionList:
          type: array
          title: Extra Dimensions
          minItems: 0
          default:
            - host
            - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
          example:
            - host
            - source
            - region
        discoveryType:
          title: Discovery Type
          type: string
          enum:
            - static
            - dns
            - ec2
          description: Target discovery mechanism. Use static to manually enter a list of
            targets.
          default: static
          example: static
        interval:
          type: number
          title: Poll Interval
          description: How often in minutes to scrape targets for metrics, 60 must be
            evenly divisible by the value or save will fail.
          minimum: 1
          maximum: 60
          default: 15
          example: 5
        logLevel:
          type: string
          title: Log Level
          enum:
            - error
            - warn
            - info
            - debug
          description: Collector runtime Log Level
          default: info
          example: info
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
          example: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: 15m
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"prometheus"'
          example:
            - name: source
              value: '"prometheus"'
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter credentials directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: Prometheus pull-based scraper
        targetList:
          type: array
          title: Targets
          minItems: 1
          default: []
          description: "List of Prometheus targets to pull metrics from. Values can be in
            URL or host[:port] format. For example:
            http://localhost:9090/metrics, localhost:9090, or localhost. In
            cases where just host[:port] is specified, the endpoint will resolve
            to 'http://host[:port]/metrics'."
          items:
            type: string
            title: Targets
          example:
            - http://localhost:9090/metrics
            - node-exporter:9100
            - db:9200/metrics
        nameList:
          type: array
          title: DNS Names
          minItems: 1
          default: []
          description: List of DNS names to resolve
          items:
            type: string
            title: DNS Names
          example:
            - web-*.example.com
            - db-1.internal.example.com
        recordType:
          type: string
          title: Record Type
          enum:
            - SRV
            - A
            - AAAA
          description: DNS Record type to resolve
          default: SRV
          example: SRV
        scrapeProtocol:
          type: string
          title: Metrics Protocol
          enum:
            - http
            - https
          description: Protocol to use when collecting metrics
          default: http
          example: http
        scrapePath:
          type: string
          title: Metrics Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
          example: /metrics
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the
            private IP address should be used.
          default: true
          example: true
        scrapePort:
          type: number
          title: Metrics Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
          example: 9100
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
              - Name
              - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see:
                  https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_De\
                  scribeInstances.html for more information. Attributes can be
                  manually entered if not present in the drop down list"
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be
                  returned
                minItems: 0
                default: []
                items:
                  type: string
                  minLength: 1
          example:
            - Name: tag:Role
              Values:
                - app
                - web
            - Name: instance-state-name
              Values:
                - running
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: $${{secret:aws_secret_access_key}
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to EC2-compatible endpoint.
          example: https://ec2.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/prometheus-discovery
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
          example: prom_user
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
          example: $${{secret:prom_password}
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: prom-credentials
      type: object
    InputEdgePrometheus:
      required:
        - interval
        - discoveryType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: edge-prom-scraper
        type:
          type: string
          enum:
            - edge_prometheus
          example: edge_prometheus
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - edge
            - prometheus
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/prom-edge
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        dimensionList:
          type: array
          title: Extra Dimensions
          minItems: 0
          default:
            - host
            - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
          example:
            - host
            - source
            - region
        discoveryType:
          title: Discovery Type
          type: string
          enum:
            - static
            - dns
            - ec2
            - k8s-node
            - k8s-pods
          description: Target discovery mechanism. Use static to manually enter a list of
            targets.
          default: static
          example: k8s-pods
        interval:
          type: number
          title: Poll Interval
          description: How often in seconds to scrape targets for metrics.
          minimum: 2
          default: 15
          example: 10
        timeout:
          type: number
          title: HTTP Connection Timeout
          description: Timeout, in milliseconds, before aborting HTTP connection attempts;
            1-60000 or 0 to disable
          default: 5000
          maximum: 60000
          minimum: 0
          example: 5000
        persistence:
          type: object
          title: Disk Spooling
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events on disk for Cribl Edge and Search. Default is
                disabled.
              default: false
              example: true
            timeWindow:
              type: string
              title: Bucket time span
              description: Time period for grouping spooled events. Default is 10m.
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space that can be consumed before older buckets are
                deleted. Examples: 420MB, 4GB. Default is 1GB."
              pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
              default: 1GB
              example: 4GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data before older buckets are
                deleted. Examples: 2h, 4d. Default is 24h."
              pattern: \d+[smhd]$
              default: 24h
              example: 48h
            compress:
              type: string
              title: Compression
              description: Data compression format. Default is gzip.
              enum:
                - none
                - gzip
              default: gzip
              example: gzip
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"edge_prometheus"'
          example:
            - name: source
              value: '"edge_prometheus"'
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - kubernetes
          default: manual
          description: Enter credentials directly, or select a stored secret
          example: kubernetes
        description:
          type: string
          title: Description
          example: Edge Prometheus scraper with K8s discovery
        targets:
          type: array
          title: Targets
          default: []
          minItems: 1
          items:
            type: object
            required:
              - host
            properties:
              protocol:
                type: string
                title: Protocol
                enum:
                  - http
                  - https
                description: Protocol to use when collecting metrics
                default: http
                example: http
              host:
                type: string
                title: Host
                example: node-exporter
                description: Name of host from which to pull metrics.
              port:
                type: number
                title: Port
                description: The port number in the metrics URL for discovered targets.
                minimum: 1
                maximum: 65535
                default: 9090
                example: 9100
              path:
                type: string
                title: Path
                description: Path to use when collecting metrics from discovered targets
                default: /metrics
                pattern: ^/.*
                example: /metrics
        nameList:
          type: array
          title: DNS Names
          minItems: 1
          default: []
          description: List of DNS names to resolve
          items:
            type: string
            title: DNS Names
          example:
            - web-*.example.com
            - node-exporter.internal.example.com
        recordType:
          type: string
          title: Record Type
          enum:
            - SRV
            - A
            - AAAA
          description: DNS Record type to resolve
          default: SRV
          example: SRV
        scrapeProtocol:
          type: string
          title: Protocol
          enum:
            - http
            - https
          description: Protocol to use when collecting metrics
          default: http
          example: http
        scrapePath:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
          example: /metrics
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the
            private IP address should be used.
          default: true
          example: true
        scrapePort:
          type: number
          title: Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
          example: 9100
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
              - Name
              - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see:
                  https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_De\
                  scribeInstances.html for more information. Attributes can be
                  manually entered if not present in the drop down list"
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be
                  returned
                minItems: 0
                default: []
                items:
                  type: string
                  minLength: 1
          example:
            - Name: tag:Role
              Values:
                - edge
                - collector
            - Name: instance-state-name
              Values:
                - running
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: $${{secret:aws_secret_access_key}
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to EC2-compatible endpoint.
          example: https://ec2.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/edge-prom-discovery
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        scrapeProtocolExpr:
          type: string
          title: Protocol
          description: Protocol to use when collecting metrics
          default: metadata.annotations['prometheus.io/scheme'] || 'http'
          example: "metadata.annotations['prometheus.io/scheme'] || 'http'"
        scrapePortExpr:
          type: string
          title: Port
          description: The port number in the metrics URL for discovered targets.
          default: metadata.annotations['prometheus.io/port'] || 9090
          example: "metadata.annotations['prometheus.io/port'] || 9100"
        scrapePathExpr:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: metadata.annotations['prometheus.io/path'] || '/metrics'
          example: "metadata.annotations['prometheus.io/path'] || '/metrics'"
        podFilter:
          type: array
          title: Filter Rules
          description: |2
              Add rules to decide which pods to discover for metrics.
              Pods are searched if no rules are given or of all the rules'
              expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to pods objects. Return 'true' to
                  include it.
                example: metadata.annotations['prometheus.io/scrape']
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: Scrape pod if annotation is true
          default:
            - filter: metadata.annotations['prometheus.io/scrape']
              description: Scrape pod if annotation is true
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
          example: edge_user
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
          example: $${{secret:edge_prom_password}
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: edge-prom-credentials
      type: object
    InputOffice365Mgmt:
      required:
        - tenantId
        - appId
        - planType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: o365-mgmt
        type:
          type: string
          enum:
            - office365_mgmt
          example: office365_mgmt
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - o365
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/o365
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically
            Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
          example: enterprise_gcc
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
          example: 11111111-2222-3333-4444-555555555555
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
          example: 99999999-aaaa-bbbb-cccc-111111111111
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
          example: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
          example: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: 15m
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"office365_mgmt"'
          example:
            - name: source
              value: '"office365_mgmt"'
        publisherIdentifier:
          type: string
          title: Publisher Identifier
          description: Optional Publisher Identifier to use in API requests, defaults to
            tenant id if not defined. For more information see
            [here](https://docs.microsoft.com/en-us/office/office-365-management-api/office-365-management-activity-api-reference#start-a-subscription)
          example: my-company-cribl
        contentConfig:
          type: array
          title: Content Types
          default:
            - contentType: Active Directory
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: Exchange
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: SharePoint
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: General
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: DLP
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
          items:
            type: object
            required:
              - contentType
              - interval
              - logLevel
              - enabled
            properties:
              contentType:
                type: string
                title: Content type
                example: Exchange
                description: Office 365 Management Activity API Content Type
              description:
                type: string
                title: Description
                description: If interval type is minutes the value entered must evenly divisible
                  by 60 or save will fail
              interval:
                type: number
                title: Poll interval
                description: Interval, in minutes, between polls
                minimum: 1
                maximum: 60
                example: 5
              logLevel:
                type: string
                title: Log level
                enum:
                  - error
                  - warn
                  - info
                  - debug
                example: info
              enabled:
                type: boolean
                title: Enabled
                example: true      
          description: "Enable Office 365 Management Activity API content types and
            polling intervals. Polling intervals are used to set up search date
            range and cron schedule, e.g.: */${interval} * * * *. Because of
            this, intervals entered must be evenly divisible by 60 to give a
            predictable schedule."
        ingestionLag:
          type: number
          title: Ingestion lag (minutes)
          description: Use this setting to account for ingestion lag. This is necessary
            because there can be a lag of 60 - 90 minutes (or longer) before
            Office 365 events are available for retrieval.
          default: 0
          minimum: 0
          maximum: 7200
          example: 90
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff).
                Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will
                occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the
                default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
              example:
                - 429
                - 500
                - 503
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or
                a timestamp after which to retry the request. The delay is
                limited to 20 seconds, even if the Retry-After header specifies
                a longer delay. When disabled, all Retry-After headers are
                ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT)
                error occurs
              default: false
              example: true
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: true
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: Office 365 Management API collector
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
          example: $${{secret:o365_client_secret}
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: o365-client-secret
      type: object
    InputOffice365Service:
      required:
        - tenantId
        - appId
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: o365-service
        type:
          type: string
          enum:
            - office365_service
          example: office365_service
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - o365
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/o365
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically
            Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
          example: enterprise_gcc
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
          example: 11111111-2222-3333-4444-555555555555
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
          example: 99999999-aaaa-bbbb-cccc-111111111111
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
          example: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
          example: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: 15m
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"office365_service"'
          example:
            - name: source
              value: '"office365_service"'
        contentConfig:
          type: array
          title: Content Types
          default:
            - contentType: Current Status
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: Messages
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Services API Content Type
                example: Messages
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible
                  by 60 or save will fail
                example: Poll interval minutes (1-60)
              interval:
                type: number
                title: Interval
                minimum: 0
                maximum: 60
                example: 5
              logLevel:
                type: string
                title: Log Level
                enum:
                  - error
                  - warn
                  - info
                  - debug
                example: info
                description: Collector runtime Log Level
              enabled:
                type: boolean
                title: Enabled
                example: true
          description: "Enable Office 365 Service Communication API content types and
            polling intervals. Polling intervals are used to set up search date
            range and cron schedule, e.g.: */${interval} * * * *. Because of
            this, intervals entered for current and historical status must be
            evenly divisible by 60 to give a predictable schedule."
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff).
                Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will
                occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the
                default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
              example:
                - 429
                - 500
                - 503
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or
                a timestamp after which to retry the request. The delay is
                limited to 20 seconds, even if the Retry-After header specifies
                a longer delay. When disabled, all Retry-After headers are
                ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT)
                error occurs
              default: false
              example: true
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: true
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: Office 365 Service Health collector
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
          example: $${{secret:o365_client_secret}
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: o365-client-secret
      type: object
    InputOffice365MsgTrace:
      required:
        - url
        - interval
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: o365-msg-trace
        type:
          type: string
          enum:
            - office365_msg_trace
          example: office365_msg_trace
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - o365
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/o365
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        url:
          title: Report URL
          type: string
          description: URL to use when retrieving report data.
          default: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
          example: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
        interval:
          type: number
          title: Poll interval
          description: How often (in minutes) to run the report. Must divide evenly into
            60 minutes to create a predictable schedule, or Save will fail.
          minimum: 1
          maximum: 60
          default: 60
          example: 15
        startDate:
          title: Date range start
          type: string
          description: "Backward offset for the search range's head. (E.g.: -3h@h) Message
            Trace data is delayed; this parameter (with Date range end)
            compensates for delay and gaps."
          example: -3h@h
        endDate:
          title: Date range end
          type: string
          description: "Backward offset for the search range's tail. (E.g.: -2h@h) Message
            Trace data is delayed; this parameter (with Date range start)
            compensates for delay and gaps."
          example: -2h@h
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Maximum is 2400 (40 minutes);
            enter 0 to wait indefinitely.
          minimum: 0
          maximum: 2400
          default: 300
          example: 300
        disableTimeFilter:
          type: boolean
          title: Disable time filter
          description: Disables time filtering of events when a date range is specified.
          default: true
          example: true
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - oauth
            - oauthSecret
            - oauthCert
          default: oauth
          description: Select authentication method.
          example: oauth
        rescheduleDroppedTasks:
          type: boolean
          title: Reschedule tasks
          description: Reschedule tasks that failed with non-fatal errors
          default: true
          example: true
        maxTaskReschedule:
          type: number
          title: Task reschedule limit
          description: Maximum number of times a task can be rescheduled
          default: 1
          minimum: 1
          example: 3
        logLevel:
          type: string
          title: Log level
          description: Log Level (verbosity) for collection runtime behavior.
          enum:
            - error
            - warn
            - info
            - debug
            - silly
          default: info
          example: info
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m).
            Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: 15m
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
          example: 30
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"office365_msg_trace"'
          example:
            - name: source
              value: '"office365_msg_trace"'
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff).
                Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will
                occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the
                default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
              example:
                - 429
                - 500
                - 503
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or
                a timestamp after which to retry the request. The delay is
                limited to 20 seconds, even if the Retry-After header specifies
                a longer delay. When disabled, all Retry-After headers are
                ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT)
                error occurs
              default: false
              example: true
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: true
        description:
          type: string
          title: Description
          example: Office 365 Message Trace collector
        username:
          type: string
          title: Username
          description: Username to run Message Trace API call.
          example: o365_user
        password:
          type: string
          title: Password
          description: Password to run Message Trace API call.
          example: $${{secret:o365_password}
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials.
          example: o365-credentials
        clientSecret:
          type: string
          title: Client secret
          description: client_secret to pass in the OAuth request parameter.
          example: $${{secret:o365_client_secret}
        tenantId:
          type: string
          title: Tenant identifier
          description: Directory ID (tenant identifier) in Azure Active Directory.
          example: 11111111-2222-3333-4444-555555555555
        clientId:
          type: string
          title: Client ID
          description: client_id to pass in the OAuth request parameter.
          example: 99999999-aaaa-bbbb-cccc-111111111111
        resource:
          type: string
          title: Resource
          description: Resource to pass in the OAuth request parameter.
          default: https://outlook.office365.com
          example: https://outlook.office365.com
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically
            Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
          example: enterprise_gcc
        textSecret:
          type: string
          title: Client secret
          description: Select or create a secret that references your client_secret to
            pass in the OAuth request parameter.
          example: o365-client-secret
        certOptions:
          type: object
          required:
            - privKeyPath
            - certPath
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate.
              example: o365-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path to the private key to use. Key should be in PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt the private key.
              example: $${{secret:o365_cert_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path to the certificate to use. Certificate should be in PEM
                format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
      type: object
    InputEventhub:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: eventhub-nginx
        type:
          type: string
          enum:
            - eventhub
          example: eventhub
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - eventhub
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/nginx
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        brokers:
          type: array
          title: Brokers
          description: "List of Event Hubs Kafka brokers to connect to (example:
            yourdomain.servicebus.windows.net:9093). The hostname can be found
            in the host portion of the primary or secondary connection string in
            Shared Access Policies."
          minItems: 1
          items:
            type: string
            minLength: 1
          example:
            - yourspace.servicebus.windows.net:9093
        topics:
          type: array
          title: Event Hub name
          description: "The name of the Event Hub (Kafka topic) to subscribe to. Warning:
            To optimize performance, Cribl suggests subscribing each Event Hubs
            Source to only a single topic."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
          example:
            - logs
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group this instance belongs to. Default is 'Cribl'.
          example: web-team
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Start reading from earliest available data; relevant only during
            initial subscription
          example: true
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 15000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 10
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and
            minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180
            seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 120000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum
            is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 500
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency
            for failed messages. For faster retries, use a lower multiplier. For
            slower retries with more delay between attempts, use a higher
            multiplier. The multiplier is used in an exponential backoff
            formula; see the Kafka
            [documentation](https://kafka.js.org/docs/retry-detailed) for
            details.
          default: 2
          minimum: 2
          maximum: 20
          example: 3
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 15000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backward from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 300000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            mechanism:
              type: string
              enum:
                - plain
                - oauthbearer
              title: SASL mechanism
              default: plain
              example: plain
        tls:
          type: object
          title: TLS settings (client side)
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another trusted CA (such as the
                system's)
              default: true
              example: true
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: >-2
                  Timeout (session.timeout.ms in Kafka domain) used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires, the broker will remove the client from the group and initiate a rebalance.
                  Value must be lower than rebalanceTimeout.
                  See details [here](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 30000
          minimum: 6000
          maximum: 300000
          example: 30000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: >-2
                  Maximum allowed time (rebalance.timeout.ms in Kafka domain) for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: >-2
                  Expected time (heartbeat.interval.ms in Kafka domain) between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 3000
          minimum: 1000
          maximum: 3600000
          example: 3000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit
            threshold are set, @{product} commits offsets when either condition
            is met. If both are empty, @{product} commits offsets after each
            batch.
          minimum: 1000
          maximum: 3600000
          example: 5000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both
            this and Offset commit interval are set, @{product} commits offsets
            when either condition is met. If both are empty, @{product} commits
            offsets after each batch.
          minimum: 1
          maximum: 10000
          example: 1000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per
            fetch request. Must equal or exceed the maximum message size
            (maxBytesPerPartition) that Kafka is configured to allow. Otherwise,
            @{product} can get stuck trying to retrieve messages. Defaults to
            1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
          example: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request.
            Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
          example: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a
            socket
          minimum: 0
          maximum: 100
          default: 0
          example: 0
        minimizeDuplicates:
          type: boolean
          title: Minimize duplicates
          description: Minimize duplicate events by starting only one consumer for each
            topic partition
          default: false
          example: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"eventhub"'
          example:
            - name: source
              value: '"eventhub"'
        description:
          type: string
          title: Description
          example: Azure Event Hubs Kafka consumer
      type: object
    InputExec:
      required:
        - command
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: exec-tail-logs
        type:
          enum:
            - exec
          example: exec
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - exec
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/exec
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        command:
          type: string
          title: Command
          description: Command to execute; supports Bourne shell (or CMD on Windows) syntax
          example: tail -F /var/log/nginx/access.log
        retries:
          type: number
          title: Retry limit
          description: Maximum number of retry attempts in the event that the command fails
          default: 10
          minimum: 0
          example: 5
        scheduleType:
          title: Schedule type
          type: string
          enum:
            - interval
            - cronSchedule
          default: interval
          description: Select a schedule type; either an interval (in seconds) or a
            cron-style schedule.
          example: interval
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - access-logs-v1
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 15000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"exec"'
          example:
            - name: source
              value: '"exec"'
        description:
          type: string
          title: Description
          example: Exec tail of nginx access logs
        interval:
          type: number
          title: Interval
          description: Interval between command executions in seconds.
          default: 60
          minimum: 1
          example: 60
        cronSchedule:
          type: string
          title: Schedule
          description: Cron schedule to execute the command on.
          default: "* * * * *"
          example: "*/5 * * * *"
      type: object
    InputFirehose:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: firehose-listener
        type:
          type: string
          enum:
            - firehose
          example: firehose
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - firehose
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/firehose
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 9000
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: string
          example:
            - secret-token-1
            - secret-token-2
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: firehose-listener-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:firehose_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"firehose"'
          example:
            - name: source
              value: '"firehose"'
        description:
          type: string
          title: Description
          example: Kinesis Firehose-compatible HTTP listener
      type: object
    InputGooglePubsub:
      required:
        - topicName
        - subscriptionName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: gpubsub-nginx
        type:
          type: string
          enum:
            - google_pubsub
          example: google_pubsub
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - gpubsub
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/gpubsub
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to receive events from
          example: projects/my-project/topics/nginx-logs
        subscriptionName:
          type: string
          title: Subscription ID
          description: ID of the subscription to use when receiving events
          example: projects/my-project/subscriptions/nginx-logs-sub
        createTopic:
          type: boolean
          title: Create topic
          description: Create topic if it does not exist
          default: false
          example: false
        createSubscription:
          type: boolean
          title: Create subscription
          description: Create subscription if it does not exist
          default: true
          example: true
        region:
          type: string
          title: Region
          description: Region to retrieve messages from. Select 'default' to allow Google
            to auto-select the nearest region. When using ordered delivery, the
            selected region must be allowed by message storage policy.
          example: us-central1
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC),
            Manual to enter Google service account credentials directly, or
            Secret to select or create a stored secret that references Google
            service account credentials.
          default: manual
          enum:
            - auto
            - manual
            - secret
          example: secret
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded
            from Google Cloud. To upload a file, click the upload button at this
            field's upper right.
          example: '$${{file:/secrets/gcp-service-account.json}'
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
          example: gcp-service-account
        maxBacklog:
          type: number
          title: Backlog limit
          description: If Destination exerts backpressure, this setting limits how many
            inbound events Stream will queue for processing before it stops
            retrieving events
          default: 1000
          minimum: 1
          example: 2000
        concurrency:
          type: number
          title: Number of concurrent streams
          description: How many streams to pull messages from at one time. Doubling the
            value doubles the number of messages this Source pulls from the
            topic (if available), while consuming more CPU and memory. Defaults
            to 5.
          default: 5
          minimum: 1
          maximum: 100
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Pull request timeout, in milliseconds
          default: 60000
          minimum: 10000
          example: 45000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"gpubsub"'
          example:
            - name: source
              value: '"gpubsub"'
        description:
          type: string
          title: Description
          example: Google Pub/Sub pull subscription consumer
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: Receive events in the order they were added to the queue. The
            process sending events must have ordering enabled.
          default: false
          example: false
      type: object
    InputCribl:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: cribl-internal
        type:
          type: string
          enum:
            - cribl
          example: cribl
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - internal
            - cribl
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/cribl
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        filter:
          type: string
          example: host="edge-*" AND sourcetype!="metrics"
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"cribl_internal"'
          example:
            - name: source
              value: '"cribl_internal"'
        description:
          type: string
          title: Description
          example: Internal Cribl-generated events
      type: object
    InputCriblTcp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: cribl-tcp-listener
        type:
          type: string
          enum:
            - cribl_tcp
          example: cribl_tcp
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - cribl_tcp
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/cribl
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 9514
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: cribl-tcp-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:cribl_tcp_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process.
            Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 2000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. After this time, the connection will be
            closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 60
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a
            client to close its end of the connection. If the client doesn't
            close the connection within this time, the server will forcefully
            terminate the socket to prevent resource leaks and ensure efficient
            connection cleanup and system stability. Leave at 0 for no inactive
            socket monitoring.
          default: 30
          minimum: 0
          example: 15
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This
            helps manage resources and mitigate issues caused by TCP pinning.
            Set to 0 to disable.
          default: 0
          minimum: 0
          example: 3600
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy
            protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"cribl_tcp"'
          example:
            - name: source
              value: '"cribl_tcp"'
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
          example: true
        description:
          type: string
          title: Description
          example: "This is the field used for description for this input"
      type: object
    InputCriblHttp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: cribl-http-listener
        type:
          type: string
          enum:
            - cribl_http
          example: cribl_http
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - cribl_http
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/cribl
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 8088
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: string
          example:
            - secret-token-1
            - secret-token-2
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: cribl-http-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:cribl_http_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"cribl_http"'
          example:
            - name: source
              value: '"cribl_http"'
        description:
          type: string
          title: Description
          example: Cribl HTTP-compatible ingestion endpoint
      type: object
    InputCriblLakeHttp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: lake-http-ingest
        type:
          type: string
          enum:
            - cribl_lake_http
          example: cribl_lake_http
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: lake-default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - lake
            - ingest
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/lake
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 9088
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: string
          example:
            - lake-token-1
            - lake-token-2
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: lake-http-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:lake_http_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 10
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          example: 30
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.0\.\d{1,3}$
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"cribl_lake_http"'
          example:
            - name: source
              value: '"cribl_lake_http"'
        description:
          type: string
          title: Description
          example: Cribl Lake HTTP ingestion endpoint
      type: object
    InputTcpjson:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: tcpjson-listener
        type:
          type: string
          enum:
            - tcpjson
          example: tcpjson
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - tcpjson
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/json
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 9001
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: tcpjson-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: $${{secret:tcpjson_key_pass}
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a
            connection
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process.
            Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 2000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. After this time, the connection will be
            closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 60
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a
            client to close its end of the connection. If the client doesn't
            close the connection within this time, the server will forcefully
            terminate the socket to prevent resource leaks and ensure efficient
            connection cleanup and system stability. Leave at 0 for no inactive
            socket monitoring.
          default: 30
          minimum: 0
          example: 15
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This
            helps manage resources and mitigate issues caused by TCP pinning.
            Set to 0 to disable.
          default: 0
          minimum: 0
          example: 3600
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy
            protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"tcpjson"'
          example:
            - name: source
              value: '"tcpjson"'
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
          example: true
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: TCP JSON listener for app logs
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header
            field). If empty, unauthorized access is permitted.
          default: ""
          example: $${{secret:tcpjson_token}
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: tcpjson-token-secret
      type: object
    InputSystemMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: sysmetrics
        type:
          type: string
          enum:
            - system_metrics
          example: system_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - sys
            - metrics
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/metrics
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default
            is 10 seconds.
          example: 15
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
              example: basic
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for system metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: basic
                    processes:
                      type: boolean
                      default: false
                      title: Process metrics
                      description: Generate metrics for the numbers of processes in various states
                      example: true
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for CPU metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: all
                    perCpu:
                      type: boolean
                      default: false
                      title: Per-CPU metrics
                      description: Generate metrics for each CPU
                      example: true
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                      example: true
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                      example: true
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for memory metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: all
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                      example: true
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for network metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: custom
                    devices:
                      type: array
                      title: Interface filter
                      description: "Network interfaces to include/exclude. Examples: eth0, !lo. All
                        interfaces are included if this list is empty."
                      default:
                        - "!lo"
                        - "*"
                      items:
                        type: string
                      example:
                        - "!lo"
                        - eth0
                    perInterface:
                      type: boolean
                      default: false
                      title: Per-interface metrics
                      description: Generate separate metrics for each interface
                      example: true
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                      example: true
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for disk metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: all
                    devices:
                      type: array
                      title: Device filter
                      description: "Block devices to include/exclude. Examples: sda*, !loop*.
                        Wildcards and ! (not) operators are supported. All
                        devices are included if this list is empty."
                      default:
                        - "!loop*"
                        - "*"
                      items:
                        type: string
                      example:
                        - "!loop*"
                        - sda*
                    mountpoints:
                      type: array
                      title: Mountpoint filter
                      description: "Filesystem mountpoints to include/exclude. Examples: /, /home,
                        !/proc*, !/tmp. Wildcards and ! (not) operators are
                        supported. All mountpoints are included if this list is
                        empty."
                      default: []
                      items:
                        type: string
                      example:
                        - /
                        - /var
                        - "!/proc*"
                    fstypes:
                      type: array
                      title: Filesystem type filter
                      description: "Filesystem types to include/exclude. Examples: ext4, !*tmpfs,
                        !squashfs. Wildcards and ! (not) operators are
                        supported. All types are included if this list is
                        empty."
                      default: []
                      items:
                        type: string
                      example:
                        - ext4
                        - "!*tmpfs"
                    perDevice:
                      type: boolean
                      default: false
                      title: Per-device metrics
                      description: Generate separate metrics for each device
                      example: true
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full disk metrics
                      example: true
        process:
          type: object
          properties:
            sets:
              type: array
              title: Process sets
              description: Configure sets to collect process metrics
              items:
                type: object
                required:
                  - name
                  - filter
                properties:
                  name:
                    type: string
                    title: Set Name
                    example: nginx-workers
                  filter:
                    type: string
                    title: Filter Expression
                    example: "proc.name == 'nginx'"
                  includeChildren:
                    type: boolean
                    title: Include Child Processes
                    default: false
                    example: true
        container:
          type: object
          properties:
            mode:
              type: string
              description: Select the level of detail for container metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
              example: all
            dockerSocket:
              type: array
              title: Docker socket
              description: Full paths for Docker's UNIX-domain socket
              default:
                - /var/run/docker.sock
                - /run/docker.sock
              items:
                type: string
              example:
                - /var/run/docker.sock
            dockerTimeout:
              type: number
              default: 5
              minimum: 1
              title: Docker timeout
              description: Timeout, in seconds, for the Docker API
              example: 10
            filters:
              type: array
              title: Container filters
              description: Containers matching any of these will be included. All are included
                if no filters are added.
              items:
                type: object
                required:
                  - expr
                properties:
                  expr:
                    type: string
                    title: Expression
                    example: "container.name =~ /nginx|redis/"
            allContainers:
              type: boolean
              default: false
              title: All containers
              description: Include stopped and paused containers
              example: true
            perDevice:
              type: boolean
              default: false
              title: Per-device metrics
              description: Generate separate metrics for each device
              example: true
            detail:
              type: boolean
              default: false
              title: Detailed metrics
              description: Generate full container metrics
              example: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"system_metrics"'
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              example: true
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB).
                When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 4GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When
                limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 48h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_metrics
              description: Path to use to write metrics. Defaults to
                $CRIBL_HOME/state/system_metrics
              example: /opt/cribl/state/system_metrics
        description:
          type: string
          title: Description
          example: Host, CPU, memory, network, disk, process and container metrics
      type: object
    InputSystemState:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: system-state
        type:
          type: string
          enum:
            - system_state
          example: system_state
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - sys
            - state
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
          example:
            - pipeline: parse/state
              output: datalake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: smart
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 128 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 20GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        interval:
          type: number
          default: 300
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive state collections. Default is
            300 seconds (5 minutes).
          example: 600
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"system_state"'
          example:
            - name: source
              value: '"system_state"'
        collectors:
          type: object
          properties:
            hostsfile:
              type: object
              title: Hosts File
              description: Creates events based on entries collected from the hosts file
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            interfaces:
              type: object
              title: Interfaces
              description: Creates events for each of the host’s network interfaces
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            disk:
              type: object
              title: Disks & File Systems
              description: Creates events for physical disks, partitions, and file systems
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            metadata:
              type: object
              title: Host Info
              description: Creates events based on the host system’s current state
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            routes:
              type: object
              title: Routes
              description: Creates events based on entries collected from the host’s network
                routes
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            dns:
              type: object
              title: DNS
              description: Creates events for DNS resolvers and search entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            user:
              type: object
              title: Users & Groups
              description: Creates events for local users and groups
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            firewall:
              type: object
              title: Firewall
              description: Creates events for Firewall rules entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            services:
              type: object
              title: Services
              description: Creates events from the list of services
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            ports:
              type: object
              title: Listening Ports
              description: Creates events from list of listening ports
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
            loginUsers:
              type: object
              title: Logged-In Users
              description: Creates events for logged-in users
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
        persistence:
          type: object
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              example: true
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 4GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 4d
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: none
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_state
              description: Path to use to write metrics. Defaults to
                $CRIBL_HOME/state/system_state
              example: /var/lib/cribl/state/system_state
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell) to collect events instead
            of native API (default) [Learn
            more](https://docs.cribl.io/edge/sources-system-state/#advanced-tab)
          example: false
        description:
          type: string
          title: Description
          example: Collect system state metrics and spool to disk
      type: object
    InputKubeMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: kube-metrics
        type:
          type: string
          enum:
            - kube_metrics
          example: kube_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - kubernetes
            - prod
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-main
          example:
            - pipeline: default
              output: s3-main
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        interval:
          type: number
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metrics collections. Default
            is 15 secs.
          example: 15
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Kubernetes objects to generate metrics
            for. Events are generated if no rules are given or of all the rules'
            expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true'
                  to include it.
                example: metadata.namespace == 'default'
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: Include default namespace
          default:
            - filter: "!metadata.namespace.startsWith('kube-')"
              description: Ignore the kube-* namespace
          example:
            - filter: metadata.namespace == 'default'
              description: Include default namespace
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"kube_metrics"'
          example:
            - name: source
              value: '"kube_metrics"'
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics on disk for Cribl Search
              default: false
              example: true
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB).
                When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 4GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When
                limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 4d
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/kube_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
              example: /var/lib/cribl/state/kube_metrics
        description:
          type: string
          title: Description
          example: Collect Kubernetes metrics from the API server
      type: object
    InputKubeLogs:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: kube-logs
        type:
          type: string
          enum:
            - kube_logs
          example: kube_logs
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - kubernetes
            - logs
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-logs
          example:
            - pipeline: default
              output: s3-logs
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        interval:
          type: number
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checks for new containers. Default is 15
            secs.
          example: 15
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Pods to collect logs from. Logs are
            collected if no rules are given or if all the rules' expressions
            evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Pod objects. Return 'true' to
                  include it.
                example: metadata.namespace == 'default'
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: Include default namespace
          default:
            - filter: "!metadata.namespace.startsWith('kube-')"
              description: Ignore the kube-* namespace
          example:
            - filter: metadata.namespace == 'default'
              description: Include default namespace
        timestamps:
          type: boolean
          default: false
          title: Enable timestamps
          description: For use when containers do not emit a timestamp, prefix each line
            of output with a timestamp. If you enable this setting, you can use
            the Kubernetes Logs Event Breaker and the kubernetes_logs
            Pre-processing Pipeline to remove them from the events after the
            timestamps are extracted.
          example: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"kube_logs"'
          example:
            - name: source
              value: '"kube_logs"'
        persistence:
          type: object
          title: Disk Spooling
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events on disk for Cribl Edge and Search. Default is
                disabled.
              default: false
              example: true
            timeWindow:
              type: string
              title: Bucket time span
              description: Time period for grouping spooled events. Default is 10m.
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space that can be consumed before older buckets are
                deleted. Examples: 420MB, 4GB. Default is 1GB."
              pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
              default: 1GB
              example: 4GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data before older buckets are
                deleted. Examples: 2h, 4d. Default is 24h."
              pattern: \d+[smhd]$
              default: 24h
              example: 4d
            compress:
              type: string
              title: Compression
              description: Data compression format. Default is gzip.
              enum:
                - none
                - gzip
              default: gzip
              example: gzip
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - kube-logs-breaker
            - multiline-java
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
          example: true
        description:
          type: string
          title: Description
          example: "the Description for KubeLogs type inputs"
      type: object
    InputKubeEvents:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: kube-events
        type:
          type: string
          enum:
            - kube_events
          example: kube_events
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - kubernetes
            - events
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-events
          example:
            - pipeline: default
              output: s3-events
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        rules:
          type: array
          title: Filter Rules
          description: Filtering on event fields
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true'
                  to include it.
                example: type == 'Warning'
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: Only warning events
          default: []
          example:
            - filter: type == 'Warning'
              description: Only warning events
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"kube_events"'
          example:
            - name: source
              value: '"kube_events"'
        description:
          type: string
          title: Description
          example: Collect Kubernetes cluster events
      type: object
    InputWindowsMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: windows-metrics
        type:
          type: string
          enum:
            - windows_metrics
          example: windows_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - windows
            - metrics
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-main
          example:
            - pipeline: default
              output: s3-main
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default
            is 10 seconds.
          example: 10
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
              example: basic
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for system metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all system information
                      example: true
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for CPU metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: basic
                    perCpu:
                      type: boolean
                      default: false
                      title: Per-CPU metrics
                      description: Generate metrics for each CPU
                      example: true
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                      example: true
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                      example: true
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for memory metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                      example: true
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for network metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: basic
                    devices:
                      type: array
                      title: Interface filter
                      description: Network interfaces to include/exclude. All interfaces are included
                        if this list is empty.
                      default:
                        - "!6to4*"
                        - "!*Debug*"
                        - "!*Virtual*"
                        - "!*Tunneling*"
                        - "!*IP-HTTPS*"
                        - "*"
                      items:
                        type: string
                      example:
                        - Ethernet*
                        - '!Loopback*'
                    perInterface:
                      type: boolean
                      default: false
                      title: Per interface metrics
                      example: true
                      description: Generate separate metrics for each interface
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                      example: true
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for disk metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      example: all
                    volumes:
                      type: array
                      title: Volume filter
                      description: "Windows volumes to include/exclude. E.g.: C:, !E:, etc. Wildcards
                        and ! (not) operators are supported. All volumes are
                        included if this list is empty."
                      default:
                        - "!HarddiskVolume*"
                        - "*"
                      items:
                        type: string
                      example:
                        - C:
                        - '!E:'
                    perVolume:
                      type: boolean
                      default: false
                      title: Per volume metrics
                      description: Generate separate metrics for each volume
                      example: true
        process:
          type: object
          properties:
            sets:
              type: array
              title: Process sets
              description: Configure sets to collect process metrics
              items:
                type: object
                required:
                  - name
                  - filter
                properties:
                  name:
                    type: string
                    title: Set Name
                    example: IIS worker processes
                  filter:
                    type: string
                    title: Filter Expression
                    example: name == "w3wp.exe"
                  includeChildren:
                    type: boolean
                    title: Include Child Processes
                    default: false
                    example: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"windows_metrics"'
          example:
            - name: source
              value: '"windows_metrics"'
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              example: true
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB).
                When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 4GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When
                limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 4d
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/windows_metrics
              description: Path to use to write metrics. Defaults to
                $CRIBL_HOME/state/windows_metrics
              example: /var/lib/cribl/state/windows_metrics
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell) to collect metrics
            instead of native API (default) [Learn
            more](https://docs.cribl.io/edge/sources-windows-metrics/#advanced-tab)
          example: false
        description:
          type: string
          title: Description
          example: Collect Windows performance counters and spool to disk
      type: object
    InputCrowdstrike:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: crowdstrike-sqs
        type:
          type: string
          enum:
            - crowdstrike
          example: crowdstrike
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - crowdstrike
            - edr
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-crowdstrike
          example:
            - pipeline: default
              output: s3-crowdstrike
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from.
            When a non-AWS URL is specified, format must be:
            '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value
            must be a JavaScript expression (which can evaluate to a constant
            value), enclosed in quotes or backticks. Can be evaluated only at
            init time. Example referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
          example: https://sqs.us-east-1.amazonaws.com/123456789012/crowdstrike-events
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: .*\.json(\.gz)?$
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
          example: "123456789012"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: "***REDACTED***"
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required,
            unless the Queue entry is a URL or ARN that includes a Region.
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: https://s3.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - crowdstrike-breaker
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll
            request. Amazon SQS never returns more messages than this value
            (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
          example: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request,
            @{product} will hide them from subsequent retrieve requests for at
            least this duration. You can set this as high as 43200 sec. (12
            hours).
          default: 21600
          minimum: 0
          maximum: 43200
          example: 300
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the
            better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 4
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if
            timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
          example: 600
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default,
            which allows retries after processing errors.
          default: false
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-s3-access
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
          example: true
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
              example: jq -r .message
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
              example:
                - --compact-output
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"crowdstrike"'
          example:
            - name: source
              value: '"crowdstrike"'
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
              example: true
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error
                occurs. If Skip file on error is enabled, this setting is
                ignored.
              default: 5
              maximum: 100
              minimum: 0
              example: 3
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower
            the number the higher the AWS bill. The higher the number the longer
            it will take for the source to react to configuration changes and
            system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set,
            @{product} will default to UTF-8 but may incorrectly interpret
            multi-byte characters.
          example: utf-8
        description:
          type: string
          title: Description
          example: Ingest CrowdStrike S3 notifications and objects
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
        tagAfterProcessing:
          enum:
            - false
            - true
          example: true
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field
            accepts an expression for dynamic generation.
          example: processed-by
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This
            field accepts an expression for dynamic generation.
          example: cribl-processed
      type: object
    InputDatadogAgent:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: datadog-agent-listener
        type:
          type: string
          enum:
            - datadog_agent
          example: datadog_agent
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - datadog
            - metrics
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-dd
          example:
            - pipeline: default
              output: s3-dd
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 10518
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: dd-agent-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.1\.\d{1,3}$
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Toggle to Yes to extract each incoming metric to multiple events,
            one per data point. This works well when sending metrics to a
            statsd-type output. If sending metrics to DatadogHQ or any
            destination that accepts arbitrary JSON, leave toggled to No (the
            default).
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"datadog_agent"'
          example:
            - name: source
              value: '"datadog_agent"'
        proxyMode:
          type: object
          title: ""
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Forward API key validation requests
              default: false
              description: Toggle to Yes to send key validation requests from Datadog Agent to
                the Datadog API. If toggled to No (the default), Stream handles
                key validation requests by always responding that the key is
                valid.
              example: true
            rejectUnauthorized:
              type: boolean
              title: Reject unauthorized certificates
              description: Whether to reject certificates that cannot be verified against a
                valid CA (e.g., self-signed certificates).
              default: true
              example: true
        description:
          type: string
          title: Description
          example: Accept Datadog Agent intake and forward to destinations
      type: object
    InputDatagen:
      required:
        - samples
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: datagen-synthetic
        type:
          type: string
          enum:
            - datagen
          example: datagen
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - synthetic
            - test
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-synthetic
          example:
            - pipeline: default
              output: s3-synthetic
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        samples:
          title: Datagens
          type: array
          minItems: 1
          items:
            type: object
            required:
              - sample
              - eventsPerSec
            properties:
              sample:
                type: string
                title: Data Generator File Name
                example: apache_common.log
              eventsPerSec:
                type: number
                title: Events Per Second Per Worker Node
                description: Maximum number of events to generate per second per Worker Node.
                  Defaults to 10.
                default: 10
                minimum: 1
                example: 200
          example:
            - sample: apache_common.log
              eventsPerSec: 200
            - sample: syslog.log
              eventsPerSec: 50
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"datagen"'
          example:
            - name: source
              value: '"datagen"'
        description:
          type: string
          title: Description
          example: Generate synthetic log events for testing
      type: object
    InputHttpRaw:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: http-raw-listener
        type:
          type: string
          enum:
            - http_raw
          example: http_raw
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - http
            - raw
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-raw
          example:
            - pipeline: default
              output: s3-raw
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 8088
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: string
          example:
            - supersecrettoken
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: http-raw-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.1\.\d{1,3}$
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - http-raw-breaker
            - multiline-json
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"http_raw"'
          example:
            - name: source
              value: '"http_raw"'
        allowedPaths:
          type: array
          title: Allowed URI paths
          description: List of URI paths accepted by this input, wildcards are supported,
            e.g /api/v*/hook. Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
          example:
            - /api/v1/hook
            - /webhook/*
        allowedMethods:
          type: array
          title: Allowed HTTP methods
          description: List of HTTP methods accepted by this input. Wildcards are
            supported (such as P*, GET). Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
          example:
            - POST
            - PUT
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization:
                  <token>)"
                example: supersecrettoken
              description:
                type: string
                title: Description
                example: CI webhook
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: team
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes
                        or backticks. (Can evaluate to a constant.)
                      example: '"platform"'
          example:
            - token: supersecrettoken
              description: CI webhook
              metadata:
                - name: team
                  value: '"platform"'
        description:
          type: string
          title: Description
          example: Accept raw HTTP payloads
      type: object
    InputKinesis:
      required:
        - streamName
        - region
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: kinesis-stream-ingest
        type:
          type: string
          enum:
            - kinesis
          example: kinesis
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - aws
            - kinesis
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-kinesis
          example:
            - pipeline: default
              output: s3-kinesis
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        streamName:
          type: string
          title: Stream name
          description: Kinesis Data Stream to read data from
          example: app-logs-stream
        serviceInterval:
          type: number
          title: Service period
          description: Time interval in minutes between consecutive service calls
          default: 1
          minimum: 1
          maximum: 5
          example: 1
        shardExpr:
          type: string
          title: Shard selection expression
          description: A JavaScript expression to be called with each shardId for the
            stream. If the expression evaluates to a truthy value, the shard
            will be processed.
          default: "true"
          example: shardId.endsWith('1')
        shardIteratorType:
          type: string
          title: Shard iterator start
          description: Location at which to start reading a shard for the first time
          enum:
            - TRIM_HORIZON
            - LATEST
          default: TRIM_HORIZON
          example: LATEST
        payloadFormat:
          type: string
          title: Record data format
          description: Format of data inside the Kinesis Stream records. Gzip compression
            is automatically detected.
          enum:
            - cribl
            - ndjson
            - cloudwatch
            - line
          default: cribl
          example: ndjson
        getRecordsLimit:
          type: number
          title: Records limit per call
          description: Maximum number of records per getRecords call
          minimum: 5000
          default: 5000
          maximum: 10000
          example: 8000
        getRecordsLimitTotal:
          type: number
          title: Total records limit
          description: Maximum number of records, across all shards, to pull down at once
            per Worker Process
          minimum: 20000
          default: 20000
          example: 30000
        loadBalancingAlgorithm:
          type: string
          title: Shard load balancing
          description: The load-balancing algorithm to use for spreading out shards across
            Workers and Worker Processes
          enum:
            - ConsistentHashing
            - RoundRobin
          default: ConsistentHashing
          example: ConsistentHashing
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: "***REDACTED***"
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to the AWS
            Region-specific endpoint. Otherwise, it must point to Kinesis
            stream-compatible endpoint.
          example: https://kinesis.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-kinesis-access
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        verifyKPLCheckSums:
          type: boolean
          title: Verify KPL checksums
          description: Verify Kinesis Producer Library (KPL) event checksums
          default: false
          example: true
        avoidDuplicates:
          type: boolean
          title: Avoid duplicate records
          description: When resuming streaming from a stored state, Stream will read the
            next available record, rather than rereading the last-read record.
            Enabling this setting can cause data loss after a Worker Node's
            unexpected shutdown or restart.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"kinesis"'
          example:
            - name: source
              value: '"kinesis"'
        description:
          type: string
          title: Description
          example: Ingest AWS Kinesis stream records
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
      type: object
    InputCriblmetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: cribl-metrics
        type:
          type: string
          enum:
            - criblmetrics
          example: criblmetrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - cribl
            - internal
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-metrics
          example:
            - pipeline: default
              output: s3-metrics
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        prefix:
          type: string
          title: Metric name prefix
          description: A prefix that is applied to the metrics provided by Cribl Stream
          default: cribl.logstream.
          example: cribl.logstream.
        fullFidelity:
          type: boolean
          title: Full fidelity
          description: "Include granular metrics. Disabling this will drop the following
            metrics events:
            `cribl.logstream.host.(in_bytes,in_events,out_bytes,out_events)`,
            `cribl.logstream.index.(in_bytes,in_events,out_bytes,out_events)`,
            `cribl.logstream.source.(in_bytes,in_events,out_bytes,out_events)`,
            `cribl.logstream.sourcetype.(in_bytes,in_events,out_bytes,out_event\
            s)`."
          default: true
          example: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"criblmetrics"'
          example:
            - name: source
              value: '"criblmetrics"'
        description:
          type: string
          title: Description
          example: Emit Cribl internal metrics
      type: object
    InputMetrics:
      required:
        - host
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: metrics-listener
        type:
          type: string
          enum:
            - metrics
          example: metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - metrics
            - udp
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-metrics
          example:
            - pipeline: default
              output: s3-metrics
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
          example: 0.0.0.0
        udpPort:
          type: number
          title: UDP Port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
          example: 8125
        tcpPort:
          type: number
          title: TCP Port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
          example: 8126
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
            Only applies to UDP.
          default: 1000
          minimum: 0
          example: 20000
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2
          default: false
          example: false
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: metrics-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"metrics"'
          example:
            - name: source
              value: '"metrics"'
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket.
            This value tells the operating system how many bytes can be buffered
            in the kernel before events are dropped. Leave blank to use the OS
            default. Caution: Increasing this value will affect OS memory
            utilization."
          minimum: 256
          maximum: 4294967295
        description:
          type: string
          title: Description
      type: object
    InputS3:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: s3-notifications
        type:
          type: string
          enum:
            - s3
          example: s3
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - aws
            - s3
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-main
          example:
            - pipeline: default
              output: s3-main
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from.
            When a non-AWS URL is specified, format must be:
            '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value
            must be a JavaScript expression (which can evaluate to a constant
            value), enclosed in quotes or backticks. Can be evaluated only at
            init time. Example referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
          example: https://sqs.us-east-1.amazonaws.com/123456789012/my-s3-queue
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: .*\.json(\.gz)?$
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
          example: "123456789012"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: "***REDACTED***"
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required,
            unless the Queue entry is a URL or ARN that includes a Region.
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: https://s3.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - s3-breaker
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll
            request. Amazon SQS never returns more messages than this value
            (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
          example: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request,
            @{product} will hide them from subsequent retrieve requests for at
            least this duration. You can set this as high as 43200 sec. (12
            hours).
          default: 600
          minimum: 0
          maximum: 43200
          example: 300
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the
            better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 4
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if
            timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
          example: 600
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default,
            which allows retries after processing errors.
          default: false
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-s3-access
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
          example: true
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
              example: jq -r .message
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
              example:
                - --compact-output
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"s3"'
          example:
            - name: source
              value: '"s3"'
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
          example: 10
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk.
            Processing will stop if a chunk cannot be downloaded within the time
            specified.
          default: 600
          maximum: 3600
          minimum: 1
          example: 300
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
              example: true
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error
                occurs. If Skip file on error is enabled, this setting is
                ignored.
              default: 5
              maximum: 100
              minimum: 0
              example: 3
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower
            the number the higher the AWS bill. The higher the number the longer
            it will take for the source to react to configuration changes and
            system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set,
            @{product} will default to UTF-8 but may incorrectly interpret
            multi-byte characters.
          example: utf-8
        tagAfterProcessing:
          type: boolean
          title: Tag after processing
          description: Add a tag to processed S3 objects. Requires s3:GetObjectTagging and
            s3:PutObjectTagging AWS permissions.
          default: false
          example: true
        description:
          type: string
          title: Description
          example: Ingest S3 notifications and objects
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field
            accepts an expression for dynamic generation.
          example: processed-by
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This
            field accepts an expression for dynamic generation.
          example: cribl-processed
      type: object
    InputS3Inventory:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: s3-inventory
        type:
          type: string
          enum:
            - s3_inventory
          example: s3_inventory
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - aws
            - s3-inventory
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-archive
          example:
            - pipeline: default
              output: s3-archive
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from.
            When a non-AWS URL is specified, format must be:
            '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value
            must be a JavaScript expression (which can evaluate to a constant
            value), enclosed in quotes or backticks. Can be evaluated only at
            init time. Example referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
          example: https://sqs.us-east-1.amazonaws.com/123456789012/inventory-queue
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: ^.*inventory.*\.csv(\.gz)?$
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
          example: "123456789012"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: "***REDACTED***"
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required,
            unless the Queue entry is a URL or ARN that includes a Region.
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: https://s3.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - s3-inventory-breaker
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll
            request. Amazon SQS never returns more messages than this value
            (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
          example: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request,
            @{product} will hide them from subsequent retrieve requests for at
            least this duration. You can set this as high as 43200 sec. (12
            hours).
          default: 600
          minimum: 0
          maximum: 43200
          example: 300
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the
            better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          example: 4
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if
            timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
          example: 600
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default,
            which allows retries after processing errors.
          default: false
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-s3-access
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
          example: true
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
              example: jq -r .message
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
              example:
                - --compact-output
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"s3_inventory"'
          example:
            - name: source
              value: '"s3_inventory"'
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
          example: 10
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk.
            Processing will stop if a chunk cannot be downloaded within the time
            specified.
          default: 600
          maximum: 3600
          minimum: 1
          example: 300
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
              example: true
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error
                occurs. If Skip file on error is enabled, this setting is
                ignored.
              default: 5
              maximum: 100
              minimum: 0
              example: 3
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower
            the number the higher the AWS bill. The higher the number the longer
            it will take for the source to react to configuration changes and
            system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        checksumSuffix:
          type: string
          title: Checksum Suffix
          description: Filename suffix of the manifest checksum file. If a filename
            matching this suffix is received        in the queue, the matching
            manifest file will be downloaded and validated against its value.
            Defaults to "checksum"
          default: checksum
          example: checksum
        maxManifestSizeKB:
          type: integer
          title: Manifest size limit (KB)
          description: Maximum download size (KB) of each manifest or checksum file.
            Manifest files larger than this size will not be
            read.        Defaults to 4096.
          default: 4096
          minimum: 1
          example: 4096
        validateInventoryFiles:
          type: boolean
          title: Validate inventory files
          description: If set to Yes, each inventory file in the manifest will be
            validated against its checksum. Defaults to false
          default: false
          example: true
        description:
          type: string
          title: Description
          example: Ingest S3 inventory manifests and listed objects
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
        tagAfterProcessing:
          enum:
            - false
            - true
          example: true
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field
            accepts an expression for dynamic generation.
          example: processed-by
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This
            field accepts an expression for dynamic generation.
          example: cribl-processed
      type: object
    InputSnmp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: snmp-traps
        type:
          type: string
          enum:
            - snmp
          example: snmp
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - network
            - snmp
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-network
          example:
            - pipeline: default
              output: s3-network
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: UDP port
          maximum: 65535
          description: UDP port to receive SNMP traps on. Defaults to 162.
          default: 162
          example: 162
        snmpV3Auth:
          type: object
          title: SNMPv3 authentication
          description: Authentication parameters for SNMPv3 trap. Set the log level to
            debug if you are experiencing authentication or decryption issues.
          required:
            - v3AuthEnabled
          properties:
            v3AuthEnabled:
              type: boolean
              title: Enabled
              default: false
              example: true
            allowUnmatchedTrap:
              type: boolean
              title: Allow unmatched traps
              description: Pass through traps that don't match any of the configured users.
                @{product} will not attempt to decrypt these traps.
              default: false
              example: false
            v3Users:
              type: array
              title: SNMP v3 users
              description: User credentials for receiving v3 traps
              minItems: 1
              items:
                type: object
                required:
                  - name
                properties:
                  name:
                    title: V3 name
                    type: string
                    minLength: 1
                    example: snmp-user
                  authProtocol:
                    type: string
                    default: none
                    enum:
                      - none
                      - md5
                      - sha
                      - sha224
                      - sha256
                      - sha384
                      - sha512
                    title: Authentication protocol
                    example: sha256
                  authKey: {}
                  privProtocol:
                    default: none
                    example: none
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
          example: 20000
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"snmp"'
          example:
            - name: source
              value: '"snmp"'
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket.
            This value tells the operating system how many bytes can be buffered
            in the kernel before events are dropped. Leave blank to use the OS
            default. Caution: Increasing this value will affect OS memory
            utilization."
          minimum: 256
          maximum: 4294967295
          example: 4194304
        varbindsWithTypes:
          type: boolean
          title: Include varbind types
          description: If enabled, parses varbinds as an array of objects that include
            OID, value, and type
          default: false
          example: true
        bestEffortParsing:
          type: boolean
          title: Best effort parsing
          description: If enabled, the parser will attempt to parse varbind octet strings
            as UTF-8, first, otherwise will fallback to other methods
          default: false
          example: true
        description:
          type: string
          title: Description
          example: Receive SNMP traps and forward to destinations
      type: object    
    InputOpenTelemetry:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: otel-grpc
        type:
          type: string
          enum:
            - open_telemetry
          example: open_telemetry
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - otel
            - grpc
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-otel
          example:
            - pipeline: default
              output: s3-otel
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 4317
          example: 4317
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: otel-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader: {}
        captureHeaders: {}
        activityLogSampleRate: {}
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            sec.; maximum 600 sec. (10 min.).
          default: 15
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist.
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.1\.\d{1,3}$
        protocol:
          type: string
          title: Protocol
          description: Select whether to leverage gRPC or HTTP for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
          example: grpc
        extractSpans:
          type: boolean
          title: Extract spans
          description: Enable to extract each incoming span to a separate event
          default: false
          example: true
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Enable to extract each incoming Gauge or IntGauge metric to
            multiple events, one per data point
          default: false
          example: false
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when interpreting
            received data
          enum:
            - 0.10.0
            - 1.3.1
          default: 0.10.0
          example: 1.3.1
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          example: token
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"open_telemetry"'
          example:
            - name: source
              value: '"open_telemetry"'
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process.
            Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 2000
        description:
          type: string
          title: Description
          example: Receive OpenTelemetry traces, metrics, and logs
        username:
          type: string
          title: Username
          example: otel-user
        password:
          type: string
          title: Password
          example: "***REDACTED***"
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: "***REDACTED***"
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: otel-credentials-secret
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: otel-token-secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://auth.example.com/oauth/token
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: client_secret
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: s3cr3t
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
          example:
            - name: grant_type
              value: client_credentials
            - name: scope
              value: otel.write
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
          example:
            - name: Accept
              value: application/json
        extractLogs:
          type: boolean
          title: Extract logs
          description: Enable to extract each incoming log record to a separate event
          default: false
          example: true
      type: object 
    InputModelDrivenTelemetry:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: mdt-grpc
        type:
          type: string
          enum:
            - model_driven_telemetry
          example: model_driven_telemetry
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - mdt
            - grpc
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-network
          example:
            - pipeline: default
              output: s3-network
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 57000
          example: 57000
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: mdt-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"model_driven_telemetry"'
          example:
            - name: source
              value: '"model_driven_telemetry"'
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process.
            Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 2000
        shutdownTimeoutMs:
          type: number
          title: Shutdown timeout
          description: Time in milliseconds to allow the server to shutdown gracefully
            before forcing shutdown. Defaults to 5000.
          default: 5000
          minimum: 1
          example: 5000
        description:
          type: string
          title: Description
          example: Receive MDT telemetry over gRPC
      type: object
    InputSqs:
      required:
        - queueName
        - queueType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: sqs-events
        type:
          type: string
          enum:
            - sqs
          example: sqs
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - aws
            - sqs
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-raw
          example:
            - pipeline: default
              output: s3-raw
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read events from. When a
            non-AWS URL is specified, format must be: '{url}/myQueueName'.
            Example: 'https://host:port/myQueueName'. Value must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can only be evaluated at init time. Example
            referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
          example: https://sqs.us-east-1.amazonaws.com/123456789012/events-queue
        queueType:
          title: Queue type
          type: string
          description: The queue type used (or created)
          enum:
            - standard
            - fifo
          default: standard
          example: standard
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
          example: "123456789012"
        createQueue:
          type: boolean
          title: Create queue
          description: Create queue if it does not exist
          default: false
          example: false
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: "***REDACTED***"
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the
            Queue entry is a URL or ARN that includes a Region.
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to SQS-compatible endpoint.
          example: https://sqs.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-sqs-access
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll
            request. Amazon SQS never returns more messages than this value
            (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 10
          minimum: 1
          maximum: 10
          example: 10
        visibilityTimeout:
          type: number
          title: Visibility Timeout Seconds
          description: After messages are retrieved by a ReceiveMessage request,
            @{product} will hide them from subsequent retrieve requests for at
            least this duration. You can set this as high as 43200 sec. (12
            hours).
          example: 300
          default: 600
          minimum: 0
          maximum: 43200
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"sqs"'
          example:
            - name: source
              value: '"sqs"'
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower
            the number the higher the AWS bill. The higher the number the longer
            it will take for the source to react to configuration changes and
            system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        description:
          type: string
          title: Description
          example: Ingest SQS messages
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the
            better the throughput - at the expense of CPU overhead.
          default: 3
          minimum: 1
          maximum: 100
          example: 4
      type: object
    InputSyslog:
      required:
        - host
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: syslog-listener
        type:
          type: string
          enum:
            - syslog
          example: syslog
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - syslog
            - network
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-syslog
          example:
            - pipeline: default
              output: s3-syslog
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
          example: 0.0.0.0
        udpPort:
          type: number
          title: UDP port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
          example: 514
        tcpPort:
          type: number
          title: TCP port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
          example: 514
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
            Only applies to UDP.
          default: 1000
          minimum: 0
          example: 20000
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        timestampTimezone:
          type: string
          title: Default timezone
          description: Timezone to assign to timestamps without timezone info
          default: local
          example: UTC
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: Treat UDP packet data received as full syslog message
          default: false
          example: true
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2
          default: false
          example: false
        keepFieldsList:
          type: array
          title: Fields to keep
          description: Wildcard list of fields to keep from source data; * = ALL (default)
          default: []
          minItems: 0
          items:
            type: string
          example:
            - host
            - app
        octetCounting:
          type: boolean
          title: Octet count framing
          description: Enable if incoming messages use octet counting per RFC 6587.
          default: false
          example: false
        inferFraming:
          type: boolean
          title: Infer Syslog framing
          description: Enable if we should infer the syslog framing of the incoming
            messages.
          default: true
          example: true
        strictlyInferOctetCounting:
          type: boolean
          title: Strictly infer octet count framing
          description: Enable if we should infer octet counting only if the messages
            comply with RFC 5424.
          default: true
          example: true
        allowNonStandardAppName:
          type: boolean
          title: Allow non-standard app name
          description: Enable if RFC 3164-formatted messages have hyphens in the app name
            portion of the TAG section. If disabled, only alphanumeric
            characters and underscores are allowed. Ignored for RFC
            5424-formatted messages.
          default: false
          example: true
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process for
            TCP connections. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 2000
        socketIdleTimeout:
          type: number
          title: TCP socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. After this time, the connection will be
            closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 60
        socketEndingMaxWait:
          type: number
          title: TCP forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a
            client to close its end of the connection. If the client doesn't
            close the connection within this time, the server will forcefully
            terminate the socket to prevent resource leaks and ensure efficient
            connection cleanup and system stability. Leave at 0 for no inactive
            socket monitoring.
          default: 30
          example: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: TCP Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This
            helps manage resources and mitigate issues caused by TCP pinning.
            Set to 0 to disable.
          default: 0
          minimum: 0
          example: 3600
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: syslog-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"syslog"'
          example:
            - name: source
              value: '"syslog"'
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket.
            This value tells the operating system how many bytes can be buffered
            in the kernel before events are dropped. Leave blank to use the OS
            default. Caution: Increasing this value will affect OS memory
            utilization."
          minimum: 256
          maximum: 4294967295
          example: 4194304
        enableLoadBalancing:
          type: boolean
          title: Enable TCP load balancing
          description: Load balance traffic across all Worker Processes
          default: false
          example: true
        description:
          type: string
          title: Description
          example: Receive syslog over UDP/TCP with framing detection
        enableEnhancedProxyHeaderParsing:
          type: boolean
          title: Enable enhanced TLS handshake for proxy protocol
          description: When enabled, parses PROXY protocol headers during the TLS
            handshake. Disable if compatibility issues arise.
          example: true
      type: object
      anyOf:
        - required:
            - host
            - udpPort
        - required:
            - host
            - tcpPort
    InputFile:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: file-watcher
        type:
          enum:
            - file
          example: file
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - filesystem
            - logs
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-logs
          example:
            - pipeline: default
              output: s3-logs
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        mode:
          type: string
          enum:
            - auto
            - manual
          default: auto
          description: Choose how to discover files to monitor
          example: auto
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between scanning for files
          example: 10
        filenames:
          type: array
          title: Filename allowlist
          description: The full path of discovered files are matched against this wildcard
            list
          default:
            - "*/log/*"
            - "*log"
          items:
            type: string
          example:
            - /var/log/*.log
            - /opt/app/logs/*log
        tailOnly:
          type: boolean
          default: false
          title: Collect from end
          description: Read only new entries at the end of all files discovered at next
            startup. @{product} will then read newly discovered files from the
            head. Disable this to resume reading all files from head.
          example: true
        idleTimeout:
          type: number
          default: 300
          minimum: 1
          title: Idle timeout
          description: Time, in seconds, before an idle file is closed
          example: 600
        maxAgeDur:
          type: string
          title: Age duration limit
          description: "The maximum age of files to monitor. Format examples: 60s, 4h, 3d,
            1w. Age is relative to file modification time. Leave empty to apply
            no age filters."
          example: 3d
        checkFileModTime:
          type: boolean
          default: false
          title: Check file modification times
          description: Skip files with modification times earlier than the maximum age
            duration
          example: true
        forceText:
          type: boolean
          default: false
          title: Force text format
          description: Forces files containing binary data to be streamed as text
          example: false
        hashLen:
          type: number
          default: 256
          minimum: 1
          title: Hash length
          description: Length of file header bytes to use in hash for unique file
            identification
          example: 256
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"file"'
          example:
            - name: source
              value: '"file"'
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - multiline-java
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        description:
          type: string
          title: Description
          example: Watch local files and tail new content
        path:
          type: string
          title: Search path
          description: Directory path to search for files. Environment variables will be
            resolved, e.g. $CRIBL_HOME/log/.
          example: /var/log
        depth:
          type: number
          minimum: 0
          title: Max depth
          description: Set how many subdirectories deep to search. Use 0 to search only
            files in the given path, 1 to also look in its immediate
            subdirectories, etc. Leave it empty for unlimited depth.
          example: 2
        suppressMissingPathErrors:
          type: boolean
          default: false
          title: Suppress errors when search path does not exist
          example: true
        deleteFiles:
          type: boolean
          default: false
          title: Delete files
          example: false
          description: Delete files after they have been collected
        includeUnidentifiableBinary:
          type: boolean
          default: false
          title: Enable binary files
          description: Stream binary files as Base64-encoded chunks.
          example: true
      type: object
    InputTcp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: tcp-listener
        type:
          type: string
          enum:
            - tcp
          example: tcp
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - tcp
            - ingest
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-raw
          example:
            - pipeline: default
              output: s3-raw
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 9000
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: tcp-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a
            connection
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process.
            Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 2000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. After this time, the connection will be
            closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 60
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a
            client to close its end of the connection. If the client doesn't
            close the connection within this time, the server will forcefully
            terminate the socket to prevent resource leaks and ensure efficient
            connection cleanup and system stability. Leave at 0 for no inactive
            socket monitoring.
          default: 30
          minimum: 0
          example: 30
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This
            helps manage resources and mitigate issues caused by TCP pinning.
            Set to 0 to disable.
          default: 0
          minimum: 0
          example: 3600
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy
            Protocol V1 or V2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"tcp"'
          example:
            - name: source
              value: '"tcp"'
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - multiline-json
            - tcp-syslog-breaker
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        enableHeader:
          type: boolean
          title: Enable header
          description: 'Client will pass the header record with every new connection. The
            header can contain an authToken, and an object with a list of fields
            and values to add to every event. These fields can be used to
            simplify Event Breaker selection, routing, etc. Header has this
            format, and must be followed by a newline: { "authToken" :
            "myToken", "fields": { "field1": "value1", "field2": "value2" } }'
          default: false
          example: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
              example: jq -r .message
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
              example:
                - --compact-output
        description:
          type: string
          title: Description
          example: Receive generic TCP payloads
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
      type: object 
    InputAppscope:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: appscope-ingest
        type:
          type: string
          enum:
            - appscope
          example: appscope
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - appscope
            - observability
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-appscope
          example:
            - pipeline: default
              output: s3-appscope
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a
            connection
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process.
            Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 2000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. After this time, the connection will be
            closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 60
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a
            client to close its end of the connection. If the client doesn't
            close the connection within this time, the server will forcefully
            terminate the socket to prevent resource leaks and ensure efficient
            connection cleanup and system stability. Leave at 0 for no inactive
            socket monitoring.
          default: 30
          minimum: 0
          example: 30
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This
            helps manage resources and mitigate issues caused by TCP pinning.
            Set to 0 to disable.
          default: 0
          minimum: 0
          example: 3600
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy
            protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"appscope"'
          example:
            - name: source
              value: '"appscope"'
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - appscope-lines
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        enableUnixPath:
          type: boolean
          title: UNIX domain socket
          description: Toggle to Yes to specify a file-backed UNIX domain socket
            connection, instead of a network host and port.
          default: false
          example: false
        filter:
          type: object
          properties:
            allow:
              type: array
              title: Rules
              description: Specify processes that AppScope should be loaded into, and the
                config to use.
              items:
                type: object
                properties:
                  procname:
                    type: string
                    title: Process name
                    description: Specify the name of a process or family of processes.
                    example: nginx
                  arg:
                    type: string
                    title: Process argument
                    description: Specify a string to substring-match against process command-line.
                    example: -c /etc/nginx/nginx.conf
                  config:
                    type: string
                    title: AppScope config
                    description: Choose a config to apply to processes that match the process name
                      and/or argument.
                    example: default
                required:
                  - procname
                  - config
            transportURL:
              type: string
              title: Transport override
              description: To override the UNIX domain socket or address/port specified in
                General Settings (while leaving Authentication settings as is),
                enter a URL.
              example: unix:///var/run/appscope.sock
        persistence:
          type: object
          title: Persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events and metrics on disk for Cribl Edge and Search
              default: false
              example: true
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB).
                When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 4GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When
                limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 4d
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/appscope
              description: Path to use to write metrics. Defaults to
                $CRIBL_HOME/state/appscope
              example: /var/lib/cribl/state/appscope
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: Receive AppScope telemetry over TCP or UNIX socket
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 57000
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: appscope-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        unixSocketPath:
          type: string
          title: UNIX socket path
          default: $CRIBL_HOME/state/appscope.sock
          description: Path to the UNIX domain socket to listen on.
          example: /var/run/appscope.sock
        unixSocketPerms:
          type: string
          title: UNIX socket permissions
          description: Permissions to set for socket e.g., 777. If empty, falls back to
            the runtime user's default permissions.
          example: "770"
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header
            field). If empty, unauthorized access is permitted.
          default: ""
          example: "***REDACTED***"
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: appscope-auth-secret
      type: object
    InputWef:
      required:
        - host
        - port
        - subscriptions
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: wef-listener
        type:
          type: string
          enum:
            - wef
          example: wef
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - windows
            - wef
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-wef
          example:
            - pipeline: default
              output: s3-wef
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 5986
          example: 5986
        authMethod:
          type: string
          title: Authentication method
          description: How to authenticate incoming client connections
          enum:
            - clientCert
            - kerberos
          default: clientCert
          example: clientCert
        tls:
          type: object
          title: mTLS settings
          required:
            - privKeyPath
            - certPath
            - caPath
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable TLS
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate client certs
              description: Required for WEF certificate authentication
              default: true
              example: true
            requestCert:
              type: boolean
              title: Authenticate client
              description: Required for WEF certificate authentication
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: Name of the predefined certificate
              example: wef-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Server path containing CA certificates (in PEM format) to use. Can
                reference $ENV_VARS. If multiple certificates are present in a
                .pem, each must directly certify the one preceding it.
              example: /etc/ssl/certs/ca-bundle.crt
            commonNameRegex:
              type: string
              title: Common name
              description: Regex matching allowable common names in peer certificates' subject
                attribute
              default: /.*/
              example: ^WEF-CLIENT-.*$
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
            ocspCheck:
              type: boolean
              title: Verify certificate via OCSP
              description: Enable OCSP check of certificate
              default: false
              example: false
            keytab: {}
            principal: {}
            ocspCheckFailClose:
              type: boolean
              title: Strict validation
              description: If enabled, checks will fail on any OCSP error. Otherwise, checks
                will fail only when a certificate is revoked, ignoring other
                errors.
              default: false
              example: false
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Preserve the client’s original IP address in the __srcIpPort field
            when connecting through an HTTP proxy that supports the
            X-Forwarded-For header. This does not apply to TCP-layer Proxy
            Protocol v1/v2.
          default: false
          example: true
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events in the __headers field
          default: false
          example: true
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 90
          minimum: 1
          maximum: 600
          example: 60
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this
            Source is healthy
          default: false
          example: true
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.1\.\d{1,3}$
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        caFingerprint:
          type: string
          title: CA fingerprint override
          description: SHA1 fingerprint expected by the client, if it does not match the
            first certificate in the configured CA chain
          example: 9A:4F:2B:8E:1D:3C:A7:5B:9E:0F:11:22:33:44:55:66:77:88:99:AA
        keytab:
          type: string
          title: Keytab location
          description: Path to the keytab file containing the service principal
            credentials. @{product} will use `/etc/krb5.keytab` if not provided.
          example: /etc/krb5.keytab
        principal:
          type: string
          title: Service principal name
          description: Kerberos principal used for authentication, typically in the form
            HTTP/<hostname>@<REALM>
          example: HTTP/wef.example.com@EXAMPLE.COM
        allowMachineIdMismatch:
          type: boolean
          title: Allow MachineID mismatch
          description: Allow events to be ingested even if their MachineID does not match
            the client certificate CN
          default: false
          example: false
        subscriptions:
          title: Subscriptions
          description: Subscriptions to events on forwarding endpoints
          type: array
          items:
            type: object
            required:
              - subscriptionName
              - contentFormat
              - heartbeatInterval
              - batchTimeout
              - targets
              - id
            minLength: 1
            properties:
              id:
                title: Subscription id
                type: string
                example: default-subscription
              subscriptionName:
                title: Subscription name
                type: string
                example: Security
              version:
                title: Version
                type: string
                description: Version UUID for this subscription. If any subscription parameters
                  are modified, this value will change.
                example: 7f0c2f2e-1c3b-4d2a-9d6e-5a1b2c3d4e5f
              contentFormat:
                title: Format
                type: string
                enum:
                  - Raw
                  - RenderedText
                description: Content format in which the endpoint should deliver events
                default: Raw
                example: Raw
              heartbeatInterval:
                title: Heartbeat
                type: number
                description: Maximum time (in seconds) between endpoint checkins before
                  considering it unavailable
                minimum: 1
                default: 60
                example: 60
              batchTimeout:
                title: Batch timeout
                type: number
                description: Interval (in seconds) over which the endpoint should collect events
                  before sending them to Stream
                minimum: 0
                default: 60
                example: 30
              readExistingEvents:
                title: Read existing events
                type: boolean
                description: Newly subscribed endpoints will send previously existing events.
                  Disable to receive new events only.
                default: false
                example: false
              sendBookmarks:
                title: Use bookmarks
                type: boolean
                description: Keep track of which events have been received, resuming from that
                  point after a re-subscription. This setting takes precedence
                  over 'Read existing events'. See [Cribl
                  Docs](https://docs.cribl.io/stream/sources-wef/#subscriptions)
                  for more details.
                default: true
                example: true
              compress:
                title: Compression
                type: boolean
                description: Receive compressed events from the source
                default: true
                example: true
              targets:
                type: array
                title: Targets
                description: The DNS names of the endpoints that should forward these events.
                  You may use wildcards, such as *.mydomain.com
                items:
                  type: string
                  minLength: 1
                default:
                  - "*"
                example:
                  - wef1.corp.local
                  - "*.corp.local"
              locale:
                title: Locale
                type: string
                description: The RFC-3066 locale the Windows clients should use when sending
                  events. Defaults to "en-US".
                default: en-US
                example: en-US
              querySelector:
                type: string
                title: Query builder mode
                enum:
                  - simple
                  - xml
                default: simple
                example: simple
              metadata:
                type: array
                title: Fields
                description: Fields to add to events ingested under this subscription
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: subscription
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes
                        or backticks. (Can evaluate to a constant.)
                      example: '"wef-security"'
          example:
            - id: default-subscription
              subscriptionName: Security
              version: 7f0c2f2e-1c3b-4d2a-9d6e-5a1b2c3d4e5f
              contentFormat: Raw
              heartbeatInterval: 60
              batchTimeout: 30
              readExistingEvents: false
              sendBookmarks: true
              compress: true
              targets:
                - wef1.corp.local
                - "*.corp.local"
              locale: en-US
              querySelector: simple
              metadata:
                - name: subscription
                  value: '"wef-security"'
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"wef"'
          example:
            - name: source
              value: '"wef"'
        description:
          type: string
          title: Description
          example: Receive Windows Event Forwarding (WEF) over HTTPS
        logFingerprintMismatch:
          type: boolean
          title: Log CA fingerprint mismatch warning
          description: Log a warning if the client certificate authority (CA) fingerprint
            does not match the expected value. A mismatch prevents Cribl from
            receiving events from the Windows Event Forwarder.
          default: false
          example: true
      type: object
    InputWinEventLogs:
      required:
        - logNames
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: win-event-logs
        type:
          type: string
          enum:
            - win_event_logs
          example: win_event_logs
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - windows
            - eventlogs
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-logs
          example:
            - pipeline: default
              output: s3-logs
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        logNames:
          type: array
          title: Event logs
          description: Enter the event logs to collect. Run "Get-WinEvent -ListLog *" in
            PowerShell to see the available logs.
          default:
            - Application
            - Security
            - System
          items:
            type: string
          minItems: 1
          uniqueItems: true
          example:
            - Application
            - Security
            - System
            - Microsoft-Windows-Sysmon/Operational
        readMode:
          type: string
          default: oldest
          enum:
            - oldest
            - newest
          title: Read mode
          description: Read all stored and future event logs, or only future events
          example: newest
        eventFormat:
          type: string
          default: json
          enum:
            - json
            - xml
          title: Event format
          description: Format of individual events
          example: json
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell for JSON, wevtutil for
            XML) to collect event logs instead of native API (default) [Learn
            more](https://docs.cribl.io/edge/sources-windows-event-logs/#advanced-settings)
          example: false
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checking for new entries (Applicable for
            pre-4.8.0 nodes that use Windows Tools)
          example: 10
        batchSize:
          type: number
          default: 500
          minimum: 1
          title: Batch size
          description: The maximum number of events to read in one polling interval. A
            batch size higher than 500 can cause delays when pulling from
            multiple event logs. (Applicable for pre-4.8.0 nodes that use
            Windows Tools)
          example: 500
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"win_event_logs"'
          example:
            - name: source
              value: '"win_event_logs"'
        maxEventBytes:
          type: number
          title: Max event bytes
          description: The maximum number of bytes in an event before it is flushed to the
            pipelines
          default: 51200
          minimum: 1
          maximum: 134217728
          example: 131072
        description:
          type: string
          title: Description
          example: Collect Windows Event Logs from local system
      type: object
    InputRawUdp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: raw-udp-listener
        type:
          type: string
          enum:
            - raw_udp
          example: raw_udp
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - udp
            - raw
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-raw
          example:
            - pipeline: default
              output: s3-raw
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 1514
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
            Only applies to UDP.
          default: 1000
          minimum: 0
          example: 20000
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: If true, each UDP packet is assumed to contain a single message. If
            false, each UDP packet is assumed to contain multiple messages,
            separated by newlines.
          default: false
          example: true
        ingestRawBytes:
          type: boolean
          title: Ingest raw bytes
          description: If true, a __rawBytes field will be added to each event containing
            the raw bytes of the datagram.
          default: false
          example: false
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket.
            This value tells the operating system how many bytes can be buffered
            in the kernel before events are dropped. Leave blank to use the OS
            default. Caution: Increasing this value will affect OS memory
            utilization."
          minimum: 256
          maximum: 4294967295
          example: 4194304
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"raw_udp"'
          example:
            - name: source
              value: '"raw_udp"'
        description:
          type: string
          title: Description
          example: Receive raw UDP datagrams and split on newlines
      type: object
    InputJournalFiles:
      required:
        - path
        - journals
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: journal-files
        type:
          enum:
            - journal_files
          example: journal_files
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - systemd
            - journald
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-journald
          example:
            - pipeline: default
              output: s3-journald
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        path:
          type: string
          title: Search path
          description: Directory path to search for journals. Environment variables will
            be resolved, e.g. $CRIBL_EDGE_FS_ROOT/var/log/journal/$MACHINE_ID.
          example: /var/log/journal
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: "Time, in seconds, between scanning for journals. "
          example: 10
        journals:
          type: array
          title: Journal allowlist
          description: The full path of discovered journals are matched against this
            wildcard list.
          default:
            - system
          items:
            type: string
          example:
            - system
            - user-*.journal
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which journal objects to allow. Events are
            generated if no rules are given or if all the rules' expressions
            evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Journal objects. Return 'true' to
                  include it.
                example: severity <= 4 && facility != 'authpriv'
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: Allow warnings or higher, exclude authpriv
          default:
            - filter: severity <= 4
              description: Allow log messages having 'emergency', 'alert', 'critical',
                'error', or 'warning' priority
        currentBoot:
          type: boolean
          default: false
          title: Current boot only
          description: Skip log messages that are not part of the current boot session.
          example: true
        maxAgeDur:
          type: string
          title: Age duration limit
          description: "The maximum log message age, in duration form (e.g,: 60s, 4h, 3d,
            1w).  Default of no value will apply no max age filters."
          example: 24h
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"journal_files"'
          example:
            - name: source
              value: '"journal_files"'
        description:
          type: string
          title: Description
          example: Ingest systemd journal files from disk
      type: object
    InputWiz:
      required:
        - endpoint
        - authUrl
        - clientId
        - contentConfig
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: wiz-ingest
        type:
          type: string
          enum:
            - wiz
          example: wiz
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - wiz
            - security
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-wiz
          example:
            - pipeline: default
              output: s3-wiz
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        endpoint:
          type: string
          title: GraphQL endpoint
          description: "The Wiz GraphQL API endpoint. Example:
            https://api.us1.app.wiz.io/graphql"
          default: https://api.<region>.app.wiz.io/graphql
          pattern: ^https:\/\/
          example: https://api.us1.app.wiz.io/graphql
        authUrl:
          type: string
          title: Authentication URL
          description: The authentication URL to generate an OAuth token
          example: https://auth.app.wiz.io/oauth/token
        authAudienceOverride:
          type: string
          title: Authentication audience
          description: The audience to use when requesting an OAuth token for a custom
            auth URL. When not specified, `wiz-api` will be used.
          example: wiz-api
        clientId:
          type: string
          title: Client ID
          description: The client ID of the Wiz application
          example: 123e4567-client-id
        contentConfig:
          type: array
          title: Content types
          default:
            - contentType: Audit Logs
              contentDescription: Get all Audit Logs
              contentQuery: >-
                ({
                  query: `query AuditLogTable($first: Int $after: String $filterBy: AuditLogEntryFilters){
                    auditLogEntries(first: $first after: $after filterBy: $filterBy) {
                      nodes {
                        id
                        action
                        requestId
                        status
                        timestamp
                        actionParameters
                        userAgent
                        sourceIP
                        serviceAccount {
                          id
                          name
                        }
                        user {
                          id
                          name
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      timestamp: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      },
                      status: ["SUCCESS", "FAILED","INVALID","ACCESS_DENIED"]
                    }
                  }
                })
              cronSchedule: "*/15 * * * *"
              earliest: -15m@m
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 100
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime:
                (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState :
                newState"
            - contentType: Configuration Findings
              contentDescription: Get Cloud Configuration Report
              contentQuery: >-
                ({
                  query: `query CloudConfigurationFindingsPage($filterBy: ConfigurationFindingFilters, $first: Int, $after: String, $orderBy: ConfigurationFindingOrder) {
                    configurationFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        targetExternalId
                        targetObjectProviderUniqueId
                        firstSeenAt
                        severity
                        result
                        status
                        remediation
                        resource {
                          id
                          providerId
                          name
                          nativeType
                          type
                          region
                          subscription {
                            id
                            name
                            externalId
                            cloudProvider
                          }
                          projects {
                            id
                            name
                            riskProfile {
                              businessImpact
                            }
                          }
                          tags {
                            key
                            value
                          }
                        }
                        rule {
                          id
                          graphId
                          name
                          description
                          remediationInstructions
                          functionAsControl
                        }
                        securitySubCategories {
                          id
                          title
                          category {
                            id
                            name
                            framework {
                              id
                              name
                            }
                          }
                        }
                        ignoreRules {
                          id
                          name
                          enabled
                          expiredAt
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      id: [],
                      source: [],
                      rule: {
                        id: [],
                        name: [],
                        description: []
                      },
                      result: ["PASS","FAIL","ERROR", "NOT_ASSESSED"],
                      severity: ["NONE","LOW","MEDIUM","HIGH","CRITICAL"],
                      status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"
                      ],
                      frameworkCategory: [],
                      firstSeenAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
          example:
            - contentType: Audit Logs
              contentDescription: Get all Audit Logs
              contentQuery: "...GraphQL query trimmed for brevity..."
              cronSchedule: "*/15 * * * *"
              earliest: -15m@m
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 100
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
            - contentType: Issues
              contentDescription: Get Open Issues
              contentQuery: >-
                ({
                  query: `query IssuesTable($filterBy: IssueFilters, $first: Int, $after: String, $orderBy: IssueOrder) {
                    issues: issuesV2(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        control {
                          id
                          name
                          description
                          resolutionRecommendation
                          securitySubCategories {
                            title
                            category {
                              name
                              framework {
                                name
                              }
                            }
                          }
                        }
                        createdAt
                        updatedAt
                        sourceRule {
                          id
                          name
                        }
                        dueAt
                        resolvedAt
                        statusChangedAt
                        project {
                          id
                          name
                          slug
                          businessUnit
                          riskProfile {
                            businessImpact
                          }
                        }
                        status
                        severity
                        type
                        entitySnapshot {
                          id
                          type
                          nativeType
                          name
                          status
                          cloudPlatform
                          cloudProviderURL
                          providerId
                          region
                          resourceGroupExternalId
                          subscriptionExternalId
                          subscriptionName
                          subscriptionTags
                          tags
                          externalId
                        }
                        notes {
                          createdAt
                          updatedAt
                          text
                          user {
                            name
                            email
                          }
                          serviceAccount {
                            name
                          }
                        }
                        serviceTickets {
                          externalId
                          name
                          url
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      sourceRule: {
                        id: []
                      },
                      relatedEntity: {
                        type: []
                      },
                      status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"],
                      severity: ["INFORMATIONAL","LOW","MEDIUM","HIGH","CRITICAL"],
                      type: ["TOXIC_COMBINATION","THREAT_DETECTION","CLOUD_CONFIGURATION"],
                      createdAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 0
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
            - contentType: Vulnerabilities
              contentDescription: Get Vulnerability Findings
              contentQuery: >-
                ({
                  query: `query VulnerabilityFindingsPage($filterBy: VulnerabilityFindingFilters, $first: Int, $after: String, $orderBy: VulnerabilityFindingOrder) {
                    vulnerabilityFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        portalUrl
                        name
                        CVEDescription
                        CVSSSeverity
                        score
                        exploitabilityScore
                        impactScore
                        hasExploit
                        hasCisaKevExploit
                        status
                        vendorSeverity
                        firstDetectedAt
                        lastDetectedAt
                        resolvedAt
                        description
                        remediation
                        detailedName
                        version
                        fixedVersion
                        detectionMethod
                        link
                        locationPath
                        resolutionReason
                        vulnerableAsset {
                          ... on VulnerableAssetBase {
                            id
                            type
                            name
                            region
                            providerUniqueId
                            cloudProviderURL
                            cloudPlatform
                            status
                            subscriptionName
                            subscriptionExternalId
                            subscriptionId
                            tags
                          }
                          ... on VulnerableAssetVirtualMachine {
                            operatingSystem
                            ipAddresses
                          }
                          ... on VulnerableAssetServerless {
                            runtime
                          }
                          ... on VulnerableAssetContainerImage {
                            imageId
                          }
                          ... on VulnerableAssetContainer {
                            ImageExternalId
                            VmExternalId
                            ServerlessContainer
                            PodNamespace
                            PodName
                            NodeName
                          }
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      id: [],
                      status: [],
                      assetType: [],
                      vendorSeverity: [],
                      assetId: [],
                      vulnerabilityId: [],
                      detectionMethod: [],
                      assetStatus: [],
                      firstSeenAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 0
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
          items:
            type: object
            required:
              - contentType
              - contentQuery
              - cronSchedule
              - earliest
              - latest
            properties:
              contentType:
                type: string
                title: Content name
                description: The name of the Wiz query
                pattern: ^[a-zA-Z0-9_-\s]+$
              contentDescription:
                type: string
                title: Description
              enabled:
                type: boolean
                title: Enable content
                default: false
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Use 0 to disable.
          minimum: 0
          maximum: 2400
          default: 300
          example: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job
            subscription alive
          minimum: 10
          default: 30
          example: 30
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker
            will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"wiz"'
          example:
            - name: source
              value: '"wiz"'
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff).
                Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will
                occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of HTTP codes that trigger a retry. Leave empty to use the
                default list of 429 and 503.
              minItems: 1
              default:
                - 429
                - 503
              items:
                type: number
                minLength: 1
              example:
                - 429
                - 503
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or
                a timestamp after which to retry the request. The delay is
                limited to 20 seconds, even if the Retry-After header specifies
                a longer delay. When disabled, all Retry-After headers are
                ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT)
                error occurs
              default: false
              example: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: Ingest Wiz content via GraphQL API
        clientSecret:
          type: string
          title: Client secret
          description: The client secret of the Wiz application
          example: "***REDACTED***"
        textSecret:
          type: string
          title: Client Secret (text secret)
          description: Select or create a stored text secret
          example: wiz-client-secret
      type: object
    InputNetflow:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: netflow-listener
        type:
          type: string
          enum:
            - netflow
          example: netflow
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - netflow
            - network
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-netflow
          example:
            - pipeline: default
              output: s3-netflow
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default
            '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP
            address.
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 2055
          example: 2055
        enablePassThrough:
          type: boolean
          title: Enable pass-through
          default: false
          description: Allow forwarding of events to a NetFlow destination. Enabling this
            feature will generate an extra event containing __netflowRaw which
            can be routed to a NetFlow destination. Note that these events will
            not count against ingest quota.
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist.
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.1\.\d{1,3}$
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket.
            This value tells the operating system how many bytes can be buffered
            in the kernel before events are dropped. Leave blank to use the OS
            default. Caution: Increasing this value will affect OS memory
            utilization."
          minimum: 256
          maximum: 4294967295
          example: 4194304
        templateCacheMinutes:
          type: number
          title: Template cache minutes
          description: Specifies how many minutes NetFlow v9 templates are cached before
            being discarded if not refreshed. Adjust based on your network's
            template update frequency to optimize performance and memory usage.
          minimum: 1
          maximum: 3600
          default: 30
          example: 60
        v5Enabled:
          type: boolean
          title: V5
          description: Accept messages in Netflow V5 format.
          default: true
          example: true
        v9Enabled:
          type: boolean
          title: V9
          description: Accept messages in Netflow V9 format.
          default: true
          example: true
        ipfixEnabled:
          type: boolean
          title: IPFIX
          description: Accept messages in IPFIX format.
          default: false
          example: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"netflow"'
          example:
            - name: source
              value: '"netflow"'
        description:
          type: string
          title: Description
          example: Receive NetFlow v5/v9/IPFIX on UDP 2055
      type: object
    InputSecurityLake:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: security-lake-ingest
        type:
          type: string
          enum:
            - security_lake
          example: security_lake
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - aws
            - security-lake
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-security-lake
          example:
            - pipeline: default
              output: s3-security-lake
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from.
            When a non-AWS URL is specified, format must be:
            '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value
            must be a JavaScript expression (which can evaluate to a constant
            value), enclosed in quotes or backticks. Can be evaluated only at
            init time. Example referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
          example: https://sqs.us-east-1.amazonaws.com/123456789012/security-lake-queue
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: .*\.json(\.gz)?$
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
          example: "123456789012"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: "***REDACTED***"
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required,
            unless the Queue entry is a URL or ARN that includes a Region.
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: https://s3.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order,
            to the input data stream
          items:
            type: string
          example:
            - security-lake-breaker
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data
            to be sent to a specific channel before flushing the data stream
            out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 1500
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll
            request. Amazon SQS never returns more messages than this value
            (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
          example: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request,
            @{product} will hide them from subsequent retrieve requests for at
            least this duration. You can set this as high as 43200 sec. (12
            hours).
          default: 600
          minimum: 0
          maximum: 43200
          example: 300
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the
            better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 4
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if
            timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
          example: 600
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default,
            which allows retries after processing errors.
          default: false
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-security-lake-access
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
          example: true
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output
                (stdout)
              example: jq -r .message
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
              example:
                - --compact-output
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"security_lake"'
          example:
            - name: source
              value: '"security_lake"'
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
          example: 10
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk.
            Processing will stop if a chunk cannot be downloaded within the time
            specified.
          default: 600
          maximum: 3600
          minimum: 1
          example: 300
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
              example: true
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error
                occurs. If Skip file on error is enabled, this setting is
                ignored.
              default: 5
              maximum: 100
              minimum: 0
              example: 3
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower
            the number the higher the AWS bill. The higher the number the longer
            it will take for the source to react to configuration changes and
            system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set,
            @{product} will default to UTF-8 but may incorrectly interpret
            multi-byte characters.
          example: utf-8
        description:
          type: string
          title: Description
          example: Ingest AWS Security Lake notifications and objects
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
        tagAfterProcessing:
          enum:
            - false
            - true
          example: true
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field
            accepts an expression for dynamic generation.
          example: processed-by
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This
            field accepts an expression for dynamic generation.
          example: cribl-processed
      type: object
    InputZscalerHec:
      required:
        - host
        - port
        - hecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: zscaler-hec-listener
        type:
          type: string
          enum:
            - zscaler_hec
          example: zscaler_hec
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through
            the Routes
          example: default
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services
            block. See [Cribl
            Docs](https://docs.cribl.io/stream/persistent-queues) for PQ
            defaults (Cribl-managed Cloud Workers) and configuration options
            (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - zscaler
            - hec
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline
            or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: default
              output:
                title: Destination
                type: string
                example: s3-zscaler
          example:
            - pipeline: default
              output: s3-zscaler
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when
                it detects backpressure from the processing engine.
                With Always On mode, PQ will always write events directly to the
                queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the
                events to disk
              default: 1000
              minimum: 42
              example: 5000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that
                Stream has read them
              default: 42
              minimum: 1
              example: 100
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and
                optionally compressing. Enter a numeral with units of KB, MB,
                etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 100 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average
                per Worker Process) before queueing stops. Enter a numeral with
                units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 10GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's
                value, the system will append: /<worker-id>/inputs/<input-id>"
              example: /opt/cribl/state/queues
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: gzip
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 8088
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization:
            <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              authType:
                title: Authentication method
                type: string
                enum:
                  - manual
                  - secret
                default: manual
                description: Select Manual to enter an auth token directly, or select Secret to
                  use a text secret to authenticate
                example: manual
              tokenSecret: {}
              token: {}
              enabled:
                type: boolean
                title: Enable token
                default: true
                example: true
              description:
                type: string
                title: Description
                example: Zscaler Collector
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at
                  the token level. Supports wildcards. To skip validation, leave
                  blank.
                minItems: 0
                items:
                  type: string
                  minLength: 1
                example:
                  - zscaler-*
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: source
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes
                        or backticks. (Can evaluate to a constant.)
                      example: '"zscaler_hec"'
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: zscaler-hec-cert
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/private/server.key
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/server.crt
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can
                reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform
                client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set
            to 0 for unlimited. Caution: Increasing the limit above the default
            value, or setting it to unlimited, may degrade performance and
            reduce throughput."
          default: 256
          minimum: 0
          example: 512
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs
            the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When
            enabled, the X-Forwarded-For header is ignored. Disable to use the
            X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: true
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value
            of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before
            aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 30
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive
            socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 60
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for
            additional data before closing the socket connection. Minimum 1
            second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 30
        enableHealthCheck: {}
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also
            matched by the denylist
          default: /.*/
          example: ^10\.0\.\d{1,3}\.\d{1,3}$
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes
            precedence over the allowlist.
          default: /^$/
          example: ^192\.168\.1\.\d{1,3}$
        hecAPI:
          type: string
          title: HEC endpoint
          description: Absolute path on which to listen for the Zscaler HTTP Event
            Collector API requests. This input supports the /event endpoint.
          default: /services/collector
          pattern: ^/
          example: /services/collector
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. May be overridden by fields added at
            the token or request level.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: source
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: '"zscaler_hec"'
          example:
            - name: source
              value: '"zscaler_hec"'
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip
            validation. Supports wildcards. The values here can expand index
            validation at the token level.
          minItems: 0
          items:
            type: string
            minLength: 1
          example:
            - zscaler-*
        hecAcks:
          type: boolean
          title: Zscaler HEC Acks
          description: Whether to enable Zscaler HEC acknowledgements
          default: false
          example: false
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS
            (cross-origin resource sharing) Access-Control-Allow-* headers.
            Supports wildcards.
          minItems: 0
          items:
            type: string
            minLength: 1
          example:
            - https://*.zscaler.com
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed
            origins as "Access-Control-Allow-Headers" in a CORS preflight
            response. Use "*" to allow all headers.
          minItems: 0
          items:
            type: string
            minLength: 1
          example:
            - Authorization
            - Content-Type
        emitTokenMetrics:
          type: boolean
          title: Emit per-token request metrics
          description: Enable to emit per-token (<prefix>.http.perToken) and summary
            (<prefix>.http.summary) request metrics
          default: false
          example: true
        description:
          type: string
          title: Description
          example: Receive Zscaler HEC events over HTTP(S)
      type: object
    Input:
      oneOf:
        - $ref: "#/components/schemas/InputCollection"
        - $ref: "#/components/schemas/InputKafka"
        - $ref: "#/components/schemas/InputMsk"
        - $ref: "#/components/schemas/InputHttp"
        - $ref: "#/components/schemas/InputSplunk"
        - $ref: "#/components/schemas/InputSplunkSearch"
        - $ref: "#/components/schemas/InputSplunkHec"
        - $ref: "#/components/schemas/InputAzureBlob"
        - $ref: "#/components/schemas/InputElastic"
        - $ref: "#/components/schemas/InputConfluentCloud"
        - $ref: "#/components/schemas/InputGrafana"
        - $ref: "#/components/schemas/InputLoki"
        - $ref: "#/components/schemas/InputPrometheusRw"
        - $ref: "#/components/schemas/InputPrometheus"
        - $ref: "#/components/schemas/InputEdgePrometheus"
        - $ref: "#/components/schemas/InputOffice365Mgmt"
        - $ref: "#/components/schemas/InputOffice365Service"
        - $ref: "#/components/schemas/InputOffice365MsgTrace"
        - $ref: "#/components/schemas/InputEventhub"
        - $ref: "#/components/schemas/InputExec"
        - $ref: "#/components/schemas/InputFirehose"
        - $ref: "#/components/schemas/InputGooglePubsub"
        - $ref: "#/components/schemas/InputCribl"
        - $ref: "#/components/schemas/InputCriblTcp"
        - $ref: "#/components/schemas/InputCriblHttp"
        - $ref: "#/components/schemas/InputCriblLakeHttp"
        - $ref: "#/components/schemas/InputTcpjson"
        - $ref: "#/components/schemas/InputSystemMetrics"
        - $ref: "#/components/schemas/InputSystemState"
        - $ref: "#/components/schemas/InputKubeMetrics"
        - $ref: "#/components/schemas/InputKubeLogs"
        - $ref: "#/components/schemas/InputKubeEvents"
        - $ref: "#/components/schemas/InputWindowsMetrics"
        - $ref: "#/components/schemas/InputCrowdstrike"
        - $ref: "#/components/schemas/InputDatadogAgent"
        - $ref: "#/components/schemas/InputDatagen"
        - $ref: "#/components/schemas/InputHttpRaw"
        - $ref: "#/components/schemas/InputKinesis"
        - $ref: "#/components/schemas/InputCriblmetrics"
        - $ref: "#/components/schemas/InputMetrics"
        - $ref: "#/components/schemas/InputS3"
        - $ref: "#/components/schemas/InputS3Inventory"
        - $ref: "#/components/schemas/InputSnmp"
        - $ref: "#/components/schemas/InputOpenTelemetry"
        - $ref: "#/components/schemas/InputModelDrivenTelemetry"
        - $ref: "#/components/schemas/InputSqs"
        - $ref: "#/components/schemas/InputSyslog"
        - $ref: "#/components/schemas/InputFile"
        - $ref: "#/components/schemas/InputTcp"
        - $ref: "#/components/schemas/InputAppscope"
        - $ref: "#/components/schemas/InputWef"
        - $ref: "#/components/schemas/InputWinEventLogs"
        - $ref: "#/components/schemas/InputRawUdp"
        - $ref: "#/components/schemas/InputJournalFiles"
        - $ref: "#/components/schemas/InputWiz"
        - $ref: "#/components/schemas/InputNetflow"
        - $ref: "#/components/schemas/InputSecurityLake"
        - $ref: "#/components/schemas/InputZscalerHec"
    AddHecTokenRequest:
      type: object
      properties:
        description:
          type: string
          example: Token for Zscaler ingest
        enabled:
          type: boolean
          example: true
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: source
              value:
                type: string
                example: '"zscaler_hec"'
            required:
              - name
              - value
        token:
          type: string
          example: "***REDACTED***"
      required:
        - token
    UpdateHecTokenRequest:
      type: object
      properties:
        description:
          type: string
          example: Rotated token description
        enabled:
          type: boolean
          example: false
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: env
              value:
                type: string
                example: '"prod"'
            required:
              - name
              - value
    IoMetricsEntryLevel:
      type: string
      enum:
        - minimal
        - basic
        - detailed
        - comprehensive
      example: basic
    IoMetricsEntry:
      type: object
      properties:
        canDelete:
          type: boolean
          example: false
        id:
          type: string
          example: output-webhook
        level:
          $ref: "#/components/schemas/IoMetricsEntryLevel"
      required:
        - id
        - level

    OutputDefault:
      required:
        - defaultId
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: default-output
        type:
          type: string
          enum:
            - default
          example: default
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - default
        defaultId:
          type: string
          title: Default Output ID
          description: ID of the default output. This will be used whenever a
            nonexistent/deleted output is referenced.
          example: http-default
      type: object
    OutputWebhook:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: webhook-out
        type:
          type: string
          enum:
            - webhook
          example: webhook
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - webhook
        method:
          type: string
          title: Method
          description: The method to use when sending events
          enum:
            - POST
            - PUT
            - PATCH
          default: POST
          example: POST
        format:
          type: string
          title: Format
          description: How to format events before sending out
          enum:
            - ndjson
            - json_array
            - custom
            - advanced
          default: ndjson
          example: ndjson
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the
            outgoing request
          default: true
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 10
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 512000
          example: 8192
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically
            on a per-event basis in the __headers field, as explained in [Cribl
            Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Custom-Header
              value:
                type: string
                title: Field Value
                example: demo
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Trace-Id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: queue
        authType:
          type: string
          title: Authentication type
          description: Authentication method to use for the HTTP request
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          example: token
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: api.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: webhook-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 20480
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it
            can expand to multiple IPs. If disabled, consider enabling
            round-robin DNS.
          default: false
          example: true
        description:
          type: string
          title: Description
          example: Robust webhook delivery with backoff and retries
        customSourceExpression:
          type: string
          title: Source expression
          description: "Expression to evaluate on events to generate output. Example:
            `raw=${_raw}`. See [Cribl
            Docs](https://docs.cribl.io/stream/destinations-webhook#custom-form\
            at) for other examples. If empty, the full event is sent as
            stringified JSON."
          default: __httpOut
          example: raw=${_raw}
        customDropWhenNull:
          type: boolean
          title: Drop when null
          description: Whether to drop events when the source expression evaluates to null
          default: false
          example: false
        customEventDelimiter:
          type: string
          title: Event delimiter
          description: Delimiter string to insert between individual events. Defaults to
            newline character.
          default: "\n"
          example: "\n"
        customContentType:
          type: string
          title: Content type
          description: Content type to use for request. Defaults to application/x-ndjson.
            Any content types set in Advanced Settings > Extra HTTP headers will
            override this entry.
          default: application/x-ndjson
          example: application/x-ndjson
        customPayloadExpression:
          type: string
          title: Batch expression
          description: 'Expression specifying how to format the payload for each batch. To
            reference the events to send, use the `${events}` variable. Example
            expression: `{ "items" : [${events}] }` would send the batch inside
            a JSON object.'
          default: "`${events}`"
          example: '`{ "items": [${events}] }`'
        advancedContentType:
          type: string
          title: Content type
          description: HTTP content-type header value
          default: application/json
          example: application/json
        formatEventCode:
          type: string
          title: Format inbound event
          description: "Custom JavaScript code to format incoming event data accessible
            through the __e variable. The formatted content is added to
            (__e['__eventOut']) if available. Otherwise, the original event is
            serialized as JSON. Caution: This function is evaluated in an
            unprotected context, allowing you to execute almost any JavaScript
            code."
          example: "if (__e.severity === 'error') { __e.__eventOut = JSON.stringify(__e); }"
        formatPayloadCode:
          type: string
          title: Format outbound payload
          description: "Optional JavaScript code to format the payload sent to the
            Destination. The payload, containing a batch of formatted events, is
            accessible through the __e['payload'] variable. The formatted
            payload is returned in the __e['__payloadOut'] variable. Caution:
            This function is evaluated in an unprotected context, allowing you
            to execute almost any JavaScript code."
          example: "__e.__payloadOut = JSON.stringify({ items: __e.payload });"
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
        username:
          type: string
          title: Username
          example: api-user
        password:
          type: string
          title: Password
          example: "***REDACTED***"
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: "***REDACTED***"
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: webhook-credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: webhook-token-secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://auth.example.com/oauth/token
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: client_secret
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: s3cr3t
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
        url:
          type: string
          title: Webhook URL
          description: URL of a webhook endpoint to send events to, such as
            http://localhost:10200
          pattern: ^https?://.*
          example: https://hooks.example.com/ingest
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames
          example: true
        urls:
          type: array
          title: Webhook URLs
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: Webhook LB URL
                description: URL of a webhook endpoint to send events to, such as
                  http://localhost:10200
                pattern: ^https?://.*
                example: https://hooks1.example.com/ingest
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its
                  traffic-handling capability
                minimum: 0
                default: 1
                example: 2
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up
            destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes
          example: 300
      type: object
    OutputSentinel:
      required:
        - endpointURLConfiguration
        - loginUrl
        - secret
        - client_id
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: sentinel-out
        type:
          type: string
          enum:
            - sentinel
          example: sentinel
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - azure
            - sentinel
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the
            outgoing request
          default: true
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size (KB) of the request body (defaults to the API's
            maximum limit of 1000 KB)
          default: 1000
          minimum: 100
          maximum: 1000
          example: 1000
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 500
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically
            on a per-event basis in the __headers field.
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: Content-Type
              value:
                type: string
                title: Field Value
                example: application/json
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: queue
        authType:
          enum:
            - oauth
          example: oauth
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://login.microsoftonline.com/<tenant>/oauth2/v2.0/token
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: "***REDACTED***"
        client_id:
          title: Client ID
          type: string
          description: JavaScript expression to compute the Client ID for the Azure
            application. Can be a constant.
          example: 11111111-2222-3333-4444-555555555555
        scope:
          title: Scope
          type: string
          description: Scope to pass in the OAuth request
          default: https://monitor.azure.com/.default
          example: https://monitor.azure.com/.default
        endpointURLConfiguration:
          title: Endpoint configuration
          description: Enter the data collection endpoint URL or the individual ID
          type: string
          enum:
            - url
            - ID
          default: url
          example: url
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 20480
        description:
          type: string
          title: Description
          example: Send events to Microsoft Sentinel (DCR/DCE)
        format:
          enum:
            - ndjson
            - json_array
            - custom
            - advanced
          example: ndjson
        customSourceExpression:
          type: string
          title: Source expression
          description: "Expression to evaluate on events to generate output. Example:
            `raw=${_raw}`. See [Cribl
            Docs](https://docs.cribl.io/stream/destinations-webhook#custom-form\
            at) for other examples. If empty, the full event is sent as
            stringified JSON."
          default: __httpOut
          example: raw=${_raw}
        customDropWhenNull:
          type: boolean
          title: Drop when null
          description: Whether to drop events when the source expression evaluates to null
          default: false
          example: false
        customEventDelimiter:
          type: string
          title: Event delimiter
          description: Delimiter string to insert between individual events. Defaults to
            newline character.
          default: "\n"
          example: "\n"
        customContentType:
          type: string
          title: Content type
          description: Content type to use for request. Defaults to application/x-ndjson.
            Any content types set in Advanced Settings > Extra HTTP headers will
            override this entry.
          default: application/x-ndjson
          example: application/x-ndjson
        customPayloadExpression:
          type: string
          title: Batch expression
          description: 'Expression specifying how to format the payload for each batch. To
            reference the events to send, use the `${events}` variable. Example
            expression: `{ "items" : [${events}] }` would send the batch inside
            a JSON object.'
          default: "`${events}`"
          example: "`{ \"items\": [${events}] }`"
        advancedContentType:
          type: string
          title: Content type
          description: HTTP content-type header value
          default: application/json
          example: application/json
        formatEventCode:
          type: string
          title: Format inbound event
          description: "Custom JavaScript code to format incoming event data accessible
            through the __e variable. The formatted content is added to
            (__e['__eventOut']) if available. Otherwise, the original event is
            serialized as JSON. Caution: This function is evaluated in an
            unprotected context, allowing you to execute almost any JavaScript
            code."
          example: "if (__e.level === 'error') { __e.__eventOut = JSON.stringify(__e); }"
        formatPayloadCode:
          type: string
          title: Format outbound payload
          description: "Optional JavaScript code to format the payload sent to the
            Destination. The payload, containing a batch of formatted events, is
            accessible through the __e['payload'] variable. The formatted
            payload is returned in the __e['__payloadOut'] variable. Caution:
            This function is evaluated in an unprotected context, allowing you
            to execute almost any JavaScript code."
          example: "__e.__payloadOut = JSON.stringify({ records: __e.payload });"
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
        url:
          title: URL
          type: string
          description: URL to send events to. Can be overwritten by an event's __url field.
          pattern: ^https?://.*
          example: https://example.dce.ingest.monitor.azure.com
        dcrID:
          type: string
          title: Data collection rule ID
          description: Immutable ID for the Data Collection Rule (DCR)
          example: 12345678-90ab-cdef-1234-567890abcdef
        dceEndpoint:
          type: string
          title: Data collection endpoint
          description: "Data collection endpoint (DCE) URL. In the format:
            `https://<Endpoint-Name>-<Identifier>.<Region>.ingest.monitor.azure\
            .com`"
          pattern: ^https:\/\/\w+(-\w+)*-\w+\.\w+(-\w)?\.ingest\.monitor\.azure\.com(\/?)$
          example: https://mydce-abc123.eastus.ingest.monitor.azure.com
        streamName:
          type: string
          title: Stream name
          description: The name of the stream (Sentinel table) in which to store the events
          example: Custom-MyTable_CL
      type: object
    OutputDevnull:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: devnull-out
        type:
          type: string
          enum:
            - devnull
          example: devnull
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - discard
      type: object
    OutputSyslog:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: syslog-out
        type:
          type: string
          enum:
            - syslog
          example: syslog
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - syslog
        protocol:
          type: string
          title: Protocol
          description: The network protocol to use for sending out syslog messages
          default: tcp
          enum:
            - tcp
            - udp
          example: tcp
        facility:
          type: integer
          title: Facility
          description: Default value for message facility. Will be overwritten by value of
            __facility if set. Defaults to user.
          default: 1
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
          example: 1
        severity:
          type: integer
          title: Severity
          description: Default value for message severity. Will be overwritten by value of
            __severity if set. Defaults to notice.
          default: 5
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          example: 5
        appName:
          type: string
          title: App name
          description: Default name for device or application that originated the message.
            Defaults to Cribl, but will be overwritten by value of __appname if
            set.
          default: Cribl
          example: Cribl
        messageFormat:
          type: string
          default: rfc3164
          enum:
            - rfc3164
            - rfc5424
          title: Message format
          description: The syslog message format depending on the receiver's support
          example: rfc3164
        timestampFormat:
          type: string
          default: syslog
          enum:
            - syslog
            - iso8601
          title: Timestamp format
          description: Timestamp format to use when serializing event's time field
          example: syslog
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        octetCountFraming:
          type: boolean
          title: Octet count framing
          description: Prefix messages with the byte count of the message. If disabled, no
            prefix will be set, and the message will be appended with a \n.
          example: true
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        description:
          type: string
          title: Description
          example: Send syslog to upstream collector
        loadBalanced:
          type: boolean
          title: Load balancing
          description: For optimal performance, enable load balancing even if you have one
            hostname, as it can expand to multiple IPs.  If this setting is
            disabled, consider enabling round-robin DNS.
          default: true
          example: true
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
          example: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: syslog.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: syslog-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        host:
          type: string
          title: Address
          description: The hostname of the receiver
          example: syslog.receiver.example.com
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          example: 514
        maxRecordSize:
          type: number
          title: Record size limit
          default: 1500
          minimum: 1
          maximum: 65535
          description: Maximum size of syslog messages. Make sure this value is less than
            or equal to the MTU to avoid UDP packet fragmentation.
          example: 1200
        udpDnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address.
            Ignored if the destination is an IP address. A value of 0 means
            every message sent will incur a DNS lookup.
          example: 300
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
      type: object
    OutputSplunk:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: splunk-main
        type:
          type: string
          enum:
            - splunk
          example: splunk
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - splunk
            - prod
        host:
          type: string
          title: Address
          description: The hostname of the receiver
          example: splunk-indexer.example.com
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          default: 9997
          example: 9997
        nestedFields:
          type: string
          enum:
            - json
            - none
          title: Nested field serialization
          description: How to serialize nested fields into index-time fields
          default: none
          example: none
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: 50 MB
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
          example: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: splunk-indexer.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: splunk-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        enableMultiMetrics:
          type: boolean
          title: Output multiple metrics
          description: Output metrics in multiple-metric format in a single event.
            Supported in Splunk 8.0 and above.
          default: false
          example: false
        enableACK:
          type: boolean
          title: Minimize in-flight data loss
          description: Check if indexer is shutting down and stop sending data. This helps
            minimize data loss during shutdown.
          default: true
          example: true
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
            - v3
            - v4
          default: v3
          example: v3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: Send events to Splunk indexers over S2S
        maxFailedHealthChecks:
          type: number
          title: Failed health check limit
          description: Maximum number of times healthcheck can fail before we close
            connection. If set to 0 (disabled), and the connection to Splunk is
            forcibly closed, some data loss might occur.
          default: 1
          minimum: 0
          example: 1
        compress:
          type: string
          title: Compression
          description: Controls whether the sender should send compressed data to the
            server. Select 'Disabled' to reject compressed connections or
            'Always' to ignore server's configuration and send compressed data.
          default: disabled
          enum:
            - disabled
            - auto
            - always
          example: auto
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        authToken:
          type: string
          title: Auth token
          description: Shared secret token to use when establishing a connection to a
            Splunk indexer.
          default: ""
          example: "***REDACTED***"
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: splunk-indexer-token
      type: object    
    OutputSplunkLb:
      required:
        - hosts
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: splunk-lb-main
        type:
          type: string
          enum:
            - splunk_lb
          example: splunk_lb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - splunk
            - prod
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up
            destinations from A records
          example: 300
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes
          example: 300
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A
            random set of IPs will be picked on every DNS resolution period. Use
            0 for unlimited.
          example: 8
        nestedFields:
          type: string
          enum:
            - json
            - none
          title: Nested field serialization
          description: How to serialize nested fields into index-time fields
          default: none
          example: none
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: 50 MB
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
          example: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: splunk-lb.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: splunk-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        enableMultiMetrics:
          type: boolean
          title: Output multiple metrics
          description: Output metrics in multiple-metric format in a single event.
            Supported in Splunk 8.0 and above.
          default: false
          example: false
        enableACK:
          type: boolean
          title: Minimize in-flight data loss
          description: Check if indexer is shutting down and stop sending data. This helps
            minimize data loss during shutdown.
          default: true
          example: true
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
            - v3
            - v4
          default: v3
          example: v3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        indexerDiscovery:
          type: boolean
          default: false
          title: Indexer Discovery
          description: Automatically discover indexers in indexer clustering environment.
          example: true
        senderUnhealthyTimeAllowance:
          type: number
          title: Endpoint health fluctuation time allowance (ms)
          description: How long (in milliseconds) each LB endpoint can report blocked
            before the Destination reports unhealthy, blocking the sender.
            (Grace period for fluctuations.) Use 0 to disable; max 1 minute.
          default: 100
          minimum: 0
          maximum: 60000
          example: 500
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: Load-balance events across Splunk indexers
        maxFailedHealthChecks:
          type: number
          title: Failed health check limit
          description: Maximum number of times healthcheck can fail before we close
            connection. If set to 0 (disabled), and the connection to Splunk is
            forcibly closed, some data loss might occur.
          default: 1
          minimum: 0
          example: 1
        compress:
          type: string
          title: Compression
          description: Controls whether the sender should send compressed data to the
            server. Select 'Disabled' to reject compressed connections or
            'Always' to ignore server's configuration and send compressed data.
          default: disabled
          enum:
            - disabled
            - auto
            - always
          example: auto
        indexerDiscoveryConfigs:
          type: object
          description: List of configurations to set up indexer discovery in Splunk
            Indexer clustering environment.
          required:
            - masterUri
            - site
            - refreshIntervalSec
          properties:
            site:
              type: string
              pattern: "[0-9A-Za-z-._]+"
              title: Site
              description: Clustering site of the indexers from where indexers need to be
                discovered. In case of single site cluster, it defaults to
                'default' site.
              default: default
              example: site1
            masterUri:
              type: string
              pattern: ^https?://[a-zA-Z0-9-._]+:[0-9]+$
              title: Cluster manager URI
              description: "Full URI of Splunk cluster manager (scheme://host:port). Example:
                https://managerAddress:8089"
              example: https://cm.example.com:8089
            refreshIntervalSec:
              type: number
              default: 300
              minimum: 60
              maximum: 86400
              title: Refresh period
              description: Time interval, in seconds, between two consecutive indexer list
                fetches from cluster manager
              example: 300
            rejectUnauthorized:
              type: boolean
              title: Validate cluster manager certificates
              default: false
              description: During indexer discovery, reject cluster manager certificates that
                are not authorized by the system's CA. Disable to allow
                untrusted (for example, self-signed) certificates.
              example: true
            authTokens:
              type: array
              title: Authentication tokens
              description: Tokens required to authenticate to cluster manager for indexer
                discovery
              items:
                type: object
                properties:
                  authType:
                    title: Authentication method
                    type: string
                    enum:
                      - manual
                      - secret
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to
                      use a text secret to authenticate
            authType:
              title: Authentication method
              type: string
              enum:
                - manual
                - secret
              default: manual
              description: Select Manual to enter an auth token directly, or select Secret to
                use a text secret to authenticate
              example: manual
            authToken:
              type: string
              title: Auth token
              description: Shared secret to be provided by any client (in authToken header
                field). If empty, unauthorized access is permitted.
              default: ""
              example: "***REDACTED***"
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
              example: cluster-manager-token
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames
          example: false
        hosts:
          type: array
          title: Destinations
          description: Set of Splunk indexers to load-balance data to.
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
                example: idx1.example.com
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                default: 9997
                example: 9997
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                  - inherit
                  - off
                default: inherit
                example: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not
                  specified, defaults to connection host (if not an IP);
                  otherwise, uses the global TLS settings.
                example: idx1.example.com
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its
                  traffic-handling capability
                minimum: 0
                default: 1
                example: 2
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        authToken:
          type: string
          title: Auth token
          description: Shared secret token to use when establishing a connection to a
            Splunk indexer.
          default: ""
          example: "***REDACTED***"
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: splunk-indexer-token
      type: object
    OutputSplunkHec:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: splunk-hec-main
        type:
          type: string
          enum:
            - splunk_hec
          example: splunk_hec
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - splunk
            - hec
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it
            can expand to multiple IPs. If disabled, consider enabling
            round-robin DNS.
          default: true
          example: true
        nextQueue:
          type: string
          title: Next Processing Queue
          description: In the Splunk app, define which Splunk processing queue to send the
            events after HEC processing.
          default: indexQueue
          example: indexQueue
        tcpRouting:
          type: string
          title: Default _TCP_ROUTING
          description: In the Splunk app, set the value of _TCP_ROUTING for events that do
            not have _ctrl._TCP_ROUTING set.
          default: nowhere
          example: default_route
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 2097152
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: abc123
          example:
            - name: X-Request-ID
              value: abc123
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        enableMultiMetrics:
          type: boolean
          title: Output multi-metrics
          description: Output metrics in multiple-metric format, supported in Splunk 8.0
            and above to allow multiple metrics in a single event.
          default: false
          example: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 60000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          example: true
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send events to Splunk HEC
        url:
          type: string
          title: Splunk HEC Endpoint
          description: URL to a Splunk HEC endpoint to send events to, e.g.,
            http://localhost:8088/services/collector/event
          default: http://localhost:8088/services/collector/event
          pattern: ^https?://.*
          example: http://splunk-hec.example.com:8088/services/collector/event
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames
          example: false
        urls:
          type: array
          title: Splunk HEC Endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: HEC Endpoint
                description: URL to a Splunk HEC endpoint to send events to, e.g.,
                  http://localhost:8088/services/collector/event
                default: http://localhost:8088/services/collector/event
                pattern: ^https?://.*
                example: http://splunk-hec-2.example.com:8088/services/collector/event
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its
                  traffic-handling capability
                minimum: 0
                default: 1
                example: 2
          example:
            - url: http://splunk-hec-1.example.com:8088/services/collector/event
              weight: 3
            - url: http://splunk-hec-2.example.com:8088/services/collector/event
              weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up
            destinations from A records
          example: 300
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes
          example: 300
        token:
          type: string
          title: HEC Auth token
          description: Splunk HEC authentication token
          example: "***REDACTED***"
        textSecret:
          type: string
          title: HEC Auth token (text secret)
          description: Select or create a stored text secret
          example: splunk-hec-token
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputTcpjson:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: tcpjson-out
        type:
          type: string
          enum:
            - tcpjson
          example: tcpjson
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - tcpjson
            - prod
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          example: true
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          example: gzip
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: 50 MB
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: tcp.receiver.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: tcpjson-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
          example: 60000
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated
            authentication token expires, valid values between 1 and 60
          example: 60
        sendHeader:
          type: boolean
          title: Send auth token in initial record
          description: Upon connection, send a header-like record containing the auth
            token and other metadata.This record will not contain an actual
            event – only subsequent records will.
          default: true
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: Send JSON events over TCP to downstream services
        host:
          type: string
          title: Address
          description: The hostname of the receiver
          example: tcp.receiver.example.com
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          example: 10300
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames
          example: false
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
                example: tcp1.example.com
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                example: 10300
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                  - inherit
                  - off
                default: inherit
                example: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not
                  specified, defaults to connection host (if not an IP);
                  otherwise, uses the global TLS settings.
                example: tcp1.example.com
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its
                  traffic-handling capability
                minimum: 0
                default: 1
                example: 2
          example:
            - host: tcp1.example.com
              port: 10300
              tls: inherit
              servername: tcp1.example.com
              weight: 2
            - host: tcp2.example.com
              port: 10300
              tls: inherit
              servername: tcp2.example.com
              weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up
            destinations from A records
          example: 300
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes
          example: 300
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A
            random set of IPs will be picked on every DNS resolution period. Use
            0 for unlimited.
          example: 8
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        authToken:
          type: string
          title: Auth token
          description: Optional authentication token to include as part of the connection
            header
          default: ""
          example: "***REDACTED***"
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: tcpjson-auth-token
      type: object
    OutputWavefront:
      required:
        - domain
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: wavefront-out
        type:
          type: string
          enum:
            - wavefront
          example: wavefront
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - wavefront
            - metrics
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
        domain:
          type: string
          title: Domain name
          description: WaveFront domain name, e.g. "longboard"
          default: longboard
          example: longboard
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: abc123
          example:
            - name: X-Request-ID
              value: abc123
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 60000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send metrics to WaveFront
        token:
          type: string
          title: Auth token
          description: WaveFront API authentication token (see
            [here](https://docs.wavefront.com/wavefront_api.html#generating-an-api-token))
          example: "***REDACTED***"
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: wavefront-api-token
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputSignalfx:
      required:
        - realm
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: signalfx-out
        type:
          type: string
          enum:
            - signalfx
          example: signalfx
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - signalfx
            - metrics
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: manual
        realm:
          type: string
          title: Realm
          description: SignalFx realm name, e.g. "us0". For a complete list of available
            SignalFx realm names, please check
            [here](https://docs.splunk.com/observability/en/get-started/service-description.html#sd-regions).
          default: us0
          example: us1
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: abc123
          example:
            - name: X-Request-ID
              value: abc123
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 60000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send metrics to Splunk Observability (SignalFx)
        token:
          type: string
          title: Auth token
          description: SignalFx API access token (see
            [here](https://docs.signalfx.com/en/latest/admin-guide/tokens.html#working-with-access-tokens))
          example: "***REDACTED***"
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: signalfx-api-token
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputFilesystem:
      required:
        - destPath
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: filesystem-out
        type:
          type: string
          enum:
            - filesystem
          example: filesystem
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - filesystem
            - prod
        destPath:
          type: string
          title: Output location
          description: Final destination for the output files
          example: /var/log/cribl/out
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and
            moving to final destination. Use performant, stable storage.
          example: /var/log/cribl/stage
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and
            organized. Default is date-based. If blank, Stream will fall back to
            the event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d') + '/host=' + host"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 64
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output
            file
          default: ""
          example: timestamp,host,message
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 256
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Write events to local filesystem with daily partitioning
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is
            delivered
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          example: normal
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each
            Parquet file generated
          example: true
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader
            implementations use Data page V2's attributes to work more
            efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group
            can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB.
            Generally, lower values improve reading speed, while higher values
            improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 4MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the
            properties you add here as key-value pairs. Useful for tagging.
            Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          example:
            - key: team
              value: platform
            - key: environment
              value: prod
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: team
              value:
                type: string
                title: Value
                example: platform
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum
            values within data, numbers of nulls, etc. You can use Parquet tools
            to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet
            readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data
            integrity
          example: true
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: /var/lib/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
    OutputS3:
      required:
        - bucket
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: s3-out
        type:
          type: string
          enum:
            - s3
          example: s3
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - s3
            - prod
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at initialization time. Example
            referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          example: cribl-data-bucket
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
          example: us-east-1
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript
            expression. Example: `${C.env.SOME_SECRET}`)"
          example: "***REDACTED***"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: https://s3.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-s3-writer
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: /var/lib/cribl/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be evaluated only at init time. Example
            referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
          example: logs/ingest
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_IR
            - DEEP_ARCHIVE
          example: STANDARD_IA
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
            - AES256
            - aws:kms
          example: AES256
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
          example: arn:aws:kms:us-east-1:123456789012:key/abcd1234-5678-90ab-cdef-EXAMPLEKEY
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and
            organized. Default is date-based. If blank, Stream will fall back to
            the event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d') + '/host=' + host"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 64
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output
            file
          default: ""
          example: timestamp,host,message
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 256
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          example: 30
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
          example: 4
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the
            bucket itself
          default: true
          example: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before
            backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
          example: 500
        description:
          type: string
          title: Description
          example: Write objects to S3 with date-based partitioning
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression
            (`${C.env.SOME_ACCESS_KEY}`)
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is
            delivered
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          example: normal
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each
            Parquet file generated
          example: true
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader
            implementations use Data page V2's attributes to work more
            efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group
            can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB.
            Generally, lower values improve reading speed, while higher values
            improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 4MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the
            properties you add here as key-value pairs. Useful for tagging.
            Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: team
              value:
                type: string
                title: Value
                example: platform
          example:
            - key: team
              value: platform
            - key: environment
              value: prod
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum
            values within data, numbers of nulls, etc. You can use Parquet tools
            to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet
            readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data
            integrity
          example: true
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: /var/lib/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
    OutputAzureBlob:
      required:
        - containerName
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: azure-blob-out
        type:
          type: string
          enum:
            - azure_blob
          example: azure_blob
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - azure
            - blob
        containerName:
          type: string
          title: Container name
          description: The Azure Blob Storage container name. Name can include only
            lowercase letters, numbers, and hyphens. For dynamic container
            names, enter a JavaScript expression within quotes or backtickss, to
            be evaluated at initialization. The expression can evaluate to a
            constant value and can reference Global Variables, such as
            `myContainer-${C.env["CRIBL_WORKER_ID"]}`.
          example: cribl-data
        createContainer:
          type: boolean
          title: Create container
          description: Create the configured container in Azure Blob Storage if it does
            not already exist
          default: false
          example: true
        destPath:
          type: string
          title: Blob prefix
          description: Root directory prepended to path before uploading. Value can be a
            JavaScript expression enclosed in quotes or backticks, to be
            evaluated at initialization. The expression can evaluate to a
            constant value and can reference Global Variables, such as
            `myBlobPrefix-${C.env["CRIBL_WORKER_ID"]}`.
          example: logs/ingest
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and
            moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: /var/lib/cribl/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file
          default: 1
          minimum: 1
          maximum: 10
          example: 4
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and
            organized. Default is date-based. If blank, Stream will fall back to
            the event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d') + '/host=' + host"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 64
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output
            file
          default: ""
          example: timestamp,host,message
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 256
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - clientSecret
            - clientCert
          default: manual
          example: manual
        storageClass:
          type: string
          title: Blob access tier
          enum:
            - Inferred
            - Hot
            - Cool
            - Cold
            - Archive
          default: Inferred
          example: Hot
        description:
          type: string
          title: Description
          example: Write objects to Azure Blob Storage with date-based partitioning
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is
            delivered
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          example: normal
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each
            Parquet file generated
          example: true
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader
            implementations use Data page V2's attributes to work more
            efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group
            can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB.
            Generally, lower values improve reading speed, while higher values
            improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 4MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the
            properties you add here as key-value pairs. Useful for tagging.
            Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: team
              value:
                type: string
                title: Value
                example: platform
          example:
            - key: team
              value: platform
            - key: environment
              value: prod
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum
            values within data, numbers of nulls, etc. You can use Parquet tools
            to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet
            readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data
            integrity
          example: true
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: /var/lib/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
        connectionString:
          type: string
          title: Connection string
          description: Enter your Azure Storage account connection string. If left blank,
            Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
          example: DefaultEndpointsProtocol=https;AccountName=criblstore;AccountKey=***REDACTED***;EndpointSuffix=core.windows.net
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select or create a stored text secret
          example: azure-connstr-secret
        storageAccountName:
          type: string
          title: Storage account name
          description: The name of your Azure storage account
          example: criblstore
        tenantId:
          type: string
          title: Tenant ID
          description: The service principal's tenant ID
          example: 00000000-0000-0000-0000-000000000000
        clientId:
          type: string
          title: Client ID
          description: The service principal's client ID
          example: 11111111-1111-1111-1111-111111111111
        azureCloud:
          type: string
          title: Azure Cloud
          description: The Azure cloud to use. Defaults to Azure Public Cloud.
          example: AzurePublicCloud
        endpointSuffix:
          type: string
          title: Endpoint suffix
          description: Endpoint suffix for the service URL. Takes precedence over the
            Azure Cloud setting. Defaults to core.windows.net.
          example: core.windows.net
        clientTextSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: azure-sp-client-secret
        certificate:
          type: object
          required:
            - certificateName
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the
                Azure portal
              example: azure-app-cert
      type: object
    OutputAzureDataExplorer:
      required:
        - clusterUrl
        - database
        - table
        - compress
        - oauthEndpoint
        - tenantId
        - clientId
        - scope
        - oauthType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: adx-out
        type:
          type: string
          enum:
            - azure_data_explorer
          example: azure_data_explorer
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - azure
            - adx
        clusterUrl:
          type: string
          title: Cluster base URI
          description: The base URI for your cluster. Typically,
            `https://<cluster>.<region>.kusto.windows.net`.
          pattern: ^https://[a-zA-Z0-9\-]+.(\w+).(kusto.fabric.microsoft.com|kusto.(windows|usgovcloudapi).net)$
          example: https://mycluster.eastus.kusto.windows.net
        database:
          type: string
          title: Database name
          description: Name of the database containing the table where data will be ingested
          pattern: ^[\w\s\-\.]+$
          maxLength: 260
          example: telemetry
        table:
          type: string
          title: Table name
          description: Name of the table to ingest data into
          pattern: ^[\w\-\.]+$
          maxLength: 1024
          example: logs_raw
        validateDatabaseSettings:
          type: boolean
          title: Validate database settings
          description: When saving or starting the Destination, validate the database name
            and credentials; also validate table name, except when creating a
            new table. Disable if your Azure app does not have both the Database
            Viewer and the Table Viewer role.
          default: true
          example: true
        ingestMode:
          type: string
          title: Ingestion mode
          enum:
            - batching
            - streaming
          default: batching
          example: batching
        oauthEndpoint:
          type: string
          title: Microsoft Entra ID authentication endpoint
          default: https://login.microsoftonline.com
          enum:
            - https://login.microsoftonline.com
            - https://login.microsoftonline.us
            - https://login.partner.microsoftonline.cn
          description: Endpoint used to acquire authentication tokens from Azure
          example: https://login.microsoftonline.com
        tenantId:
          type: string
          title: Tenant ID
          description: Directory ID (tenant identifier) in Azure Active Directory
          example: 00000000-0000-0000-0000-000000000000
        clientId:
          type: string
          title: Client ID
          description: client_id to pass in the OAuth request parameter
          example: 11111111-1111-1111-1111-111111111111
        scope:
          type: string
          title: Scope
          description: Scope to pass in the OAuth request parameter
          example: https://kusto.kusto.windows.net/.default
        oauthType:
          title: Authentication method
          type: string
          enum:
            - clientSecret
            - clientTextSecret
            - certificate
          default: clientSecret
          description: The type of OAuth 2.0 client credentials grant flow to use
          example: clientSecret
        description:
          type: string
          title: Description
          example: Ingest data into Azure Data Explorer (Kusto)
        clientSecret:
          type: string
          title: Client secret
          description: The client secret that you generated for your app in the Azure portal
          example: "***REDACTED***"
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: adx-client-secret
        certificate:
          type: object
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the
                Azure portal
              example: adx-app-cert
        ingestUrl:
          type: string
          title: Ingestion service URI
          description: The ingestion service URI for your cluster. Typically,
            `https://ingest-<cluster>.<region>.kusto.windows.net`.
          pattern: ^https://[a-zA-Z0-9\-]+.(\w+).(kusto.fabric.microsoft.com|kusto.(windows|usgovcloudapi).net)$
          example: https://ingest-mycluster.eastus.kusto.windows.net
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        isMappingObj:
          type: boolean
          title: Add mapping object
          description: Send a JSON mapping object instead of specifying an existing named
            data mapping
          default: false
          example: false
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          example: json
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and
            moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: /var/lib/cribl/state/outputs/staging
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 64
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file
          default: 1
          minimum: 1
          maximum: 10
          example: 4
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushImmediately:
          type: boolean
          title: Flush immediately
          description: Bypass the data management service's aggregation mechanism
          default: false
          example: true
        retainBlobOnSuccess:
          type: boolean
          title: Retain blob on success
          description: Prevent blob deletion after ingestion is complete
          default: false
          example: true
        extentTags:
          type: array
          title: Extent tags
          description: Strings or tags associated with the extent (ingested data shard)
          items:
            type: object
            required:
              - value
            properties:
              prefix:
                type: string
                title: Prefix (optional)
                enum:
                  - dropBy
                  - ingestBy
                example: ingestBy
              value:
                type: string
                title: Value
                example: source:app1
          example:
            - prefix: ingestBy
              value: source:app1
            - prefix: dropBy
              value: retention:7d
        ingestIfNotExists:
          type: array
          title: Enforce uniqueness via tag values
          description: Prevents duplicate ingestion by verifying whether an extent with
            the specified ingest-by tag already exists
          items:
            type: object
            required:
              - value
            properties:
              value:
                type: string
                title: Value
                example: batchId:2025-10-02T00:00Z
          example:
            - value: batchId:2025-10-02T00:00Z
        reportLevel:
          type: string
          title: Report level
          description: Level of ingestion status reporting. Defaults to FailuresOnly.
          enum:
            - failuresOnly
            - doNotReport
            - failuresAndSuccesses
          default: failuresOnly
          example: failuresOnly
        reportMethod:
          type: string
          title: Report method
          description: Target of the ingestion status reporting. Defaults to Queue.
          enum:
            - queue
            - table
            - queueAndTable
          default: queue
          example: queue
        additionalProperties:
          type: array
          title: Additional fields
          description: Optionally, enter additional configuration properties to send to
            the ingestion service
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                pattern: ^[\w\-\.]+$
                example: format
              value:
                type: string
                title: Value
                example: json
          example:
            - key: format
              value: json
            - key: source
              value: cribl
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 60000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is
            delivered
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        mappingRef:
          type: string
          title: Data mapping
          description: Enter the name of a data mapping associated with your target table.
            Or, if incoming event and target table fields match exactly, you can
            leave the field empty.
          pattern: ^[\w\-\.]+$
          example: my_table_mapping
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 4096
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
          example: true
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the
            outgoing request
          default: true
          example: true
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputAzureLogs:
      required:
        - logType
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: azure-logs-out
        type:
          type: string
          enum:
            - azure_logs
          example: azure_logs
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - azure
            - loganalytics
        logType:
          type: string
          title: Log Type
          description: The Log Type of events sent to this LogAnalytics workspace.
            Defaults to `Cribl`. Use only letters, numbers, and `_` characters,
            and can't exceed 100 characters. Can be overwritten by event field
            __logType.
          default: Cribl
          maxLength: 100
          example: Cribl
        resourceId:
          type: string
          title: Resource ID
          description: Optional Resource ID of the Azure resource to associate the data
            with. Can be overridden by the __resourceId event field. This ID
            populates the _ResourceId property, allowing the data to be included
            in resource-centric queries. If the ID is neither specified nor
            overridden, resource-centric queries will omit the data.
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 10240
          example: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: abc123
          example:
            - name: X-Request-ID
              value: abc123
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        apiUrl:
          type: string
          title: DNS name of API endpoint
          description: "The DNS name of the Log API endpoint that sends log data to a Log
            Analytics workspace in Azure Monitor. Defaults to
            .ods.opinsights.azure.com. @{product} will add a prefix and suffix
            to construct a URI in this format:
            <https://<Workspace_ID><your_DNS_name>/api/logs?api-version=<API
            version>."
          pattern: ^\.[^\/]+$
          default: .ods.opinsights.azure.com
          example: .ods.opinsights.azure.com
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 60000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter workspace ID and workspace key directly, or select a stored
            secret
          example: manual
        description:
          type: string
          title: Description
          example: Send logs to Azure Log Analytics workspace
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        workspaceId:
          type: string
          title: Workspace ID
          description: Azure Log Analytics Workspace ID. See Azure Dashboard Workspace >
            Advanced settings.
          example: 22222222-2222-2222-2222-222222222222
        workspaceKey:
          type: string
          title: Workspace key
          description: Azure Log Analytics Workspace Primary or Secondary Shared Key. See
            Azure Dashboard Workspace > Advanced settings.
          example: "***REDACTED***"
        keypairSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: azure-log-analytics-keys
      type: object
    OutputKinesis:
      required:
        - streamName
        - region
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: kinesis-out
        type:
          type: string
          enum:
            - kinesis
          example: kinesis
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - aws
            - kinesis
        streamName:
          type: string
          title: Stream Name
          description: Kinesis stream name to send events to.
          example: app-events-stream
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: "***REDACTED***"
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to the AWS
            Region-specific endpoint. Otherwise, it must point to Kinesis
            stream-compatible endpoint.
          example: https://kinesis.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-kinesis-writer
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        concurrency:
          type: number
          title: Put request concurrency
          description: Maximum number of ongoing put requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB, uncompressed)
          description: Maximum size (KB) of each individual record before compression. For
            uncompressed or non-compressible data 1MB is the max recommended
            size
          default: 1024
          minimum: 1
          maximum: 10240
          example: 1024
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
          example: 1
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Compression type to use for records
          example: gzip
        useListShards:
          type: boolean
          title: ListShards API
          description: Provides higher stream rate limits, improving delivery speed and
            reliability by minimizing throttling. See the [ListShards
            API](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListShards.html)
            documentation for details.
          default: false
          example: true
        asNdjson:
          type: boolean
          title: Send batched
          description: Batch events into a single record as NDJSON
          default: true
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Deliver events to AWS Kinesis Data Streams
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputHoneycomb:
      required:
        - dataset
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: honeycomb-out
        type:
          type: string
          enum:
            - honeycomb
          example: honeycomb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - honeycomb
            - prod
        dataset:
          type: string
          title: Dataset name
          description: Name of the dataset to send events to – e.g., observability
          example: observability
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: abc123
          example:
            - name: X-Request-ID
              value: abc123
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 60000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: Send events to Honeycomb dataset
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        team:
          type: string
          title: API key
          description: Team API key where the dataset belongs
          example: "***REDACTED***"
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: honeycomb-api-key
      type: object
    OutputAzureEventhub:
      required:
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: eventhub-out
        type:
          type: string
          enum:
            - azure_eventhub
          example: azure_eventhub
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - azure
            - eventhub
        brokers:
          type: array
          title: Brokers
          description: List of Event Hubs Kafka brokers to connect to, eg.
            yourdomain.servicebus.windows.net:9093. The hostname can be found in
            the host portion of the primary or secondary connection string in
            Shared Access Policies.
          minItems: 1
          items:
            type: string
            minLength: 1
          example:
            - myns.servicebus.windows.net:9093
        topic:
          type: string
          title: Event Hub name
          description: The name of the Event Hub (Kafka Topic) to publish events. Can be
            overwritten using field __topicOut.
          example: app-events
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments
          enum:
            - 1
            - 0
            - -1
          example: 1
        format:
          type: string
          default: json
          enum:
            - json
            - raw
          title: Record data format
          description: Format to use to serialize events before writing to the Event Hubs
            Kafka brokers
          example: json
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. Setting
            should be < message.max.bytes settings in Event Hubs brokers.
          example: 768
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: Maximum number of events in a batch before forcing a flush
          example: 1000
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
          example: 1
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and
            minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180
            seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 60000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum
            is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 1000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency
            for failed messages. For faster retries, use a lower multiplier. For
            slower retries with more delay between attempts, use a higher
            multiplier. The multiplier is used in an exponential backoff
            formula; see the Kafka
            [documentation](https://kafka.js.org/docs/retry-detailed) for
            details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backward from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 60000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            mechanism:
              type: string
              enum:
                - plain
                - oauthbearer
              title: SASL mechanism
              default: plain
              example: plain
        tls:
          type: object
          title: TLS settings (client side)
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another trusted CA (such as the
                system's)
              default: true
              example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Deliver events to Azure Event Hubs via Kafka protocol
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputGoogleChronicle:
      required:
        - logFormatType
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: chronicle-out
        type:
          type: string
          enum:
            - google_chronicle
          example: google_chronicle
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - google
            - chronicle
        apiVersion:
          type: string
          title: API version
          default: v1
          enum:
            - v1
            - v2
          example: v1
        authenticationMethod:
          type: string
          title: Authentication method
          default: serviceAccount
          enum:
            - manual
            - secret
            - serviceAccount
            - serviceAccountSecret
          example: serviceAccount
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default:
            - httpStatus: 429
              initialBackoff: 30000
              backoffRate: 1
              maxBackoff: 30000
            - httpStatus: 503
              initialBackoff: 30000
              backoffRate: 1
              maxBackoff: 30000
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 30000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        logFormatType:
          type: string
          title: Send events as
          description: ""
          default: unstructured
          enum:
            - unstructured
            - udm
          example: unstructured
        region:
          type: string
          title: Region
          description: Regional endpoint to send events to
          example: us
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
          example: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 90
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 90
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: abc123
          example:
            - name: X-Request-ID
              value: abc123
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 5120
        description:
          type: string
          title: Description
          example: Send events to Google SecOps Chronicle
        extraLogTypes:
          type: array
          title: Custom log types
          description: Custom log types. If the value "Custom" is selected in the setting
            "Default log type" above, the first custom log type in this table
            will be automatically selected as default log type.
          items:
            type: object
            required:
              - logType
            properties:
              logType:
                type: string
                title: Log Type
                pattern: ^[A-Z0-9_]+$
              description:
                type: string
                title: Description
          example:
            - logType: CUSTOM_WEBLOG
              description: Web server access logs
            - logType: APP_SECURITY
              description: Application security events
        logType:
          type: string
          title: Default log type
          description: Default log type value to send to SecOps. Can be overwritten by
            event field __logType.
          example: CUSTOM_WEBLOG
        logTextField:
          type: string
          title: Log text field
          description: Name of the event field that contains the log text to send. If not
            specified, Stream sends a JSON representation of the whole event.
          example: message
        customerId:
          type: string
          title: Customer ID
          description: Unique identifier (UUID) corresponding to a particular SecOps
            instance. Provided by your SecOps representative.
          example: 123e4567-e89b-12d3-a456-426614174000
        namespace:
          type: string
          title: Namespace
          description: User-configured environment namespace to identify the data domain
            the logs originated from. Use namespace as a tag to identify the
            appropriate data domain for indexing and enrichment functionality.
            Can be overwritten by event field __namespace.
          example: prod-us
        customLabels:
          type: array
          title: Custom labels
          description: "Custom labels to be added to every batch "
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
              value:
                type: string
                title: Value
          example:
            - key: team
              value: platform
            - key: service
              value: api-gateway
        apiKey:
          type: string
          title: API key
          description: Organization's API key in Google SecOps
          example: "***REDACTED***"
        apiKeySecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: chronicle-api-key
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded
            from Google Cloud. To upload a file, click the upload button at this
            field's upper right.
          example: "***REDACTED***"
        serviceAccountCredentialsSecret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
          example: chronicle-sa-credentials
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputGoogleCloudStorage:
      required:
        - bucket
        - endpoint
        - region
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: gcs-out
        type:
          type: string
          enum:
            - google_cloud_storage
          example: google_cloud_storage
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - gcp
            - gcs
        bucket:
          type: string
          title: Bucket name
          description: "Name of the destination bucket. This value can be a constant or a
            JavaScript expression that can only be evaluated at init time.
            Example of referencing a Global Variable:
            `myBucket-${C.vars.myVar}`."
          example: cribl-data-bucket
        region:
          type: string
          title: Region
          description: Region where the bucket is located
          example: us-central1
        endpoint:
          type: string
          title: Endpoint
          default: https://storage.googleapis.com
          description: Google Cloud Storage service endpoint
          example: https://storage.googleapis.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Google Cloud Storage requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          default: manual
          enum:
            - auto
            - manual
            - secret
          example: manual
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: /var/lib/cribl/state/outputs/staging
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be evaluated only at init time. Example
            referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
          example: logs/ingest
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the
            bucket itself
          default: true
          example: true
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - bucket-owner-read
            - bucket-owner-full-control
            - project-private
            - authenticated-read
            - public-read
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - NEARLINE
            - COLDLINE
            - ARCHIVE
          example: NEARLINE
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and
            organized. Default is date-based. If blank, Stream will fall back to
            the event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d') + '/host=' + host"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 64
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output
            file
          default: ""
          example: timestamp,host,message
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 256
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Write objects to Google Cloud Storage with date-based partitioning
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is
            delivered
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          example: normal
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each
            Parquet file generated
          example: true
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader
            implementations use Data page V2's attributes to work more
            efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group
            can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB.
            Generally, lower values improve reading speed, while higher values
            improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 4MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the
            properties you add here as key-value pairs. Useful for tagging.
            Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: team
              value:
                type: string
                title: Value
                example: platform
          example:
            - key: team
              value: platform
            - key: environment
              value: prod
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum
            values within data, numbers of nulls, etc. You can use Parquet tools
            to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet
            readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data
            integrity
          example: true
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: /var/lib/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
        awsApiKey:
          type: string
          title: Access key
          description: HMAC access key. This value can be a constant or a JavaScript
            expression, such as `${C.env.GCS_ACCESS_KEY}`.
          example: "***REDACTED***"
        awsSecretKey:
          type: string
          title: Secret
          description: HMAC secret. This value can be a constant or a JavaScript
            expression, such as `${C.env.GCS_SECRET}`.
          example: "***REDACTED***"
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: gcs-hmac-credentials
      type: object
    OutputGoogleCloudLogging:
      required:
        - logLocationType
        - logLocationExpression
        - logNameExpression
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: gcl-out
        type:
          type: string
          enum:
            - google_cloud_logging
          example: google_cloud_logging
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - gcp
            - logging
        logLocationType:
          type: string
          title: Log location type
          enum:
            - project
            - organization
            - billingAccount
            - folder
          example: project
        logNameExpression:
          type: string
          title: Log name expression
          description: JavaScript expression to compute the value of the log name.
          example: '"cribl_logs"'
        payloadFormat:
          type: string
          title: Payload format
          description: Format to use when sending payload. Defaults to Text.
          enum:
            - text
            - json
          default: text
          example: json
        logLabels:
          type: array
          title: Log labels
          description: Labels to apply to the log entry
          items:
            type: object
            required:
              - label
              - valueExpression
            properties:
              label:
                type: string
                title: Label
                description: Label name
                example: environment
              valueExpression:
                type: string
                title: Value
                description: JavaScript expression to compute the label's value.
                example: '"prod"'
          example:
            - label: environment
              valueExpression: '"prod"'
        resourceTypeExpression:
          type: string
          title: Resource type expression
          description: JavaScript expression to compute the value of the managed resource
            type field. Must evaluate to one of the valid values
            [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types).
            Defaults to "global".
          example: '"gce_instance"'
        resourceTypeLabels:
          type: array
          title: Resource labels
          description: Labels to apply to the managed resource. These must correspond to
            the valid labels for the specified resource type (see
            [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types)).
            Otherwise, they will be dropped by Google Cloud Logging.
          items:
            type: object
            required:
              - label
              - valueExpression
            properties:
              label:
                type: string
                title: Label
                description: Label name
                example: instance_id
              valueExpression:
                type: string
                title: Value
                description: JavaScript expression to compute the label's value.
                example: 'String(_raw.instance_id)'
          example:
            - label: instance_id
              valueExpression: 'String(_raw.instance_id)'
        severityExpression:
          type: string
          title: Severity expression
          description: JavaScript expression to compute the value of the severity field.
            Must evaluate to one of the severity values supported by Google
            Cloud Logging
            [here](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logseverity)
            (case insensitive). Defaults to "DEFAULT".
          example: '"INFO"'
        insertIdExpression:
          type: string
          title: Insert ID expression
          description: JavaScript expression to compute the value of the insert ID field.
          example: 'Crypto.uuid()'
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC),
            Manual to enter Google service account credentials directly, or
            Secret to select or create a stored secret that references Google
            service account credentials.
          default: manual
          enum:
            - auto
            - manual
            - secret
          example: secret
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded
            from Google Cloud. To upload a file, click the upload button at this
            field's upper right.
          example: "***REDACTED***"
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
          example: gcl-service-account
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Max number of events to include in the request body. Default is 0
            (unlimited).
          default: 0
          minimum: 0
          example: 0
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
          example: 1
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it.
          example: 30
        throttleRateReqPerSec:
          type: integer
          title: Throttle request rate
          description: Maximum number of requests to limit to per second.
          maximum: 2000
          example: 500
        requestMethodExpression:
          type: string
          title: Request method expression
          description: A JavaScript expression that evaluates to the HTTP request method
            as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: '"POST"'
        requestUrlExpression:
          type: string
          title: Request URL expression
          description: A JavaScript expression that evaluates to the HTTP request URL as a
            string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: '"https://example.com/api"'
        requestSizeExpression:
          type: string
          title: Request size expression
          description: A JavaScript expression that evaluates to the HTTP request size as
            a string, in int64 format. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'String(length(_raw.request_body))'
        statusExpression:
          type: string
          title: Request status expression
          description: A JavaScript expression that evaluates to the HTTP request method
            as a number. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'Number(_raw.status)'
        responseSizeExpression:
          type: string
          title: Response size expression
          description: A JavaScript expression that evaluates to the HTTP response size as
            a string, in int64 format. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'String(length(_raw.response_body))'
        userAgentExpression:
          type: string
          title: Request user agent expression
          description: A JavaScript expression that evaluates to the HTTP request user
            agent as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'String(_raw.user_agent)'
        remoteIpExpression:
          type: string
          title: Remote IP expression
          description: A JavaScript expression that evaluates to the HTTP request remote
            IP as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'String(_raw.client_ip)'
        serverIpExpression:
          type: string
          title: Server IP expression
          description: A JavaScript expression that evaluates to the HTTP request server
            IP as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'String(_raw.server_ip)'
        refererExpression:
          type: string
          title: Referer expression
          description: A JavaScript expression that evaluates to the HTTP request referer
            as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'String(_raw.referer)'
        latencyExpression:
          type: string
          title: Latency expression
          description: A JavaScript expression that evaluates to the HTTP request latency,
            formatted as <seconds>.<nanoseconds>s (for example, 1.23s). See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: '(_raw.latency_ms/1000).toFixed(3) + "s"'
        cacheLookupExpression:
          type: string
          title: Cache lookup expression
          description: A JavaScript expression that evaluates to the HTTP request cache
            lookup as a boolean. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'Boolean(_raw.cache_lookup)'
        cacheHitExpression:
          type: string
          title: Cache hit expression
          description: A JavaScript expression that evaluates to the HTTP request cache
            hit as a boolean. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'Boolean(_raw.cache_hit)'
        cacheValidatedExpression:
          type: string
          title: Cache validated with origin server expression
          description: A JavaScript expression that evaluates to the HTTP request cache
            validated with origin server as a boolean. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'Boolean(_raw.cache_validated)'
        cacheFillBytesExpression:
          type: string
          title: Cache fill bytes expression
          description: A JavaScript expression that evaluates to the HTTP request cache
            fill bytes as a string, in int64 format. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'String(_raw.cache_fill_bytes)'
        protocolExpression:
          type: string
          title: Protocol expression
          description: A JavaScript expression that evaluates to the HTTP request protocol
            as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest)
            for details.
          example: 'String(_raw.protocol)'
        idExpression:
          type: string
          title: ID expression
          description: A JavaScript expression that evaluates to the log entry operation
            ID as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation)
            for details.
          example: 'String(_raw.operation_id)'
        producerExpression:
          type: string
          title: Producer expression
          description: A JavaScript expression that evaluates to the log entry operation
            producer as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation)
            for details.
          example: 'String(_raw.operation_producer)'
        firstExpression:
          type: string
          title: First expression
          description: A JavaScript expression that evaluates to the log entry operation
            first flag as a boolean. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation)
            for details.
          example: 'Boolean(_raw.operation_first)'
        lastExpression:
          type: string
          title: Last expression
          description: A JavaScript expression that evaluates to the log entry operation
            last flag as a boolean. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation)
            for details.
          example: 'Boolean(_raw.operation_last)'
        fileExpression:
          type: string
          title: File expression
          description: A JavaScript expression that evaluates to the log entry source
            location file as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation)
            for details.
          example: 'String(_raw.file)'
        lineExpression:
          type: string
          title: Line expression
          description: A JavaScript expression that evaluates to the log entry source
            location line as a string, in int64 format. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation)
            for details.
          example: 'String(_raw.line)'
        functionExpression:
          type: string
          title: Function expression
          description: A JavaScript expression that evaluates to the log entry source
            location function as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation)
            for details.
          example: 'String(_raw.function)'
        uidExpression:
          type: string
          title: UID expression
          description: A JavaScript expression that evaluates to the log entry log split
            UID as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit)
            for details.
          example: 'String(_raw.split_uid)'
        indexExpression:
          type: string
          title: Index expression
          description: A JavaScript expression that evaluates to the log entry log split
            index as a number. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit)
            for details.
          example: 'Number(_raw.split_index)'
        totalSplitsExpression:
          type: string
          title: Total splits expression
          description: A JavaScript expression that evaluates to the log entry log split
            total splits as a number. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit)
            for details.
          example: 'Number(_raw.split_total)'
        traceExpression:
          type: string
          title: Trace expression
          description: A JavaScript expression that evaluates to the REST resource name of
            the trace being written as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry)
            for details.
          example: 'String(_raw.trace)'
        spanIdExpression:
          type: string
          title: Span ID expression
          description: A JavaScript expression that evaluates to the ID of the cloud trace
            span associated with the current operation in which the log is being
            written as a string. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry)
            for details.
          example: 'String(_raw.span_id)'
        traceSampledExpression:
          type: string
          title: Trace sampled expression
          description: A JavaScript expression that evaluates to the the sampling decision
            of the span associated with the log entry. See the
            [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry)
            for details.
          example: 'Boolean(_raw.trace_sampled)'
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 20480
        description:
          type: string
          title: Description
          example: Send logs to Google Cloud Logging with custom resource labels
        logLocationExpression:
          title: Folder ID expression
          description: JavaScript expression to compute the value of the folder ID with
            which log entries should be associated.
          type: string
          example: '"projects/my-project"'
        payloadExpression:
          title: Payload object expression
          description: JavaScript expression to compute the value of the payload. Must
            evaluate to a JavaScript object value. If an invalid value is
            encountered it will result in the default value instead. Defaults to
            the entire event.
          type: string
          example: '{ message: _raw.message, severity: _raw.severity || "DEFAULT" }'
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputGooglePubsub:
      required:
        - topicName
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: gpubsub-out
        type:
          type: string
          enum:
            - google_pubsub
          example: google_pubsub
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - gcp
            - pubsub
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to send events to.
          example: app-events
        createTopic:
          type: boolean
          title: Create topic
          description: If enabled, create topic if it does not exist.
          default: false
          example: true
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: If enabled, send events in the order they were added to the queue.
            For this to work correctly, the process receiving events must have
            ordering enabled.
          default: false
          example: true
        region:
          type: string
          title: Region
          description: Region to publish messages to. Select 'default' to allow Google to
            auto-select the nearest region. When using ordered delivery, the
            selected region must be allowed by message storage policy.
          example: us-central1
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC),
            Manual to enter Google service account credentials directly, or
            Secret to select or create a stored secret that references Google
            service account credentials.
          default: manual
          enum:
            - auto
            - manual
            - secret
          example: secret
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded
            from Google Cloud. To upload a file, click the upload button at this
            field's upper right.
          example: "***REDACTED***"
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
          example: gcp-pubsub-sa
        batchSize:
          type: number
          title: Batch size
          minimum: 1
          maximum: 10000
          default: 1000
          description: The maximum number of items the Google API should batch before it
            sends them to the topic.
          example: 1000
        batchTimeout:
          type: number
          title: Batch timeout (ms)
          minimum: 1
          maximum: 100000
          default: 100
          description: The maximum amount of time, in milliseconds, that the Google API
            should wait to send a batch (if the Batch size is not reached).
          example: 200
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking.
          default: 100
          minimum: 1
          example: 500
        maxRecordSizeKB:
          type: number
          title: Batch size limit (KB)
          description: Maximum size (KB) of batches to send.
          default: 256
          minimum: 1
          maximum: 256
          example: 256
        flushPeriodSec:
          title: Flush period (sec)
          description: Maximum time to wait before sending a batch (when batch size limit
            is not reached).
          default:
            type: number
            default: 1
          example:
            type: number
            default: 1
        maxInProgress:
          type: number
          title: Concurrent request limit
          description: The maximum number of in-progress API requests before backpressure
            is applied.
          default: 10
          minimum: 1
          maximum: 100
          example: 20
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Publish events to Google Pub/Sub with ordered delivery
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputExabeam:
      required:
        - bucket
        - region
        - endpoint
        - stagePath
        - collectorInstanceId
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: exabeam-out
        type:
          type: string
          enum:
            - exabeam
          example: exabeam
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - exabeam
            - gcs
        bucket:
          type: string
          title: Bucket name
          description: "Name of the destination bucket. A constant or a JavaScript
            expression that can only be evaluated at init time. Example of
            referencing a JavaScript Global Variable:
            `myBucket-${C.vars.myVar}`."
          example: exabeam-data
        region:
          type: string
          title: Region
          description: Region where the bucket is located
          example: us-central1
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: /var/lib/cribl/state/outputs/staging
        endpoint:
          type: string
          title: Endpoint
          default: https://storage.googleapis.com
          description: Google Cloud Storage service endpoint
          example: https://storage.googleapis.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Google Cloud Storage requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - bucket-owner-read
            - bucket-owner-full-control
            - project-private
            - authenticated-read
            - public-read
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - NEARLINE
            - COLDLINE
            - ARCHIVE
          example: NEARLINE
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 10
          maximum: 1024
          minimum: 5
          example: 64
        encodedConfiguration:
          type: string
          title: Exabeam connection string
          description: Enter an encoded string containing Exabeam configurations
          example: "***REDACTED***"
        collectorInstanceId:
          type: string
          title: Collector instance ID
          description: >
            ID of the Exabeam Collector where data should be sent. Example:
            11112222-3333-4444-5555-666677778888
          example: 11112222-3333-4444-5555-666677778888
        siteName:
          type: string
          title: Site name
          description: Constant or JavaScript expression to create an Exabeam site name.
            Values that aren't successfully evaluated will be treated as string
            constants.
          example: '"corp-east"'
        siteId:
          type: string
          title: Site ID
          description: Exabeam site ID. If left blank, @{product} will use the value of
            the Exabeam site name.
          example: site-123
        timezoneOffset:
          type: string
          title: Timezone offset
          example: "-07:00"
        awsApiKey:
          type: string
          title: Access key
          description: HMAC access key. Can be a constant or a JavaScript expression, such
            as `${C.env.GCS_ACCESS_KEY}`.
          example: "***REDACTED***"
        awsSecretKey:
          type: string
          title: Secret
          description: HMAC secret. Can be a constant or a JavaScript expression, such as
            `${C.env.GCS_SECRET}`.
          example: "***REDACTED***"
        description:
          type: string
          title: Description
          example: Deliver logs to Exabeam Collector via GCS staging
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: /var/lib/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
    OutputKafka:
      required:
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: kafka-out
        type:
          type: string
          enum:
            - kafka
          example: kafka
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - kafka
            - prod
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify hostname
            and port, e.g., mykafkabroker:9092, or just hostname, in which case
            @{product} will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
          example:
            - kafka-1.example.com:9092
            - kafka-2.example.com:9092
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the
            __topicOut field.
          example: app-events
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
          example: 1
        format:
          type: string
          default: json
          enum:
            - json
            - raw
            - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          example: json
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          example: gzip
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value
            must not exceed the Kafka brokers' message.max.bytes setting.
          example: 768
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a
            batch before forcing a flush
          example: 1000
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before
            forcing a flush. Shorter intervals tend to result in smaller batches
            being sent.
          example: 1
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example:
                http://localhost:8081. To connect over TLS, use https instead of
                http."
              default: http://localhost:8081
              example: https://schema-registry.example.com:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete
                successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a
                request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema
                Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 3
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry
                using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: false
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: schema-registry-basic-auth
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: false
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                  example: schema-registry.example.com
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: kafka-client-cert
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                  example: /etc/ssl/certs/ca.pem
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/private/client.key
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/certs/client.crt
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: "***REDACTED***"
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.2
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.3
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values,
                leave blank if key transformation is not required by default.
              example: 1
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw,
                leave blank if value transformation is not required by default.
              example: 2
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and
            minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180
            seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 60000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum
            is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 1000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency
            for failed messages. For faster retries, use a lower multiplier. For
            slower retries with more delay between attempts, use a higher
            multiplier. The multiplier is used in an exponential backoff
            formula; see the Kafka
            [documentation](https://kafka.js.org/docs/retry-detailed) for
            details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backward from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 60000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: false
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              example: scram-sha-512
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: kafka-broker.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: kafka-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Produce events to Kafka with retries and TLS
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
          example: user-events-protos
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputConfluentCloud:
      required:
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: ccloud-out
        type:
          type: string
          enum:
            - confluent_cloud
          example: confluent_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - confluent
            - kafka
        brokers:
          type: array
          title: Bootstrap servers
          description: List of Confluent Cloud bootstrap servers to use, such as
            yourAccount.confluent.cloud:9092.
          minItems: 1
          items:
            type: string
            minLength: 1
          example:
            - mycluster.us-central1.gcp.confluent.cloud:9092
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: mycluster.us-central1.gcp.confluent.cloud
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: ccloud-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the
            __topicOut field.
          example: app-events
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
          example: 1
        format:
          type: string
          default: json
          enum:
            - json
            - raw
            - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          example: json
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          example: gzip
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value
            must not exceed the Kafka brokers' message.max.bytes setting.
          example: 768
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a
            batch before forcing a flush
          example: 1000
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before
            forcing a flush. Shorter intervals tend to result in smaller batches
            being sent.
          example: 1
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: false
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example:
                http://localhost:8081. To connect over TLS, use https instead of
                http."
              default: http://localhost:8081
              example: https://schema-registry.confluent.cloud
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete
                successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a
                request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema
                Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 3
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry
                using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: false
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: ccloud-schema-registry-basic
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: false
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                  example: schema-registry.confluent.cloud
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: ccloud-sr-cert
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                  example: /etc/ssl/certs/ca.pem
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/private/client.key
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/certs/client.crt
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: "***REDACTED***"
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.2
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.3
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values,
                leave blank if key transformation is not required by default.
              example: 1
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw,
                leave blank if value transformation is not required by default.
              example: 100
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and
            minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180
            seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 60000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum
            is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 1000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency
            for failed messages. For faster retries, use a lower multiplier. For
            slower retries with more delay between attempts, use a higher
            multiplier. The multiplier is used in an exponential backoff
            formula; see the Kafka
            [documentation](https://kafka.js.org/docs/retry-detailed) for
            details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backward from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 60000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using
            TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: false
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              example: plain
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Produce events to Confluent Cloud Kafka with Schema Registry
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
          example: user-events-protos
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputMsk:
      required:
        - brokers
        - topic
        - region
        - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: msk-out
        type:
          type: string
          enum:
            - msk
          example: msk
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - aws
            - msk
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify hostname
            and port, e.g., mykafkabroker:9092, or just hostname, in which case
            @{product} will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
          example:
            - b-1.mskcluster.abcde.c2.kafka.us-east-1.amazonaws.com:9092
            - b-2.mskcluster.abcde.c2.kafka.us-east-1.amazonaws.com:9092
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the
            __topicOut field.
          example: app-events
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
          example: 1
        format:
          type: string
          default: json
          enum:
            - json
            - raw
            - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          example: json
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          example: gzip
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value
            must not exceed the Kafka brokers' message.max.bytes setting.
          example: 768
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a
            batch before forcing a flush
          example: 1000
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before
            forcing a flush. Shorter intervals tend to result in smaller batches
            being sent.
          example: 1
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example:
                http://localhost:8081. To connect over TLS, use https instead of
                http."
              default: http://localhost:8081
              example: https://schema-registry.example.com:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete
                successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a
                request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema
                Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 3
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry
                using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: false
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: msk-schema-registry-basic
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: false
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It
                    must be a host name, and not an IP address.
                  example: schema-registry.example.com
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: msk-client-cert
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the
                    server's cert. PEM format. Can reference $ENV_VARS.
                  example: /etc/ssl/certs/ca.pem
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/private/client.key
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format.
                    Can reference $ENV_VARS.
                  example: /etc/ssl/certs/client.crt
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: "***REDACTED***"
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.2
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  example: TLSv1.3
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values,
                leave blank if key transformation is not required by default.
              example: 1
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw,
                leave blank if value transformation is not required by default.
              example: 100
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries
            as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and
            minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180
            seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 60000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum
            is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 1000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency
            for failed messages. For faster retries, use a lower multiplier. For
            slower retries with more delay between attempts, use a higher
            multiplier. The multiplier is used in an exponential backoff
            formula; see the Kafka
            [documentation](https://kafka.js.org/docs/retry-detailed) for
            details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication
            request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate
            if needed. Creates the window measuring backward from the moment
            when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 60000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: "***REDACTED***"
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to the AWS
            Region-specific endpoint. Otherwise, it must point to MSK
            cluster-compatible endpoint.
          example: https://kafka.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/cribl-msk-access
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: cribl-external-123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: b-1.mskcluster.abcde.c2.kafka.us-east-1.amazonaws.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: msk-client-cert
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca.pem
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/private/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /etc/ssl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: "***REDACTED***"
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Produce events to Amazon MSK with retries and TLS
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws-credentials-secret
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
          example: user-events-protos
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputElastic:
      required:
        - index
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: elastic-out
        type:
          type: string
          enum:
            - elastic
          example: elastic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - elastic
            - es
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it
            can expand to multiple IPs. If disabled, consider enabling
            round-robin DNS.
          default: true
          example: true
        index:
          type: string
          title: Index or data stream
          description: Index or data stream to send events to. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be overwritten by an event's __index field.
          example: '"logs-%{C.Time.strftime(_time, "%Y.%m.%d")}"'
        docType:
          type: string
          title: Type
          description: Document type to use for events. Can be overwritten by an event's
            __type field.
          example: _doc
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 102400
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: abc123
          example:
            - name: X-Request-ID
              value: abc123
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 60000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        extraParams:
          type: array
          title: Extra parameters
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: filter_path
              value:
                type: string
                title: Field Value
                example: errors,items.*.error,items.*._index,items.*.status
          default:
            - name: filter_path
              value: errors,items.*.error,items.*._index,items.*.status
        auth:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Authentication Disabled
              default: true
              example: false
            authType:
              title: Authentication method
              type: string
              enum:
                - manual
                - secret
                - manualAPIKey
                - textSecret
              default: manual
              description: Enter credentials directly, or select a stored secret
              example: manualAPIKey
        elasticVersion:
          type: string
          title: Elastic version
          description: Optional Elasticsearch version, used to format events. If not
            specified, will auto-discover version.
          enum:
            - auto
            - "6"
            - "7"
          default: auto
          example: "7"
        elasticPipeline:
          type: string
          title: Elastic pipeline
          description: Optional Elasticsearch destination pipeline
          example: ingest-grok-pipeline
        includeDocId:
          type: boolean
          title: Include document _id
          description: Include the `document_id` field when sending events to an Elastic
            TSDS (time series data stream)
          default: false
          example: true
        writeAction:
          type: string
          title: Write action
          description: Action to use when writing events. Must be set to `Create` when
            writing to a data stream.
          enum:
            - index
            - create
          default: create
          example: create
        retryPartialErrors:
          type: boolean
          default: false
          title: Retry partial errors
          description: Retry failed events when a bulk request to Elastic is successful,
            but the response body returns an error for one or more events in the
            batch
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send documents to Elasticsearch bulk API with retries and custom params
        url:
          type: string
          title: Bulk API URL or Cloud ID
          description: "The Cloud ID or URL to an Elastic cluster to send events to.
            Example: http://elastic:9200/_bulk"
          example: https://es.example.com:9200/_bulk
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames
          example: false
        urls:
          type: array
          title: Bulk API URLs
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: URL
                description: "The URL to an Elastic node to send events to. Example:
                  http://elastic:9200/_bulk"
                example: https://es-node-1.example.com:9200/_bulk
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its
                  traffic-handling capability
                minimum: 0
                default: 1
                example: 2
          example:
            - url: https://es-node-1.example.com:9200/_bulk
              weight: 2
            - url: https://es-node-2.example.com:9200/_bulk
              weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up
            destinations from A records
          example: 300
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes
          example: 300
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputElasticCloud:
      required:
        - url
        - index
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: es-cloud-out
        type:
          type: string
          enum:
            - elastic_cloud
          example: elastic_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: default
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - elastic
            - cloud
        url:
          type: string
          title: Cloud ID
          description: Enter Cloud ID of the Elastic Cloud environment to send events to
          example: my-deployment:ZXM0LmNsb3VkLmV... (truncated)
        index:
          type: string
          title: Data stream or index
          description: Data stream or index to send events to. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be overwritten by an event's __index field.
          example: '"logs-%{C.Time.strftime(_time, "%Y.%m.%d")}"'
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 102400
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: abc123
          example:
            - name: X-Request-ID
              value: abc123
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payload
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - X-Request-ID
        extraParams:
          type: array
          title: Extra parameters
          description: Extra parameters to use in HTTP requests
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: filter_path
              value:
                type: string
                title: Field Value
                example: errors,items.*.error,items.*._index,items.*.status
          default:
            - name: filter_path
              value: errors,items.*.error,items.*._index,items.*.status
        auth:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Authentication Disabled
              default: false
              example: false
            authType:
              title: Authentication method
              type: string
              enum:
                - manual
                - secret
                - manualAPIKey
                - textSecret
              default: manual
              description: Enter credentials directly, or select a stored secret
              example: manualAPIKey
        elasticPipeline:
          type: string
          title: Elastic pipeline
          description: Optional Elastic Cloud Destination pipeline
          example: ingest-grok-pipeline
        includeDocId:
          type: boolean
          title: Include document _id
          description: Include the `document_id` field when sending events to an Elastic
            TSDS (time series data stream)
          default: true
          example: true
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 503
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 60000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send documents to Elastic Cloud with retries and pipeline support
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputNewrelic:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: newrelic_logs_prod
        type:
          type: string
          enum:
            - newrelic
          example: newrelic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - newrelic
        region:
          type: string
          title: Region
          description: Which New Relic region endpoint to use.
          enum:
            - US
            - EU
            - Custom
          default: US
          example: US
        logType:
          type: string
          title: Log type
          description: "Name of the logtype to send with events, e.g.: observability,
            access_log. The event's 'sourcetype' field (if set) will override
            this value."
          default: ""
          example: access_log
        messageField:
          type: string
          title: Log message field
          description: Name of field to send as log message value. If not present, event
            will be serialized and sent as JSON.
          default: ""
          example: _raw
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          maxItems: 4
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                enum:
                  - service
                  - hostname
                  - timestamp
                  - auditId
                example: service
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes
                  or backticks. (Can evaluate to a constant.)
                example: "`\"orders-service\"`"
          example:
            - name: service
              value: "`\"orders-service\"`"
            - name: hostname
              value: "`__host`"
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
          example: 512
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 500
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          type: string
          title: Authentication Method 
          description: Enter API key directly, or select a stored secret
          enum:
            - manual
            - secret
          default: manual
          example: manual
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 51200
        description:
          type: string
          title: Description
          example: Send logs to New Relic Logs with custom endpoint
        customUrl:
          type: string
          pattern: ^https?://.*
          example: https://log-api.newrelic.com/log/v1
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        apiKey:
          type: string
          title: API key
          description: New Relic API key. Can be overridden using __newRelic_apiKey field.
          example: NRAK-0123456789abcdef0123456789abcdef
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: newrelic_api_key
      type: object
    OutputNewrelicEvents:
      required:
        - accountId
        - eventType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: newrelic_events_prod
        type:
          type: string
          enum:
            - newrelic_events
          example: newrelic_events
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - newrelic
        region:
          type: string
          title: Region
          description: Which New Relic region endpoint to use.
          enum:
            - US
            - EU
            - Custom
          default: US
          example: US
        accountId:
          type: string
          title: Account ID
          description: New Relic account ID
          example: "12345678"
        eventType:
          type: string
          title: Event type
          description: Default eventType to use when not present in an event. For more
            information, see
            [here](https://docs.newrelic.com/docs/telemetry-data-platform/custom-data/custom-events/data-requirements-limits-custom-event-data/#reserved-words).
          example: CriblCustomEvent
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
          example: 512
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 500
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: secret
        description:
          type: string
          title: Description
          example: Send custom events to New Relic Events API
        customUrl:
          type: string
          pattern: ^https?://.*
          example: https://insights-collector.newrelic.com/v1/accounts/12345678/events
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        apiKey:
          type: string
          title: API key
          description: New Relic API key. Can be overridden using __newRelic_apiKey field.
          example: NRAK-0123456789abcdef0123456789abcdef
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: newrelic_api_key
      type: object
    OutputInfluxdb:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: influxdb_metrics_prod
        type:
          type: string
          enum:
            - influxdb
          example: influxdb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: metrics
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - influxdb
        url:
          type: string
          title: Write API URL
          description: URL of an InfluxDB cluster to send events to, e.g.,
            http://localhost:8086/write
          pattern: ^https?://.*
          example: https://influxdb.example.com:8086/write
        useV2API:
          type: boolean
          title: Use v2 API
          description: The v2 API can be enabled with InfluxDB versions 1.8 and later.
          default: false
          example: true
        timestampPrecision:
          type: string
          title: Timestamp precision
          description: Sets the precision for the supplied Unix time values. Defaults to
            milliseconds.
          enum:
            - ns
            - u
            - ms
            - s
            - m
            - h
          default: ms
          example: ms
        dynamicValueFieldName:
          type: boolean
          title: Dynamic value fields
          description: Enabling this will pull the value field from the metric name. E,g,
            'db.query.user' will use 'db.query' as the measurement and 'user' as
            the value field.
          default: true
          example: true
        valueFieldName:
          type: string
          title: Value field name
          description: Name of the field in which to store the metric when sending to
            InfluxDB. If dynamic generation is enabled and fails, this will be
            used as a fallback.
          default: value
          example: value
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 51200
          example: 8192
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 5000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          type: string
          title: Authentication type
          description: InfluxDB authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          example: token
        description:
          type: string
          title: Description
          example: Send metrics to InfluxDB with v2 API and token auth
        database:
          type: string
          title: Database
          description: Database to write to.
          example: telegraf
        bucket:
          type: string
          title: Bucket
          description: Bucket to write to.
          example: metrics_prod
        org:
          type: string
          title: Organization
          description: Organization ID for this bucket.
          example: acme-observability
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        username:
          type: string
          title: Username
          example: influx_writer
        password:
          type: string
          title: Password
          example: s3cr3tPass!
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: influxV2Token_abc123xyz
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: influxdb_basic_auth
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: influxdb_token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://influxdb.example.com/oauth/token
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: client_secret
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: s3cr3tClientSecret
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
          example:
            - name: grant_type
              value: client_credentials
            - name: scope
              value: write:metrics
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
          example:
            - name: Accept
              value: application/json
      type: object
    OutputCloudwatch:
      required:
        - logGroupName
        - logStreamName
        - region
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: cloudwatch_logs_prod
        type:
          type: string
          enum:
            - cloudwatch
          example: cloudwatch
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - cloudwatch
        logGroupName:
          type: string
          title: Log group name
          description: CloudWatch log group to associate events with
          example: /aws/eks/cluster-1/app-logs
        logStreamName:
          type: string
          title: Log stream prefix
          description: "Prefix for CloudWatch log stream name. This prefix will be used to
            generate a unique log stream name per cribl instance, for example:
            myStream_myHost_myOutputId"
          example: app-logs
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        region:
          type: string
          title: Region
          description: Region where the CloudWatchLogs is located
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: CloudWatchLogs service endpoint. If empty, defaults to the AWS
            Region-specific endpoint. Otherwise, it must point to
            CloudWatchLogs-compatible endpoint.
          example: https://logs.us-east-1.amazonaws.com
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for CloudWatchLogs
          description: Use Assume Role credentials to access CloudWatchLogs
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/CloudWatchLogsWriter
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: external-id-abc123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 10
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB, uncompressed)
          description: Maximum size (KB) of each individual record before compression. For
            non compressible data 1MB is the max recommended size
          default: 1024
          minimum: 1
          maximum: 10240
          example: 1024
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
          example: 2
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send application logs to Amazon CloudWatch Logs
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws_cloudwatch_credentials
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputMinio:
      required:
        - bucket
        - stagePath
        - endpoint
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: minio_archive_prod
        type:
          type: string
          enum:
            - minio
          example: minio
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - minio
        endpoint:
          type: string
          title: MinIO endpoint
          description: MinIO service url (e.g. http://minioHost:9000)
          pattern: ^https?://.*
          example: http://minio.example.com:9000
        bucket:
          type: string
          title: MinIO bucket name
          description: "Name of the destination MinIO bucket. This value can be a constant
            or a JavaScript expression that can only be evaluated at init time.
            Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          example: logs-prod
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: manual
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key. This value can be a constant or a JavaScript
            expression, such as `${C.env.SOME_SECRET}`).
          example: minio_secret_key_123
        region:
          type: string
          title: Region
          description: Region where the MinIO service/cluster is located
          example: us-east-1
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: /opt/cribl/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        destPath:
          type: string
          title: Key prefix
          description: Root directory to prepend to path before uploading. Enter a
            constant, or a JavaScript expression enclosed in quotes or
            backticks.
          example: year=%Y/month=%m/day=%d/app=orders
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MinIO requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
          example: STANDARD
        serverSideEncryption:
          type: string
          title: Server-side encryption
          description: Server-side encryption for uploaded objects
          enum:
            - AES256
          example: AES256
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates)
          default: true
          example: true
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the
            bucket itself
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and
            organized. Default is date-based. If blank, Stream will fall back to
            the event's __partition field value – if present – otherwise to each
            location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time || Date.now()/1000, '%Y/%m/%d/%H')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant)
          default: "`CriblOut`"
          example: app-logs
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
          example: .json.gz
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 128
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output
            file
          default: ""
          example: timestamp,host,level,message
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 256
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          example: 120
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
          example: 5
        description:
          type: string
          title: Description
          example: Archive logs to MinIO in Parquet with date-based partitioning
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression
            (`${C.env.SOME_ACCESS_KEY}`)
          example: minio_access_key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: minio_credentials
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is
            delivered
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          example: normal
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each
            Parquet file generated
          example: true
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader
            implementations use Data page V2's attributes to work more
            efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group
            can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 100000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB.
            Generally, lower values improve reading speed, while higher values
            improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 128MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the
            properties you add here as key-value pairs. Useful for tagging.
            Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: OCSF Event Class
              value:
                type: string
                title: Value
                example: "9001"
          example:
            - key: OCSF Event Class
              value: "9001"
            - key: team
              value: platform
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum
            values within data, numbers of nulls, etc. You can use Parquet tools
            to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet
            readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data
            integrity
          example: true
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: /opt/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
    OutputStatsd:
      required:
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: statsd_metrics_prod
        type:
          type: string
          enum:
            - statsd
          example: statsd
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: metrics
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - statsd
        protocol:
          type: string
          default: udp
          enum:
            - udp
            - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          example: udp
        host:
          type: string
          title: Host
          description: The hostname of the destination.
          example: statsd.example.com
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
          example: 8125
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to
            the destination. Also known as the MTU for the network path to the
            destination system.
          example: 1400
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be
            flushed, resulting in records sent to the destination.
          example: 1
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address.
            Ignored if the destination is an IP address. A value of 0 means
            every batch sent will incur a DNS lookup.
          example: 300
        description:
          type: string
          title: Description
          example: Send StatsD metrics to central aggregator
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: 10 MB
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
          example: 30000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputStatsdExt:
      required:
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: statsd_ext_metrics_prod
        type:
          type: string
          enum:
            - statsd_ext
          example: statsd_ext
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: metrics
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - statsd
        protocol:
          type: string
          default: udp
          enum:
            - udp
            - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          example: udp
        host:
          type: string
          title: Host
          description: The hostname of the destination.
          example: statsd-ext.example.com
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
          example: 8125
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to
            the destination. Also known as the MTU for the network path to the
            destination system.
          example: 1400
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be
            flushed, resulting in records sent to the destination.
          example: 1
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address.
            Ignored if the destination is an IP address. A value of 0 means
            every batch sent will incur a DNS lookup.
          example: 300
        description:
          type: string
          title: Description
          example: Send extended StatsD metrics to external aggregator
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: 10 MB
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
          example: 30000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputGraphite:
      required:
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: graphite_metrics_prod
        type:
          type: string
          enum:
            - graphite
          example: graphite
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: metrics
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - graphite
        protocol:
          type: string
          default: udp
          enum:
            - udp
            - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          example: tcp
        host:
          type: string
          title: Host
          description: The hostname of the destination.
          example: graphite.example.com
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
          example: 2003
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to
            the destination. Also known as the MTU for the network path to the
            destination system.
          example: 1400
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be
            flushed, resulting in records sent to the destination.
          example: 1
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address.
            Ignored if the destination is an IP address. A value of 0 means
            every batch sent will incur a DNS lookup.
          example: 300
        description:
          type: string
          title: Description
          example: Send metrics to Graphite in plaintext protocol
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: 10 MB
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
          example: 30000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputRouter:
      required:
        - rules
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: router_main
        type:
          type: string
          enum:
            - router
          example: router
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - routing
        rules:
          type: array
          title: Rules
          description: Event routing rules
          minItems: 1
          items:
            type: object
            required:
              - filter
              - output
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression to select events to send to output
                example: "`_source == \"app\" && level == \"error\"`"
              output:
                type: string
                title: Output
                description: Output to send matching events to
                example: OutputSplunk
              description:
                type: string
                title: Description
                description: Description of this rule's purpose
                example: Route application errors to Splunk
              final:
                type: boolean
                title: Final
                description: Flag to control whether to stop the event from being checked
                  against other rules
                default: true
                example: true
        description:
          type: string
          title: Description
          example: Route events to outputs based on filter rules
      type: object
    OutputSns:
      required:
        - topicArn
        - messageGroupId
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: sns_alerts_prod
        type:
          type: string
          enum:
            - sns
          example: sns
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - alerts
        topicArn:
          type: string
          title: Topic ARN
          description: "The ARN of the SNS topic to send events to. When a non-AWS URL is
            specified, format must be: '{url}/myQueueName'. E.g.,
            'https://host:port/myQueueName'. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at initialization time. Example
            referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`"
          example: arn:aws:sns:us-east-1:123456789012:alerts-topic
        messageGroupId:
          type: string
          title: Message Group ID
          description: "Messages in the same group are processed in a FIFO manner. Must be
            a JavaScript expression (which can evaluate to a constant value),
            enclosed in quotes or backticks. Can be evaluated only at init time.
            Example referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
          example: "`alerts-${C.vars.service}`"
        maxRetries:
          type: number
          title: Maximum number of retries
          description: Maximum number of retries before the output returns an error. Note
            that not all errors are retryable. The retries use an exponential
            backoff policy.
          example: 5
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        region:
          type: string
          title: Region
          description: Region where the SNS is located
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: SNS service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to SNS-compatible endpoint.
          example: https://sns.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SNS requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for SNS
          description: Use Assume Role credentials to access SNS
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/SNSPublisher
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: external-id-abc123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Publish alerts to Amazon SNS FIFO topic
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws_sns_credentials
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputSqs:
      required:
        - queueName
        - queueType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: sqs_events_prod
        type:
          type: string
          enum:
            - sqs
          example: sqs
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - sqs
        queueName:
          type: string
          title: Queue Name
          description: "The name, URL, or ARN of the SQS queue to send events to. When a
            non-AWS URL is specified, format must be: '{url}/myQueueName'.
            Example: 'https://host:port/myQueueName'. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be evaluated only at init time. Example
            referencing a Global Variable:
            `https://host:port/myQueue-${C.vars.myVar}`."
          example: https://sqs.us-east-1.amazonaws.com/123456789012/my-queue.fifo
        queueType:
          title: Queue Type
          type: string
          description: The queue type used (or created). Defaults to Standard.
          enum:
            - standard
            - fifo
          default: standard
          example: fifo
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in
            same AWS account.
          type: string
          example: "123456789012"
        messageGroupId:
          type: string
          title: Message Group ID
          description: This parameter applies only to FIFO queues. The tag that specifies
            that a message belongs to a specific message group. Messages that
            belong to the same message group are processed in a FIFO manner. Use
            event field __messageGroupId to override this value.
          default: cribl
          example: logs
        createQueue:
          type: boolean
          title: Create Queue
          description: Create queue if it does not exist.
          default: true
          example: true
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the
            Queue entry is a URL or ARN that includes a Region.
          example: us-east-1
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to SQS-compatible endpoint.
          example: https://sqs.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/SQSPublisher
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: external-id-abc123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking.
          default: 100
          minimum: 1
          example: 200
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB)
          description: Maximum size (KB) of batches to send. Per the SQS spec, the max
            allowed value is 256 KB.
          default: 256
          minimum: 1
          maximum: 256
          example: 256
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Max record size.
          example: 2
        maxInProgress:
          type: number
          title: Concurrent request limit
          description: The maximum number of in-progress API requests before backpressure
            is applied.
          default: 10
          minimum: 1
          maximum: 100
          example: 20
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send events to Amazon SQS FIFO queue with batching
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws_sqs_credentials
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputSnmp:
      required:
        - hosts
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: snmp_trap_forwarder
        type:
          type: string
          enum:
            - snmp
          example: snmp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - snmp
        hosts:
          type: array
          title: SNMP Trap Destinations
          description: One or more SNMP destinations to forward traps to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: Destination host
                example: snmp01.example.com
              port:
                type: number
                title: Port
                maximum: 65535
                description: Destination port, default is 162
                default: 162
                example: 162
          example:
            - host: snmp01.example.com
              port: 162
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address.
            Ignored if all destinations are IP addresses. A value of 0 means
            every trap sent will incur a DNS lookup.
          example: 300
        description:
          type: string
          title: Description
          example: Forward SNMP traps to network monitoring systems
      type: object
    OutputSumoLogic:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: sumologic_logs_prod
        type:
          type: string
          enum:
            - sumo_logic
          example: sumo_logic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - sumologic
        url:
          type: string
          title: API URL
          description: Sumo Logic HTTP collector URL to which events should be sent
          pattern: ^https?://.*
          example: https://endpoint1.collection.us2.sumologic.com/receiver/v1/http/ABCDEFG1234567890
        customSource:
          type: string
          title: Custom source name
          description: Override the source name configured on the Sumo Logic HTTP
            collector. This can also be overridden at the event level with the
            __sourceName field.
          example: cribl-stream
        customCategory:
          type: string
          title: Custom source category
          description: Override the source category configured on the Sumo Logic HTTP
            collector. This can also be overridden at the event level with the
            __sourceCategory field.
          example: prod/app/logs
        format:
          type: string
          title: Data format
          description: Preserve the raw event format instead of JSONifying it
          enum:
            - json
            - raw
          default: json
          example: json
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
          example: 512
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 500
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 51200
        description:
          type: string
          title: Description
          example: Send logs to Sumo Logic with retries and batching
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputDatadog:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: datadog_logs_prod
        type:
          type: string
          enum:
            - datadog
          example: datadog
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - datadog
        contentType:
          type: string
          title: Send logs as
          description: The content type to use when sending logs
          enum:
            - text
            - json
          default: json
          example: json
        message:
          type: string
          title: Message field
          description: Name of the event field that contains the message to send. If not
            specified, Stream sends a JSON representation of the whole event.
          example: _raw
        source:
          type: string
          title: Source
          description: Name of the source to send with logs. When you send logs as JSON
            objects, the event's 'source' field (if set) will override this
            value.
          example: nginx
        host:
          type: string
          title: Host
          description: Name of the host to send with logs. When you send logs as JSON
            objects, the event's 'host' field (if set) will override this value.
          example: web-01.example.com
        service:
          type: string
          title: Service
          description: Name of the service to send with logs. When you send logs as JSON
            objects, the event's '__service' field (if set) will override this
            value.
          example: web-app
        tags:
          type: array
          title: Datadog tags
          description: List of tags to send with logs, such as 'env:prod' and
            'env_staging:east'
          default: []
          items:
            type: string
          example:
            - env:prod
            - team:platform
        batchByTags:
          type: boolean
          title: Batch by tags
          description: Batch events by API key and the ddtags field on the event. When
            disabled, batches events only by API key. If incoming events have
            high cardinality in the ddtags field, disabling this setting may
            improve Destination performance.
          default: true
          example: true
        allowApiKeyFromEvents:
          type: boolean
          title: Allow API key from events
          description: Allow API key to be set from the event's '__agent_api_key' field
          default: false
          example: false
        severity:
          type: string
          title: Severity
          description: Default value for message severity. When you send logs as JSON
            objects, the event's '__severity' field (if set) will override this
            value.
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
            - debug
          example: info
        site:
          type: string
          title: Datadog site
          description: Datadog site to which events should be sent
          default: us
          enum:
            - us
            - us3
            - us5
            - eu
            - fed1
            - ap1
            - custom
          example: us
        sendCountersAsCount:
          type: boolean
          title: Send counter metrics as 'count'
          description: If not enabled, Datadog will transform 'counter' metrics to
            'gauge'. [Learn more about Datadog metrics
            types.](https://docs.datadoghq.com/metrics/types/?tab=count)
          default: false
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 2048
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: secret
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 51200
        description:
          type: string
          title: Description
          example: Send logs to Datadog Logs API with token auth
        customUrl:
          type: string
          example: https://http-intake.logs.datadoghq.com/api/v2/logs
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        apiKey:
          type: string
          title: API key
          description: Organization's API key in Datadog
          example: 0123456789abcdef0123456789abcdef
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: datadog_api_key
      type: object
    OutputGrafanaCloud:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: grafana_cloud_logs_prod
        type:
          type: string
          enum:
            - grafana_cloud
          example: grafana_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards. These fields are added as dimensions and labels to
            generated metrics and logs, respectively.
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
          example:
            - cribl_host
            - cribl_wp
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - grafana
        lokiUrl:
          type: string
          title: Loki URL
          description: The endpoint to send logs to, such as
            https://logs-prod-us-central1.grafana.net
          pattern: ^https?://
          example: https://logs-prod-us-central1.grafana.net
        prometheusUrl:
          type: string
          title: Prometheus URL
          description: The remote_write endpoint to send Prometheus metrics to, such as
            https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/push
          pattern: ^https?://
          example: https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/push
        message:
          type: string
          title: Logs message field
          description: Name of the event field that contains the message to send. If not
            specified, Stream sends a JSON representation of the whole event.
          example: _raw
        messageFormat:
          type: string
          title: Message format
          description: Format to use when sending logs to Loki (Protobuf or JSON)
          enum:
            - protobuf
            - json
          default: protobuf
          example: protobuf
        labels:
          type: array
          title: Logs labels
          description: "List of labels to send with logs. Labels define Loki streams, so
            use static labels to avoid proliferating label value combinations
            and streams. Can be merged and/or overridden by the event's __labels
            field. Example: '__labels: {host: \"cribl.io\", level: \"error\"}'"
          minItems: 0
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                default: ""
                example: host
              value:
                type: string
                title: Value
                example: web-01
          example:
            - name: host
              value: web-01
            - name: app
              value: web
        metricRenameExpr:
          type: string
          title: Metrics renaming expression
          description: JavaScript expression that can be used to rename metrics. For
            example, name.replace(/\./g, '_') will replace all '.' characters in
            a metric's name with the supported '_' character. Use the 'name'
            global variable to access the metric's name. You can access event
            fields' values via __e.<fieldName>.
          default: name.replace(/[^a-zA-Z0-9_]/g, '_')
          example: name.replace(/[^a-zA-Z0-9_]/g, '_')
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              enum:
                - none
                - token
                - textSecret
                - basic
                - credentialsSecret
              default: basic
              example: basic
            token:
              type: string
              title: Auth token
              description: "Bearer token to include in the authorization header. In Grafana
                Cloud, this is generally built by concatenating the username and
                the API key, separated by a colon. Example:
                <your-username>:<your-api-key>"
              example: "12345:glc_abcd1234"
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
              example: grafana_prom_token
            username:
              type: string
              title: Username
              description: Username for authentication
              example: 12345
            password:
              type: string
              title: Password
              description: Password (API key in Grafana Cloud domain) for authentication
              example: glc_abcd1234
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
              example: grafana_prom_credentials
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              enum:
                - none
                - token
                - textSecret
                - basic
                - credentialsSecret
              default: basic
              example: basic
            token:
              type: string
              title: Auth token
              description: "Bearer token to include in the authorization header. In Grafana
                Cloud, this is generally built by concatenating the username and
                the API key, separated by a colon. Example:
                <your-username>:<your-api-key>"
              example: "12345:glc_efgh5678"
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
              example: grafana_loki_token
            username:
              type: string
              title: Username
              description: Username for authentication
              example: 12345
            password:
              type: string
              title: Password
              description: Password (API key in Grafana Cloud domain) for authentication
              example: glc_efgh5678
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
              example: grafana_loki_credentials
        concurrency:
          type: number
          title: Request concurrency
          description: "Maximum number of ongoing requests before blocking. Warning:
            Setting this value > 1 can cause Loki and Prometheus to complain
            about entries being delivered out of order."
          default: 1
          minimum: 1
          maximum: 32
          example: 2
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: "Maximum size, in KB, of the request body. Warning: Setting this
            too low can increase the number of ongoing requests (depending on
            the value of 'Request concurrency'); this can cause Loki and
            Prometheus to complain about entries being delivered out of order."
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 2048
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: "Maximum number of events to include in the request body. Default
            is 0 (unlimited). Warning: Setting this too low can increase the
            number of ongoing requests (depending on the value of 'Request
            concurrency'); this can cause Loki and Prometheus to complain about
            entries being delivered out of order."
          default: 0
          minimum: 0
          example: 1000
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 15
          title: Flush period (sec)
          description: "Maximum time between requests. Small values could cause the
            payload size to be smaller than the configured Maximum time between
            requests. Small values can reduce the payload size below the
            configured 'Max record size' and 'Max events per request'. Warning:
            Setting this too low can increase the number of ongoing requests
            (depending on the value of 'Request concurrency'); this can cause
            Loki and Prometheus to complain about entries being delivered out of
            order."
          example: 10
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send logs and metrics to Grafana Cloud Loki and Prometheus
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending. Applies only to JSON
            payloads; the Protobuf variant for both Prometheus and Loki are
            snappy-compressed by default.
          example: true
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      anyOf:
        - required:
            - lokiUrl
        - required:
            - prometheusUrl
    OutputLoki:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: loki_logs_prod
        type:
          type: string
          enum:
            - loki
          example: loki
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards. These fields are added as labels to generated logs.
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
          example:
            - cribl_host
            - cribl_wp
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - loki
        url:
          type: string
          title: Loki URL
          description: The endpoint to send logs to
          pattern: ^https?://.*
          example: https://loki.example.com/loki/api/v1/push
        message:
          type: string
          title: Logs message field
          description: Name of the event field that contains the message to send. If not
            specified, Stream sends a JSON representation of the whole event.
          example: _raw
        messageFormat:
          type: string
          title: Message format
          description: Format to use when sending logs to Loki (Protobuf or JSON)
          enum:
            - protobuf
            - json
          default: protobuf
          example: protobuf
        labels:
          type: array
          title: Logs labels
          description: "List of labels to send with logs. Labels define Loki streams, so
            use static labels to avoid proliferating label value combinations
            and streams. Can be merged and/or overridden by the event's __labels
            field. Example: '__labels: {host: \"cribl.io\", level: \"error\"}'"
          minItems: 0
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                default: ""
                example: host
              value:
                type: string
                title: Value
                example: web-01
          example:
            - name: host
              value: web-01
            - name: app
              value: web
        authType:
          type: string
          title: Authentication type
          enum:
            - none
            - token
            - textSecret
            - basic
            - credentialsSecret
          default: none
          example: token
        concurrency:
          type: number
          title: Request concurrency
          description: "Maximum number of ongoing requests before blocking. Warning:
            Setting this value > 1 can cause Loki to complain about entries
            being delivered out of order."
          default: 1
          minimum: 1
          maximum: 32
          example: 2
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: "Maximum size, in KB, of the request body. Warning: Setting this
            too low can increase the number of ongoing requests (depending on
            the value of 'Request concurrency'); this can cause Loki to complain
            about entries being delivered out of order."
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 2048
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: "Maximum number of events to include in the request body. Defaults
            to 0 (unlimited). Warning: Setting this too low can increase the
            number of ongoing requests (depending on the value of 'Request
            concurrency'); this can cause Loki to complain about entries being
            delivered out of order."
          default: 0
          minimum: 0
          example: 1000
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 15
          title: Flush period (sec)
          description: "Maximum time between requests. Small values could cause the
            payload size to be smaller than the configured Maximum time between
            requests. Small values can reduce the payload size below the
            configured 'Max record size' and 'Max events per request'. Warning:
            Setting this too low can increase the number of ongoing requests
            (depending on the value of 'Request concurrency'); this can cause
            Loki to complain about entries being delivered out of order."
          example: 10
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 51200
        description:
          type: string
          title: Description
          example: Send logs to Loki with labels and batching
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        token:
          type: string
          title: Auth token
          description: "Bearer token to include in the authorization header. In Grafana
            Cloud, this is generally built by concatenating the username and the
            API key, separated by a colon. Example:
            <your-username>:<your-api-key>"
          example: "12345:glc_abcd1234"
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: grafana_loki_token
        username:
          type: string
          title: Username
          description: Username for authentication
          example: 12345
        password:
          type: string
          title: Password
          description: Password (API key in Grafana Cloud domain) for authentication
          example: glc_abcd1234
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: grafana_loki_credentials
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputPrometheus:
      required:
        - url
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: prometheus_metrics_prod
        type:
          type: string
          enum:
            - prometheus
          example: prometheus
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: metrics
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards. These fields are added as dimensions to generated
            metrics.
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
          example:
            - cribl_host
            - cribl_wp
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - prometheus
        url:
          type: string
          title: Remote Write URL
          description: The endpoint to send metrics to
          pattern: ^https?://.*
          example: https://prometheus.example.com/api/v1/write
        metricRenameExpr:
          type: string
          title: Metric renaming expression
          description: JavaScript expression that can be used to rename metrics. For
            example, name.replace(/\./g, '_') will replace all '.' characters in
            a metric's name with the supported '_' character. Use the 'name'
            global variable to access the metric's name. You can access event
            fields' values via __e.<fieldName>.
          default: name.replace(/[^a-zA-Z0-9_]/g, '_')
          example: name.replace(/[^a-zA-Z0-9_]/g, '_')
        sendMetadata:
          type: boolean
          title: Send metadata
          description: Generate and send metadata (`type` and `metricFamilyName`) requests
          default: true
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 2048
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          example: basic
        description:
          type: string
          title: Description
          example: Send metrics to Prometheus remote_write with basic auth
        metricsFlushPeriodSec:
          type: number
          default: 60
          title: Metadata flush period (sec)
          description: How frequently metrics metadata is sent out. Value cannot be
            smaller than the base Flush period set above.
          example: 60
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        username:
          type: string
          title: Username
          example: prometheus
        password:
          type: string
          title: Password
          example: mimir_api_key_abcd1234
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: promBearerToken_abc123xyz
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: prometheus_basic_auth
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: prometheus_bearer_token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://auth.example.com/oauth/token
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: client_secret
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: s3cr3tClientSecret
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
          example:
            - name: grant_type
              value: client_credentials
            - name: scope
              value: write:metrics
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
          example:
            - name: Accept
              value: application/json
      type: object
    OutputRing:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: ring_buffer_prod
        type:
          type: string
          enum:
            - ring
          example: ring
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - ring
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - json
            - raw
          default: json
          example: json
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression to define how files are partitioned and organized. If
            left blank, Cribl Stream will fallback on event.__partition.
          example: "C.Time.strftime(_time || Date.now()/1000, '%Y/%m/%d/%H')"
        maxDataSize:
          type: string
          title: Data size limit
          description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB).
            When limit is reached, older data will be deleted."
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1GB
          example: 100GB
        maxDataTime:
          title: Data age limit
          type: string
          description: "Maximum amount of time to retain data (examples: 2h, 4d). When
            limit is reached, older data will be deleted."
          pattern: \d+[smhd]$
          default: 24h
          example: 7d
        compress:
          type: string
          title: Data compression format
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        destPath:
          type: string
          title: Path location
          description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
          example: /opt/cribl/state/ring_buffer_prod
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Local ring buffer for short-term retention and replay
      type: object
    OutputOpenTelemetry:
      required:
        - endpoint
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: otel_export_prod
        type:
          type: string
          enum:
            - open_telemetry
          example: open_telemetry
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - otel
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
          example: grpc
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where OTel events will be sent. Enter any valid URL or
            an IP address (IPv4 or IPv6; enclose IPv6 addresses in square
            brackets). Unspecified ports will default to 4317, unless the
            endpoint is an HTTPS-based URL or TLS is enabled, in which case 443
            will be used.
          example: https://otel-collector.example.com:4317
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring
            data to send
          enum:
            - 0.10.0
            - 1.3.1
          default: 0.10.0
          example: 1.3.1
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry
            endpoint
          enum:
            - none
            - deflate
            - gzip
          default: gzip
          example: gzip
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry
            endpoint
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          example: token
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://otel-collector.example.com/v1/traces
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://otel-collector.example.com/v1/metrics
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://otel-collector.example.com/v1/logs
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value
            supports JavaScript expressions that are evaluated just once, when
            the destination gets started. To pass credentials as metadata, use
            'C.Secret'.
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: x-tenant-id
              value:
                type: string
                title: Value
                example: acme-prod
          example:
            - key: x-tenant-id
              value: acme-prod
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 2048
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
          example: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the
            outgoing request
          default: true
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Export telemetry to OTel Collector with OAuth and keepalive
        username:
          type: string
          title: Username
          example: otel_user
        password:
          type: string
          title: Password
          example: s3cr3tPass!
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: otelBearerToken_abc123xyz
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: otel_basic_auth
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: otel_bearer_token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://auth.example.com/oauth/token
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: client_secret
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: s3cr3tClientSecret
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
          example:
            - name: grant_type
              value: client_credentials
            - name: scope
              value: otlp:write
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
          example:
            - name: Accept
              value: application/json
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
          example: true
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: otel-client
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: s3cr3t
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputServiceNow:
      required:
        - endpoint
        - protocol
        - otlpVersion
        - tokenSecret
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: servicenow_otel_export
        type:
          type: string
          enum:
            - service_now
          example: service_now
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - servicenow
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where ServiceNow events will be sent. Enter any valid
            URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square
            brackets)
          default: ingest.lightstep.com:443
          example: ingest.lightstep.com:443
        tokenSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: servicenow_access_token
        authTokenName:
          type: string
          title: Auth token name
          default: lightstep-access-token
          example: lightstep-access-token
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring
            data to send
          enum:
            - 1.3.1
          default: 1.3.1
          example: 1.3.1
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 2048
          minimum: 1024
          maximum: 10240
          example: 2048
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
          example: grpc
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry
            endpoint
          enum:
            - none
            - deflate
            - gzip
          default: gzip
          example: gzip
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry
            endpoint
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://ingest.lightstep.com/v1/traces
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://ingest.lightstep.com/v1/metrics
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://ingest.lightstep.com/v1/logs
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value
            supports JavaScript expressions that are evaluated just once, when
            the destination gets started. To pass credentials as metadata, use
            'C.Secret'.
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: x-tenant-id
              value:
                type: string
                title: Value
                example: acme-prod
          example:
            - key: x-tenant-id
              value: acme-prod
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
          example: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the
            outgoing request
          default: true
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Export telemetry to ServiceNow (Lightstep) OTLP ingest
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: otel-client
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: s3cr3t
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputDataset:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: dataset_logs_prod
        type:
          type: string
          enum:
            - dataset
          example: dataset
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - dataset
        messageField:
          type: string
          title: Message field
          description: Name of the event field that contains the message or attributes to
            send. If not specified, all of the event's non-internal fields will
            be sent as attributes.
          example: _raw
        excludeFields:
          type: array
          title: Exclude fields
          description: Fields to exclude from the event if the Message field is either
            unspecified or refers to an object. Ignored if the Message field is
            a string. If empty, we send all non-internal fields.
          default:
            - sev
            - _time
            - ts
            - thread
          items:
            type: string
          example:
            - sev
            - _time
        serverHostField:
          type: string
          title: Server/host field
          description: Name of the event field that contains the `serverHost` identifier.
            If not specified, defaults to `cribl_<outputId>`.
          example: host
        timestampField:
          type: string
          title: Timestamp field
          description: Name of the event field that contains the timestamp. If not
            specified, defaults to `ts`, `_time`, or `Date.now()`, in that
            order.
          example: ts
        defaultSeverity:
          type: string
          title: Severity
          description: Default value for event severity. If the `sev` or `__severity`
            fields are set on an event, the first one matching will override
            this value.
          default: info
          enum:
            - finest
            - finer
            - fine
            - info
            - warning
            - error
            - fatal
          example: info
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        site:
          type: string
          title: DataSet site
          description: DataSet site to which events should be sent
          default: us
          enum:
            - us
            - eu
            - custom
          example: us
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 6144
          example: 2048
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: secret
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 51200
        description:
          type: string
          title: Description
          example: Send events to DataSet with API key authentication
        customUrl:
          type: string
          pattern: ^https?://.*
          example: https://api.dataset.com/v1/logs
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        apiKey:
          type: string
          title: API key
          description: A 'Log Write Access' API key for the DataSet account
          example: ds-0123456789abcdef0123456789abcdef
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: dataset_api_key
      type: object
    OutputCriblTcp:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: cribl_tcp_prod
        type:
          type: string
          enum:
            - cribl_tcp
          example: cribl_tcp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - cribl
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          example: true
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          example: gzip
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: true
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output.
            Accepts values with multiple-byte units, such as KB, MB, and GB.
            (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: 10 MB
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: tcp.cribl.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: cribl-client
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: s3cr3t
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete
            before assuming connection is dead
          default: 60000
          example: 30000
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated
            authentication token expires, valid values between 1 and 60
          example: 60
        excludeFields:
          type: array
          title: Exclude fields
          description: "Fields to exclude from the event. By default, all internal fields
            except `__output` are sent. Example: `cribl_pipe`, `c*`. Wildcards
            supported."
          default:
            - __kube_*
            - __metadata
            - __winEvent
          items:
            type: string
          example:
            - __kube_*
            - __metadata
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send events to Cribl Edge over TCP with TLS
        host:
          type: string
          title: Address
          description: The hostname of the receiver
          example: edge01.example.com
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          default: 10300
          example: 10300
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames
          example: false
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
                example: edge02.example.com
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                default: 10300
                example: 10300
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                  - inherit
                  - off
                default: inherit
                example: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not
                  specified, defaults to connection host (if not an IP);
                  otherwise, uses the global TLS settings.
                example: edge02.example.com
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its
                  traffic-handling capability
                minimum: 0
                default: 1
                example: 2
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up
            destinations from A records
          example: 300
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes
          example: 300
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A
            random set of IPs will be picked on every DNS resolution period. Use
            0 for unlimited.
          example: 4
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputCriblHttp:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: cribl_http_prod
        type:
          type: string
          enum:
            - cribl_http
          example: cribl_http
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - cribl
        loadBalanced:
          type: boolean
          title: Load balancing
          description: For optimal performance, enable load balancing even if you have one
            hostname, as it can expand to multiple IPs. If this setting is
            disabled, consider enabling round-robin DNS.
          default: true
          example: true
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: collector.cribl.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: cribl-client
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: s3cr3t
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated
            authentication token expires. Valid values are between 1 and 60.
          example: 60
        excludeFields:
          type: array
          title: Exclude fields
          description: "Fields to exclude from the event. By default, all internal fields
            except `__output` are sent. Example: `cribl_pipe`, `c*`. Wildcards
            supported."
          default:
            - __kube_*
            - __metadata
            - __winEvent
          items:
            type: string
          example:
            - __kube_*
            - __metadata
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          example: gzip
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 2048
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send events to Cribl Worker HTTP endpoint with retries
        url:
          type: string
          title: Cribl endpoint
          description: URL of a Cribl Worker to send events to, such as
            http://localhost:10200
          pattern: ^https?://.*
          example: https://edge.example.com:10200
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames
          example: false
        urls:
          type: array
          title: Cribl Worker endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: Cribl Endpoint
                description: URL of a Cribl Worker to send events to, such as
                  http://localhost:10200
                pattern: ^https?://.*
                example: https://edge01.example.com:10200
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its
                  traffic-handling capability
                minimum: 0
                default: 1
                example: 2
          example:
            - url: https://edge01.example.com:10200
              weight: 2
            - url: https://edge02.example.com:10200
              weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up
            destinations from A records
          example: 300
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes
          example: 300
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputHumioHec:
      required:
        - format
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: humio_hec_prod
        type:
          type: string
          enum:
            - humio_hec
          example: humio_hec
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - humio
        url:
          type: string
          title: LogScale endpoint
          description: "URL to a CrowdStrike Falcon LogScale endpoint to send events to.
            Examples: https://cloud.us.humio.com/api/v1/ingest/hec for JSON and
            https://cloud.us.humio.com/api/v1/ingest/hec/raw for raw"
          default: https://cloud.us.humio.com/api/v1/ingest/hec
          pattern: ^https?://.*
          example: https://cloud.us.humio.com/api/v1/ingest/hec
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 32768
          example: 8192
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: true
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        format:
          title: Request format
          type: string
          enum:
            - JSON
            - raw
          default: JSON
          description: When set to JSON, the event is automatically formatted with
            required fields before sending. When set to Raw, only the event's
            `_raw` value is sent.
          example: JSON
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: secret
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send logs to CrowdStrike Falcon LogScale via HEC endpoint
        token:
          type: string
          title: LogScale auth token
          description: CrowdStrike Falcon LogScale authentication token
          example: humio-0123456789abcdef0123456789abcdef
        textSecret:
          type: string
          title: LogScale auth token (text secret)
          description: Select or create a stored text secret
          example: humio_hec_token
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputCrowdstrikeNextGenSiem:
      required:
        - format
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: cs_nextgen_siem_prod
        type:
          type: string
          enum:
            - crowdstrike_next_gen_siem
          example: crowdstrike_next_gen_siem
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - crowdstrike
        url:
          type: string
          title: Next-Gen SIEM endpoint
          description: >-
            URL provided from a CrowdStrike data connector. 

            Example: https://ingest.<region>.crowdstrike.com/api/ingest/hec/<connection-id>/v1/services/collector
          pattern: ^https?://.*
          example: https://ingest.us-1.crowdstrike.com/api/ingest/hec/abcd1234/v1/services/collector
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 32768
          example: 8192
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: true
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        format:
          title: Request format
          type: string
          enum:
            - JSON
            - raw
          default: raw
          description: When set to JSON, the event is automatically formatted with
            required fields before sending. When set to Raw, only the event's
            `_raw` value is sent.
          example: raw
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to
            use a text secret to authenticate
          example: secret
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send events to CrowdStrike Next-Gen SIEM with token auth
        token:
          type: string
          title: Next-Gen SIEM authentication token
          example: csngs-0123456789abcdef0123456789abcdef
        textSecret:
          type: string
          title: Next-Gen SIEM authentication token (text secret)
          description: Select or create a stored text secret
          example: crowdstrike_nextgen_token
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputDlS3:
      required:
        - bucket
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: dls3_archive_prod
        type:
          type: string
          enum:
            - dl_s3
          example: dl_s3
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - archive
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at initialization time. Example
            referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          example: logs-archive-prod
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
          example: us-east-1
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript
            expression. Example: `${C.env.SOME_SECRET}`)"
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: https://s3.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/S3Writer
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: external-id-abc123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: /opt/cribl/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript
            expression (which can evaluate to a constant value), enclosed in
            quotes or backticks. Can be evaluated only at init time. Example
            referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
          example: year=%Y/month=%m/day=%d/app=orders
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_IR
            - DEEP_ARCHIVE
          example: INTELLIGENT_TIERING
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
            - AES256
            - aws:kms
          example: aws:kms
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
          example: arn:aws:kms:us-east-1:123456789012:key/abcd-1234-efgh-5678
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          example: parquet
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant)
          default: "`CriblOut`"
          example: app-logs
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
          example: .parquet.gz
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 256
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output
            file
          default: ""
          example: timestamp,host,level,message
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 256
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
          x-speakeasy-ignore: true
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          example: 120
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
          example: 5
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the
            bucket itself
          default: true
          example: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before
            backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
          example: 500
        partitioningFields:
          type: array
          title: Partition by fields
          description: List of fields to partition the path by, in addition to time, which
            is included automatically. The effective partition will be
            YYYY/MM/DD/HH/<list/of/fields>.
          default: []
          items:
            type: string
          example:
            - app
            - env
        description:
          type: string
          title: Description
          example: Archive logs to S3 in Parquet with field-based partitions
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression
            (`${C.env.SOME_ACCESS_KEY}`)
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws_s3_credentials
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is
            delivered
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          example: normal
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each
            Parquet file generated
          example: true
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader
            implementations use Data page V2's attributes to work more
            efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group
            can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 100000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB.
            Generally, lower values improve reading speed, while higher values
            improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 128MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the
            properties you add here as key-value pairs. Useful for tagging.
            Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: OCSF Event Class
              value:
                type: string
                title: Value
                example: "9001"
          example:
            - key: OCSF Event Class
              value: "9001"
            - key: team
              value: platform
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum
            values within data, numbers of nulls, etc. You can use Parquet tools
            to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet
            readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data
            integrity
          example: true
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: /opt/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
    OutputSecurityLake:
      required:
        - bucket
        - stagePath
        - region
        - accountId
        - customSource
        - assumeRoleArn
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: security_lake_export_prod
        type:
          type: string
          enum:
            - security_lake
          example: security_lake
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards. These fields are added as dimensions and labels to
            generated metrics and logs, respectively.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - securitylake
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at initialization time. Example
            referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          example: security-lake-us-east-1-123456789012
        region:
          type: string
          title: Region
          description: Region where the Amazon Security Lake is located.
          example: us-east-1
        awsSecretKey:
          type: string
          title: Secret key
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          example: auto
        endpoint:
          type: string
          title: Endpoint
          description: Amazon Security Lake service endpoint. If empty, defaults to the
            AWS Region-specific endpoint. Otherwise, it must point to Amazon
            Security Lake-compatible endpoint.
          example: https://security-lake.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Amazon Security Lake requests
          default: v4
          enum:
            - v2
            - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: arn:aws:iam::123456789012:role/SecurityLakeIngestRole
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: external-id-abc123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: /opt/cribl/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_IR
            - DEEP_ARCHIVE
          example: INTELLIGENT_TIERING
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
            - AES256
            - aws:kms
          example: aws:kms
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
          example: arn:aws:kms:us-east-1:123456789012:key/abcd-1234-efgh-5678
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant)
          default: "`CriblOut`"
          example: app-logs
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 256
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 200
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output
            file
          default: ""
          example: timestamp,host,level,message
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 256
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          example: 120
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
          example: 5
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the
            bucket itself
          default: true
          example: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before
            backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
          example: 500
        accountId:
          type: string
          title: Account ID
          description: ID of the AWS account whose data the Destination will write to
            Security Lake. This should have been configured when creating the
            Amazon Security Lake custom source.
          example: "123456789012"
        customSource:
          type: string
          title: Custom source name
          description: Name of the custom source configured in Amazon Security Lake
          example: cribl_custom_source
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each
            Parquet file generated
          example: true
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are
            represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader
            implementations use Data page V2's attributes to work more
            efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group
            can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 100000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB.
            Generally, lower values improve reading speed, while higher values
            improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 128MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the
            properties you add here as key-value pairs. Useful for tagging.
            Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: OCSF Event Class
              value:
                type: string
                title: Value
                example: "9001"
          example:
            - key: OCSF Event Class
              value: "9001"
            - key: team
              value: platform
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum
            values within data, numbers of nulls, etc. You can use Parquet tools
            to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet
            readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data
            integrity
          example: true
        description:
          type: string
          title: Description
          example: Deliver OCSF-compliant logs to Amazon Security Lake
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression
            (`${C.env.SOME_ACCESS_KEY}`)
          example: AKIAIOSFODNN7EXAMPLE
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key
            and secret key
          example: aws_security_lake_credentials
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 600
        parquetSchema:
          type: string
          title: Parquet schema
          description: To add a new schema, navigate to Processing > Knowledge > Parquet
            Schemas
          minLength: 1
          example: ocsf_1_1_0
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: /opt/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
    OutputCriblLake:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: lake_ingest_prod
        type:
          type: string
          enum:
            - cribl_lake
          example: cribl_lake
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          x-speakeasy-ignore: true
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          x-speakeasy-ignore: true
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          x-speakeasy-ignore: true
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          x-speakeasy-ignore: true
          example:
            - prod
            - lake
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression
            (which can evaluate to a constant value), enclosed in quotes or
            backticks. Can be evaluated only at initialization time. Example
            referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          x-speakeasy-ignore: true
          example: logs-lake-prod
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
          x-speakeasy-ignore: true
          example: us-east-1
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript
            expression. Example: `${C.env.SOME_SECRET}`)"
          x-speakeasy-ignore: true
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific
            endpoint. Otherwise, it must point to S3-compatible endpoint.
          x-speakeasy-ignore: true
          example: https://s3.us-east-1.amazonaws.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-ignore: true
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          x-speakeasy-ignore: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA,
            such as self-signed certificates
          default: true
          x-speakeasy-ignore: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
          x-speakeasy-ignore: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          x-speakeasy-ignore: true
          example: arn:aws:iam::123456789012:role/CriblLakeWriter
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          x-speakeasy-ignore: true
          example: external-id-abc123
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900
            (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12
            hours).
          minimum: 900
          maximum: 43200
          default: 3600
          x-speakeasy-ignore: true
          example: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing
            and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          x-speakeasy-ignore: true
          example: /opt/cribl/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          x-speakeasy-ignore: true
          example: true
        destPath:
          type: string
          title: Lake dataset
          description: Lake dataset to send the data to.
          example: security_logs
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          x-speakeasy-ignore: true
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_IR
            - DEEP_ARCHIVE
          x-speakeasy-ignore: true
          example: INTELLIGENT_TIERING
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
            - AES256
            - aws:kms
          x-speakeasy-ignore: true
          example: aws:kms
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
          x-speakeasy-ignore: true
          example: arn:aws:kms:us-east-1:123456789012:key/abcd-1234-efgh-5678
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          x-speakeasy-ignore: true
          example: true
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be
            constant)
          default: "`CriblOut`"
          x-speakeasy-ignore: true
          example: app-logs
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be
            constant).  The `__format` variable refers to the value of the `Data
            format` field (`json` or `raw`).  The `__compression` field refers
            to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ?
            ".gz" : ""}`'
          x-speakeasy-ignore: true
          example: .json.gz
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be
            closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          x-speakeasy-ignore: true
          example: 128
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded,
            @{product} will close the oldest open files and move them to the
            final output location.
          default: 100
          minimum: 10
          maximum: 2000
          x-speakeasy-ignore: true
          example: 200
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output
            file
          default: ""
          x-speakeasy-ignore: true
          example: timestamp,host,level,message
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          x-speakeasy-ignore: true
          example: 256
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          example: block
          x-speakeasy-ignore: true
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum
            number of retries, move it to a designated directory to prevent
            further errors
          x-speakeasy-ignore: true
          example: true
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free
            disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-ignore: true
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer
            than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          x-speakeasy-ignore: true
          example: 600
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for
            longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          x-speakeasy-ignore: true
          example: 120
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the
            bucket itself
          default: true
          x-speakeasy-ignore: true
          example: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before
            backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
          x-speakeasy-ignore: true
          example: 500
        awsAuthenticationMethod:
          type: string
          default: auto
          enum:
            - auto
            - auto_rpc
            - manual
          x-speakeasy-ignore: true
          example: auto
        format:
          type: string
          enum:
            - json
            - parquet
            - ddss
          x-speakeasy-ignore: true
          example: parquet
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file. Minimum
            part size is 5MB.
          default: 1
          minimum: 1
          maximum: 10
          x-speakeasy-ignore: true
          example: 4
        description:
          type: string
          title: Description
          example: "Cribl Lake destination"
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          x-speakeasy-ignore: true
          example: 600
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final
            destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          x-speakeasy-ignore: true
          example: /opt/cribl/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its
            final destination before being dead-lettered
          default: 20
          minimum: 1
          x-speakeasy-ignore: true
          example: 20
      type: object
    OutputDiskSpool:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: disk_spool_buffer
        type:
          type: string
          enum:
            - disk_spool
          example: disk_spool
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - spool
        timeWindow:
          type: string
          title: Bucket time span
          description: Time period for grouping spooled events. Default is 10m.
          default: 10m
          example: 10m
        maxDataSize:
          type: string
          title: Data size limit
          description: "Maximum disk space that can be consumed before older buckets are
            deleted. Examples: 420MB, 4GB. Default is 1GB."
          pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
          default: 1GB
          example: 100GB
        maxDataTime:
          title: Data age limit
          type: string
          description: "Maximum amount of time to retain data before older buckets are
            deleted. Examples: 2h, 4d. Default is 24h."
          pattern: \d+[smhd]$
          default: 24h
          example: 7d
        compress:
          type: string
          title: Compression
          description: Data compression format. Default is gzip.
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and
            organized within the time-buckets. If blank, the event's __partition
            property is used and otherwise, events go directly into the
            time-bucket directory.
          example: "C.Time.strftime(_time || Date.now()/1000, '%Y/%m/%d/%H')"
        description:
          type: string
          title: Description
          example: Local disk spool for short-term buffering and replay
      type: object
    OutputClickHouse:
      required:
        - database
        - tableName
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: clickhouse_ingest_prod
        type:
          type: string
          enum:
            - click_house
          example: click_house
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - clickhouse
        url:
          type: string
          title: URL
          description: "URL of the ClickHouse instance. Example: http://localhost:8123/"
          example: https://clickhouse.example.com:8443
        authType:
          type: string
          title: Authentication type
          description: ""
          enum:
            - none
            - basic
            - credentialsSecret
            - sslUserCertificate
            - token
            - textSecret
            - oauth
          default: none
          example: basic
        database:
          type: string
          title: ClickHouse database
          example: logs
        tableName:
          type: string
          title: ClickHouse table
          description: Name of the ClickHouse table where data will be inserted. Name can
            contain letters (A-Z, a-z), numbers (0-9), and the character "_",
            and must start with either a letter or the character "_".
          pattern: ^[a-zA-Z_][0-9a-zA-Z_]*$
          example: app_events
        format:
          type: string
          title: Format
          description: Data format to use when sending data to ClickHouse. Defaults to
            JSON Compact.
          enum:
            - json-compact-each-row-with-names
            - json-each-row
          default: json-compact-each-row-with-names
          example: json-each-row
        mappingType:
          type: string
          title: Mapping type
          description: How event fields are mapped to ClickHouse columns.
          enum:
            - automatic
            - custom
          default: automatic
          example: automatic
        asyncInserts:
          type: boolean
          title: Async inserts
          description: Collect data into batches for later processing. Disable to write to
            a ClickHouse table immediately.
          default: false
          example: true
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: false
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It
                must be a host name, and not an IP address.
              example: clickhouse.example.com
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: clickhouse-client
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the
                server's cert. PEM format. Can reference $ENV_VARS.
              example: /etc/ssl/certs/ca-bundle.crt
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.key
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format.
                Can reference $ENV_VARS.
              example: /opt/cribl/certs/client.crt
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: s3cr3t
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.2
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              example: TLSv1.3
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 2048
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 1000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        dumpFormatErrorsToDisk:
          type: boolean
          title: Log last schema mismatch
          description: Log the most recent event that fails to match the table schema
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Ingest logs to ClickHouse with async inserts and TLS
        username:
          type: string
          title: Username
          example: clickuser
        password:
          type: string
          title: Password
          example: s3cr3tPass!
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: chBearerToken_abc123xyz
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: clickhouse_basic_auth
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: clickhouse_bearer_token
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: https://auth.example.com/oauth/token
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: client_secret
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: s3cr3tClientSecret
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be
            top-level (e.g., 'token'); or nested, using a period (e.g.,
            'data.token').
          example: access_token
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to
            pass in requests. The value `${token}` is used to reference the
            token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request.
            @{product} will combine the secret with these parameters, and will
            send the URL-encoded result in a POST request to the endpoint
            specified in the 'Login URL'. We'll automatically add the
            content-type header 'application/x-www-form-urlencoded' when sending
            this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: grant_type
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: client_credentials
          example:
            - name: grant_type
              value: client_credentials
            - name: scope
              value: write:clickhouse
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product}
            will automatically add the content-type header
            'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: Accept
              value:
                type: string
                title: Value
                description: OAuth header value
                example: application/json
          example:
            - name: Accept
              value: application/json
        sqlUsername:
          type: string
          title: Username
          description: Username for certificate authentication
          example: clickuser
        waitForAsyncInserts:
          type: boolean
          title: Wait for async inserts
          description: Cribl will wait for confirmation that data has been fully inserted
            into the ClickHouse database before proceeding. Disabling this
            option can increase throughput, but Cribl won’t be able to verify
            data has been completely inserted.
          default: true
          example: true
        excludeMappingFields:
          type: array
          title: Exclude fields
          description: Fields to exclude from sending to ClickHouse
          minItems: 0
          default: []
          items:
            type: string
            minLength: 0
          example:
            - _raw
            - ts
        describeTable:
          type: string
          title: Retrieve table columns
          description: Retrieves the table schema from ClickHouse and populates the Column
            Mapping table
          example: DESCRIBE TABLE app_events
        columnMappings:
          type: array
          title: Column Mapping
          description: ""
          items:
            type: object
            required:
              - columnName
              - columnValueExpression
            properties:
              columnName:
                type: string
                title: Column name
                description: Name of the column in ClickHouse that will store field value
                example: timestamp
              columnType:
                type: string
                title: Column type
                description: Type of the column in the ClickHouse database
                example: DateTime64(3)
              columnValueExpression:
                type: string
                title: Column value
                description: JavaScript expression to compute value to be inserted into
                  ClickHouse table
                example: toDateTime64(ts, 3)
          example:
            - columnName: timestamp
              columnType: DateTime64(3)
              columnValueExpression: toDateTime64(ts, 3)
            - columnName: host
              columnType: String
              columnValueExpression: host
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputXsiam:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: xsiam_export_prod
        type:
          type: string
          enum:
            - xsiam
          example: xsiam
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - xsiam
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it
            can expand to multiple IPs. If disabled, consider enabling
            round-robin DNS.
          default: false
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 10000
          minimum: 100
          maximum: 10000
          example: 8192
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          example: 2000
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: X-Request-ID
              value:
                type: string
                title: Field Value
                example: 123e4567-e89b-12d3-a456-426614174000
          example:
            - name: X-Request-ID
              value: 123e4567-e89b-12d3-a456-426614174000
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - x-request-id
        authType:
          title: Authentication method
          type: string
          enum:
            - token
            - secret
          default: token
          description: Enter a token directly, or provide a secret referencing a token
          example: secret
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        throttleRateReqPerSec:
          type: integer
          title: Throttle request rate limit
          description: Maximum number of requests to limit to per second
          maximum: 2000
          default: 400
          example: 500
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 51200
        description:
          type: string
          title: Description
          example: Send logs to Palo Alto Networks XSIAM with token auth
        url:
          type: string
          title: XSIAM endpoint
          description: XSIAM endpoint URL to send events to, such as https://api-{tenant
            external URL}/logs/v1/event
          default: http://localhost:8088/logs/v1/event
          pattern: ^https?://.*
          example: https://api-tenant.paloaltonetworks.com/logs/v1/event
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved
            hostnames
          example: false
        urls:
          type: array
          title: XSIAM Endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url: {}
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its
                  traffic-handling capability
                minimum: 0
                default: 1
          example:
            - url: https://api-tenant.paloaltonetworks.com/logs/v1/event
              weight: 2
            - url: https://api-tenant-backup.paloaltonetworks.com/logs/v1/event
              weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up
            destinations from A records
          example: 300
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing
            purposes
          example: 300
        token:
          type: string
          title: Auth token
          description: XSIAM authentication token
          example: xsiam-0123456789abcdef0123456789abcdef
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: xsiam_token
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    OutputNetflow:
      required:
        - hosts
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: netflow_export_prod
        type:
          type: string
          enum:
            - netflow
          example: netflow
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - netflow
        hosts:
          type: array
          title: NetFlow Destinations
          description: One or more NetFlow destinations to forward events to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: Destination host
                example: netflow-collector.example.com
              port:
                type: number
                title: Port
                maximum: 65535
                description: Destination port, default is 2055
                default: 2055
                example: 2055
          example:
            - host: netflow-collector.example.com
              port: 2055
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address.
            Ignored if all destinations are IP addresses. A value of 0 means
            every datagram sent will incur a DNS lookup.
          example: 300
        description:
          type: string
          title: Description
          example: Forward NetFlow v5/v9/IPFIX to downstream collectors
      type: object
    OutputDynatraceHttp:
      required:
        - format
        - endpoint
        - telemetryType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: dynatrace_http_metrics
        type:
          type: string
          enum:
            - dynatrace_http
          example: dynatrace_http
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - dynatrace
        method:
          type: string
          title: Method
          description: The method to use when sending events
          enum:
            - POST
            - PUT
            - PATCH
          default: POST
          example: POST
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the
            outgoing request
          default: true
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 8
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 5000
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is
            0 (unlimited).
          default: 0
          minimum: 0
          maximum: 50000
          example: 10000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically
            on a per-event basis in the __headers field, as explained in [Cribl
            Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: Api-Token
              value:
                type: string
                title: Field Value
                example: dt0c01.XXXX.YYYYZZZZ
          example:
            - name: Api-Token
              value: dt0c01.XXXX.YYYYZZZZ
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - api-token
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        authType:
          type: string
          title: Authentication type
          enum:
            - token
            - textSecret
          default: token
          example: token
        format:
          type: string
          title: Format
          description: How to format events before sending. Defaults to JSON. Plaintext is
            not currently supported.
          enum:
            - json_array
            - plaintext
          default: json_array
          example: json_array
        endpoint:
          type: string
          title: Endpoint
          enum:
            - cloud
            - activeGate
            - manual
          default: cloud
          example: cloud
        telemetryType:
          type: string
          title: Telemetry type
          enum:
            - logs
            - metrics
          default: logs
          example: logs
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left
            blank, defaults to 5 times the max body size (if set). If 0, no
            limit is enforced.
          minimum: 0
          example: 51200
        description:
          type: string
          title: Description
          example: Send logs to Dynatrace Logs Ingest API
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: dt0c01.XXXX.YYYYZZZZ
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: dynatrace_api_token
        environmentId:
          type: string
          title: Environment ID
          description: ID of the environment to send to
          example: abc12345
        activeGateDomain:
          type: string
          description: ActiveGate domain with Log analytics collector module enabled. For
            example
            https://{activeGate-domain}:9999/e/{environment-id}/api/v2/logs/ingest.
          title: ActiveGate domain
          example: https://activegate.example.com:9999/e/abc12345/api/v2/logs/ingest
        url:
          title: URL
          type: string
          description: URL to send events to. Can be overwritten by an event's __url field.
          pattern: ^https?://.*
          example: https://abc.live.dynatrace.com/e/abc12345/api/v2/logs/ingest
      type: object
    OutputDynatraceOtlp:
      required:
        - endpoint
        - endpointType
        - protocol
        - otlpVersion
        - tokenSecret
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: dynatrace_otlp_export
        type:
          type: string
          enum:
            - dynatrace_otlp
          example: dynatrace_otlp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: main
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports
            wildcards.
          default:
            - cribl_pipe
          items:
            type: string
          example:
            - cribl_pipe
            - cribl_breaker
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: main
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - prod
            - dynatrace
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for Dynatrace
          enum:
            - http
          default: http
          example: http
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where Dynatrace events will be sent. Enter any valid
            URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square
            brackets)
          default: https://{your-environment-id}.live.dynatrace.com/api/v2/otlp
          example: https://abc123.live.dynatrace.com/api/v2/otlp
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring
            data to send
          enum:
            - 1.3.1
          default: 1.3.1
          example: 1.3.1
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry
            endpoint
          enum:
            - none
            - deflate
            - gzip
          default: gzip
          example: gzip
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry
            endpoint
          enum:
            - none
            - gzip
          default: gzip
          example: gzip
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://abc123.live.dynatrace.com/api/v2/otlp/v1/traces
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://abc123.live.dynatrace.com/api/v2/otlp/v1/metrics
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs`
            endpoint, leave this field empty; otherwise, specify the desired
            endpoint
          example: https://abc123.live.dynatrace.com/api/v2/otlp/v1/logs
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value
            supports JavaScript expressions that are evaluated just once, when
            the destination gets started. To pass credentials as metadata, use
            'C.Secret'.
          minItems: 0
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: x-tenant-id
              value:
                type: string
                title: Value
                example: acme-prod
          example:
            - key: x-tenant-id
              value: acme-prod
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit
          description: Maximum size (in KB) of the request body. The maximum payload size
            is 4 MB. If this limit is exceeded, the entire OTLP message is
            dropped
          default: 2048
          minimum: 1024
          maximum: 4096
          example: 2048
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete
            before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload
            size to be smaller than the configured Body size limit.
          example: 2
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by
            default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          example: payloadAndHeaders
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to
            establish before retrying
          default: 10000
          example: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
          example: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the
            outgoing request
          default: true
          example: true
        endpointType:
          type: string
          title: Endpoint type
          description: Select the type of Dynatrace endpoint configured
          enum:
            - saas
            - ag
          default: saas
          example: saas
        tokenSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: dynatrace_otlp_token
        authTokenName:
          type: string
          title: Api-Token name
          default: Authorization
          example: Authorization
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: Send OTLP logs and metrics to Dynatrace SaaS
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple
            addresses, @{product} will cycle through them in the order returned.
            For optimal performance, consider enabling this setting for non-load
            balanced destinations.
          default: false
          example: true
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
                example: Api-Token
              value:
                type: string
                title: Field Value
                example: dt0c01.XXXX.YYYYZZZZ
          example:
            - name: Api-Token
              value: dt0c01.XXXX.YYYYZZZZ
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
          example:
            - content-type
            - api-token
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such
            as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 429
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before
                  initiating backoff. Maximum interval is 600,000 ms (10
                  minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl
                  Stream will retry after 2 seconds, then 4 seconds, then 8
                  seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should
                  apply. Default (and minimum) is 10,000 ms (10 seconds);
                  maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 30000
          example:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 30000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before
                initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl
                Stream will retry after 2 seconds, then 4 seconds, then 8
                seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should
                apply. Default (and minimum) is 10,000 ms (10 seconds); maximum
                is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 30000
          example:
            timeoutRetry: true
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 30000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no
            longer than 180 seconds after the retry request. @{product} limits
            the delay to 180 seconds, even if the Retry-After header specifies a
            longer delay. When enabled, takes precedence over user-configured
            retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: true
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and
            optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 100 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average
            per Worker Process) before queueing stops. Enter a numeral with
            units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 10GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's
            value, the system will append: /<worker-id>/<output-id>."
          example: /opt/cribl/state/queues
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: gzip
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full
            capacity or low disk). 'Block' is the same behavior as non-PQ
            blocking. 'Drop new data' throws away incoming data, while leaving
            the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the
            Destination is unavailable. In Backpressure mode, PQ writes events
            to the filesystem when it detects backpressure from the Destination.
            In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          example: backpressure
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
    Output:
      oneOf:
        - $ref: "#/components/schemas/OutputDefault"
        - $ref: "#/components/schemas/OutputWebhook"
        - $ref: "#/components/schemas/OutputSentinel"
        - $ref: "#/components/schemas/OutputDevnull"
        - $ref: "#/components/schemas/OutputSyslog"
        - $ref: "#/components/schemas/OutputSplunk"
        - $ref: "#/components/schemas/OutputSplunkLb"
        - $ref: "#/components/schemas/OutputSplunkHec"
        - $ref: "#/components/schemas/OutputTcpjson"
        - $ref: "#/components/schemas/OutputWavefront"
        - $ref: "#/components/schemas/OutputSignalfx"
        - $ref: "#/components/schemas/OutputFilesystem"
        - $ref: "#/components/schemas/OutputS3"
        - $ref: "#/components/schemas/OutputAzureBlob"
        - $ref: "#/components/schemas/OutputAzureDataExplorer"
        - $ref: "#/components/schemas/OutputAzureLogs"
        - $ref: "#/components/schemas/OutputKinesis"
        - $ref: "#/components/schemas/OutputHoneycomb"
        - $ref: "#/components/schemas/OutputAzureEventhub"
        - $ref: "#/components/schemas/OutputGoogleChronicle"
        - $ref: "#/components/schemas/OutputGoogleCloudStorage"
        - $ref: "#/components/schemas/OutputGoogleCloudLogging"
        - $ref: "#/components/schemas/OutputGooglePubsub"
        - $ref: "#/components/schemas/OutputExabeam"
        - $ref: "#/components/schemas/OutputKafka"
        - $ref: "#/components/schemas/OutputConfluentCloud"
        - $ref: "#/components/schemas/OutputMsk"
        - $ref: "#/components/schemas/OutputElastic"
        - $ref: "#/components/schemas/OutputElasticCloud"
        - $ref: "#/components/schemas/OutputNewrelic"
        - $ref: "#/components/schemas/OutputNewrelicEvents"
        - $ref: "#/components/schemas/OutputInfluxdb"
        - $ref: "#/components/schemas/OutputCloudwatch"
        - $ref: "#/components/schemas/OutputMinio"
        - $ref: "#/components/schemas/OutputStatsd"
        - $ref: "#/components/schemas/OutputStatsdExt"
        - $ref: "#/components/schemas/OutputGraphite"
        - $ref: "#/components/schemas/OutputRouter"
        - $ref: "#/components/schemas/OutputSns"
        - $ref: "#/components/schemas/OutputSqs"
        - $ref: "#/components/schemas/OutputSnmp"
        - $ref: "#/components/schemas/OutputSumoLogic"
        - $ref: "#/components/schemas/OutputDatadog"
        - $ref: "#/components/schemas/OutputGrafanaCloud"
        - $ref: "#/components/schemas/OutputLoki"
        - $ref: "#/components/schemas/OutputPrometheus"
        - $ref: "#/components/schemas/OutputRing"
        - $ref: "#/components/schemas/OutputOpenTelemetry"
        - $ref: "#/components/schemas/OutputServiceNow"
        - $ref: "#/components/schemas/OutputDataset"
        - $ref: "#/components/schemas/OutputCriblTcp"
        - $ref: "#/components/schemas/OutputCriblHttp"
        - $ref: "#/components/schemas/OutputHumioHec"
        - $ref: "#/components/schemas/OutputCrowdstrikeNextGenSiem"
        - $ref: "#/components/schemas/OutputDlS3"
        - $ref: "#/components/schemas/OutputSecurityLake"
        - $ref: "#/components/schemas/OutputCriblLake"
        - $ref: "#/components/schemas/OutputDiskSpool"
        - $ref: "#/components/schemas/OutputClickHouse"
        - $ref: "#/components/schemas/OutputXsiam"
        - $ref: "#/components/schemas/OutputNetflow"
        - $ref: "#/components/schemas/OutputDynatraceHttp"
        - $ref: "#/components/schemas/OutputDynatraceOtlp"
    OutputSamplesResponse:
      type: object
      properties:
        events:
          type: array
          items:
            type: object
            additionalProperties: true
          example:
            - _raw: "sample log 1"
              host: web-01
              level: info
            - _raw: "sample log 2"
              host: web-02
              level: error
      required:
        - events
    OutputTestResponse:
      type: object
      properties:
        details:
          type: object
          additionalProperties: true
          example:
            sent: 100
            failed: 0
        error:
          type: string
          example: ""
        outputId:
          type: string
          example: dynatrace_http_metrics
        success:
          type: boolean
          example: true
        successDetail:
          type: string
          example: All events delivered successfully
      required:
        - outputId
        - success
    CriblEvent:
      type: object
      properties:
        _raw:
          type: string
          example: "2025-10-02T12:00:00Z host=web-01 level=info msg=\"service started\""
      required:
        - _raw
    OutputTestRequest:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/CriblEvent"
          example:
            - _raw: "hello world"
            - _raw: "another event"
      required:
        - events
    SchemaLibEntry:
      type: object
      required:
        - id
        - schema
      properties:
        id:
          type: string
          title: ID
          example: ocsf_1_1_0
        description:
          type: string
          title: Description
          example: OCSF 1.1.0 base schema
        schema:
          type: string
          title: Schema
          description: JSON schema matching standards of draft version 2019-09
          example: '{"type":"object","properties":{"_raw":{"type":"string"}}}'
    PipelineFunctionConf:
      type: object
      required:
        - id
        - conf
      additionalProperties: false
      properties:
        filter:
          title: Filter
          description: Filter that selects data to be fed through this Function
          type: string
          default: "true"
          example: "_source == \"app\""
        id:
          title: ID
          description: Function ID
          type: string
          example: eval
        description:
          title: Description
          description: Simple description of this step
          type: string
          example: Parse and enrich fields
        disabled:
          title: Disabled
          description: If true, data will not be pushed through this function
          type: boolean
          example: false
        final:
          title: Final
          description: If enabled, stops the results of this Function from being passed to
            the downstream Functions
          type: boolean
          example: false
        conf:
          type: object
          title: Function-specific configs
          additionalProperties: true
          example:
            addFields:
              app: orders
              env: prod
        groupId:
          title: Group ID
          description: Group ID
          type: string
          example: default
    Pipeline:
      title: Pipeline Settings
      type: object
      required:
        - conf
        - id
      properties:
        id:
          title: ID
          type: string
          example: main
        conf:
          type: object
          additionalProperties: false
          properties:
            asyncFuncTimeout:
              type: integer
              title: Async function timeout (ms)
              description: Time (in ms) to wait for an async function to complete processing
                of a data item
              minimum: 0
              maximum: 10000
              example: 5000
            output:
              type: string
              title: Output event destination
              description: The output destination for events processed by this Pipeline
              default: default
              example: OutputSplunk
            description:
              title: Description
              type: string
              example: Main pipeline for app logs
            streamtags:
              type: array
              title: Tags
              description: Tags for filtering and grouping in @{product}
              default: []
              items:
                type: string
              example:
                - prod
                - app
            functions:
              title: Functions
              description: List of Functions to pass data through
              type: array
              items:
                $ref: "#/components/schemas/PipelineFunctionConf"
              example:
                - id: eval
                  filter: "_raw != null"
                  conf:
                    addFields:
                      env: prod
                - id: serialize
                  filter: "true"
                  conf:
                    format: json
            groups:
              type: object
              additionalProperties:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    title: Group Name
                  description:
                    type: string
                    title: Description
                    description: Short description of this group
                  disabled:
                    type: boolean
                    title: Disabled
                    description: Whether this group is disabled
              example:
                default:
                  name: Default Group
                  description: Core pipeline functions
                  disabled: false
    ProfilerItem:
      type: object
      properties:
        createTime:
          type: number
          example: 1730481600000
        id:
          type: string
          example: profiler-2025-10-02T12-00
        size:
          type: number
          example: 5242880
        workerId:
          type: string
          example: worker-01
      required:
        - id
    RoutesRoute:
      type: object
      additionalProperties: true
      required:
        - pipeline
        - name
      properties:
        id:
          type: string
          title: Route ID
          readOnly: true
          example: route-1
        name:
          type: string
          title: Route name
          example: Errors to Splunk
        disabled:
          type: boolean
          title: Disabled
          description: Disable this routing rule
          example: false
        filter:
          type: string
          title: Filter
          description: JavaScript expression to select data to route
          default: "true"
          example: "level == 'error'"
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to send the matching data to
          example: main
        enableOutputExpression:
          type: boolean
          title: Enable expression
          description: Enable to use a JavaScript expression that evaluates to the name of
            the Description below
          default: false
          example: false
        output: {}
        outputExpression: {}
        description:
          type: string
          title: Description
          example: Route application errors to Splunk output
        final:
          title: Final
          description: Flag to control whether the event gets consumed by this Route
            (Final), or cloned into it
          type: boolean
          default: true
          example: true
    Routes:
      type: object
      additionalProperties: false
      required:
        - routes
      properties:
        id:
          type: string
          title: ID
          description: Routes ID
          example: default
        routes:
          type: array
          title: Route
          description: Pipeline routing rules
          items:
            $ref: "#/components/schemas/RoutesRoute"
          example:
            - name: Errors to Splunk
              filter: "level == 'error'"
              pipeline: main
              final: true
            - name: Warnings to Lake
              filter: "level == 'warning'"
              pipeline: lake
              final: true
        groups:
          type: object
          additionalProperties:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                title: Group Name
              description:
                type: string
                title: Description
                description: Short description of this group
              disabled:
                type: boolean
                title: Disabled
                description: Whether this group is disabled
          example:
            default:
              name: Default Group
              description: Primary routing rules
              disabled: false
        comments:
          type: array
          title: Comments
          description: Comments
          items:
            type: object
            properties:
              comment:
                type: string
                title: Comment
                description: Optional, short description of this Route's purpose
            additionalProperties: true
          example:
            - comment: Ensure error routes run before warning routes
    RouteCloneConf:
      type: object
      example: {}
    RouteConf:
      type: object
      properties:
        clones:
          type: array
          items:
            $ref: "#/components/schemas/RouteCloneConf"
          example:
            - {}
        context:
          type: string
          example: prod
        description:
          type: string
          example: Clone errors to audit stream
        disabled:
          type: boolean
          example: false
        enableOutputExpression:
          type: boolean
          example: false
        filter:
          type: string
          example: "source == 'app' && level == 'error'"
        final:
          type: boolean
          example: true
        groupId:
          type: string
          example: default
        id:
          type: string
          example: route-errors
        name:
          type: string
          example: Errors
        output:
          type: string
          example: OutputSplunk
        outputExpression:
          type: string
          example: "`Output${env}`"
        pipeline:
          type: string
          example: main
      required:
        - final
        - id
        - name
        - pipeline
    RouteDefinitions:
      type: array
      items:
        $ref: "#/components/schemas/RouteConf"
      example:
        - id: "route-auth-logs"
          name: "Auth logs to S3"
          pipeline: "parse_auth"
          final: false
          output: "s3/default"
          disabled: false
          groupId: "default"
    SecretType:
      type: string
      enum:
        - text
        - keypair
        - credentials
      example: text
    RestSecret:
      type: object
      properties:
        apiKey:
          type: string
          example: "api_9f3c2a1b0e5d4c7a"
        description:
          type: string
          example: "API key for ingestion service"
        id:
          type: string
          example: "sec-3f7a2c9d"
        password:
          type: string
          example: "app-password-123"
        secretKey:
          type: string
          example: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
        secretType:
          $ref: "#/components/schemas/SecretType"
        tags:
          type: string
          example: "env:prod,team:security"
        username:
          type: string
          example: "ingest-bot"
        value:
          type: string
          example: "token-abc123"
      required:
        - id
        - secretType
    InputStatus:
      type: object
      properties:
        id:
          type: string
          example: "input:syslog-01"
        status:
          type: object
          properties:
            health:
              type: string
              enum:
                - Green
                - Yellow
                - Red
              example: "Green"
            metrics:
              type: object
              additionalProperties: true
              example:
                eventsProcessed: 12400
                lagSeconds: 0
            timestamp:
              type: number
              example: 1727985600000
            useStatusFromLB:
              type: boolean
              example: false
          required:
            - health
            - metrics
            - timestamp
      required:
        - id
        - status
    OutputStatus:
      type: object
      properties:
        id:
          type: string
          example: "output:s3-default"
        status:
          type: object
          properties:
            health:
              type: string
              enum:
                - Green
                - Yellow
                - Red
              example: "Yellow"
            metrics:
              type: object
              additionalProperties: true
              example:
                deliveryRate: 5230
                errorCount: 1
            timestamp:
              type: number
              example: 1727985600000
            useStatusFromLB:
              type: boolean
              example: true
          required:
            - health
            - metrics
            - timestamp
      required:
        - id
        - status
    AppScopeProcessingStatus:
      type: string
      nullable: true
      enum:
        - normal
        - attaching
        - attach_failed
        - updating
        - update_failed
        - detaching
        - detached
        - detach_failed
      example: normal
    AppScopeProcessStatus:
      type: string
      nullable: true
      enum:
        - green
        - yellow
        - red
      example: green
    AppScopeProcess:
      type: object
      properties:
        cfg:
          $ref: "#/components/schemas/AppscopeConfigWithCustom"
        config_id:
          type: string
          example: "cfg-18c8a2d7"
        id:
          type: string
          example: "proc-34f2b9a1"
        interfaces:
          type: array
          items:
            type: object
            properties:
              config:
                type: string
                example: "default"
              connected:
                type: boolean
                example: true
              name:
                type: string
                example: "eth0"
          example:
            - name: "eth0"
              connected: true
              config: "default"
        lastError:
          type: string
          example: "Failed to attach to PID 4321"
        process:
          type: object
          properties:
            hostPid:
              type: number
              example: 4321
            id:
              type: string
              example: "p-8e3c5a"
            machine_id:
              type: string
              example: "b042ce8f-9a5e-4f57-8282-e8ad2f9d0d55"
            pid:
              type: number
              example: 5678
            uuid:
              type: string
              example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          required:
            - pid
        processingStatus:
          $ref: "#/components/schemas/AppScopeProcessingStatus"
        source_id:
          type: string
          example: "source:appscope:nginx-01"
        status:
          $ref: "#/components/schemas/AppScopeProcessStatus"
      required:
        - id
    EdgeFileInspectResponse:
      type: object
      example: {}
    SymLinkInfo:
      type: object
      properties:
        symLinkTarget:
          type: string
          example: "../logs/app.log"
        symLinkTargetAbsolutePath:
          type: string
          example: "/var/log/app.log"
        symLinkTargetIsDirectory:
          type: boolean
          example: false
        symLinkTargetIsFile:
          type: boolean
          example: true
      required:
        - symLinkTarget
        - symLinkTargetAbsolutePath
    FilesystemEntry:
      type: object
      properties:
        mode:
          type: string
          example: "lrwxr-xr-x"
        name:
          type: string
          example: "app.log"
        stats:
          type: object
          additionalProperties: true
          example:
            size: 1048576
            mtime: "2025-10-03T12:34:56Z"
            inode: 12345678
        symLinkInfo:
          $ref: "#/components/schemas/SymLinkInfo"
        type:
          type: string
          example: "file"
      required:
        - name
        - type
    EdgeMapQueryResult:
      type: object
      properties:
        __worker_info:
          type: object
          properties:
            hostname:
              type: string
              example: "worker-1.us-east-1.compute.internal"
          required:
            - hostname
        __worker_node:
          type: string
          example: "node-abc123"
      required:
        - __worker_info
        - __worker_node
    AwsMetadata:
      type: object
      properties:
        hostname:
          type: string
          example: "ip-10-0-0-12.ec2.internal"
        identity:
          type: object
          additionalProperties: true
          example:
            instanceId: "i-0abc123def4567890"
            accountId: "123456789012"
        public_ipv4:
          type: string
          example: "54.210.12.34"
        roles:
          type: array
          items:
            type: string
          example:
            - "arn:aws:iam::123456789012:role/CriblWorker"
        security_groups:
          type: array
          items:
            type: string
          example:
            - "sg-0a1b2c3d4e5f6a7b"
            - "sg-11223344556677889"
        tags:
          type: object
          example:
            Name: "cribl-worker-1"
            Environment: "prod"
        version:
          type: number
          example: 2021
      required:
        - version
    CriblMetadata:
      type: object
      properties:
        config_version:
          type: string
          example: "5.2.0"
        group:
          type: string
          example: "default"
        install_type:
          type: string
          example: "package"
        mode:
          type: string
          example: "worker"
        tags:
          type: array
          items:
            type: string
          example:
            - "region:us-east-1"
            - "team:platform"
        version:
          type: string
          example: "4.12.2"
      required:
        - mode
        - version
    EnvMetadata:
      type: object
      example: {}
    NetworkInterfaces:
      type: object
      example: {}
    OsMetadata:
      type: object
      properties:
        arch:
          type: string
          example: "x86_64"
        cpu_count:
          type: number
          example: 8
        cpu_speed_mhz:
          type: number
          example: 3200
        cpu_type:
          type: string
          example: "Intel(R) Xeon(R)"
        gid:
          type: number
          example: 1000
        homedir:
          type: string
          example: "/home/cribl"
        hostname:
          type: string
          example: "worker-1"
        interfaces:
          $ref: "#/components/schemas/NetworkInterfaces"
        machine_id:
          type: string
          example: "b042ce8f-9a5e-4f57-8282-e8ad2f9d0d55"
        memory:
          type: number
          example: 33554432
        os_id:
          type: string
          example: "ubuntu"
        os_name:
          type: string
          example: "Ubuntu"
        os_version:
          type: string
          example: "22.04"
        os_version_id:
          type: string
          example: "22.04"
        platform:
          type: string
          example: "linux"
        release:
          type: string
          example: "6.12.8"
        timezone:
          type: string
          example: "UTC"
        timezone_offset:
          type: string
          example: "+0000"
        uid:
          type: number
          example: 1000
        username:
          type: string
          example: "cribl"
      required:
        - arch
        - cpu_count
        - cpu_speed_mhz
        - cpu_type
        - gid
        - homedir
        - hostname
        - interfaces
        - machine_id
        - memory
        - os_id
        - os_name
        - os_version
        - os_version_id
        - platform
        - release
        - timezone
        - timezone_offset
        - uid
        - username
    KubeMetadata:
      type: object
      properties:
        cluster:
          type: object
          additionalProperties: true
          example:
            name: "prod-cluster"
            server: "https://10.0.0.1"
        container:
          type: object
          additionalProperties: true
          example:
            name: "log-collector"
            image: "cribl/worker:4.12.2"
        namespace:
          type: string
          example: "observability"
        node:
          type: object
          additionalProperties: true
          example:
            name: "ip-10-0-1-23.ec2.internal"
        pod:
          type: object
          additionalProperties: true
          example:
            name: "log-collector-7c8d9f5b6b-abcde"
            uid: "7e1c2b7b-1234-4a8d-90f1-1f2e3d4c5b6a"
        source:
          type: string
          example: "kubernetes"
      required:
        - namespace
        - source
    Metadata:
      type: object
      properties:
        aws:
          $ref: "#/components/schemas/AwsMetadata"
        cribl:
          $ref: "#/components/schemas/CriblMetadata"
        env:
          $ref: "#/components/schemas/EnvMetadata"
        hostOs:
          $ref: "#/components/schemas/OsMetadata"
        kube:
          $ref: "#/components/schemas/KubeMetadata"
        os:
          $ref: "#/components/schemas/OsMetadata"
        timestamp:
          type: number
          example: 1727985600000
      required:
        - timestamp
    SampleFile:
      type: object
      properties:
        bytes:
          type: string
          example: "VGhpcyBpcyBhIHNhbXBsZSBmaWxlLg=="
        bytesRead:
          type: number
          example: 1024
        length:
          type: number
          example: 4096
      required:
        - bytes
        - bytesRead
        - length
    CrudEntityBase:
      type: object
      properties:
        id:
          type: string
          example: "ent-01H8Z9K7ABCD"
      required:
        - id
    MultiFactorAuthSchema:
      type: object
      properties:
        accessControlAllowOrigin:
          type: string
          example: "*"
        allowLogin:
          type: boolean
          example: true
        apiServerUrl:
          type: string
          example: "https://mfa.example.com/api"
        disabled:
          type: boolean
          example: false
        type:
          type: string
          enum:
            - piv
          example: piv
        usernameField:
          type: string
          example: "email"
        usernameRegex:
          type: string
          example: "^[\\w.+-]+@example\\.com$"
      required:
        - accessControlAllowOrigin
        - allowLogin
        - apiServerUrl
        - disabled
        - type
        - usernameField
        - usernameRegex
    LoginInfo:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "admin@example.com"
        password:
          type: string
          example: "S3cureP@ss!"
    AuthToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    RedirectInfo:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "oauth"
        redirectUrl:
          type: string
          example: "https://app.example.com/callback"
        token:
          type: string
          example: "state-xyz"
    AuthPolicyEntry:
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
          example:
            - "read"
            - "write"
        object:
          type: string
          example: "datasets/*"
      required:
        - actions
        - object
    CaptureParams:
      type: object
      properties:
        duration:
          type: number
          example: 300
        filter:
          type: string
          example: 'sourcetype=apache status>=500'
        level:
          type: number
          example: 2
        maxEvents:
          type: number
          example: 100000
        stepDuration:
          type: number
          example: 10
        workerId:
          type: string
          example: "worker-1"
        workerThreshold:
          type: number
          example: 0.75
      required:
        - duration
        - filter
        - level
        - maxEvents
    ChangelogState:
      type: object
      properties:
        lastViewedCurrent:
          type: string
          example: "4.12.2"
        lastViewedUpgrade:
          type: string
          example: "5.0.0"
    ClickHouseDescriptionColumn:
      type: object
      properties:
        name:
          type: string
          example: "ts"
        type:
          type: string
          example: "DateTime64(3)"
      required:
        - name
        - type
    ClickHouseDescriptionResult:
      type: object
      properties:
        description:
          type: array
          items:
            $ref: "#/components/schemas/ClickHouseDescriptionColumn"
          example:
            - name: "ts"
              type: "DateTime64(3)"
            - name: "message"
              type: "String"
        errorMsg:
          type: string
          example: ""
        success:
          type: boolean
          example: true
      required:
        - success
    HTTPOutAuthConfig:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        password:
          type: string
          example: "s3cr3t!"
        token:
          type: string
          example: "ch_abcdef123456"
        username:
          type: string
          example: "clickhouse_user"
    CrudPolicy:
      type: object
      properties:
        Create:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
            - actions: ["create"]
              object: "datasets/*"
        Delete:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
            - actions: ["delete"]
              object: "datasets/*"
        List:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
            - actions: ["list"]
              object: "datasets/*"
        Read:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
            - actions: ["read"]
              object: "datasets/*"
        Replace:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
            - actions: ["replace"]
              object: "datasets/*"
        Update:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
            - actions: ["update"]
              object: "datasets/*"
      required:
        - Create
        - Delete
        - List
        - Read
        - Replace
        - Update
    Expression:
      $ref: "#/components/schemas/CrudPolicy"
      example:
        Create:
          - actions: ["create"]
            object: "pipelines/*"
        Read:
          - actions: ["read"]
            object: "pipelines/*"
        Update:
          - actions: ["update"]
            object: "pipelines/*"
        Delete: []
        List: []
        Replace: []
    NameValue:
      type: object
      properties:
        name:
          type: string
          example: "X-API-Key"
        value:
          $ref: "#/components/schemas/Expression"
      required:
        - name
        - value
    HTTPOutExtraParamConfig:
      type: object
      properties:
        name:
          type: string
          example: "max_execution_time"
        value:
          type: object
          additionalProperties: true
          example:
            value: 60
      required:
        - name
        - value
    Format:
      type: string
      enum:
        - json-compact-each-row-with-names
        - json-each-row
      example: json-each-row
    MappingType:
      type: string
      enum:
        - automatic
        - custom
      example: automatic
    HTTPOutResponseRetryConfig:
      type: object
      properties:
        backoffRate:
          type: number
          example: 2
        httpStatus:
          type: number
          example: 503
        initialBackoff:
          type: number
          example: 1
        maxBackoff:
          type: number
          example: 30
    RetryBackoffOptions:
      type: object
      properties:
        backoffRate:
          type: number
          example: 2
        initialBackoff:
          type: number
          example: 1
        maxBackoff:
          type: number
          example: 60
    TLSClientParams:
      type: object
      properties:
        caPath:
          type: string
          example: "/etc/ssl/certs/ca.pem"
        certPath:
          type: string
          example: "/etc/ssl/certs/client.pem"
        checkServerIdentity:
          type: object
          example: {}
        disabled:
          type: boolean
          example: false
        passphrase:
          type: string
          example: "changeit"
        privKeyPath:
          type: string
          example: "/etc/ssl/private/client.key"
        rejectUnauthorized:
          type: boolean
          example: true
        servername:
          type: string
          example: "clickhouse.example.com"
      required:
        - disabled
    CHOutConfig:
      type: object
      properties:
        asyncInserts:
          type: boolean
          example: true
        auth:
          $ref: "#/components/schemas/HTTPOutAuthConfig"
        authType:
          type: string
          enum:
            - token
            - none
            - textSecret
            - basic
            - credentialsSecret
            - secret
            - manual
            - manualAPIKey
            - sslUserCertificate
          example: token
        columnMappings:
          type: array
          items:
            type: object
            properties:
              columnName:
                type: string
                example: "ts"
              columnType:
                type: string
                example: "DateTime64(3)"
              columnValueExpression:
                type: string
                example: "_time"
            required:
              - columnName
              - columnType
              - columnValueExpression
          example:
            - columnName: "ts"
              columnType: "DateTime64(3)"
              columnValueExpression: "_time"
            - columnName: "message"
              columnType: "String"
              columnValueExpression: "_raw"
        compress:
          type: boolean
          example: true
        concurrency:
          type: number
          example: 4
        database:
          type: string
          example: "logs"
        dumpFormatErrorsToDisk:
          type: boolean
          example: false
        excludeMappingFields:
          type: array
          items:
            type: string
          example:
            - "_raw"
        extraHttpHeaders:
          type: array
          items:
            $ref: "#/components/schemas/NameValue"
          example:
            - name: "X-Request-ID"
              value:
                Read:
                  - actions: ["read"]
                    object: "headers/*"
                Create: []
                Update: []
                Delete: []
                List: []
                Replace: []
        extraParams:
          type: array
          items:
            $ref: "#/components/schemas/HTTPOutExtraParamConfig"
          example:
            - name: "async_insert"
              value:
                value: 1
        failedRequestLoggingMode:
          type: string
          example: "errors-only"
        flushPeriodSec:
          type: number
          example: 5
        format:
          $ref: "#/components/schemas/Format"
        keepAlive:
          type: boolean
          example: true
        loadBalanced:
          type: boolean
          example: false
        mappingType:
          $ref: "#/components/schemas/MappingType"
        maxConnectionReuseSec:
          type: number
          example: 120
        maxPayloadEvents:
          type: number
          example: 5000
        maxPayloadSizeKB:
          type: number
          example: 1024
        maxSockets:
          type: number
          example: 64
        method:
          type: string
          example: "POST"
        password:
          type: string
          example: "clickhouse_password"
        rejectUnauthorized:
          type: boolean
          example: true
        responseHonorRetryAfterHeader:
          type: boolean
          example: true
        responseRetrySettings:
          type: array
          items:
            $ref: "#/components/schemas/HTTPOutResponseRetryConfig"
          example:
            - httpStatus: 429
              backoffRate: 2
              initialBackoff: 1
              maxBackoff: 30
        safeHeaders:
          type: array
          items:
            type: string
          example:
            - "content-type"
            - "date"
        sqlUsername:
          type: string
          example: "default"
        tableName:
          type: string
          example: "apache_logs"
        tableNameExpression:
          type: string
          example: "toString(index)"
        timeoutRetrySettings:
          $ref: "#/components/schemas/RetryBackoffOptions"
        timeoutSec:
          type: number
          example: 30
        tls:
          $ref: "#/components/schemas/TLSClientParams"
        token:
          type: string
          example: "chp_abcdef123456"
        totalMemoryLimitKB:
          type: number
          example: 1048576
        url:
          type: string
          example: "https://clickhouse.example.com"
        urls:
          type: array
          items:
            type: string
          example:
            - "https://ch1.example.com"
            - "https://ch2.example.com"
        useRoundRobinDns:
          type: boolean
          example: false
        username:
          type: string
          example: "ch_writer"
        waitForAsyncInserts:
          type: boolean
          example: true
      required:
        - asyncInserts
        - database
        - flushPeriodSec
        - format
        - loadBalanced
        - mappingType
        - tableName
        - url
    CluiType:
      type: string
      enum:
        - input
        - output
        - route
        - pipeline
        - knowledge
        - collector
        - pack
        - monitoring
      example: input
    CluiItem:
      type: object
      properties:
        category:
          type: string
          enum:
            - link
          example: link
        groupId:
          type: string
          example: "default"
        id:
          type: string
          example: "item-logs-search"
        name:
          type: string
          example: "Search Logs"
        packId:
          type: string
          example: "pack-observability"
        subType:
          type: string
          example: "http"
        type:
          $ref: "#/components/schemas/CluiType"
      required:
        - category
        - type
    TcpOutCompression:
      type: string
      nullable: true
      enum:
        - gzip
        - none
      example: gzip
    ConfigBundles:
      type: object
      properties:
        remoteUrl:
          type: string
          example: "https://config.example.com/bundles.json"
      required:
        - remoteUrl
    FailoverConfigs:
      type: object
      properties:
        missedHBLimit:
          type: number
          example: 3
        period:
          type: string
          example: "5m"
        volume:
          type: string
          example: "/var/lib/cribl/failover"
      required:
        - volume
    SocksProxyOpts:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        host:
          type: string
          example: "proxy.example.com"
        password:
          type: string
          example: "s0ckspass"
        port:
          type: number
          example: 1080
        type:
          type: number
          example: 5
        userId:
          type: string
          example: "proxyuser"
      required:
        - host
        - port
    ResiliencyType:
      type: string
      enum:
        - none
        - failover
      example: failover
    CloudWorkspaceSchema:
      type: object
      properties:
        authToken:
          type: string
          example: "cw_abcdef1234567890"
        compression:
          $ref: "#/components/schemas/TcpOutCompression"
        configBundles:
          $ref: "#/components/schemas/ConfigBundles"
        configHelperSocketDir:
          type: string
          example: "/var/run/cribl/helper"
        connectionTimeout:
          type: number
          example: 10
        disableSNIRouting:
          type: boolean
          example: false
        disabled:
          type: boolean
          example: false
        failover:
          $ref: "#/components/schemas/FailoverConfigs"
        forwardToLeaderApi:
          type: boolean
          example: true
        host:
          type: string
          example: "cloud.example.com"
        ipWhitelistRegex:
          type: string
          example: "^(10\\.0\\.\\d+\\.\\d+)$"
        maxActiveCxn:
          type: number
          example: 100
        maxBufferBytes:
          type: number
          example: 10485760
        port:
          type: number
          example: 443
        protocol:
          type: string
          example: "wss"
        proxy:
          $ref: "#/components/schemas/SocksProxyOpts"
        resiliency:
          $ref: "#/components/schemas/ResiliencyType"
        subscriptionAgreement:
          type: boolean
          example: true
        tls:
          type: object
          properties:
            caPath:
              type: string
              example: "/etc/ssl/certs/ca.pem"
            certPath:
              type: string
              example: "/etc/ssl/certs/client.pem"
            certificateName:
              type: string
              example: "client-cert"
            checkServerIdentity:
              type: object
              example: {}
            commonNameRegex:
              type: object
              additionalProperties: true
              example:
                pattern: ".*\\.example\\.com"
            disabled:
              type: boolean
              example: false
            passphrase:
              type: string
              example: "changeit"
            privKeyPath:
              type: string
              example: "/etc/ssl/private/client.key"
            rejectUnauthorized:
              type: boolean
              example: true
            requestCert:
              type: boolean
              example: true
            servername:
              type: string
              example: "cloud.example.com"
          required:
            - disabled
        writeTimeout:
          type: number
          example: 30
      required:
        - disabled
        - host
        - port
        - subscriptionAgreement
    MasterSchema:
      type: object
      properties:
        authToken:
          type: string
          example: "ms_abcdef1234567890"
        compression:
          $ref: "#/components/schemas/TcpOutCompression"
        configBundles:
          $ref: "#/components/schemas/ConfigBundles"
        configHelperSocketDir:
          type: string
          example: "/var/run/cribl/helper"
        connectionTimeout:
          type: number
          example: 10
        disableSNIRouting:
          type: boolean
          example: false
        failover:
          $ref: "#/components/schemas/FailoverConfigs"
        forwardToLeaderApi:
          type: boolean
          example: true
        host:
          type: string
          example: "leader.example.com"
        ipWhitelistRegex:
          type: string
          example: "^(10\\.\\d+\\.\\d+\\.\\d+)$"
        maxActiveCxn:
          type: number
          example: 100
        maxBufferBytes:
          type: number
          example: 10485760
        port:
          type: number
          example: 4200
        protocol:
          type: string
          example: "wss"
        proxy:
          $ref: "#/components/schemas/SocksProxyOpts"
        resiliency:
          $ref: "#/components/schemas/ResiliencyType"
        tls:
          type: object
          properties:
            caPath:
              type: string
              example: "/etc/ssl/certs/ca.pem"
            certPath:
              type: string
              example: "/etc/ssl/certs/client.pem"
            certificateName:
              type: string
              example: "leader-client-cert"
            checkServerIdentity:
              type: object
              example: {}
            commonNameRegex:
              type: object
              additionalProperties: true
              example:
                pattern: ".*\\.example\\.com"
            disabled:
              type: boolean
              example: false
            passphrase:
              type: string
              example: "changeit"
            privKeyPath:
              type: string
              example: "/etc/ssl/private/client.key"
            rejectUnauthorized:
              type: boolean
              example: true
            requestCert:
              type: boolean
              example: true
            servername:
              type: string
              example: "leader.example.com"
          required:
            - disabled
        writeTimeout:
          type: number
          example: 30
      required:
        - host
        - port
    AppMode:
      type: string
      enum:
        - single
        - master
        - worker
        - edge
        - managed-edge
        - outpost
      example: worker
    InstanceSettingsSchema:
      oneOf:
        - type: object
          properties:
            cloudWorkspace:
              $ref: "#/components/schemas/CloudWorkspaceSchema"
            envRegex:
              type: string
              example: "^prod-.*$"
            group:
              type: string
              example: "default"
            id:
              type: string
              example: "instance-01H9ABCXYZ"
            master:
              $ref: "#/components/schemas/MasterSchema"
            mode:
              $ref: "#/components/schemas/AppMode"
            reportedDeploymentId:
              type: string
              example: "deploy-2025-10-03"
            tags:
              type: array
              items:
                type: string
              example:
                - "region:us-east-1"
                - "team:platform"
          required:
            - id
            - mode
        - type: object
          properties:
            bootstrapHost:
              type: string
              example: "bootstrap.example.com"
            id:
              type: string
              example: "instance-01H9BOOT"
    LookupVersions:
      type: object
      example: {}
    HBLeaderInfo:
      type: object
      properties:
        host:
          type: string
          example: "leader.internal.local"
        port:
          type: number
          example: 4200
        servername:
          type: string
          example: "leader.internal.local"
        tls:
          type: boolean
          example: true
      required:
        - host
        - port
    HBCriblInfo:
      type: object
      properties:
        config:
          type: object
          properties:
            featuresRev:
              type: string
              example: "42"
            hbPeriodSeconds:
              type: number
              example: 15
            logStreamEnv:
              type: string
              example: "prod"
            policyRev:
              type: string
              example: "102"
            version:
              type: string
              example: "4.12.2"
        deploymentId:
          type: string
          example: "deploy-2025-10-03"
        distMode:
          $ref: "#/components/schemas/AppMode"
        edgeNodes:
          type: number
          example: 3
        group:
          type: string
          example: "default"
        guid:
          type: string
          example: "6f1b2c3d-4e5f-6789-abcd-ef0123456789"
        installType:
          type: string
          example: "package"
        lookupVersions:
          $ref: "#/components/schemas/LookupVersions"
        master:
          $ref: "#/components/schemas/HBLeaderInfo"
        pid:
          type: number
          example: 12345
        startTime:
          type: number
          example: 1727985600000
        tags:
          type: array
          items:
            type: string
          example:
            - "region:us-east-1"
            - "team:platform"
        version:
          type: string
          example: "4.12.2"
      required:
        - config
        - distMode
        - group
        - guid
        - startTime
        - tags
    HeartbeatMetadata:
      type: object
      properties:
        aws:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            region:
              type: string
              example: "us-east-1"
            tags:
              type: object
              example:
                Environment: "prod"
                Owner: "observability"
            type:
              type: string
              example: "ec2"
            zone:
              type: string
              example: "us-east-1a"
          required:
            - enabled
            - region
            - type
            - zone
        hostOs:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
              example:
                - "10.0.1.23"
                - "fe80::1"
            enabled:
              type: boolean
              example: true
            id:
              type: string
              example: "host-01H9ABCD"
            version:
              type: string
              example: "Ubuntu 22.04"
          required:
            - addresses
            - enabled
            - id
            - version
        kube:
          type: object
          properties:
            enabled:
              type: boolean
              example: false
            namespace:
              type: string
              example: "observability"
            node:
              type: string
              example: "ip-10-0-1-23.ec2.internal"
            owner:
              type: object
              properties:
                kind:
                  type: string
                  example: "Deployment"
                name:
                  type: string
                  example: "log-collector"
              required:
                - kind
                - name
            pod:
              type: string
              example: "log-collector-7c8d9f5b6b-abcde"
            source:
              type: string
              example: "kubernetes"
          required:
            - enabled
            - namespace
            - node
            - pod
            - source
        os:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
              example:
                - "10.0.1.23"
            enabled:
              type: boolean
              example: true
            id:
              type: string
              example: "host-01H9ABCD"
            version:
              type: string
              example: "6.12.8"
          required:
            - addresses
            - enabled
            - id
            - version
    NodeProvidedInfo:
      type: object
      properties:
        architecture:
          type: string
          example: "x86_64"
        aws:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            region:
              type: string
              example: "us-east-1"
            tags:
              type: object
              example:
                Environment: "prod"
                Role: "worker"
            type:
              type: string
              example: "ec2"
            zone:
              type: string
              example: "us-east-1a"
          required:
            - enabled
            - region
            - type
            - zone
        conn_ip:
          type: string
          example: "10.0.1.23"
        cpus:
          type: number
          example: 8
        cribl:
          $ref: "#/components/schemas/HBCriblInfo"
        freeDiskSpace:
          type: number
          example: 53687091200
        hostOs:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
              example:
                - "10.0.1.23"
                - "fe80::1"
            enabled:
              type: boolean
              example: true
            id:
              type: string
              example: "host-01H9ABCD"
            version:
              type: string
              example: "Ubuntu 22.04"
          required:
            - addresses
            - enabled
            - id
            - version
        hostname:
          type: string
          example: "worker-1"
        isSaasWorker:
          type: boolean
          example: false
        kube:
          type: object
          properties:
            enabled:
              type: boolean
              example: false
            namespace:
              type: string
              example: "observability"
            node:
              type: string
              example: "ip-10-0-1-23.ec2.internal"
            owner:
              type: object
              properties:
                kind:
                  type: string
                  example: "Deployment"
                name:
                  type: string
                  example: "log-collector"
              required:
                - kind
                - name
            pod:
              type: string
              example: "log-collector-7c8d9f5b6b-abcde"
            source:
              type: string
              example: "kubernetes"
          required:
            - enabled
            - namespace
            - node
            - pod
            - source
        localTime:
          type: number
          example: 1727985600000
        metadata:
          $ref: "#/components/schemas/HeartbeatMetadata"
        node:
          type: string
          example: "node-abc123"
        os:
          oneOf:
            - type: object
              properties:
                addresses:
                  type: array
                  items:
                    type: string
                  example:
                    - "10.0.1.23"
                enabled:
                  type: boolean
                  example: true
                id:
                  type: string
                  example: "host-01H9ABCD"
                version:
                  type: string
                  example: "Ubuntu 22.04"
              required:
                - addresses
                - enabled
                - id
                - version
            - type: object
              properties:
                addresses:
                  type: array
                  items:
                    type: string
                  example:
                    - "10.0.1.23"
              required:
                - addresses
        platform:
          type: string
          example: "linux"
        release:
          type: string
          example: "6.12.8"
        totalDiskSpace:
          type: number
          example: 214748364800
        totalmem:
          type: number
          example: 34359738368
      required:
        - architecture
        - cpus
        - cribl
        - freeDiskSpace
        - hostname
        - node
        - platform
        - release
        - totalDiskSpace
        - totalmem
    NodeActiveUpgradeStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
      example: 1
    NodeFailedUpgradeStatus:
      type: integer
      enum:
        - 0
        - 1
      example: 0
    NodeSkippedUpgradeStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      example: 2
    NodeUpgradeState:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      example: 2
    NodeUpgradeStatus:
      type: object
      properties:
        active:
          $ref: "#/components/schemas/NodeActiveUpgradeStatus"
        failed:
          $ref: "#/components/schemas/NodeFailedUpgradeStatus"
        skipped:
          $ref: "#/components/schemas/NodeSkippedUpgradeStatus"
        state:
          $ref: "#/components/schemas/NodeUpgradeState"
        timestamp:
          type: number
          example: 1727985600000
      required:
        - state
        - timestamp
    MasterWorkerEntry:
      type: object
      properties:
        deployable:
          type: boolean
          example: true
        firstMsgTime:
          type: number
          example: 1727985600000
        group:
          type: string
          example: "default"
        id:
          type: string
          example: "worker-01H9ABCD"
        info:
          $ref: "#/components/schemas/NodeProvidedInfo"
        lastMetrics:
          type: object
          example:
            eventsProcessed: 125000
            cpuPercent: 42.5
            memPercent: 68.1
        lastMsgTime:
          type: number
          example: 1727985605000
        metadata:
          $ref: "#/components/schemas/HeartbeatMetadata"
        nodeUpgradeStatus:
          $ref: "#/components/schemas/NodeUpgradeStatus"
        status:
          type: string
          example: "online"
        type:
          type: string
          enum:
            - info
            - req
            - resp
          example: info
        workerProcesses:
          type: number
          example: 4
        workers:
          type: object
          properties:
            count:
              type: number
              example: 4
          required:
            - count
          example:
            count: 4
      required:
        - firstMsgTime
        - group
        - id
        - info
        - lastMsgTime
        - workerProcesses
    RestartResponse:
      type: object
      properties:
        id:
          type: string
          example: "worker-01H9ABCD"
        message:
          type: string
          example: "Restart initiated"
        status:
          type: string
          enum:
            - Error
            - Restarting
          example: Restarting
      required:
        - id
        - status
    DistributedSummary:
      type: object
      properties:
        groups:
          type: object
          properties:
            count:
              type: number
              example: 12
            destinations:
              type: number
              example: 48
            pipelines:
              type: number
              example: 36
            routes:
              type: number
              example: 24
            sources:
              type: number
              example: 30
          required:
            - count
            - destinations
            - pipelines
            - routes
            - sources
          example:
            count: 12
            destinations: 48
            pipelines: 36
            routes: 24
            sources: 30
        workers:
          type: object
          properties:
            alive:
              type: number
              example: 18
            confVersions:
              type: number
              example: 3
            count:
              type: number
              example: 20
            groups:
              type: number
              example: 4
            softwareVersions:
              type: number
              example: 2
            unhealthy:
              type: number
              example: 2
          required:
            - alive
            - confVersions
            - count
            - groups
            - softwareVersions
            - unhealthy
          example:
            alive: 18
            confVersions: 3
            count: 20
            groups: 4
            softwareVersions: 2
            unhealthy: 2
      required:
        - groups
        - workers
    DistributedUpgradeRequest:
      type: object
      additionalProperties: false
      properties:
        packageUrls:
          title: Custom Path
          description: Provide your own URLs or local paths for platform-specific Cribl
            packages
          type: array
          items:
            type: object
            required:
              - packageUrl
            properties:
              packageUrl:
                type: string
                title: Platform-Specific Package Location
                description: Package HTTP URL or local path
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)
                minLength: 1
                example: "https://downloads.example.com/cribl-5.2.0-abcdef12-linux-x64.tgz"
              packageHashUrl:
                type: string
                title: Package Hash Location
                description: Package's MD5 or SHA256 hash HTTP URL or local path
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)\.(tgz|msi)?\.(md5|sha256)
                minLength: 1
                example: "https://downloads.example.com/cribl-5.2.0-abcdef12-linux-x64.tgz.sha256"
        upgradePercentage:
          type: number
          title: Percentage of workers to upgrade
          description: Percentage of the total worker nodes on the group to run the
            upgrade on
          minimum: 0.00001
          maximum: 1
          default: 1
          example: 0.5
        workerRetries:
          type: number
          title: Worker node connect retry count
          description: Number of times to retry conncecting to a worker node before
            marking the upgrade as failed.
          minimum: 1
          default: 5
          example: 5
        workerRetryDelay:
          type: number
          title: Worker node connect retry delay
          description: Delay between retries
          minimum: 100
          default: 1000
          example: 1000
        upgradeMode:
          type: string
          title: Upgrade mode
          enum:
            - rolling
            - regular
            - batch
          example: rolling
        versionTo:
          type: string
          title: Exact version to match
          example: "5.2.0"
    ExprLibEntry:
      type: object
      properties:
        context:
          type: object
          additionalProperties: true
          example:
            requestId: "a1b2c3"
            env: "prod"
        evalType:
          type: string
          example: "javascript"
        expr:
          type: string
          description: JavaScript expression to evaluate
          example: "event.status >= 500"
        id:
          type: string
          example: "expr-parse-status"
        pack:
          type: string
          example: "pack-observability"
        result:
          type: object
          additionalProperties: true
          example:
            matches: true
            count: 42
        unprotected:
          type: boolean
          example: false
      required:
        - expr
        - id
    Function:
      type: object
      properties:
        __conf:
          type: object
          additionalProperties: true
          example:
            timeoutSec: 30
            retries: 3
        __filename:
          type: string
          example: "functions/parse.js"
        disabled:
          type: boolean
          example: false
        group:
          type: string
          example: "default"
        id:
          type: string
          example: "func-parse"
        initTime:
          type: number
          example: 1727985600000
        loadTime:
          type: number
          example: 1727985601000
        modTime:
          type: number
          example: 1727985602000
        name:
          type: string
          example: "parse"
        uischema:
          type: object
          additionalProperties: true
          example: {}
        version:
          type: string
          example: "1.0.0"
      required:
        - __conf
        - __filename
        - disabled
        - group
        - id
        - initTime
        - loadTime
        - modTime
        - name
        - uischema
        - version
    Condition:
      $ref: "#/components/schemas/Function"
      example:
        id: "cond-high-error-rate"
        name: "HighErrorRate"
        group: "default"
        version: "1.0.0"
        disabled: false
        __filename: "conditions/highErrorRate.js"
        __conf:
          threshold: 0.05
        initTime: 1727985600000
        loadTime: 1727985601000
        modTime: 1727985602000
        uischema: {}
    HealthStatus:
      type: object
      required:
        - status
        - startTime
      properties:
        role:
          type: string
          enum:
            - primary
            - standby
          example: primary
        status:
          type: string
          enum:
            - healthy
            - shutting down
            - standby
          example: healthy
        startTime:
          type: number
          example: 1727985600000
    JobState:
      type: object
      properties:
        id:
          type: string
          example: "job-01H9ABCD"
        state:
          type: string
          example: "running"
      required:
        - id
        - state
    RunnableJobCollection:
      required:
        - collector
        - run
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: "job-collect-apache-logs"
        description:
          type: string
          title: Description
          example: "Collect Apache access logs from S3 and index to ClickHouse"
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          example: collection
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: "8h"
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for
            example, aws*) are allowed. This is useful when discovery returns
            sensitive fields that should not be exposed in the Jobs user
            interface.
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
          example:
            - "aws.secret*"
            - "creditcard*"
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to
            restart during job execution
          default: false
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: "main"
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "0 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be
                running at any time
              default: 1
              minimum: 1
              example: 2
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits
              default: true
              example: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              type: object
              required:
                - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 2
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to
                    seconds if not specified (examples: 30, 45s, 15m). Enter 0
                    for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "30m"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                  example: "full"
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: "relative"
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 1727982000
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 1727985600
                timestampTimezone: {}
                timeWarning:
                  type: object
                  properties: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                  example: 'source="s3://prod-logs/apache/*" AND status>=500'
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "1MB"
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "10MB"
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - "env:prod"
            - "team:platform"
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled, tasks are created and run by the same Worker Node
          default: false
          example: false
        collector:
          type: object
          required:
            - type
            - conf
          properties:
            type:
              type: string
              title: Collector type
              description: The type of collector to run
              example: "s3"
            conf:
              type: object
              title: Collector-specific settings
              properties: {}
              example:
                bucket: "prod-logs"
                prefix: "apache/"
                region: "us-east-1"
            destructive:
              type: boolean
              title: Destructive
              description: Delete any files collected (where applicable)
              default: false
              example: false
            encoding:
              type: string
              title: Encoding
              description: Character encoding to use when parsing ingested data. When not set,
                @{product} will default to UTF-8 but may incorrectly interpret
                multi-byte characters.
              example: "utf8"
        input:
          type: object
          properties:
            type:
              type: string
              enum:
                - collection
              default: collection
              example: collection
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event-breaking rulesets that will be applied, in order,
                to the input data stream
              items:
                type: string
              example:
                - "default"
            staleChannelFlushMs:
              type: number
              title: Event Breaker buffer timeout (ms)
              description: How long (in milliseconds) the Event Breaker will wait for new data
                to be sent to a specific channel before flushing the data stream
                out, as is, to the Pipelines
              default: 10000
              minimum: 10
              maximum: 43200000
              example: 10000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: Send events to normal routing and event processing. Disable to
                select a specific Pipeline/Destination combination.
              default: true
              example: true
            preprocess:
              type: object
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output
                    (stdout)
                  example: "jq"
                args:
                  type: array
                  title: Arguments
                  description: Arguments to be added to the custom command
                  items:
                    type: string
                  example:
                    - "-r"
                    - ".message"
            throttleRatePerSec:
              type: string
              title: Throttling
              description: "Rate (in bytes per second) to throttle while writing to an output.
                Accepts values with multiple-byte units, such as KB, MB, and GB.
                (Example: 42 MB) Default value of 0 specifies no throttling."
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
              example: "50 MB"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Field Name
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes
                      or backticks. (Can evaluate to a constant.)
              example:
                - name: "env"
                  value: "'prod'"
                - name: "source"
                  value: "'s3'"
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results
              example: "parse_apache"
            output:
              type: string
              title: Destination
              description: Destination to send results to
              example: "ch/default"
        run:
          type: object
          required:
            - mode
          properties:
            rescheduleDroppedTasks:
              type: boolean
              title: Reschedule tasks
              description: Reschedule tasks that failed with non-fatal errors
              default: true
              example: true
            maxTaskReschedule:
              type: number
              title: Task reschedule limit
              description: Maximum number of times a task can be rescheduled
              default: 1
              minimum: 1
              example: 2
            logLevel:
              type: string
              title: Log level
              description: Level at which to set task logging
              enum:
                - error
                - warn
                - info
                - debug
                - silly
              default: info
              example: info
            jobTimeout:
              title: Job timeout
              type: string
              description: "Maximum time the job is allowed to run. Time unit defaults to
                seconds if not specified (examples: 30, 45s, 15m). Enter 0 for
                unlimited time."
              pattern: \d+[sm]?$
              default: "0"
              example: "30m"
            mode:
              type: string
              title: Mode
              description: Job run mode. Preview will either return up to N matching results,
                or will run until capture time T is reached. Discovery will
                gather the list of files to turn into streaming tasks, without
                running the data collection job. Full Run will run the
                collection job.
              default: list
              enum:
                - list
                - preview
                - run
              example: run
            timeRangeType:
              type: string
              title: Time range
              default: relative
              enum:
                - absolute
                - relative
              example: relative
            earliest:
              type: number
              title: Earliest
              description: Earliest time to collect data for the selected timezone
              example: 1727982000
            latest:
              type: number
              title: Latest
              description: Latest time to collect data for the selected timezone
              example: 1727985600
            timestampTimezone:
              type: string
              title: Range timezone
              description: Timezone to use for Earliest and Latest times
              default: UTC
              example: "UTC"
            timeWarning:
              type: object
              properties: {}
              example: {}
            expression:
              type: string
              title: Filter
              description: A filter for tokens in the provided collect path and/or the events
                being collected
              default: "true"
              example: 'status>=500'
            minTaskSize:
              type: string
              title: Lower task bundle size
              description: >-
                Limits the bundle size for small tasks. For example,
                        if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
              default: 1MB
              pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
              example: "1MB"
            maxTaskSize:
              type: string
              title: Upper task bundle size
              description: >-
                Limits the bundle size for files above the lower task bundle
                size. For example, if your upper bundle size is 10MB,
                        you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
              default: 10MB
              pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
              example: "10MB"
            discoverToRoutes:
              type: boolean
              title: Send to Routes
              description: Send discover results to Routes
              default: false
              example: false
            capture:
              type: object
              title: Capture Settings
              properties:
                duration:
                  type: number
                  title: Capture time (sec)
                  description: Amount of time to keep capture open, in seconds
                  default: 60
                  example: 60
                maxEvents:
                  type: number
                  title: Capture up to N events
                  description: Maximum number of events to capture
                  minimum: 1
                  maximum: 10000
                  default: 100
                  example: 500
                level:
                  type: string
                  title: Where to capture
                  enum:
                    - "0"
                    - "1"
                    - "2"
                    - "3"
                  default: "0"
                  example: "1"
      type: object
    RunnableJobExecutor:
      required:
        - executor
        - run
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: "job-exec-maintenance"
        description:
          type: string
          title: Description
          example: "Run maintenance SQL on ClickHouse"
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          example: executor
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: "2h"
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for
            example, aws*) are allowed. This is useful when discovery returns
            sensitive fields that should not be exposed in the Jobs user
            interface.
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
          example:
            - "password"
            - "secret*"
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to
            restart during job execution
          default: false
          example: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: "main"
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "0 3 * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be
                running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits
              default: true
              example: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              type: object
              required:
                - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to
                    seconds if not specified (examples: 30, 45s, 15m). Enter 0
                    for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "15m"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                  example: "run"
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: "relative"
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 1727982000
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 1727985600
                timestampTimezone: {}
                timeWarning:
                  type: object
                  properties: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                  example: 'table="apache_logs"'
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "1MB"
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "10MB"
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - "env:prod"
            - "maintenance"
        executor:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Executor type
              description: The type of executor to run
              example: "sql"
            storeTaskResults:
              type: boolean
              title: Store task results
              description: Determines whether or not to write task results to disk
              default: true
              example: true
            conf:
              type: object
              title: Executor-specific settings
              properties: {}
              example:
                query: "OPTIMIZE TABLE apache_logs FINAL"
        run:
          type: object
          properties:
            rescheduleDroppedTasks:
              type: boolean
              title: Reschedule tasks
              description: Reschedule tasks that failed with non-fatal errors
              default: true
              example: true
            maxTaskReschedule:
              type: number
              title: Task reschedule limit
              description: Maximum number of times a task can be rescheduled
              default: 1
              minimum: 1
              example: 1
            logLevel:
              type: string
              title: Log level
              description: Level at which to set task logging
              enum:
                - error
                - warn
                - info
                - debug
                - silly
              default: info
              example: info
            jobTimeout:
              title: Job timeout
              type: string
              description: "Maximum time the job is allowed to run. Time unit defaults to
                seconds if not specified (examples: 30, 45s, 15m). Enter 0
                for unlimited time."
              pattern: \d+[sm]?$
              default: "0"
              example: "10m"
      type: object
    RunnableJobScheduledSearch:
      required:
        - savedQueryId
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: "job-sched-errors-search"
        description:
          type: string
          title: Description
          example: "Scheduled search for 5xx errors"
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          example: scheduledSearch
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This
            also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: "24h"
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the
            Worker Group's finished job artifacts limit. Artifacts will be
            removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for
            example, aws*) are allowed. This is useful when discovery returns
            sensitive fields that should not be exposed in the Jobs user
            interface.
          minItems: 0
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
          example:
            - "password"
            - "secret*"
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to
            restart during job execution
          default: false
          example: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If
            empty, will be enabled everywhere.
          example: "main"
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/15 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be
                running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the
                system is hitting concurrency limits
              default: true
              example: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              type: object
              required:
                - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to
                    seconds if not specified (examples: 30, 45s, 15m). Enter 0
                    for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "5m"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results,
                    or will run until capture time T is reached. Discovery
                    will gather the list of files to turn into streaming
                    tasks, without running the data collection job. Full Run
                    will run the collection job.
                  default: list
                  example: "run"
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: "relative"
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 1727982000
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 1727985600
                timestampTimezone: {}
                timeWarning:
                  type: object
                  properties: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events
                    being collected
                  default: "true"
                  example: 'status>=500'
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "1MB"
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: "10MB"
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
          example:
            - "env:prod"
            - "search"
        savedQueryId:
          type: string
          title: ID of the SavedQuery
          description: Identifies which search query to run
          example: "savedq-01H9SEARCH"
      type: object
    RunnableJob:
      oneOf:
        - $ref: "#/components/schemas/RunnableJobCollection"
        - $ref: "#/components/schemas/RunnableJobExecutor"
        - $ref: "#/components/schemas/RunnableJobScheduledSearch"
      example:
        id: "job-collect-apache-logs"
        type: "collection"
        description: "Collect Apache access logs from S3 and index to ClickHouse"
        collector:
          type: "s3"
          conf:
            bucket: "prod-logs"
            prefix: "apache/"
            region: "us-east-1"
        run:
          mode: "run"
          logLevel: "info"
    State:
      type: object
      additionalProperties: true
      example:
        phase: "RUNNING"
        progress: 0.42
    JobStatus:
      type: object
      properties:
        reason:
          type: object
          additionalProperties: true
          example:
            message: "Waiting for resources"
        state:
          $ref: "#/components/schemas/State"
      required:
        - state
    JobInfo:
      type: object
      properties:
        args:
          $ref: "#/components/schemas/RunnableJob"
        id:
          type: string
          example: "job-01H9XYZ"
        keep:
          type: boolean
          example: true
        status:
          $ref: "#/components/schemas/JobStatus"
      required:
        - args
        - id
        - status
    AUTH_PROVIDER:
      type: string
      enum:
        - token
        - aws-iam
        - aws-ec2
      example: token
    SECRET_PROVIDER:
      type: string
      enum:
        - local
        - vault
        - aws-kms
      example: vault
    AWSKMSServiceConfig:
      type: object
      properties:
        kmsKeyArn:
          type: string
          example: "arn:aws:kms:us-east-1:123456789012:key/abcd1234-5678-90ab-cdef-1234567890ab"
        region:
          type: string
          example: "us-east-1"
      required:
        - kmsKeyArn
        - region
    VaultKMSTlsClientConfig:
      type: object
      properties:
        caPath:
          type: string
          example: "/etc/ssl/certs/ca.pem"
        certPath:
          type: string
          example: "/etc/ssl/certs/client.pem"
        certificateName:
          type: string
          example: "vault-client"
        disabled:
          type: boolean
          example: false
        passphrase:
          type: string
          example: "changeit"
        privKeyPath:
          type: string
          example: "/etc/ssl/private/client.key"
        rejectUnauthorized:
          type: boolean
          example: true
        servername:
          type: string
          example: "vault.example.com"
      required:
        - disabled
    KMSProviderConfig:
      type: object
      properties:
        auth:
          oneOf:
            - type: object
              properties:
                assumeRoleArn:
                  type: string
                  example: "arn:aws:iam::123456789012:role/KMSAccessRole"
                assumeRoleExternalId:
                  type: string
                  example: "external-abc123"
                awsApiKey:
                  type: string
                  example: "AKIAIOSFODNN7EXAMPLE"
                awsAuthenticationMethod:
                  type: string
                  example: "aws-iam"
                awsSecretKey:
                  type: string
                  example: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
                enableAssumeRole:
                  type: boolean
                  example: true
                provider:
                  $ref: "#/components/schemas/AUTH_PROVIDER"
                token:
                  type: string
                  example: "vault-token-xyz"
                vaultAWSIAMServerID:
                  type: string
                  example: "vault.example.com"
                vaultRole:
                  type: string
                  example: "kms-access"
              required:
                - provider
                - vaultAWSIAMServerID
            - type: object
              properties:
                assumeRoleArn:
                  type: string
                  example: "arn:aws:iam::123456789012:role/KMSAccessRole"
                assumeRoleExternalId:
                  type: string
                  example: "external-abc123"
                awsApiKey:
                  type: string
                  example: "AKIAIOSFODNN7EXAMPLE"
                awsAuthenticationMethod:
                  type: string
                  example: "aws-iam"
                awsSecretKey:
                  type: string
                  example: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
                enableAssumeRole:
                  type: boolean
                  example: false
        enableHealthCheck:
          type: boolean
          example: true
        healthCheckEndpoint:
          type: string
          example: "/v1/sys/health"
        namespace:
          type: string
          example: "admin/"
        provider:
          $ref: "#/components/schemas/SECRET_PROVIDER"
        secretDir:
          type: string
          example: "/etc/cribl/secrets"
        service:
          $ref: "#/components/schemas/AWSKMSServiceConfig"
        tls:
          $ref: "#/components/schemas/VaultKMSTlsClientConfig"
        url:
          type: string
          example: "https://vault.example.com"
      required:
        - enableHealthCheck
        - provider
    KMSHealthStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      example: 2
    KMSHealthTest:
      type: object
      properties:
        details:
          type: object
          additionalProperties: true
          example:
            endpoint: "/v1/sys/health"
            latencyMs: 120
        status:
          $ref: "#/components/schemas/KMSHealthStatus"
      required:
        - status
    KMSHealth:
      type: object
      properties:
        auth:
          $ref: "#/components/schemas/KMSHealthTest"
        connection:
          $ref: "#/components/schemas/KMSHealthTest"
        system:
          $ref: "#/components/schemas/KMSHealthTest"
      required:
        - auth
        - connection
        - system
      example:
        auth:
          status: 2
          details:
            tokenValid: true
        connection:
          status: 1
          details:
            reachable: true
            rttMs: 45
        system:
          status: 0
          details:
            maintenance: false
    License:
      type: object
      properties:
        cls:
          type: string
          enum:
            - prod
            - trial
            - free
          example: "prod"
        email:
          type: string
          example: "owner@example.com"
        exp:
          type: number
          example: 1767225600
        f_ph:
          type: number
          example: 1000
        f_phg:
          type: number
          example: 500
        guid:
          type: string
          example: "2b5a7c0f-3e2d-4c9a-8f10-1a2b3c4d5e6f"
        iat:
          type: number
          example: 1727990000
        id:
          type: string
          example: "LIC-01H9XYZ"
        iss:
          type: string
          example: "Cribl, Inc."
        license:
          type: string
          example: "CRIBL-ENT-ABCDE-12345-67890-FGHIJ"
        quota:
          type: number
          example: 100000000000
        sub:
          type: string
          example: "Acme Corp"
        title:
          type: string
          example: "Cribl Stream Enterprise"
      required:
        - cls
        - email
        - exp
        - f_ph
        - f_phg
        - guid
        - iat
        - id
        - iss
        - license
        - quota
        - title
    LicenseRequest:
      type: object
      properties:
        license:
          type: string
          example: "CRIBL-ENT-ABCDE-12345-67890-FGHIJ"
      required:
        - license
    DailyUsageMetrics:
      type: object
      properties:
        droppedBytes:
          type: number
          example: 1024
        endTime:
          type: number
          example: 1728072000
        exemptedLicenseInBytes:
          type: number
          example: 0
        inBytes:
          type: number
          example: 5000000000
        inEvents:
          type: number
          example: 12000000
        inMetricsEvents:
          type: number
          example: 250000
        outBytes:
          type: number
          example: 4800000000
        outEvents:
          type: number
          example: 11800000
        startTime:
          type: number
          example: 1727985600
      required:
        - endTime
        - exemptedLicenseInBytes
        - inBytes
        - inEvents
        - outBytes
        - outEvents
        - startTime
    LoggerEntry:
      type: object
      properties:
        canDelete:
          type: boolean
          example: false
        id:
          type: string
          example: "default"
        level:
          type: string
          example: "info"
      required:
        - id
        - level
    LoggerConfig:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: "#/components/schemas/LoggerEntry"
          example:
            - id: "default"
              level: "info"
              canDelete: false
            - id: "http"
              level: "warn"
              canDelete: true
        defaultRedactFields:
          type: array
          items:
            type: string
          example:
            - "authorization"
            - "password"
        id:
          type: string
          example: "main"
        limitRate:
          type: number
          example: 1000
        maxSizeBytes:
          type: number
          example: 10485760
        redactFields:
          type: array
          items:
            type: string
          example:
            - "apikey"
            - "secret"
        redactLabel:
          type: string
          example: "[REDACTED]"
      required:
        - channels
        - id
        - limitRate
        - maxSizeBytes
        - redactFields
        - redactLabel
    LogFileInfo:
      type: object
      properties:
        id:
          type: string
          example: "main-log"
        path:
          type: string
          example: "/var/log/cribl/stream.log"
      required:
        - id
        - path
    InstallWarnings: {}
    PackInstallInfo:
      type: object
      properties:
        author:
          type: string
          example: "Cribl"
        description:
          type: string
          example: "Parsers and routes for Apache logs"
        displayName:
          type: string
          example: "Apache Logs Pack"
        exports:
          type: array
          items:
            type: string
          example:
            - "pipelines/parse_apache"
            - "routes/apache_to_clickhouse"
        id:
          type: string
          example: "pack-apache-logs"
        inputs:
          type: number
          example: 2
        isDisabled:
          type: boolean
          example: false
        minLogStreamVersion:
          type: string
          example: "4.10.0"
        outputs:
          type: number
          example: 1
        settings:
          type: object
          additionalProperties: true
          example: {}
        source:
          type: string
          example: "https://github.com/org/packs/apache"
        spec:
          type: string
          example: "1.0.0"
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
            domain:
              type: array
              items:
                type: string
            streamtags:
              type: array
              items:
                type: string
            technology:
              type: array
              items:
                type: string
          required:
            - dataType
            - domain
            - streamtags
            - technology
          example:
            dataType: ["logs"]
            domain: ["web"]
            streamtags: ["env:prod"]
            technology: ["apache"]
        version:
          type: string
          example: "2.3.1"
        warnings:
          $ref: "#/components/schemas/InstallWarnings"
      required:
        - id
        - warnings
    PackRequestBody:
      type: object
      properties:
        allowCustomFunctions:
          type: boolean
          example: false
        author:
          type: string
          example: "Cribl"
        description:
          type: string
          example: "Parsers and routes for Apache logs"
        displayName:
          type: string
          example: "Apache Logs Pack"
        exports:
          type: array
          items:
            type: string
          example:
            - "pipelines/parse_apache"
            - "routes/apache_to_clickhouse"
        force:
          type: boolean
          example: false
        id:
          type: string
          example: "pack-apache-logs"
        isDisabled:
          type: boolean
          example: false
        inputs:
          type: number
          example: 2
        minLogStreamVersion:
          type: string
          example: "4.10.0"
        outputs:
          type: number
          example: 1
        source:
          type: string
          example: "https://github.com/org/packs/apache"
        spec:
          type: string
          example: "1.0.0"
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
            domain:
              type: array
              items:
                type: string
            streamtags:
              type: array
              items:
                type: string
            technology:
              type: array
              items:
                type: string
          required:
            - dataType
            - domain
            - streamtags
            - technology
          example:
            dataType: ["logs"]
            domain: ["web"]
            streamtags: ["env:prod"]
            technology: ["apache"]
        version:
          type: string
          example: "2.3.1"
      required:
        - id
    PackInfo:
      type: object
      properties:
        author:
          type: string
          example: "Cribl"
        description:
          type: string
          example: "Parsers and routes for Apache logs"
        displayName:
          type: string
          example: "Apache Logs Pack"
        exports:
          type: array
          items:
            type: string
          example:
            - "pipelines/parse_apache"
            - "routes/apache_to_clickhouse"
        id:
          type: string
          example: "pack-apache-logs"
        inputs:
          type: number
          example: 2
        isDisabled:
          type: boolean
          example: false
        minLogStreamVersion:
          type: string
          example: "4.10.0"
        outputs:
          type: number
          example: 1
        settings:
          type: object
          additionalProperties: true
          example: {}
        source:
          type: string
          example: "https://github.com/org/packs/apache"
        spec:
          type: string
          example: "1.0.0"
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
            domain:
              type: array
              items:
                type: string
            streamtags:
              type: array
              items:
                type: string
            technology:
              type: array
              items:
                type: string
          required:
            - dataType
            - domain
            - streamtags
            - technology
          example:
            dataType: ["logs"]
            domain: ["web"]
            streamtags: ["env:prod"]
            technology: ["apache"]
        version:
          type: string
          example: "2.3.1"
      required:
        - id
    PackClone:
      type: object
      properties:
        dest:
          type: string
          example: "group-prod"
        dstGroups:
          type: array
          items:
            type: string
          example:
            - "group-prod"
            - "group-dr"
        force:
          type: boolean
          example: false
        isDisabled:
          type: boolean
          example: false
        packs:
          type: array
          items:
            type: string
          example:
            - "pack-apache-logs"
            - "pack-security"
        srcGroup:
          type: string
          example: "group-staging"
      required:
        - dstGroups
        - packs
        - srcGroup
    ReferencedEntity:
      type: object
      properties:
        id:
          type: string
          example: "pipeline-parse_apache"
        type:
          type: string
          example: "pipeline"
      required:
        - id
        - type
    ReferencingEntity:
      type: object
      properties:
        id:
          type: string
          example: "route-apache_to_clickhouse"
        refs:
          type: array
          items:
            $ref: "#/components/schemas/ReferencedEntity"
          example:
            - id: "pipeline-parse_apache"
              type: "pipeline"
            - id: "destination-clickhouse"
              type: "output"
        type:
          type: string
          example: "route"
      required:
        - id
        - refs
        - type
    PublishPackToGitStatusType:
      type: string
      enum:
        - error
        - success
        - noop
      example: success
    PublishPackResponse:
      type: object
      properties:
        git:
          type: object
          properties:
            branch:
              type: string
              example: "main"
            commitHash:
              type: string
              example: "4b17c8d4"
            commitMessage:
              type: string
              example: "Publish Apache Logs Pack v2.3.1"
          required:
            - branch
            - commitHash
            - commitMessage
        id:
          type: string
          example: "pack-apache-logs"
        message:
          type: string
          example: "Pack published successfully"
        source:
          type: string
          example: "git"
        status:
          $ref: "#/components/schemas/PublishPackToGitStatusType"
      required:
        - id
    PreviewDataParams:
      type: object
      properties:
        cpuProfile:
          type: boolean
          example: false
        dropped:
          type: boolean
          example: false
        enhanceMetricsOutput:
          type: boolean
          example: true
        events:
          type: array
          items:
            type: object
            additionalProperties: true
          example:
            - _raw: "127.0.0.1 - - [03/Oct/2025:12:00:00 +0000] \"GET /health HTTP/1.1\" 200 2"
              host: "web-1"
        inputId:
          type: string
          example: "input:syslog-01"
        level:
          type: number
          example: 2
        memory:
          type: number
          example: 256
        mode:
          type: string
          enum:
            - pipe
            - route
            - routeAndSend
          example: routeAndSend
        pipelineId:
          type: string
          example: "parse_apache"
        sampleId:
          type: string
          example: "sample-01H9XYZ"
        samplePipelineId:
          type: string
          example: "pipeline-sample"
        timeout:
          type: number
          example: 30
      required:
        - mode
        - pipelineId
        - sampleId
    ProcessEntry:
      type: object
      properties:
        env:
          type: object
          additionalProperties: true
          example:
            NODE_ENV: "production"
            LOG_LEVEL: "info"
        id:
          type: string
          example: "proc-ingester"
        pid:
          type: number
          example: 1234
        restartOnExit:
          type: boolean
          example: true
        restarts:
          type: number
          example: 2
        startTime:
          type: number
          example: 1727985600000
        type:
          type: string
          example: "worker"
      required:
        - id
        - restartOnExit
        - restarts
        - startTime
        - type
    GitCommitSummary:
      type: object
      properties:
        author:
          type: object
          properties:
            email:
              type: string
              example: "dev@example.com"
            name:
              type: string
              example: "Dev Ops"
          required:
            - email
            - name
        branch:
          type: string
          example: "main"
        commit:
          type: string
          example: "4b17c8d4"
        files:
          type: object
          properties:
            created:
              type: array
              items:
                type: string
              example:
                - "pipelines/new_pipeline.json"
            deleted:
              type: array
              items:
                type: string
              example:
                - "routes/old_route.json"
            modified:
              type: array
              items:
                type: string
              example:
                - "routes/apache_to_clickhouse.json"
                - "pipelines/parse_apache.json"
            renamed:
              type: array
              items:
                type: string
              example:
                - "README.md -> docs/README.md"
        summary:
          type: object
          properties:
            changes:
              type: number
              example: 0
            deletions:
              type: number
              example: 1
            insertions:
              type: number
              example: 2
          required:
            - changes
            - deletions
            - insertions
      required:
        - author
        - branch
        - commit
        - files
        - summary
    ProjectGitCommitParams:
      type: object
      properties:
        effective:
          type: boolean
          example: true
        message:
          type: string
          example: "Fix route naming and update pipeline mapping"
      required:
        - message
    GitFile:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
          example:
            - name: "pipelines/parse_apache.json"
              state: "modified"
        name:
          type: string
          example: "routes/apache_to_clickhouse.json"
        state:
          type: string
          example: "modified"
      required:
        - name
    GitFilesResponse:
      type: object
      properties:
        commitMessage:
          type: object
          additionalProperties: true
          example:
            message: "Update routes and pipelines"
        count:
          type: number
          example: 3
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
          example:
            - name: "routes/apache_to_clickhouse.json"
              state: "modified"
            - name: "pipelines/parse_apache.json"
              state: "modified"
            - name: "README.md"
              state: "created"
      required:
        - commitMessage
        - count
        - items
    GitRevertResult:
      type: object
      properties:
        audit:
          type: object
          properties:
            files:
              type: object
              properties:
                created:
                  type: array
                  items:
                    type: string
                  example:
                    - "README.md"
                deleted:
                  type: array
                  items:
                    type: string
                  example:
                    - "routes/old_route.json"
                modified:
                  type: array
                  items:
                    type: string
                  example:
                    - "pipelines/parse_apache.json"
                renamed:
                  type: array
                  items:
                    type: string
                  example:
                    - "docs/OLD.md -> docs/NEW.md"
            group:
              type: string
              example: "default"
            id:
              type: string
              example: "revert-01H9XYZ"
          required:
            - files
            - group
            - id
        reverted:
          type: boolean
          example: true
      required:
        - audit
        - reverted
    LicenseLimits:
      type: object
      properties:
        edge_groups:
          type: number
          example: 10
        edge_procs:
          type: number
          example: 100
        kms:
          type: number
          example: 1
        lake_ddss:
          type: number
          example: 5
        lakehouse:
          type: number
          example: 1
        leader_resiliency:
          type: number
          example: 1
        max_executors_per_search:
          type: number
          example: 10
        notifications:
          type: number
          example: 100
        persistent_queue:
          type: number
          example: 1
        projects:
          type: number
          example: 50
        rbac:
          type: number
          example: 1
        remote_auth:
          type: number
          example: 1
        remote_git:
          type: number
          example: 1
        s3_bundle:
          type: number
          example: 1
        search_acceleration:
          type: number
          example: 1
        search_groups:
          type: number
          example: 5
        system_email:
          type: number
          example: 1
        worker_groups:
          type: number
          example: 3
        worker_procs:
          type: number
          example: 12
      required:
        - rbac
        - remote_auth
        - remote_git
        - worker_groups
        - worker_procs
    LicenseInfo:
      type: object
      properties:
        email:
          type: string
          example: "owner@example.com"
        isRegistered:
          type: boolean
          example: true
        isSplunkApp:
          type: boolean
          example: false
        limits:
          $ref: "#/components/schemas/LicenseLimits"
        type:
          type: string
          enum:
            - prod
            - trial
            - free
          example: "prod"
      required:
        - isRegistered
        - limits
        - type
    SystemConf:
      type: object
      properties:
        installType:
          type: string
          example: "package"
        restart:
          type: string
          example: "required"
        upgrade:
          type: string
          example: "available"
      required:
        - installType
        - restart
        - upgrade
    SystemInfo:
      type: object
      properties:
        BUILD:
          type: object
          additionalProperties: true
          example:
            commit: "4b17c8d4"
            branch: "main"
        apiPort:
          type: number
          example: 9000
        conf:
          type: object
          properties:
            confVersion:
              type: string
              example: "2025-10-03T12:00:00Z"
            inputs:
              type: number
              example: 12
            name:
              type: string
              example: "default"
            outputs:
              type: number
              example: 8
            pipelines:
              type: number
              example: 25
            routes:
              type: number
              example: 30
            rules:
              type: number
              example: 10
          required:
            - inputs
            - outputs
            - pipelines
            - routes
            - rules
        configPath:
          type: string
          example: "/opt/cribl/local"
        cpus:
          type: array
          items:
            type: object
            properties:
              model:
                type: string
              speed:
                type: number
              times:
                type: object
                additionalProperties: true
            required:
              - model
              - speed
              - times
          example:
            - model: "Intel(R) Xeon(R)"
              speed: 3200
              times:
                user: 123456
                sys: 78910
        diskUsage:
          type: object
          properties:
            bytesAvailable:
              type: number
              example: 50000000000
            bytesUsed:
              type: number
              example: 25000000000
            diskPath:
              type: string
              example: "/opt/cribl"
            totalDiskSize:
              type: number
              example: 75000000000
          required:
            - bytesAvailable
            - bytesUsed
            - diskPath
            - totalDiskSize
        distMode:
          $ref: "#/components/schemas/AppMode"
        env:
          type: object
          example:
            NODE_ENV: "production"
        guid:
          type: string
          example: "6f1b2c3d-4e5f-6789-abcd-ef0123456789"
        hasCloudWorkspace:
          type: boolean
          example: true
        hostname:
          type: string
          example: "worker-1"
        installPath:
          type: string
          example: "/opt/cribl"
        isCriblSandbox:
          type: boolean
          example: false
        isFedRampEnabled:
          type: boolean
          example: false
        isFipsEnabled:
          type: boolean
          example: false
        license:
          $ref: "#/components/schemas/LicenseInfo"
        limits:
          type: object
          properties:
            samples:
              type: object
              properties:
                maxSize:
                  type: string
                  example: "10MB"
              required:
                - maxSize
          required:
            - samples
        loadavg:
          type: array
          items:
            type: number
          example:
            - 0.15
            - 0.22
            - 0.30
        memory:
          type: object
          properties:
            free:
              type: number
              example: 17179869184
            total:
              type: number
              example: 34359738368
          required:
            - free
            - total
        messages:
          type: array
          items:
            $ref: "#/components/schemas/BulletinMessage"
          example: []
        net:
          type: object
          additionalProperties: true
          example: {}
        os:
          type: object
          properties:
            arch:
              type: string
              example: "x64"
            endianness:
              type: string
              example: "LE"
            platform:
              type: string
              example: "linux"
            release:
              type: string
              example: "6.12.8"
            type:
              type: string
              example: "Linux"
          required:
            - arch
            - endianness
            - platform
            - release
            - type
        systemConf:
          $ref: "#/components/schemas/SystemConf"
        uptime:
          type: number
          example: 86400
        version:
          type: string
          example: "4.12.2-4b17c8d4"
        workerProcesses:
          type: number
          example: 4
      required:
        - BUILD
        - apiPort
        - conf
        - configPath
        - cpus
        - diskUsage
        - distMode
        - env
        - guid
        - hostname
        - installPath
        - license
        - limits
        - loadavg
        - memory
        - messages
        - net
        - os
        - systemConf
        - uptime
        - version
        - workerProcesses
    Diag:
      type: object
      properties:
        id:
          type: string
          example: "diag-bundle-2025-10-06-123456"
        modTime:
          type: number
          example: 1730832000
        path:
          type: string
          example: "/var/cribl/diag/diag-bundle-2025-10-06-123456.tar.gz"
        size:
          type: number
          example: 104857600
      required:
        - id
        - path
    SendDiagBundle:
      type: object
      properties:
        sendToCribl:
          title: Send to Cribl Support
          description: Send diagnostic bundle to Cribl Support
          type: boolean
          default: false
          example: true
        path:
          type: string
          title: Diag bundle file path
          description: Existing bundle that will be sent to Cribl Support. Max 100MB.
          example: "/var/cribl/diag/diag-bundle-2025-10-06-123456.tar.gz"
        renameJs:
          title: Rename .js files
          description: Append .txt to JavaScript files
          type: boolean
          default: true
          example: true
        includeMetrics:
          title: Include metrics
          description: Disable to exclude metrics from the bundle
          type: boolean
          default: true
          example: true
        includeGit:
          title: Include git
          description: Disable to exclude the git audit from the bundle
          type: boolean
          default: true
          example: true
        includeTopTalkers:
          title: Include top talkers
          description: Include data about your 10 highest-volume Sources, Destinations, Pipelines, Routes, and Packs in the diagnostic bundle
          type: boolean
          default: false
          example: false
        maxIncludeJobs:
          title: Latest number of jobs
          description: Number of jobs, including all tasks that will be included in the bundle
          type: number
          minimum: 0
          example: 25
        includeInstallLogs:
          title: Include installation logs
          description: Enable to include installation logs in the bundle (Windows only)
          type: boolean
          default: false
          example: false
    MetricNameInfo:
      type: object
      properties:
        dims:
          type: array
          items:
            type: object
            properties:
              count:
                type: number
                example: 5
              name:
                type: string
                example: "host"
              values:
                type: array
                items:
                  type: string
                example:
                  - "web-01"
                  - "web-02"
                  - "db-01"
            required:
              - count
              - name
              - values
        name:
          type: string
          example: "cpu.utilization"
      required:
        - dims
        - name
    SystemMetricsEnum:
      type: object
      properties:
        dimKeyFilter:
          oneOf:
            - type: string
              example: "host"
            - type: array
              items:
                type: string
              example:
                - "host"
                - "service"
        dimValueFilter:
          oneOf:
            - type: string
              example: "web-*"
            - type: array
              items:
                type: string
              example:
                - "web-01"
                - "web-02"
        earliest:
          type: number
          example: 1730828400
        filterExpr:
          type: string
          example: "service = 'api' and env = 'prod'"
        maxValues:
          type: number
          example: 100
        metricNameFilter:
          oneOf:
            - type: string
              example: "cpu.*"
            - type: array
              items:
                type: string
              example:
                - "cpu.utilization"
                - "memory.used"
    SearchAggMode:
      type: string
      nullable: true
      enum:
        - Coordinated
        - CoordinatedSuppressPreview
        - DistributedCoordinated
        - DistributedCoordinatedSuppressPreview
        - Federated
      example: "Coordinated"
    AggregationMgrOptions:
      type: object
      properties:
        aggregations:
          type: array
          items:
            type: string
          example:
            - "sum(bytes)"
            - "avg(duration_ms)"
        cumulative:
          type: boolean
          example: false
        dotsAsLiterals:
          type: boolean
          example: true
        flushEventLimit:
          type: number
          example: 50000
        flushMemLimit:
          type: number
          example: 268435456
        hostname:
          type: string
          example: "agg-worker-01.example.com"
        idleTimeLimitSeconds:
          type: number
          example: 30
        lagToleranceSeconds:
          type: number
          example: 10
        metricsMode:
          type: boolean
          example: true
        prefix:
          type: string
          example: "prod.api."
        preserveSplitByStructure:
          type: boolean
          example: false
        searchAggMode:
          $ref: "#/components/schemas/SearchAggMode"
        splitBys:
          type: array
          items:
            type: string
          example:
            - "host"
            - "service"
            - "status"
        sufficientStatsOnly:
          type: boolean
          example: false
        timeWindowSeconds:
          type: number
          example: 60
      required:
        - aggregations
        - cumulative
        - flushEventLimit
        - flushMemLimit
        - hostname
        - metricsMode
        - sufficientStatsOnly
        - timeWindowSeconds
    MetricsStore:
      type: object
      properties: {}
      example: {}
    MetricsAggOpts:
      type: object
      properties:
        aggs:
          $ref: "#/components/schemas/AggregationMgrOptions"
        alwaysBounds:
          type: boolean
          example: false
        earliest:
          oneOf:
            - type: string
              example: "-15m"
            - type: number
              example: 1730828400
        latest:
          oneOf:
            - type: string
              example: "now"
            - type: number
              example: 1730832000
        metrics:
          $ref: "#/components/schemas/MetricsStore"
        where:
          type: string
          example: "env = 'prod' and service = 'api'"
      required:
        - aggs
    AuthConfig:
      type: object
      properties:
        fallback:
          type: boolean
          example: true
        fallbackBadLogin:
          type: boolean
          example: false
        filter_type:
          type: string
          example: "memberof"
        host:
          type: string
          example: "ldap.example.com"
        port:
          type: number
          example: 636
        ssl:
          type: boolean
          example: true
        type:
          type: string
          enum:
            - ldap
            - splunk
            - local
            - saas
            - saml
            - openid
          example: "ldap"
      required:
        - fallback
        - fallbackBadLogin
        - host
        - port
        - ssl
        - type
    UpgradeGroupSettings:
      type: object
      properties:
        isRolling:
          type: boolean
          example: true
        quantity:
          type: number
          example: 5
        retryCount:
          type: number
          example: 3
        retryDelay:
          type: number
          example: 60
    UpgradePackageUrls:
      type: object
      properties:
        packageHashUrl:
          type: string
          example: "https://downloads.example.com/cribl/6.0.0/cribl-6.0.0.sha256"
        packageUrl:
          type: string
          example: "https://downloads.example.com/cribl/6.0.0/cribl-6.0.0.tgz"
      required:
        - packageUrl
    UpgradeSettings:
      type: object
      properties:
        automaticUpgradeCheckPeriod:
          type: string
          example: "24h"
        disableAutomaticUpgrade:
          type: boolean
          example: false
        enableLegacyEdgeUpgrade:
          type: boolean
          example: false
        packageUrls:
          type: array
          items:
            $ref: "#/components/schemas/UpgradePackageUrls"
          example:
            - packageUrl: "https://downloads.example.com/cribl/6.0.0/cribl-6.0.0.tgz"
              packageHashUrl: "https://downloads.example.com/cribl/6.0.0/cribl-6.0.0.sha256"
        upgradeSource:
          type: string
          example: "official"
      required:
        - disableAutomaticUpgrade
        - enableLegacyEdgeUpgrade
        - upgradeSource
    SystemSettingsConf:
      type: object
      properties:
        api:
          type: object
          properties:
            baseUrl:
              type: string
              example: "https://leader.example.com:9000"
            disableApiCache:
              type: boolean
              example: false
            disabled:
              type: boolean
              example: false
            headers:
              type: object
              example:
                X-Frame-Options: "DENY"
                X-Content-Type-Options: "nosniff"
            host:
              type: string
              example: "leader.example.com"
            idleSessionTTL:
              type: number
              example: 3600
            listenOnPort:
              type: boolean
              example: true
            loginRateLimit:
              type: string
              example: "5/minute"
            port:
              type: number
              example: 9000
            protocol:
              type: string
              example: "https"
            scripts:
              type: boolean
              example: false
            sensitiveFields:
              type: array
              items:
                type: string
              example:
                - "password"
                - "apiKey"
                - "secret"
            ssl:
              type: object
              properties:
                caPath:
                  type: string
                  example: "/etc/ssl/certs/ca-bundle.crt"
                certPath:
                  type: string
                  example: "/etc/cribl/ssl/server.crt"
                disabled:
                  type: boolean
                  example: false
                passphrase:
                  type: string
                  example: "changeit"
                privKeyPath:
                  type: string
                  example: "/etc/cribl/ssl/server.key"
              required:
                - certPath
                - disabled
                - passphrase
                - privKeyPath
            ssoRateLimit:
              type: string
              example: "10/minute"
            workerRemoteAccess:
              type: boolean
              example: false
          required:
            - disabled
            - host
            - port
            - protocol
            - ssl
            - workerRemoteAccess
        backups:
          type: object
          properties:
            backupPersistence:
              type: string
              example: "local"
            backupsDirectory:
              type: string
              example: "/var/cribl/backups"
          required:
            - backupPersistence
            - backupsDirectory
        customLogo:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            logoDescription:
              type: string
              example: "Acme Corp"
            logoImage:
              type: string
              example: "/opt/cribl/custom/logo.png"
          required:
            - enabled
            - logoDescription
            - logoImage
        pii:
          type: object
          properties:
            enablePiiDetection:
              type: boolean
              example: true
          required:
            - enablePiiDetection
        proxy:
          type: object
          properties:
            useEnvVars:
              type: boolean
              example: false
          required:
            - useEnvVars
        rollback:
          type: object
          properties:
            rollbackEnabled:
              type: boolean
              example: true
            rollbackRetries:
              type: number
              example: 3
            rollbackTimeout:
              type: number
              example: 600
          required:
            - rollbackEnabled
        shutdown:
          type: object
          properties:
            drainTimeout:
              type: number
              example: 30
          required:
            - drainTimeout
        sni:
          type: object
          properties:
            disableSNIRouting:
              type: boolean
              example: false
          required:
            - disableSNIRouting
        sockets:
          type: object
          properties:
            directory:
              type: string
              example: "/var/run/cribl"
        system:
          type: object
          properties:
            intercom:
              type: boolean
              example: false
            upgrade:
              enum:
                - false
                - api
              example: "api"
          required:
            - intercom
            - upgrade
        tls:
          type: object
          properties:
            defaultCipherList:
              type: string
              example: "HIGH:!aNULL:!MD5"
            defaultEcdhCurve:
              type: string
              example: "X25519:P-256"
            maxVersion:
              type: string
              example: "TLSv1.3"
            minVersion:
              type: string
              example: "TLSv1.2"
            rejectUnauthorized:
              type: boolean
              example: true
          required:
            - defaultCipherList
            - defaultEcdhCurve
            - maxVersion
            - minVersion
            - rejectUnauthorized
        upgradeGroupSettings:
          $ref: "#/components/schemas/UpgradeGroupSettings"
        upgradeSettings:
          $ref: "#/components/schemas/UpgradeSettings"
        workers:
          type: object
          properties:
            count:
              type: number
              example: 4
            enableHeapSnapshots:
              type: boolean
              example: false
            loadThrottlePerc:
              type: number
              example: 85
            memory:
              type: number
              example: 4096
            minimum:
              type: number
              example: 2
            startupMaxConns:
              type: number
              example: 1024
            startupThrottleTimeout:
              type: number
              example: 10000
            v8SingleThread:
              type: boolean
              example: false
          required:
            - count
            - memory
            - minimum
      required:
        - api
        - backups
        - customLogo
        - pii
        - proxy
        - rollback
        - shutdown
        - sni
        - system
        - tls
        - upgradeGroupSettings
        - upgradeSettings
        - workers
    GitOpsType:
      type: string
      enum:
        - none
        - pull
        - push
      example: "pull"
    GitSettings:
      type: object
      properties:
        authType:
          type: string
          example: "ssh"
        autoAction:
          type: string
          example: "commit"
        autoActionMessage:
          type: string
          example: "Automated configuration update"
        autoActionSchedule:
          type: string
          example: "0 */6 * * *"
        branch:
          type: string
          example: "main"
        commitDeploySingleAction:
          type: boolean
          example: true
        copilotAutoGitCommitMessages:
          type: boolean
          example: false
        defaultCommitMessage:
          type: string
          example: "Update system settings"
        gitOps:
          $ref: "#/components/schemas/GitOpsType"
        password:
          type: string
          example: "********"
        remote:
          type: string
          example: "git@github.com:acme/cribl-config.git"
        sshKey:
          type: string
          example: "/home/cribl/.ssh/id_rsa"
        strictHostKeyChecking:
          type: boolean
          example: true
        timeout:
          type: number
          example: 60
        user:
          type: string
          example: "cribl-bot"
    MaxConcurrentSearchesType:
      oneOf:
        - type: number
          example: 4
    SearchSettings:
      type: object
      properties:
        compressObjectCacheArtifacts:
          type: boolean
          example: true
        fieldSummaryMaxFields:
          type: number
          example: 100
        fieldSummaryMaxNestedDepth:
          type: number
          example: 4
        maxConcurrentSearches:
          $ref: "#/components/schemas/MaxConcurrentSearchesType"
        maxExecutorsPerSearch:
          type: number
          example: 10
        maxResultsPerSearch:
          type: number
          example: 100000
        searchHistoryMaxJobs:
          type: number
          example: 200
        searchQueueLength:
          oneOf:
            - type: number
              example: 50
        warmPoolSize:
          oneOf:
            - type: number
              example: 2
            - enum:
                - auto
          example: "auto"
        writeOnlyProviderSecrets:
          type: boolean
          example: true
      required:
        - compressObjectCacheArtifacts
        - fieldSummaryMaxFields
        - fieldSummaryMaxNestedDepth
        - maxConcurrentSearches
        - maxExecutorsPerSearch
        - maxResultsPerSearch
        - searchHistoryMaxJobs
        - searchQueueLength
        - warmPoolSize
        - writeOnlyProviderSecrets
    JobSettings:
      type: object
      properties:
        concurrentJobLimit:
          type: number
          example: 20
        concurrentScheduledJobLimit:
          type: number
          example: 5
        concurrentSystemJobLimit:
          type: number
          example: 4
        concurrentSystemTaskLimit:
          type: number
          example: 10
        concurrentTaskLimit:
          type: number
          example: 50
        disableTasks:
          type: boolean
          example: false
        finishedJobArtifactsLimit:
          type: number
          example: 100
        finishedTaskArtifactsLimit:
          type: number
          example: 200
        jobArtifactsReaperPeriod:
          type: string
          example: "24h"
        jobTimeout:
          type: string
          example: "2h"
        maxTaskPerc:
          type: number
          example: 75
        schedulingPolicy:
          type: string
          example: "fair"
        taskHeartbeatPeriod:
          type: number
          example: 10
        taskManifestFlushPeriodMs:
          type: number
          example: 5000
        taskManifestMaxBufferSize:
          type: number
          example: 1048576
        taskManifestReadBufferSize:
          type: string
          example: "256kb"
        taskPollTimeoutMs:
          type: number
          example: 2000
      required:
        - concurrentJobLimit
        - concurrentScheduledJobLimit
        - concurrentSystemJobLimit
        - concurrentSystemTaskLimit
        - concurrentTaskLimit
        - finishedJobArtifactsLimit
        - finishedTaskArtifactsLimit
        - jobArtifactsReaperPeriod
        - jobTimeout
        - maxTaskPerc
        - schedulingPolicy
        - taskHeartbeatPeriod
        - taskManifestFlushPeriodMs
        - taskManifestMaxBufferSize
        - taskManifestReadBufferSize
        - taskPollTimeoutMs
    EdgeHeartbeatMetricsMode:
      type: string
      enum:
        - minimal
        - basic
        - all
        - custom
      example: "basic"
    Limits:
      type: object
      properties:
        cpuProfileTTL:
          type: string
          example: "7d"
        edgeMetricsCustomExpression:
          type: string
          example: "metrics.mode == 'minimal'"
        edgeMetricsMode:
          $ref: "#/components/schemas/EdgeHeartbeatMetricsMode"
        edgeNodesCount:
          type: number
          example: 1500
        enableMetricsPersistence:
          type: boolean
          example: true
        eventsMetadataSources:
          type: array
          items:
            type: string
          example:
            - "syslog"
            - "app"
            - "infra"
        lookupMaxSize:
          type: string
          example: "128mb"
        lookupMaxTotalSize:
          type: string
          example: "1gb"
        maxMetrics:
          type: number
          example: 500000
        maxPQSize:
          type: string
          example: "100gb"
        metricsDirectory:
          type: string
          example: "/var/cribl/metrics"
        metricsDropList:
          type: array
          items:
            type: string
          example:
            - "debug.*"
        metricsFieldsBlacklist:
          type: array
          items:
            type: string
          example:
            - "raw"
            - "payload"
        metricsGCPeriod:
          type: string
          example: "5m"
        metricsMaxCardinality:
          type: number
          example: 100000
        metricsMaxDiskSpace:
          type: string
          example: "500gb"
        metricsNeverDropList:
          type: array
          items:
            type: string
          example:
            - "errors.total"
        metricsWorkerIdBlacklist:
          type: array
          items:
            type: string
          example:
            - "worker-3"
        minFreeSpace:
          type: string
          example: "10gb"
        samples:
          type: object
          properties:
            maxSize:
              type: string
              example: "2gb"
          required:
            - maxSize
      required:
        - cpuProfileTTL
        - enableMetricsPersistence
        - metricsDirectory
        - metricsFieldsBlacklist
        - metricsGCPeriod
        - metricsNeverDropList
        - metricsWorkerIdBlacklist
        - minFreeSpace
        - samples
    RedisCacheLimits:
      type: object
      properties:
        clientTrackingMechanism:
          type: string
          example: "broadcast"
        enableServerAssist:
          type: boolean
          example: true
        keyTTLSecs:
          type: number
          example: 3600
        maxCacheSize:
          type: number
          example: 268435456
        maxNumKeys:
          type: number
          example: 100000
        servicePeriodSecs:
          type: number
          example: 60
    RedisConnectionLimits:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        maxConnections:
          type: number
          example: 2000
    RedisLimits:
      type: object
      properties:
        connections:
          $ref: "#/components/schemas/RedisConnectionLimits"
      required:
        - connections
    CommonServiceLimitConfigs:
      type: object
      properties:
        memoryLimit:
          type: string
          example: "1gb"
      required:
        - memoryLimit
    ServicesLimits:
      type: object
      properties:
        connections:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
        metrics:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
        notifications:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
      required:
        - connections
        - metrics
        - notifications
    SystemSettings:
      type: object
      properties:
        api:
          type: object
          properties:
            baseUrl:
              type: string
              example: "https://leader.example.com:9000"
            disableApiCache:
              type: boolean
              example: false
            disabled:
              type: boolean
              example: false
            headers:
              type: object
              example:
                X-Frame-Options: "DENY"
                X-Content-Type-Options: "nosniff"
            host:
              type: string
              example: "leader.example.com"
            idleSessionTTL:
              type: number
              example: 3600
            listenOnPort:
              type: boolean
              example: true
            loginRateLimit:
              type: string
              example: "5/minute"
            port:
              type: number
              example: 9000
            protocol:
              type: string
              example: "https"
            scripts:
              type: boolean
              example: false
            sensitiveFields:
              type: array
              items:
                type: string
              example:
                - "password"
                - "apiKey"
                - "secret"
            ssl:
              type: object
              properties:
                caPath:
                  type: string
                  example: "/etc/ssl/certs/ca-bundle.crt"
                certPath:
                  type: string
                  example: "/etc/cribl/ssl/server.crt"
                disabled:
                  type: boolean
                  example: false
                passphrase:
                  type: string
                  example: "changeit"
                privKeyPath:
                  type: string
                  example: "/etc/cribl/ssl/server.key"
              required:
                - certPath
                - disabled
                - passphrase
                - privKeyPath
            ssoRateLimit:
              type: string
              example: "10/minute"
            workerRemoteAccess:
              type: boolean
              example: false
          required:
            - disabled
            - host
            - port
            - protocol
            - ssl
            - workerRemoteAccess
        auth:
          $ref: "#/components/schemas/AuthConfig"
        backups:
          type: object
          properties:
            backupPersistence:
              type: string
              example: "local"
            backupsDirectory:
              type: string
              example: "/var/cribl/backups"
          required:
            - backupPersistence
            - backupsDirectory
        customLogo:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            logoDescription:
              type: string
              example: "Acme Corp"
            logoImage:
              type: string
              example: "/opt/cribl/custom/logo.png"
          required:
            - enabled
            - logoDescription
            - logoImage
        distributed:
          type: object
          properties:
            mode:
              $ref: "#/components/schemas/AppMode"
          required:
            - mode
        fips:
          type: boolean
          example: false
        git:
          $ref: "#/components/schemas/GitSettings"
        jobLimits:
          $ref: "#/components/schemas/JobSettings"
        limits:
          $ref: "#/components/schemas/Limits"
        pii:
          type: object
          properties:
            enablePiiDetection:
              type: boolean
              example: true
          required:
            - enablePiiDetection
        proxy:
          type: object
          properties:
            useEnvVars:
              type: boolean
              example: false
          required:
            - useEnvVars
        redisCacheLimits:
          $ref: "#/components/schemas/RedisCacheLimits"
        redisLimits:
          $ref: "#/components/schemas/RedisLimits"
        rollback:
          type: object
          properties:
            rollbackEnabled:
              type: boolean
              example: true
            rollbackRetries:
              type: number
              example: 3
            rollbackTimeout:
              type: number
              example: 600
          required:
            - rollbackEnabled
        searchLimits:
          $ref: "#/components/schemas/SearchSettings"
        servicesLimits:
          $ref: "#/components/schemas/ServicesLimits"
        shutdown:
          type: object
          properties:
            drainTimeout:
              type: number
              example: 30
          required:
            - drainTimeout
        sni:
          type: object
          properties:
            disableSNIRouting:
              type: boolean
              example: false
          required:
            - disableSNIRouting
        sockets:
          type: object
          properties:
            directory:
              type: string
              example: "/var/run/cribl"
        system:
          type: object
          properties:
            intercom:
              type: boolean
              example: false
            upgrade:
              enum:
                - false
                - api
              example: "api"
          required:
            - intercom
            - upgrade
        tls:
          type: object
          properties:
            defaultCipherList:
              type: string
              example: "HIGH:!aNULL:!MD5"
            defaultEcdhCurve:
              type: string
              example: "X25519:P-256"
            maxVersion:
              type: string
              example: "TLSv1.3"
            minVersion:
              type: string
              example: "TLSv1.2"
            rejectUnauthorized:
              type: boolean
              example: true
          required:
            - defaultCipherList
            - defaultEcdhCurve
            - maxVersion
            - minVersion
            - rejectUnauthorized
        upgradeGroupSettings:
          $ref: "#/components/schemas/UpgradeGroupSettings"
        upgradeSettings:
          $ref: "#/components/schemas/UpgradeSettings"
        workers:
          type: object
          properties:
            count:
              type: number
              example: 4
            enableHeapSnapshots:
              type: boolean
              example: false
            loadThrottlePerc:
              type: number
              example: 85
            memory:
              type: number
              example: 4096
            minimum:
              type: number
              example: 2
            startupMaxConns:
              type: number
              example: 1024
            startupThrottleTimeout:
              type: number
              example: 10000
            v8SingleThread:
              type: boolean
              example: false
          required:
            - count
            - memory
            - minimum
      required:
        - api
        - auth
        - backups
        - customLogo
        - distributed
        - fips
        - git
        - jobLimits
        - limits
        - pii
        - proxy
        - redisCacheLimits
        - redisLimits
        - rollback
        - searchLimits
        - servicesLimits
        - shutdown
        - sni
        - system
        - tls
        - upgradeGroupSettings
        - upgradeSettings
        - workers
    PublicSettings:
      type: object
      properties:
        apiProtocol:
          type: string
          example: "https"
        intercom:
          type: boolean
          example: false
        isRegistered:
          type: boolean
          example: true
      required:
        - apiProtocol
        - intercom
        - isRegistered
    VersionInfo:
      type: object
      properties:
        architecture:
          type: string
          example: "x86_64"
        build:
          type: string
          example: "2025.10.06-1234"
        downloadUrl:
          type: string
          example: "https://downloads.example.com/cribl/6.0.0/cribl-6.0.0.tgz"
        fullVersion:
          type: string
          example: "6.0.0"
        major:
          type: number
          example: 6
        minor:
          type: number
          example: 0
        platform:
          type: string
          example: "linux"
        point:
          type: number
          example: 0
        preRelease:
          type: string
          example: ""
      required:
        - build
        - fullVersion
        - major
        - minor
    UpgradeResult:
      type: object
      properties:
        availableVersions:
          type: array
          items:
            $ref: "#/components/schemas/VersionInfo"
          example:
            - architecture: "x86_64"
              build: "2025.10.06-1234"
              downloadUrl: "https://downloads.example.com/cribl/6.0.0/cribl-6.0.0.tgz"
              fullVersion: "6.0.0"
              major: 6
              minor: 0
              platform: "linux"
              point: 0
              preRelease: ""
        canUpgrade:
          type: boolean
          example: true
        installedVersion:
          $ref: "#/components/schemas/VersionInfo"
        isSuccess:
          type: boolean
          example: true
        message:
          type: string
          example: "Upgrade available"
        upgradedToVersion:
          $ref: "#/components/schemas/VersionInfo"
      required:
        - availableVersions
        - canUpgrade
        - installedVersion
        - isSuccess
        - message
        - upgradedToVersion
    UpgradeMasterRequest:
      type: object
      properties:
        packages:
          title: Custom Path
          description: Provide your own URLs or local paths for platform-specific Cribl
            packages
          type: array
          items:
            type: object
            required:
              - packageUrl
            properties:
              packageUrl:
                type: string
                title: Platform-Specific Package Location
                description: Package HTTP URL or local path
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)
                minLength: 1
                example: "https://downloads.example.com/cribl/6.0.0/cribl-6.0.0-linux-x64.tgz"
              packageHashUrl:
                type: string
                title: Package Hash Location
                description: Package's MD5 or SHA256 hash HTTP URL or local path
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)\.(tgz|msi)?\.(md5|sha256)
                minLength: 1
                example: "https://downloads.example.com/cribl/6.0.0/cribl-6.0.0-linux-x64.tgz.sha256"
    UiStatePatch:
      type: object
      required:
        - op
        - value
      properties:
        op:
          type: string
          enum:
            - set
            - push-recent
          example: "set"
        value: {}
        args:
          type: object
          additionalProperties: true
          example:
            key: "recent-searches"
            value:
              - "error"
              - "timeout"
    GitCommitParams:
      type: object
      properties:
        effective:
          type: boolean
          example: true
        files:
          type: array
          items:
            type: string
          example:
            - "config/system.yml"
            - "routes/default.yml"
        group:
          type: string
          example: "ops"
        message:
          type: string
          example: "Update system settings and routes"
      required:
        - message
    GitInfo:
      type: object
      properties:
        remote:
          oneOf:
            - type: string
              example: "git@github.com:acme/cribl-config.git"
            - type: boolean
              example: false
        versioning:
          type: boolean
          example: true
      required:
        - remote
        - versioning
    GitRevertParams:
      type: object
      properties:
        commit:
          type: string
          example: "1a2b3c4d5e6f7g8h9i0j"
        force:
          type: boolean
          example: false
        message:
          type: string
          example: "Revert previous configuration change"
      required:
        - commit
        - message
    GitStatusResult:
      type: object
      properties:
        ahead:
          type: number
          example: 0
        behind:
          type: number
          example: 2
        conflicted:
          type: array
          items:
            type: string
          example:
            - "routes/default.yml"
        created:
          type: array
          items:
            type: string
          example:
            - "packs/new-pack/manifest.yml"
        current:
          type: string
          example: "main"
        deleted:
          type: array
          items:
            type: string
          example:
            - "staging-old.yml"
        files:
          type: array
          items:
            type: object
            properties:
              index:
                type: string
                example: "M"
              path:
                type: string
                example: "routes/default.yml"
              working_dir:
                type: string
                example: "M"
            required:
              - index
              - path
              - working_dir
        modified:
          type: array
          items:
            type: string
          example:
            - "system.yml"
        not_added:
          type: array
          items:
            type: string
          example:
            - "README.md"
        renamed:
          type: array
          items:
            type: object
            properties:
              from:
                type: string
                example: "old-name.yml"
              to:
                type: string
                example: "new-name.yml"
            required:
              - from
              - to
        staged:
          type: array
          items:
            type: string
          example:
            - "routes/default.yml"
        tracking:
          type: string
          example: "origin/main"
      required:
        - ahead
        - behind
        - conflicted
        - created
        - current
        - deleted
        - files
        - modified
        - not_added
        - renamed
        - staged
        - tracking
    SearchEvent: {}
    PreviewResponseBody:
      type: object
      properties:
        count:
          type: number
          example: 100
        events:
          type: array
          items:
            $ref: "#/components/schemas/SearchEvent"
        processingTimeMS:
          type: number
          example: 250
        useFormattedVisualization:
          type: boolean
          example: true
      required:
        - count
        - events
        - processingTimeMS
        - useFormattedVisualization
    EventBreakerRuleFields:
      type: object
      properties:
        name:
          type: string
          example: "timestamp"
        value:
          type: string
          example: "%Y-%m-%dT%H:%M:%S%z"
      required:
        - name
        - value
    ParserMode:
      type: string
      enum:
        - extract
        - reserialize
      example: "extract"
    EventBreakerRule:
      type: object
      properties:
        cleanFields:
          type: boolean
          example: true
        condition:
          type: string
          example: "source == 'syslog'"
        delimiter:
          type: string
          example: ","
        delimiterRegex:
          type: string
          example: "\\s+"
        disabled:
          type: boolean
          example: false
        escapeChar:
          type: string
          example: "\\"
        eventBreakerRegex:
          type: string
          default: "/^/"
          example: "/\\n{2,}/"
        fields:
          type: array
          items:
            $ref: "#/components/schemas/EventBreakerRuleFields"
          example:
            - name: "timestamp"
              value: "%Y-%m-%dT%H:%M:%S%z"
        fieldsLineRegex:
          type: string
          example: "^(?<key>[^=]+)=(?<value>.*)$"
        headerLineRegex:
          type: string
          example: "^#\\s*(?<header>.*)$"
        index:
          type: number
          example: 0
        jsonArrayField:
          type: string
          example: "events"
        jsonExtractAll:
          type: boolean
          example: true
        jsonTimeField:
          type: string
          example: "time"
        maxEventBytes:
          type: number
          example: 1048576
        name:
          type: string
          example: "syslog-breaker"
        nullFieldVal:
          type: string
          example: "-"
        parser:
          oneOf:
            - type: object
              properties:
                allowedKeyChars:
                  type: boolean
                  example: false
                allowedValueChars:
                  type: array
                  items:
                    type: string
                  example:
                    - "a-zA-Z0-9_"
                cleanFields:
                  type: array
                  items:
                    type: string
                  example:
                    - "unused"
                delimChar:
                  type: string
                  example: "="
                dstField:
                  type: string
                  example: "_raw"
                escapeChar:
                  type: string
                  example: "\\"
                fieldFilterExpr:
                  type: string
                  example: "key != 'debug'"
                fields:
                  type: array
                  items:
                    type: string
                  example:
                    - "host"
                    - "msg"
                keep:
                  type: array
                  items:
                    type: string
                  example:
                    - "host"
                    - "time"
                mode:
                  $ref: "#/components/schemas/ParserMode"
                nullValue:
                  type: string
                  example: "-"
                quoteChar:
                  type: string
                  example: "\""
                remove:
                  type: array
                  items:
                    type: string
                  example:
                    - "debug"
                srcField:
                  type: string
                  example: "_raw"
                type:
                  type: string
                  enum:
                    - clf
                    - csv
                    - delim
                    - elff
                  example: "csv"
              required:
                - mode
                - srcField
                - type
            - type: object
              properties:
                dstField:
                  type: string
                  example: "_raw"
                mode:
                  $ref: "#/components/schemas/ParserMode"
                pattern:
                  type: string
                  example: "%{IP:client} - - \\[%{HTTPDATE:timestamp}\\] \"%{WORD:method} %{DATA:path} HTTP/%{NUMBER:version}\" %{NUMBER:status} %{NUMBER:bytes}"
                patternList:
                  type: array
                  items:
                    type: object
                    properties:
                      pattern:
                        type: string
                    required:
                      - pattern
                  example:
                    - pattern: "%{COMBINEDAPACHELOG}"
                source:
                  type: string
                  example: "message"
                srcField:
                  type: string
                  example: "_raw"
                type:
                  type: string
                  enum:
                    - grok
                  example: "grok"
              required:
                - mode
                - srcField
                - type
            - type: object
              properties:
                cleanFields:
                  type: array
                  items:
                    type: string
                  example:
                    - "unused"
                dstField:
                  type: string
                  example: "_raw"
                fieldFilterExpr:
                  type: string
                  example: "has(field)"
                fields:
                  type: array
                  items:
                    type: string
                  example:
                    - "client.ip"
                    - "user.id"
                keep:
                  type: array
                  items:
                    type: string
                  example:
                    - "level"
                mode:
                  $ref: "#/components/schemas/ParserMode"
                remove:
                  type: array
                  items:
                    type: string
                  example:
                    - "debug"
                srcField:
                  type: string
                  example: "_raw"
                type:
                  type: string
                  enum:
                    - json
                  example: "json"
              required:
                - mode
                - srcField
                - type
            - type: object
              properties:
                allowedKeyChars:
                  type: boolean
                  example: false
                allowedValueChars:
                  type: array
                  items:
                    type: string
                  example:
                    - "a-zA-Z0-9_"
                cleanFields:
                  type: array
                  items:
                    type: string
                  example:
                    - "unused"
                delimChar:
                  type: string
                  example: "="
                dstField:
                  type: string
                  example: "_raw"
                escapeChar:
                  type: string
                  example: "\\"
                fieldFilterExpr:
                  type: string
                  example: "key != 'debug'"
                fields:
                  type: array
                  items:
                    type: string
                  example:
                    - "host"
                    - "msg"
                keep:
                  type: array
                  items:
                    type: string
                  example:
                    - "host"
                    - "time"
                mode:
                  $ref: "#/components/schemas/ParserMode"
                nullValue:
                  type: string
                  example: "-"
                quoteChar:
                  type: string
                  example: "\""
                remove:
                  type: array
                  items:
                    type: string
                  example:
                    - "debug"
                srcField:
                  type: string
                  example: "_raw"
                type:
                  type: string
                  enum:
                    - kvp
                  example: "kvp"
              required:
                - mode
                - srcField
                - type
        parserEnabled:
          type: boolean
          example: true
        quoteChar:
          type: string
          example: "\""
        shouldUseDataRaw:
          type: boolean
          example: false
        timeField:
          type: string
          example: "time"
        timestamp:
          type: object
          properties:
            format:
              type: string
              example: "%Y-%m-%dT%H:%M:%S%z"
            length:
              type: number
              example: 24
            type:
              type: string
              enum:
                - auto
                - format
                - current
              example: "format"
          required:
            - type
        timestampAnchorRegex:
          type: string
          example: "timestamp=(?<ts>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z)"
        timestampEarliest:
          type: string
          example: "-24h"
        timestampLatest:
          type: string
          example: "now"
        timestampTimezone:
          oneOf:
            - type: string
            - type: object
              properties:
                name:
                  type: string
                  example: "America/Los_Angeles"
                offsets:
                  type: array
                  items:
                    type: number
                  example:
                    - -28800
                    - -25200
                untils:
                  type: array
                  items:
                    type: number
                  example:
                    - 1583664000
                    - 1604223600
              required:
                - name
                - offsets
                - untils
          example: "UTC"
        type:
          type: string
          enum:
            - regex
            - timestamp
            - json
            - csv
            - json_array
            - header
            - aws_cloudtrail
            - aws_vpcflow
          example: "json"
      required:
        - condition
        - maxEventBytes
        - name
        - timestamp
        - timestampAnchorRegex
        - timestampTimezone
    DatatypePreviewInput:
      oneOf:
        - type: object
          properties:
            dataset:
              type: string
              example: "logs/web_access"
            type:
              type: string
              enum:
                - dataset
              example: "dataset"
          required:
            - dataset
            - type
        - type: object
          properties:
            rawData:
              type: string
              example: "127.0.0.1 - - [06/Oct/2025:12:00:00 +0000] \"GET /healthz HTTP/1.1\" 200 2"
            type:
              type: string
              enum:
                - rawData
              example: "rawData"
          required:
            - rawData
            - type
    DatatypePreviewRequestBody:
      type: object
      properties:
        eventBreakerRule:
          $ref: "#/components/schemas/EventBreakerRule"
        input:
          $ref: "#/components/schemas/DatatypePreviewInput"
      required:
        - input
    SearchHealthCheckStatus:
      type: object
      properties:
        reported_at:
          type: number
          example: 1730835600
        status:
          type: string
          enum:
            - red
            - green
          example: "green"
      required:
        - reported_at
        - status
    PreviewOptions:
      type: object
      properties:
        earliest:
          oneOf:
            - type: string
              example: "-15m"
            - type: number
              example: 1730832000
        latest:
          oneOf:
            - type: string
              example: "now"
            - type: number
              example: 1730835600
    PreviewRequestBody:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/SearchEvent"
          example:
            - {}
            - {}
        options:
          $ref: "#/components/schemas/PreviewOptions"
        query:
          type: string
          example: "source = \"web_access\" | stats count by status"
      required:
        - events
        - query
    AMTrustPolicy:
      type: object
      properties:
        Statement:
          type: array
          items:
            type: object
            properties:
              Action:
                oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                example: "sts:AssumeRole"
              Condition:
                type: object
                properties:
                  StringEquals:
                    type: object
                example:
                  StringEquals:
                    sts:ExternalId: "tenant-abc"
              Effect:
                type: string
                example: "Allow"
              Principal:
                type: object
                properties:
                  AWS:
                    type: string
                required:
                  - AWS
                example:
                  AWS: "arn:aws:iam::123456789012:root"
            required:
              - Action
              - Effect
              - Principal
        Version:
          type: string
          example: "2012-10-17"
      required:
        - Statement
        - Version
    TrustPolicy:
      type: object
      properties:
        id:
          type: string
          example: "policy-tenant-abc"
        policy:
          $ref: "#/components/schemas/AMTrustPolicy"
      required:
        - id
        - policy
    SearchJobResultsJobInfo: {}
    SearchJobResults:
      type: object
      properties:
        isFinished:
          type: boolean
          example: true
        job:
          $ref: "#/components/schemas/SearchJobResultsJobInfo"
        limit:
          type: number
          example: 100
        offset:
          type: number
          example: 0
        persistedEventCount:
          type: number
          example: 100
        totalEventCount:
          type: number
          example: 1000
      required:
        - isFinished
        - job
        - offset
        - persistedEventCount
        - totalEventCount
    ContainerdMount:
      type: object
      properties:
        destination:
          type: string
          example: "/var/log"
        source:
          type: string
          example: "/var/lib/containers/storage/overlay/abcd1234/merged/var/log"
      required:
        - destination
        - source
    ContainerdRoot:
      type: object
      properties:
        path:
          type: string
          example: "/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/123"
      required:
        - path
    ContainerdContainer:
      type: object
      properties:
        mounts:
          type: array
          items:
            $ref: "#/components/schemas/ContainerdMount"
          example:
            - destination: "/var/log"
              source: "/var/lib/containers/storage/overlay/abcd1234/merged/var/log"
        root:
          $ref: "#/components/schemas/ContainerdRoot"
      required:
        - mounts
        - root
    ContainerdTask:
      type: object
      properties:
        process:
          type: object
          additionalProperties: true
          example:
            pid: 3421
            state: "running"
    ContainerdInfo:
      type: object
      properties:
        container:
          $ref: "#/components/schemas/ContainerdContainer"
        image:
          type: object
          additionalProperties: true
          example:
            name: "ghcr.io/acme/app:1.2.3"
            digest: "sha256:abcdef..."
        metrics:
          type: object
          additionalProperties: true
          example:
            cpu: 0.12
            memory_bytes: 134217728
        namespace:
          type: object
          additionalProperties: true
          example:
            name: "default"
        task:
          $ref: "#/components/schemas/ContainerdTask"
      required:
        - container
    DockerGraphDriverData:
      type: object
      properties:
        MergedDir:
          type: string
          example: "/var/lib/docker/overlay2/abcd1234/merged"
      required:
        - MergedDir
    DockerGraphDriver:
      type: object
      properties:
        Data:
          $ref: "#/components/schemas/DockerGraphDriverData"
    DockerMount:
      type: object
      properties:
        Destination:
          type: string
          example: "/var/log"
        Source:
          type: string
          example: "/var/lib/docker/volumes/logs/_data"
      required:
        - Destination
        - Source
    DockerInfo:
      type: object
      properties:
        Config:
          type: object
          additionalProperties: true
          example:
            Hostname: "web-01"
            Env:
              - "ENV=prod"
        GraphDriver:
          $ref: "#/components/schemas/DockerGraphDriver"
        LogPath:
          type: string
          example: "/var/lib/docker/containers/abcd1234/abcd1234-json.log"
        Mounts:
          type: array
          items:
            $ref: "#/components/schemas/DockerMount"
          example:
            - Destination: "/var/log"
              Source: "/var/lib/docker/volumes/logs/_data"
        NetworkSettings:
          type: object
          additionalProperties: true
          example:
            IPAddress: "10.0.0.12"
            Ports:
              "80/tcp":
                - HostIp: "0.0.0.0"
                  HostPort: "30080"
        Path:
          type: string
          example: "/docker-entrypoint.sh"
        State:
          type: object
          additionalProperties: true
          example:
            Status: "running"
            StartedAt: "2025-10-06T12:00:00Z"
        Stats:
          type: object
          additionalProperties: true
          example:
            cpu_usage: 0.08
            mem_usage_bytes: 104857600
    ContainerPort:
      type: object
      properties:
        privatePort:
          type: number
          example: 8080
        publicPort:
          type: number
          example: 30080
      required:
        - privatePort
        - publicPort
    Container:
      type: object
      properties:
        command:
          oneOf:
            - type: string
              example: "/docker-entrypoint.sh nginx -g 'daemon off;'"
            - type: array
              items:
                type: string
              example:
                - "./entrypoint.sh"
                - "--serve"
        containerd:
          $ref: "#/components/schemas/ContainerdInfo"
        created:
          type: number
          example: 1730832000
        docker:
          $ref: "#/components/schemas/DockerInfo"
        id:
          type: string
          example: "abcd1234efgh5678ijkl9012mnop3456"
        image:
          type: string
          example: "nginx:1.27"
        ips:
          type: array
          items:
            type: string
          example:
            - "10.0.0.12"
            - "fd00::12"
        name:
          type: string
          example: "web-01"
        ports:
          type: array
          items:
            $ref: "#/components/schemas/ContainerPort"
          example:
            - privatePort: 8080
              publicPort: 30080
        status:
          type: string
          example: "running"
        type:
          type: string
          enum:
            - docker
            - containerd
          example: "docker"
      required:
        - command
        - created
        - id
        - image
        - name
        - status
        - type        
    FileProcessInfo:
      type: object
      properties:
        pid:
          type: number
          example: 1234
        process:
          type: string
          example: "nginx"
      required:
        - pid
        - process
    EdgeFile:
      type: object
      properties:
        filePath:
          type: string
          example: "/var/log/nginx/access.log"
        id:
          type: string
          example: "file-abc123"
        modTime:
          type: number
          example: 1730832000
        mode:
          type: string
          example: "0644"
        owner:
          type: number
          example: 12345
        processInfo:
          type: array
          items:
            $ref: "#/components/schemas/FileProcessInfo"
          example:
            - pid: 1234
              process: "nginx"
        size:
          type: number
          example: 1048576
      required:
        - filePath
        - id
        - modTime
        - mode
        - owner
        - size
    Process:
      type: object
      properties:
        id:
          type: string
          example: "proc-abc123"
        pid:
          type: number
          example: 5678
        ppid:
          type: number
          example: 1
      required:
        - id
        - pid
        - ppid
    Collector:
      $ref: "#/components/schemas/Function"
    Executor:
      $ref: "#/components/schemas/Function"
    ProjectConfig:
      type: object
      properties:
        consumers:
          type: object
          example: {}
        description:
          type: string
          example: "Default project configuration"
        destinations:
          type: array
          items:
            type: string
          example:
            - "Output:main"
        id:
          type: string
          example: "project-default"
        subscriptions:
          type: array
          items:
            type: string
          example:
            - "sub-default"
      required:
        - destinations
        - id
        - subscriptions
    ProjectDestination:
      type: object
      properties:
        id:
          type: string
          example: "dest-main"
        type:
          type: string
          example: "s3"
      required:
        - id
        - type
    Connection:
      type: object
      properties:
        output:
          type: string
          example: "Output:main"
        pipeline:
          type: string
          example: "main"
      required:
        - output
    SubscriptionConsumer:
      type: object
      properties:
        connections:
          type: array
          items:
            $ref: "#/components/schemas/Connection"
          example:
            - output: "Output:main"
              pipeline: "main"
        disabled:
          type: boolean
          example: false
        type:
          type: string
          example: "destination"
    Subscription:
      type: object
      properties:
        description:
          type: string
          example: "The string to describe the resource"
        disabled:
          type: boolean
          example: false
        filter:
          type: string
          example: "truthy"
        id:
          type: string
          example: "myUniqueSubscriptionId"
        pipeline:
          type: string
          example: "myExistingPipelineId"
      required:
        - id
        - pipeline        
    CloudProvider:
      type: string
      nullable: true
      enum:
        - aws
        - azure
      example: "aws"
    Group:
      type: object
      properties:
        onPrem:
          type: boolean
          example: false
        workerRemoteAccess:
          type: boolean
          example: true
        streamtags:
          type: array
          items:
            type: string
          example:
            - "prod"
            - "web"
        cloud:
          type: object
          properties:
            provider:
              type: string
              enum: ["aws", "azure"]
            region:
              type: string
          required:
            - provider
            - region
          example:
            provider: "aws"
            region: "us-east-1"
        provisioned:
          type: boolean
          example: true
        isFleet:
          type: boolean
          description: Must be true if product is 'edge'
          example: false
        estimatedIngestRate:
          type: number
          example: 250000
        name:
          type: string
          example: "edge-group-prod"
        id:
          type: string
          example: "grp-prod-edge"
      required:
        - provisioned
        - id
    DeployRequest:
      type: object
      properties:
        version:
          type: string
          example: "6.0.0"
      required:
      - version
    ConfigGroupCloud:
      type: object
      properties:
        provider:
          $ref: "#/components/schemas/CloudProvider"
        region:
          type: string
          example: "us-east-1"
      required:
        - provider
        - region
      example:
        provider: "aws"
        region: "us-east-1"
    Commit:
      type: object
      properties:
        author_email:
          type: string
          example: "dev@acme.com"
        author_name:
          type: string
          example: "Acme Dev"
        date:
          type: string
          example: "2025-10-06T12:00:00Z"
        hash:
          type: string
          example: "1a2b3c4d5e6f7g8h9i0j"
        message:
          type: string
          example: "Deploy config for prod edge group"
        short:
          type: string
          example: "1a2b3c4"
      required:
        - date
        - hash
        - message
        - short
    ConfigGroupLookups:
      type: object
      properties:
        context:
          type: string
          example: "prod"
        lookups:
          type: array
          items:
            type: object
            properties:
              deployedVersion:
                type: string
                example: "v3"
              file:
                type: string
                example: "lookups/ip_to_region.csv"
              version:
                type: string
                example: "v4"
            required:
              - file
          example:
            - file: "lookups/ip_to_region.csv"
              deployedVersion: "v3"
              version: "v4"
      required:
        - context
        - lookups
    ConfigGroup:
      type: object
      properties:
        cloud:
          $ref: "#/components/schemas/ConfigGroupCloud"
        configVersion:
          type: string
          example: "v12"
        deployingWorkerCount:
          type: number
          example: 3
        description:
          type: string
          example: "Production Edge configuration group"
        estimatedIngestRate:
          type: number
          example: 500000
        git:
          type: object
          properties:
            commit:
              type: string
              example: "1a2b3c4d5e6f"
            localChanges:
              type: number
              example: 0
            log:
              type: array
              items:
                $ref: "#/components/schemas/Commit"
          example:
            commit: "1a2b3c4d5e6f"
            localChanges: 0
            log:
              - author_email: "dev@acme.com"
                author_name: "Acme Dev"
                date: "2025-10-06T12:00:00Z"
                hash: "1a2b3c4d5e6f7g8h9i0j"
                message: "Deploy config for prod edge group"
                short: "1a2b3c4"
        id:
          type: string
          example: "config-group-prod-edge"
        incompatibleWorkerCount:
          type: number
          example: 0
        inherits:
          type: string
          example: "base-config"
        isFleet:
          type: boolean
          example: false
        isSearch:
          type: boolean
          example: false
        lookupDeployments:
          type: array
          items:
            $ref: "#/components/schemas/ConfigGroupLookups"
          example:
            - context: "prod"
              lookups:
                - file: "lookups/ip_to_region.csv"
                  deployedVersion: "v3"
                  version: "v4"
        name:
          type: string
          example: "Prod Edge"
        onPrem:
          type: boolean
          example: true
        provisioned:
          type: boolean
          example: true
        streamtags:
          type: array
          items:
            type: string
          example:
            - "prod"
            - "edge"
        tags:
          type: string
          example: "environment=prod,team=platform"
        type:
          type: string
          enum:
            - lake_access
          example: "lake_access"
        upgradeVersion:
          type: string
          example: "6.0.1"
        workerCount:
          type: number
          example: 12
        workerRemoteAccess:
          type: boolean
          example: true
      required:
        - id
    TeamAccessControlList:
      type: object
      properties:
        perms:
          type: array
          items:
            $ref: "#/components/schemas/ResourcePolicy"
          example:
            - resource: "pipeline:main"
              actions:
                - "read"
                - "write"
              effect: "allow"
            - resource: "output:s3-main"
              actions:
                - "read"
              effect: "allow"
        team:
          type: string
          example: "platform-team"
      required:
        - perms
        - team
security:
  - bearerAuth: []
  - clientOauth: []
  - organizationId: []
  - workspaceId: []
  - cloudDomain: []
tags:
  - name: ai-settings
    description: Actions related to Ai Settings
  - name: appscope-configs
    description: Actions related to Appscope Configs
  - name: auth
    description: Actions related to authentication. Do not use the /auth endpoints
      in Cribl.Cloud deployments. Instead, follow the instructions at
      https://docs.cribl.io/stream/api-tutorials/#criblcloud to authenticate for
      Cribl.Cloud.
  - name: authorize
    description: Actions related to Authorize
  - name: banners
    description: Actions related to Banners
  - name: certificates
    description: Actions related to Certificates
  - name: changelog
    description: Actions related to Changelog
  - name: click-house
    description: Actions related to ClickHouse
  - name: clui
    description: Actions related to CLUI
  - name: collectors
    description: Actions related to Collectors
  - name: conditions
    description: Actions related to Conditions
  - name: consent
    description: Actions related to Consent
  - name: dashboardCategories
    description: Actions related to DashboardCategories
  - name: dashboards
    description: Actions related to Dashboards
  - name: database-connections
    description: Actions related to Database Connections
  - name: datasets
    description: Actions related to Datasets
  - name: diag
    description: Actions related to diagnostics
  - name: distributed
    description: Actions related to Distributed
  - name: edge
    description: Actions enabled in Edge
  - name: edgeAppScopeProcesses
    description: Actions related to Edge AppScope processes
  - name: edgeContainers
    description: Actions related to Edge containers
  - name: edgeEvents
    description: Actions related to EdgeEvents
  - name: edgeFiles
    description: Actions related to Edge Files
  - name: edgeLs
    description: Actions related to Edge listing
  - name: edgeProcesses
    description: Actions related to Edge processes
  - name: event_breaker_rules
    description: Actions related to Event Breaker rules
  - name: events
    description: Actions related to Events
  - name: executors
    description: Actions related to Executors
  - name: expressions
    description: Actions related to expressions
  - name: features
    description: Actions related to Features
  - name: file
    description: Actions related to File
  - name: fileSampler
    description: Actions related to FileSampler
  - name: functions
    description: Actions related to functions
  - name: git
    description: Actions related to Git
  - name: global_variables
    description: Actions related to Global Variables
  - name: grokfiles
    description: Actions related to Grok files
  - name: groups
    description: Actions related to Groups
  - name: health
    description: Actions related to REST server health
  - name: hmac-functions
    description: Actions related to HMAC functions
  - name: ingest
    description: Actions related to Ingest
  - name: inputs
    description: Actions related to inputs
  - name: iometrics
    description: Actions related to source/destination metrics
  - name: jobs
    description: Actions related to Jobs
  - name: keys
    description: Actions related to encryption keys
  - name: kube-logs
    description: Actions related to Kube Logs
  - name: kube-proxy
    description: Actions related to Kube Proxy
  - name: lake
    description: Actions related to Lake
  - name: licenses
    description: Actions related to licenses. The <code>/licenses</code> endpoints
      do not apply to Cribl.Cloud deployments.
  - name: logger
    description: Actions related to Logger
  - name: logging
    description: Actions related to logging
  - name: lookups
    description: Actions related to lookups
  - name: macros
    description: Actions related to Macros
  - name: messages
    description: Actions related to messages
  - name: metrics
    description: Actions related to metrics
  - name: notification-targets
    description: Actions related to Notification Targets
  - name: notifications
    description: Actions related to Notifications
  - name: onlyOnPrem
  - name: outputs
    description: Actions related to outputs
  - name: packs
    description: Actions related to Packs
  - name: parquetschemas
    description: Actions related to Parquet schemas
  - name: parsers
    description: Actions related to parsers
  - name: pipelines
    description: Actions related to Pipelines
  - name: policies
    description: Actions related to Policies
  - name: preview
    description: Actions related to data preview
  - name: processes
    description: Actions related to Processes
  - name: profiler
    description: Actions related to Profiler
  - name: projects
    description: Actions related to Projects
  - name: protobuflibraries
    description: Actions related to Protobuf libraries
  - name: regexes
    description: Actions related to regular expressions
  - name: roles
    description: Actions related to Roles
  - name: routes
    description: Actions related to Routes
  - name: samples
    description: Actions related to samples
  - name: saved-jobs
    description: Actions related to Saved Jobs
  - name: savedQueries
    description: Actions related to saved queries
  - name: schemas
    description: Actions related to Schemas
  - name: scripts
    description: Actions related to scripts
  - name: search
    description: Actions related to Search
  - name: secrets
    description: Actions related to Secrets
  - name: security
    description: Actions related to Security
  - name: subscriptions
    description: Actions related to Subscriptions
  - name: system
    description: Actions related to system settings
  - name: teams
    description: Actions related to Teams
  - name: teams ACL
    description: Actions related to Teams ACL
  - name: trust-policies
    description: Actions related to Trust Policies
  - name: uiState
    description: Actions related to UiState
  - name: usage-groups
    description: Actions related to Usage Groups
  - name: users
    description: Actions related to users. The <code>/system/users</code> endpoints
      do not apply to Cribl.Cloud deployments. Instead use
      <code>/products/{product}/users</code>
  - name: users ACL
    description: Actions related to Users ACL
  - name: users,onlyOnPrem
    description: Actions related to Users,onlyOnPrem
  - name: versioning
    description: Actions related to Versioning
  - name: workers
    description: Actions related to Workers
paths:
  "/m/{groupId}/system/projects/{projectId}/subscriptions":
    get:
      operationId: getSystemProjectsSubscriptionsByGroupIdByAndProjectId
      tags:
        - projects
        - subscriptions
      summary: Get the Subscriptions associated with the Project
      description: Get the Subscriptions associated with the Project
      deprecated: false
      responses:
        "200":
          description: A list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
              example:
                count: 1
                items:
                  - id: "sub-default"
                    pipeline: "main"
                    description: "Default subscription to main pipeline"
                    disabled: false
                    filter: "env = 'prod'"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-3f9c2a1b"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
  "/m/{groupId}/system/projects/{projectId}/version/count":
    get:
      operationId: getSystemProjectsVersionCountByGroupIdAndProjectId
      tags:
        - projects
        - versioning
        - git
      summary: Get the count of files of changed
      description: Get the count of files of changed
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 2
                items:
                  - file: "routes/default.yml"
                    changeType: "modified"
                  - file: "system.yml"
                    changeType: "modified"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-7a1b9e4d"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
  "/m/{groupId}/system/projects/{projectId}/version/diff":
    get:
      operationId: getSystemProjectsVersionDiffByGroupIdAndProjectId
      tags:
        - projects
        - versioning
        - git
      summary: Get the textual diff for given commit
      description: Get the textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - file: "routes/default.yml"
                    diff: |-
                      @@ -1,3 +1,3 @@
                      - filter: env = 'dev'
                      + filter: env = 'prod'
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-2d4c8f11"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
        - name: commit
          in: query
          required: false
          schema:
            type: string
            example: "1a2b3c4d5e6f7g8h9i0j"
  "/m/{groupId}/system/projects/{projectId}/version/files":
    get:
      operationId: getSystemProjectsVersionFilesByGroupIdAndProjectId
      tags:
        - projects
        - versioning
        - git
      summary: Get the files changed
      description: Get the files changed
      deprecated: false
      responses:
        "200":
          description: A list of GitFilesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitFilesResponse"
              example:
                count: 2
                items:
                  - file: "routes/default.yml"
                    changeType: "modified"
                    additions: 3
                    deletions: 1
                  - file: "system.yml"
                    changeType: "modified"
                    additions: 1
                    deletions: 0
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-7a1b9e4d"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
  "/m/{groupId}/system/projects/{projectId}/version/commit":
    post:
      operationId: createSystemProjectsVersionCommitByGroupIdAndProjectId
      tags:
        - projects
        - versioning
        - git
      summary: Commit project changes
      description: Commit project changes
      deprecated: false
      responses:
        "200":
          description: A list of GitCommitSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitCommitSummary"
              example:
                count: 1
                items:
                  - commit: "1a2b3c4d5e6f7g8h9i0j"
                    message: "Update system settings and routes"
                    author: "cribl-bot <dev@acme.com>"
                    filesChanged: 2
                    date: "2025-10-06T12:00:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-5c2f1b88"
      requestBody:
        description: ProjectGitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectGitCommitParams"
            example:
              message: "Update system settings and routes"
              files:
                - "system.yml"
                - "routes/default.yml"
              effective: true
              group: "ops"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
  "/m/{groupId}/system/projects/{projectId}/subscriptions/{subscriptionId}/capture":
    post:
      operationId: createSystemProjectsSubscriptionsCaptureByGroupIdAndSubscriptionId
      tags:
        - preview
        - samples
        - projects
      summary: Capture live incoming data from a particular Project and Subscription
        at the Subscription
      description: Capture live incoming data from a particular Project and
        Subscription at the Subscription
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 3
                items:
                  - _raw: "127.0.0.1 - - [06/Oct/2025:12:00:00 +0000] \"GET /healthz HTTP/1.1\" 200 2"
                    timestamp: "2025-10-06T12:00:00Z"
                    source: "web_access"
                  - _raw: "{\"level\":\"info\",\"msg\":\"service started\"}"
                    timestamp: "2025-10-06T12:00:01Z"
                    source: "app_log"
                  - _raw: "<34>1 2025-10-06T12:00:02Z host app - - - started"
                    timestamp: "2025-10-06T12:00:02Z"
                    source: "syslog"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-9f1a2c3d"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
            example:
              durationSeconds: 10
              maxEvents: 100
              filter: "env = 'prod'"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
            example: "sub-default"
          description: Subscription Id
  "/m/{groupId}/system/projects/{projectId}/capture":
    post:
      operationId: createSystemProjectsCaptureByGroupIdAndProjectId
      tags:
        - preview
        - samples
        - projects
      summary: Capture live incoming data from a particular Project and Subscription
        at the Destination
      description: Capture live incoming data from a particular Project and
        Subscription at the Destination
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 3
                items:
                  - _raw: "127.0.0.1 - - [06/Oct/2025:12:00:00 +0000] \"GET /healthz HTTP/1.1\" 200 2"
                    timestamp: "2025-10-06T12:00:00Z"
                    destination: "Output:main"
                  - _raw: "{\"level\":\"info\",\"msg\":\"service started\"}"
                    timestamp: "2025-10-06T12:00:01Z"
                    destination: "Output:main"
                  - _raw: "<34>1 2025-10-06T12:00:02Z host app - - - started"
                    timestamp: "2025-10-06T12:00:02Z"
                    destination: "Output:main"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-abc123"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
            example:
              durationSeconds: 10
              maxEvents: 100
              destinationId: "Output:main"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
  "/m/{groupId}/system/projects/{projectId}/preview":
    post:
      operationId: createSystemProjectsPreviewByGroupIdAndProjectId
      tags:
        - preview
        - samples
        - projects
      summary: Sends sample events through a Pipeline  for specified Project and
        returns the results
      description: Sends sample events through a Pipeline  for specified Project and
        returns the results
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - results:
                      - _raw: "processed event"
                        pipeline: "main"
                        status: "ok"
                    previewId: "prev-12345"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-def456"
      requestBody:
        description: PreviewDataParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewDataParams"
            example:
              pipelineId: "main"
              events:
                - _raw: "test event"
              options:
                earliest: "-5m"
                latest: "now"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
  "/m/{groupId}/system/projects/{projectId}/pipelines":
    get:
      operationId: getSystemProjectsPipelinesByGroupIdAndProjectId
      tags:
        - pipelines
        - projects
      summary: Get A list of Pipeline objects for specified Project
      description: Get A list of Pipeline objects for specified Project
      responses:
        "200":
          description: A list of Pipeline objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
              example:
                count: 2
                items:
                  - id: "main"
                    name: "Main Pipeline"
                  - id: "enrich"
                    name: "Enrichment Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-ghi789"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
    post:
      operationId: createSystemProjectsPipelinesByGroupIdAndProjectId
      tags:
        - pipelines
        - projects
      summary: Create Pipeline
      description: Create Pipeline
      requestBody:
        description: New Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
            example:
              id: "new-pipeline"
              name: "New Pipeline"
      responses:
        "200":
          description: A list of Pipeline objects for specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
              example:
                count: 3
                items:
                  - id: "main"
                    name: "Main Pipeline"
                  - id: "enrich"
                    name: "Enrichment Pipeline"
                  - id: "new-pipeline"
                    name: "New Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-9f1a2c3d"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
  "/m/{groupId}/system/projects/{projectId}/pipelines/{pipelineId}":
    get:
      operationId: getSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
      tags:
        - pipelines
        - projects
      summary: Get Pipeline by ID in specified Project
      description: Get Pipeline by ID in specified Project
      responses:
        "200":
          description: A list of Pipeline objects in specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
              example:
                count: 1
                items:
                  - id: "main"
                    name: "Main Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-xyz001"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
            example: "main"
          description: Pipeline Id
    patch:
      operationId: updateSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
      tags:
        - pipelines
        - projects
      summary: Update Pipeline in specified Project
      description: Update Pipeline in specified Project
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
            example:
              id: "main"
              name: "Main Pipeline (updated)"
      responses:
        "200":
          description: A list of Pipeline objects for specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
              example:
                count: 1
                items:
                  - id: "main"
                    name: "Main Pipeline (updated)"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-xyz002"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
            example: "main"
          description: Pipeline iD
    delete:
      operationId: deleteSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
      tags:
        - pipelines
        - projects
      summary: Delete Pipeline in specified Project
      description: Delete Pipeline in specified Project
      responses:
        "200":
          description: A list of Pipeline objects for specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
              example:
                count: 1
                items:
                  - id: "main"
                    name: "Main Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-xyz003"
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "grp-prod-edge"
          description: Group Id
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            example: "config-group-prod-edge"
          description: Project Id
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
            example: "main"
          description: Pipeline Id
  /system/instance/:
    get:
      operationId: listInstanceSettingsSchema
      tags:
        - system
      summary: Get a list of InstanceSettingsSchema objects
      description: Get a list of InstanceSettingsSchema objects
      x-speakeasy-entity-operation: InstanceSettings#get
      responses:
        "200":
          description: a list of InstanceSettingsSchema objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/InstanceSettingsSchema"
              example:
                count: 1
                items:
                  - id: "default"
                    api:
                      host: "leader.example.com"
                      port: 9000
                      protocol: "https"
                    system:
                      intercom: false
                      upgrade: "api"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-inst-001"
  /system/banners:
    get:
      operationId: listBannerMessage
      tags:
        &a1
        - banners
      summary: Get a list of BannerMessage objects
      description: Get a list of BannerMessage objects
      responses:
        &a2
        "200":
          description: a list of BannerMessage objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/BannerMessage"
              example:
                count: 2
                items:
                  - id: "bnr-001"
                    message: "Scheduled maintenance at 02:00 UTC."
                    type: "info"
                    enabled: true
                  - id: "bnr-002"
                    message: "Incident resolved."
                    type: "success"
                    enabled: false
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-bnr-001"
    post:
      operationId: createBannerMessage
      tags: *a1
      summary: Create BannerMessage
      description: Create BannerMessage
      requestBody:
        description: New BannerMessage object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BannerMessage"
            example:
              message: "New feature rollout today."
              type: "info"
              enabled: true
      responses: *a2
  "/system/banners/{id}":
    get:
      operationId: getBannerMessageById
      tags: *a1
      summary: Get BannerMessage by ID
      description: Get BannerMessage by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a3
            type: string
            example: "bnr-001"
          description: Unique ID to GET
      responses: *a2
    patch:
      operationId: updateBannerMessageById
      tags: *a1
      summary: Update BannerMessage
      description: Update BannerMessage
      parameters:
        - name: id
          in: path
          required: true
          schema: *a3
          description: Unique ID to PATCH
          example: "bnr-001"
      requestBody:
        description: BannerMessage object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BannerMessage"
            example:
              message: "Maintenance window extended."
              type: "warning"
              enabled: true
      responses: *a2
    delete:
      operationId: deleteBannerMessageById
      tags: *a1
      summary: Delete BannerMessage
      description: Delete BannerMessage
      parameters:
        - name: id
          in: path
          required: true
          schema: *a3
          description: Unique ID to DELETE
          example: "bnr-001"
      responses: *a2
  /system/certificates:
    get:
      operationId: listCertificate
      tags:
        &a4
        - certificates
      summary: Get a list of Certificate objects
      description: Get a list of Certificate objects
      responses:
        &a5
        "200":
          description: a list of Certificate objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Certificate"
              example:
                count: 2
                items:
                  - id: "cert-001"
                    commonName: "leader.example.com"
                    issuer: "Acme Internal CA"
                    validFrom: "2025-01-01T00:00:00Z"
                    validTo: "2027-01-01T00:00:00Z"
                    fingerprint: "SHA256:3A:7F:91:...:B2"
                  - id: "cert-002"
                    commonName: "api.example.com"
                    issuer: "Acme Internal CA"
                    validFrom: "2025-06-01T00:00:00Z"
                    validTo: "2027-06-01T00:00:00Z"
                    fingerprint: "SHA256:9C:12:DE:...:5F"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-cert-001"
    post:
      operationId: createCertificate
      tags: *a4
      summary: Create Certificate
      description: Create Certificate
      requestBody:
        description: New Certificate object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Certificate"
            example:
              commonName: "leader.example.com"
              certPem: "-----BEGIN CERTIFICATE-----MIIB...-----END CERTIFICATE-----"
              keyPem: "-----BEGIN PRIVATE KEY-----MIIE...-----END PRIVATE KEY-----"
              issuer: "Acme Internal CA"
              validFrom: "2025-01-01T00:00:00Z"
              validTo: "2027-01-01T00:00:00Z"
      responses: *a5
  "/system/certificates/{id}":
    get:
      operationId: getCertificateById
      tags: *a4
      summary: Get Certificate by ID
      description: Get Certificate by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a6
            type: string
            example: "cert-001"
          description: Unique ID to GET
      responses: *a5
    patch:
      operationId: updateCertificateById
      tags: *a4
      summary: Update Certificate
      description: Update Certificate
      parameters:
        - name: id
          in: path
          required: true
          schema: *a6
          description: Unique ID to PATCH
      requestBody:
        description: Certificate object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Certificate"
            example:
              commonName: "leader.example.com"
              issuer: "Acme Internal CA"
              validTo: "2027-01-01T00:00:00Z"
      responses: *a5
    delete:
      operationId: deleteCertificateById
      tags: *a4
      summary: Delete Certificate
      description: Delete Certificate
      parameters:
        - name: id
          in: path
          required: true
          schema: *a6
          description: Unique ID to DELETE
          example: "cert-001"
      responses: *a5
  "/settings/features/{id}":
    get:
      operationId: getFeaturesEntryById
      tags:
        - features
      summary: Get feature by id (i.e. 'type-name`)
      description: Get feature by id (i.e. 'type-name`)
      deprecated: false
      responses:
        "200":
          description: a list of FeaturesEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/FeaturesEntry"
              example:
                count: 1
                items:
                  - id: "search-speedups"
                    enabled: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-feat-001"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "search-speedups"
          description: Feature id
  /settings/features:
    get:
      operationId: getFeaturesEntry
      tags:
        - features
      summary: List all features
      description: List all features
      deprecated: false
      responses:
        "200":
          description: a list of FeaturesEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/FeaturesEntry"
              example:
                count: 2
                items:
                  - id: "search-speedups"
                    enabled: true
                  - id: "dark-mode"
                    enabled: false
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-feat-002"
  /m/{groupId}/lib/jobs:
    get:
      operationId: listCollectors
      tags:
        &a7
        - saved-jobs
      summary: Get a list of Collector objects
      description: Get a list of Collector objects
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "default"
          description: The consumer group to which this instance belongs. Defaults to 'default'.
          default: default
          example: default
      responses:
        &a8
        "200":
          description: a list of Collector objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/InputCollector"
                    x-speakeasy-ignore: true
              example:
                count: 1
                items:
                  - id: "collector-1"
                    type: "http"
                    description: "HTTP collector for app logs"
                    config:
                      url: "https://api.example.com/logs"
                      method: "GET"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-coll-001"
    post:
      operationId: createSavedJob
      tags: *a7
      summary: Create Collector
      description: Create Collector
      x-speakeasy-entity-operation: Collector#create
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "default"
          description: The consumer group to which this instance belongs. Defaults to 'default'.
          default: default
          example: default
        - name: id
          in: query
          required: true
          description: The id of this collector instance
          schema:
            type: string
            example: "collector-2"
      requestBody:
        description: New Collector object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InputCollector"
            example:
              id: "collector-2"
              type: "http"
              description: "HTTP collector for metrics"
              config:
                url: "https://api.example.com/metrics"
                method: "POST"
                headers:
                  Authorization: "Bearer <token>"
      responses: *a8
  "/m/{groupId}/lib/jobs/{id}":
    get:
      operationId: getSavedJobById
      tags: *a7
      summary: Get Collector by ID
      description: Get Collector by ID
      x-speakeasy-entity-operation: Collector#get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a9
            type: string
          description: Unique ID to GET
          example: "myExistingJobId"
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          description: The consumer group to which this instance belongs. Defaults to 'default'.
          default: default
          example: "myExistingGroupId"
      responses: *a8
    patch:
      operationId: updateCollectorById
      tags: *a7
      summary: Update Collector
      description: Update Collector
      x-speakeasy-entity-operation: Collector#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a9
          description: Unique ID to PATCH
          example: "myJobIdToCRUD"
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          description: The consumer group to which this instance belongs. Defaults to 'default'.
          default: default
          example: "myExistingGroupId"
      requestBody:
        description: Collector object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InputCollector"
            example:
              description: "Updated HTTP collector for app logs"
              config:
                url: "https://api.example.com/logs"
                method: "GET"
                headers:
                  Authorization: "Bearer <token>"
      responses: *a8
    delete:
      operationId: deleteCollectorById
      tags: *a7
      summary: Delete Collector
      description: Delete Collector
      x-speakeasy-entity-operation: Collector#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a9
          description: Unique ID to DELETE
          example: "myJobIdToCRUD"
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          description: The consumer group to which this instance belongs. Defaults to 'default'.
          default: default
          example: "myExistingGroupId"
      responses: *a8
  /system/keys:
    get:
      operationId: listKeyMetadataEntity
      tags:
        &a10
        - keys
      summary: Get a list of KeyMetadataEntity objects
      description: Get a list of KeyMetadataEntity objects
      responses:
        &a11
        "200":
          description: a list of KeyMetadataEntity objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/KeyMetadataEntity"
              example:
                count: 2
                items:
                  - id: "key-001"
                    name: "encryption-key-prod"
                    createdAt: "2025-09-01T12:00:00Z"
                  - id: "key-002"
                    name: "signing-key-ci"
                    createdAt: "2025-10-01T08:30:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-keys-001"
    post:
      operationId: createKeyMetadataEntity
      tags: *a10
      summary: Create KeyMetadataEntity
      description: Create KeyMetadataEntity
      requestBody:
        description: New KeyMetadataEntity object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyMetadataEntity"
            example:
              name: "encryption-key-prod"
      responses: *a11
  "/system/keys/{id}":
    get:
      operationId: getKeyMetadataEntityById
      tags: *a10
      summary: Get KeyMetadataEntity by ID
      description: Get KeyMetadataEntity by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a12
            type: string
            example: "key-001"
          description: Unique ID to GET
      responses: *a11
    patch:
      operationId: updateKeyMetadataEntityById
      tags: *a10
      summary: Update KeyMetadataEntity
      description: Update KeyMetadataEntity
      parameters:
        - name: id
          in: path
          required: true
          schema: *a12
          description: Unique ID to PATCH
          example: "key-001"
      requestBody:
        description: KeyMetadataEntity object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyMetadataEntity"
            example:
              name: "encryption-key-prod-rotated"
      responses: *a11
    delete:
      operationId: deleteKeyMetadataEntityById
      tags: *a10
      summary: Delete KeyMetadataEntity
      description: Delete KeyMetadataEntity
      parameters:
        - name: id
          in: path
          required: true
          schema: *a12
          description: Unique ID to DELETE
          example: "key-001"
      responses: *a11
  /system/messages:
    get:
      operationId: listBulletinMessage
      tags:
        &a13
        - messages
      summary: Get a list of BulletinMessage objects
      description: Get a list of BulletinMessage objects
      responses:
        &a14
        "200":
          description: a list of BulletinMessage objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/BulletinMessage"
              example:
                count: 2
                items:
                  - id: "msg-001"
                    title: "Maintenance"
                    message: "Scheduled maintenance at 02:00 UTC."
                    level: "info"
                  - id: "msg-002"
                    title: "Incident"
                    message: "Degraded performance in EU region."
                    level: "warning"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-msg-001"
    post:
      operationId: createBulletinMessage
      tags: *a13
      summary: Create BulletinMessage
      description: Create BulletinMessage
      requestBody:
        description: New BulletinMessage object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulletinMessage"
            example:
              title: "Maintenance"
              message: "Scheduled maintenance at 02:00 UTC."
              level: "info"
      responses: *a14
  "/system/messages/{id}":
    get:
      operationId: getBulletinMessageById
      tags: *a13
      summary: Get BulletinMessage by ID
      description: Get BulletinMessage by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a15
            type: string
            example: "msg-001"
          description: Unique ID to GET
      responses: *a14
    delete:
      operationId: deleteBulletinMessageById
      tags: *a13
      summary: Delete BulletinMessage
      description: Delete BulletinMessage
      parameters:
        - name: id
          in: path
          required: true
          schema: *a15
          description: Unique ID to DELETE
          example: "msg-001"
      responses: *a14
  /notification-targets:
    get:
      operationId: listNotificationTarget
      tags:
        &a16
        - notification-targets
      summary: Get a list of NotificationTarget objects
      description: Get a list of NotificationTarget objects
      x-speakeasy-entity-operation: NotificationTarget#get
      responses:
        &a17
        "200":
          description: a list of NotificationTarget objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/NotificationTarget"
                    x-speakeasy-ignore: true
              example:
                count: 2
                items:
                  - id: "nt-slack-prod"
                    type: "slack"
                    name: "Slack - Prod Alerts"
                    config:
                      webhookUrl: "https://hooks.slack.com/services/T000/B000/XXXXX"
                      channel: "#alerts"
                  - id: "nt-email-ops"
                    type: "smtp"
                    name: "Email - Ops Team"
                    config:
                      smtpHost: "smtp.example.com"
                      smtpPort: 587
                      to:
                        - "ops@example.com"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-nt-001"
    post:
      operationId: createNotificationTarget
      tags: *a16
      summary: Create NotificationTarget
      description: Create NotificationTarget
      x-speakeasy-entity-operation: NotificationTarget#create
      requestBody:
        description: New NotificationTarget object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationTarget"
            example:
              id: "nt-slack-prod"
              type: "slack"
              name: "Slack - Prod Alerts"
              config:
                webhookUrl: "https://hooks.slack.com/services/T000/B000/XXXXX"
                channel: "#alerts"
      responses: *a17
  "/notification-targets/{id}":
    get:
      operationId: getNotificationTargetById
      tags: *a16
      summary: Get NotificationTarget by ID
      description: Get NotificationTarget by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a18
            type: string
            example: "nt-slack-prod"
          description: Unique ID to GET
      responses: *a17
    patch:
      operationId: updateNotificationTargetById
      tags: *a16
      summary: Update NotificationTarget
      description: Update NotificationTarget
      x-speakeasy-entity-operation: NotificationTarget#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a18
          description: Unique ID to PATCH
          example: "nt-slack-prod"
      requestBody:
        description: NotificationTarget object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationTarget"
            example:
              name: "Slack - Production Alerts"
              config:
                channel: "#prod-alerts"
      responses: *a17
    delete:
      operationId: deleteNotificationTargetById
      tags: *a16
      summary: Delete NotificationTarget
      description: Delete NotificationTarget
      x-speakeasy-entity-operation: NotificationTarget#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a18
          description: Unique ID to DELETE
          example: "nt-slack-prod"
      responses: *a17
  /notifications:
    get:
      operationId: listNotification
      tags:
        &a19
        - notifications
      summary: Get a list of Notification objects
      description: Get a list of Notification objects
      responses:
        &a20
        "200":
          description: a list of Notification objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Notification"
              example:
                count: 2
                items:
                  - id: "notif-001"
                    type: "slack"
                    targetId: "nt-slack-prod"
                    title: "High error rate"
                    message: "Error rate exceeded threshold in api service."
                    severity: "critical"
                  - id: "notif-002"
                    type: "email"
                    targetId: "nt-email-ops"
                    title: "Daily report"
                    message: "Ingest summary attached."
                    severity: "info"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-notif-001"
    post:
      operationId: createNotification
      tags: *a19
      summary: Create Notification
      description: Create Notification
      x-speakeasy-entity-operation: Notification#create
      requestBody:
        description: New Notification object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
            example:
              type: "slack"
              targetId: "nt-slack-prod"
              title: "Deployment complete"
              message: "v6.0.1 deployed to production."
              severity: "info"
      responses: *a20
  "/notifications/{id}":
    get:
      operationId: getNotificationById
      tags: *a19
      summary: Get Notification by ID
      description: Get Notification by ID
      x-speakeasy-entity-operation: Notification#get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a21
            type: string
            example: "notif-001"
          description: Unique ID to GET
      responses: *a20
    patch:
      operationId: updateNotificationById
      tags: *a19
      summary: Update Notification
      description: Update Notification
      x-speakeasy-entity-operation: Notification#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a21
          description: Unique ID to PATCH
          example: "notif-001"
      requestBody:
        description: Notification object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
            example:
              title: "High latency - resolved"
              severity: "info"
      responses: *a20
    delete:
      operationId: deleteNotificationById
      tags: *a19
      summary: Delete Notification
      description: Delete Notification
      x-speakeasy-entity-operation: Notification#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a21
          description: Unique ID to DELETE
          example: "notif-001"
      responses: *a20
  /system/policies:
    get:
      operationId: listPolicyRule
      tags:
        &a22
        - policies
      summary: Get a list of PolicyRule objects
      description: Get a list of PolicyRule objects
      responses:
        &a23
        "200":
          description: a list of PolicyRule objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PolicyRule"
              example:
                count: 2
                items:
                  - id: "policy-read-pipelines"
                    action: "read"
                    resource: "pipeline:*"
                    effect: "allow"
                  - id: "policy-write-routes"
                    action: "write"
                    resource: "routes:*"
                    effect: "allow"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-pol-001"
    post:
      operationId: createPolicyRule
      tags: *a22
      summary: Create PolicyRule
      description: Create PolicyRule
      requestBody:
        description: New PolicyRule object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyRule"
            example:
              id: "policy-read-pipelines"
              action: "read"
              resource: "pipeline:*"
              effect: "allow"
      responses: *a23
  "/system/policies/{id}":
    get:
      operationId: getPolicyRuleById
      tags: *a22
      summary: Get PolicyRule by ID
      description: Get PolicyRule by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a24
            type: string
            example: "policy-read-pipelines"
          description: Unique ID to GET
      responses: *a23
    patch:
      operationId: updatePolicyRuleById
      tags: *a22
      summary: Update PolicyRule
      description: Update PolicyRule
      parameters:
        - name: id
          in: path
          required: true
          schema: *a24
          description: Unique ID to PATCH
          example: "policy-read-pipelines"
      requestBody:
        description: PolicyRule object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyRule"
            example:
              effect: "deny"
      responses: *a23
    delete:
      operationId: deletePolicyRuleById
      tags: *a22
      summary: Delete PolicyRule
      description: Delete PolicyRule
      parameters:
        - name: id
          in: path
          required: true
          schema: *a24
          description: Unique ID to DELETE
          example: "policy-read-pipelines"
      responses: *a23
  /system/roles:
    get:
      operationId: listRole
      tags:
        &a25
        - roles
      summary: Get a list of Role objects
      description: Get a list of Role objects
      responses:
        &a26
        "200":
          description: a list of Role objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Role"
              example:
                count: 2
                items:
                  - id: "role-admin"
                    name: "Admin"
                    description: "Full access to all resources"
                  - id: "role-viewer"
                    name: "Viewer"
                    description: "Read-only access to dashboards and data"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-role-001"
    post:
      operationId: createRole
      tags: *a25
      summary: Create Role
      description: Create Role
      requestBody:
        description: New Role object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
            example:
              id: "role-analyst"
              name: "Analyst"
              description: "Access to search and saved queries"
      responses: *a26
  "/system/roles/{id}":
    get:
      operationId: getRoleById
      tags: *a25
      summary: Get Role by ID
      description: Get Role by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a27
            type: string
            example: "role-admin"
          description: Unique ID to GET
      responses: *a26
    patch:
      operationId: updateRoleById
      tags: *a25
      summary: Update Role
      description: Update Role
      parameters:
        - name: id
          in: path
          required: true
          schema: *a27
          description: Unique ID to PATCH
          example: "role-analyst"
      requestBody:
        description: Role object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
            example:
              description: "Access to search, saved queries, and metrics"
      responses: *a26
    delete:
      operationId: deleteRoleById
      tags: *a25
      summary: Delete Role
      description: Delete Role
      parameters:
        - name: id
          in: path
          required: true
          schema: *a27
          description: Unique ID to DELETE
          example: "role-analyst"
      responses: *a26
  /system/scripts:
    get:
      operationId: listScript
      tags:
        &a28
        - scripts
      summary: Get a list of Script objects
      description: Get a list of Script objects
      responses:
        &a29
        "200":
          description: a list of Script objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ScriptLibEntry"
              example:
                count: 2
                items:
                  - id: "util-parse-json"
                    name: "Parse JSON Utility"
                    language: "javascript"
                  - id: "util-enrich-ip"
                    name: "Enrich IP with Geo"
                    language: "javascript"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-script-001"
    post:
      operationId: createScript
      tags: *a28
      summary: Create Script
      description: Create Script
      requestBody:
        description: New Script object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScriptLibEntry"
            example:
              id: "util-normalize-log"
              name: "Normalize Log"
              language: "javascript"
              code: "function normalize(e){ /* ... */ return e; }"
      responses: *a29
  "/system/scripts/{id}":
    get:
      operationId: getScriptById
      tags: *a28
      summary: Get Script by ID
      description: Get Script by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a30
            type: string
            example: "util-parse-json"
          description: Unique ID to GET
      responses: *a29
    patch:
      operationId: updateScriptById
      tags: *a28
      summary: Update Script
      description: Update Script
      parameters:
        - name: id
          in: path
          required: true
          schema: *a30
          description: Unique ID to PATCH
          example: "util-parse-json"
      requestBody:
        description: Script object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScriptLibEntry"
            example:
              id: "util-parse-json"
              name: "Parse JSON Utility"
              language: "javascript"
              code: "function parse(e){ try { e._json = JSON.parse(e._raw); } catch(_){} return e; }"
      responses: *a29
    delete:
      operationId: deleteScriptById
      tags: *a28
      summary: Delete Script
      description: Delete Script
      parameters:
        - name: id
          in: path
          required: true
          schema: *a30
          description: Unique ID to DELETE
          example: "util-parse-json"
      responses: *a29
  /system/teams:
    post:
      operationId: createTeam
      tags:
        &a31
        - teams
      summary: Create Team
      description: Create Team
      requestBody:
        description: New Team object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
            example:
              name: "Platform Team"
              description: "Owns core pipelines and infrastructure"
      responses:
        &a32
        "200":
          description: a list of Team objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Team"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      operationId: getTeam
      tags:
        - teams
      summary: Get a list of Team objects
      description: Get a list of Team objects
      deprecated: false
      responses:
        "200":
          description: a list of Team objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Team"
              example:
                count: 2
                items:
                  - id: "team-platform"
                    name: "Platform Team"
                    description: "Owns core pipelines and infrastructure"
                  - id: "team-analytics"
                    name: "Analytics Team"
                    description: "Builds dashboards and insights"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-team-001"
      parameters:
        - name: product
          in: query
          required: false
          schema:
            type: string
            enum:
              - stream
              - edge
              - search
          description: filter teams by product
          example: "stream"
  "/system/teams/{id}":
    get:
      operationId: getTeamById
      tags: *a31
      summary: Get Team by ID
      description: Get Team by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a33
            type: string
            example: "team-platform"
          description: Unique ID to GET
      responses: *a32
    patch:
      operationId: updateTeamById
      tags: *a31
      summary: Update Team
      description: Update Team
      parameters:
        - name: id
          in: path
          required: true
          schema: *a33
          description: Unique ID to PATCH
          example: "team-platform"
      requestBody:
        description: Team object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
            example:
              description: "Owns core pipelines, infrastructure, and security"
      responses: *a32
    delete:
      operationId: deleteTeamById
      tags: *a31
      summary: Delete Team
      description: Delete Team
      parameters:
        - name: id
          in: path
          required: true
          schema: *a33
          description: Unique ID to DELETE
          example: "team-platform"
      responses: *a32
  "/system/teams/{id}/acl":
    get:
      operationId: getTeamAclById
      tags:
        - teams
      summary: Get Teams's Access Control List
      description: Get Teams's Access Control List
      deprecated: false
      responses:
        "200":
          description: a list of ResourcePolicy objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourcePolicy"
              example:
                count: 2
                items:
                  - resource: "pipeline:main"
                    actions: ["read","write"]
                    effect: "allow"
                  - resource: "output:s3-main"
                    actions: ["read"]
                    effect: "allow"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-team-acl-001"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "team-platform"
          description: Team name
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - groups
              - datasets
              - dataset-providers
              - projects
              - dashboards
              - macros
          description: resource type by which to filter access levels
  "/system/teams/users/{id}/roles":
    get:
      operationId: getTeamRolesById
      tags:
        - teams
      summary: Get user's product roles
      description: Get user's product roles
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 2
                items:
                  - "admin"
                  - "analyst"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-team-roles-001"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "user-12345"
          description: user id
  "/system/teams/{id}/users":
    get:
      operationId: getTeamUsersById
      tags:
        - teams
      summary: Get users on a team
      description: Get users on a team
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 2
                items:
                  - "alice@example.com"
                  - "bob@example.com"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-team-users-001"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "team-platform"
          description: Team Name
    post:
      operationId: createTeamUsersById
      tags:
        - teams
      summary: Update existing users on a team – admin use only
      description: Update existing users on a team – admin use only
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 2
                items:
                  - "alice@example.com"
                  - "charlie@example.com"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-team-users-002"
      requestBody:
        description: MembershipSchema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipSchema"
            example:
              add:
                - "charlie@example.com"
              remove:
                - "bob@example.com"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "team-platform"
          description: Team name
  /system/users:
    get:
      operationId: listUser
      tags:
        &a34
        - users
        - onlyOnPrem
      summary: Get a list of User objects
      description: Get a list of User objects
      responses:
        &a35
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
              example:
                count: 2
                items:
                  - id: "user-12345"
                    email: "alice@example.com"
                    name: "Alice Doe"
                    roles:
                      - "admin"
                      - "analyst"
                  - id: "user-67890"
                    email: "bob@example.com"
                    name: "Bob Smith"
                    roles:
                      - "viewer"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-users-001"
    post:
      operationId: createUser
      tags: *a34
      summary: Create User
      description: Create User
      requestBody:
        description: New User object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            example:
              email: "charlie@example.com"
              name: "Charlie Johnson"
              roles:
                - "analyst"
      responses: *a35
  "/system/users/{id}":
    get:
      operationId: getUserById
      tags: *a34
      summary: Get User by ID
      description: Get User by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a36
            type: string
            example: "user-12345"
          description: Unique ID to GET
      responses: *a35
    patch:
      operationId: updateUserById
      tags:
        - users
        - onlyOnPrem
      summary: Update User properties – admin use only
      description: Update User properties – admin use only
      deprecated: false
      responses:
        "200":
          description: a list of UserProfile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserProfile"
              example:
                count: 1
                items:
                  - id: "user-12345"
                    email: "alice@example.com"
                    name: "Alice Doe"
                    roles: ["admin","analyst"]
                    mfaEnabled: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-user-001"
      requestBody:
        description: UserProfile object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
            example:
              name: "Alice Doe"
              mfaEnabled: true
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "user-12345"
          description: User Id
    delete:
      operationId: deleteUserById
      tags: *a34
      summary: Delete User
      description: Delete User
      parameters:
        - name: id
          in: path
          required: true
          schema: *a36
          description: Unique ID to DELETE
          example: "user-12345"
      responses: *a35
  "/system/users/{id}/info":
    patch:
      operationId: updateUserInfoById
      tags:
        - users
        - onlyOnPrem
      summary: Update User except for their roles
      description: Update User except for their roles
      deprecated: false
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
              example:
                count: 1
                items:
                  - id: "user-12345"
                    email: "alice@example.com"
                    name: "Alice Doe"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-user-002"
      requestBody:
        description: UserInfo object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfo"
            example:
              name: "Alice Doe"
              phone: "+1-415-555-0100"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "user-12345"
          description: User Id
  "/products/lake/lakes/default/lakehouses":
    get:
      tags:
        - LakeHouse
      summary: List lakehouses for default lake
      description: Retrieves a list of lakehouses associated with the default lake
      operationId: listDefaultLakeLakehouses
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
              example:
                count: 2
                items:
                  - id: "lakehouse-01"
                    name: "Prod Lakehouse"
                    region: "us-east-1"
                  - id: "lakehouse-02"
                    name: "EU Lakehouse"
                    region: "eu-west-1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-lake-001"
    post:
      tags:
        - LakeHouse
      summary: Create a new lakehouse in default lake
      description: Creates a new lakehouse in the default lake
      operationId: createDefaultLakeLakehouse
      x-speakeasy-entity-operation: CriblLakeHouse#create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lakehouse'
            example:
              id: "lakehouse-03"
              name: "Analytics Lakehouse"
              region: "us-west-2"
      responses:
        "200":
          description: a list of CriblLakeHouse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
              example:
                count: 3
                items:
                  - id: "lakehouse-01"
                    name: "Prod Lakehouse"
                    region: "us-east-1"
                  - id: "lakehouse-02"
                    name: "EU Lakehouse"
                    region: "eu-west-1"
                  - id: "lakehouse-03"
                    name: "Analytics Lakehouse"
                    region: "us-west-2"
  "/products/lake/lakes/default/lakehouses/{id}":
    get:
      tags:
        - LakeHouse
      summary: Get lakehouse by ID
      description: Retrieves a specific lakehouse by its ID from the default lake
      operationId: getDefaultLakeLakehouseById
      x-speakeasy-entity-operation: CriblLakeHouse#get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "lakehouse-01"
          description: The ID of the lakehouse to retrieve
      responses:
        "200":
          description: a list of Lakehouse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
              example:
                count: 1
                items:
                  - id: "lakehouse-01"
                    name: "Prod Lakehouse"
                    region: "us-east-1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-lakehouse-get-001"
    patch:
      tags:
        - LakeHouse
      summary: Update lakehouse by ID
      description: Updates a specific lakehouse by its ID in the default lake
      operationId: updateDefaultLakeLakehouseById
      x-speakeasy-entity-operation: CriblLakeHouse#update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "lakehouse-01"
          description: The ID of the lakehouse to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lakehouse'
            example:
              name: "Prod Lakehouse - Updated"
              region: "us-east-1"
      responses:
        "200":
          description: a list of Lakehouse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
              example:
                count: 1
                items:
                  - id: "lakehouse-01"
                    name: "Prod Lakehouse - Updated"
                    region: "us-east-1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-lakehouse-patch-001"
    delete:
      tags:
        - LakeHouse
      summary: Delete lakehouse by ID
      description: Deletes a specific lakehouse by its ID from the default lake
      operationId: deleteDefaultLakeLakehouseById
      x-speakeasy-entity-operation: CriblLakeHouse#delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "lakehouse-01"
          description: The ID of the lakehouse to delete
      responses:
        "200":
          description: a list of Lakehouse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
              example:
                count: 0
                items: []
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-lakehouse-del-001"
  "/products/lake/lakes/{lakeId}/datasets":
    post:
      operationId: createCriblLakeDatasetByLakeId
      tags:
        - lake
      summary: Create a Dataset in the specified Lake
      description: Create a Dataset in the specified Lake
      x-speakeasy-entity-operation: CriblLakeDataset#create
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
              example:
                count: 1
                items:
                  - id: "web-logs"
                    name: "Web Logs"
                    provider: "s3"
                    region: "us-east-1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-lake-datasets-001"
      requestBody:
        description: CriblLakeDataset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CriblLakeDataset"
            example:
              id: "web-logs"
              name: "Web Logs"
              provider: "s3"
              region: "us-east-1"
      parameters:
        - name: lakeId
          in: path
          required: true
          default: "default"
          schema:
            type: string
            enum:
              - default
          description: lake id that contains the Datasets
          example: default
    get:
      operationId: getCriblLakeDatasetByLakeId
      tags:
        - lake
      summary: Get the list of Dataset contained in the specified Lake
      description: Get the list of Dataset contained in the specified Lake
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
              example:
                count: 2
                items:
                  - id: "web-logs"
                    name: "Web Logs"
                    provider: "s3"
                    region: "us-east-1"
                  - id: "security-events"
                    name: "Security Events"
                    provider: "s3"
                    region: "eu-west-1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-lake-datasets-002"
      parameters:
        - name: lakeId
          in: path
          required: true
          default: "default"
          schema:
            type: string
            enum:
              - default
          example: default
          description: lake id that contains the Datasets
  "/products/lake/lakes/default/lakehouses/{lakehouse_id}/datasets/{lake_dataset_id}/connections":
    post:
      tags:
        - lakehouse-dataset-connections
      summary: Create lakehouse dataset connections
      description: Create connections for a specific dataset within a lakehouse
      operationId: createLakehouseDatasetConnections
      x-speakeasy-entity-operation: LakehouseDatasetConnection#create
      parameters:
        - name: lakehouse_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the lakehouse
          example: "lakehouse-01"
        - name: lake_dataset_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the dataset within the lakehouse
          example: "web-logs"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
            example:
              connections:
                - type: "s3"
                  bucket: "my-lakehouse-bucket"
                  region: "us-east-1"
      responses:
        '200':
          description: Successfully created dataset connections
          content:
            application/json:
              schema:
                type: object
              example:
                created: 1
        '400':
          description: Bad request - invalid parameters
        '404':
          description: Lakehouse or dataset not found
        '500':
          description: Internal server error
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 1000
          maxInterval: 30000
          maxElapsedTime: 900000
          exponent: 2.0
        statusCodes:
          - 400
          - 401
          - 404
          - 500
    patch:
      tags:
        - lakehouse-dataset-connections
      summary: Update lakehouse dataset connections
      description: Update connections for a specific dataset within a lakehouse
      operationId: updateLakehouseDatasetConnections
      x-speakeasy-entity-operation: LakehouseDatasetConnection#update
      parameters:
        - name: lakehouse_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the lakehouse
          example: "lakehouse-01"
        - name: lake_dataset_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the dataset within the lakehouse
          example: "web-logs"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
            example:
              connections:
                - type: "s3"
                  bucket: "my-lakehouse-bucket"
                  region: "us-east-1"
                  prefix: "updated/"
      responses:
        '200':
          description: Successfully updated dataset connections
          content:
            application/json:
              schema:
                type: object
              example:
                updated: 1
        '400':
          description: Bad request - invalid parameters
        '404':
          description: Lakehouse or dataset not found
        '500':
          description: Internal server error
    delete:
      tags:
        - lakehouse-dataset-connections
      summary: Delete lakehouse dataset connections
      description: Delete all connections for a specific dataset within a lakehouse
      operationId: deleteLakehouseDatasetConnections
      x-speakeasy-entity-operation: LakehouseDatasetConnection#delete
      parameters:
        - name: lakehouse_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the lakehouse
          example: "lakehouse-01"
        - name: lake_dataset_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the dataset within the lakehouse
          example: "web-logs"
      responses:
        "200":
          description: a list of Connection objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
              example:
                count: 0
                items: []
  "/products/lake/lakes/{lakeId}/datasets/{id}":
    delete:
      operationId: deleteCriblLakeDatasetByLakeIdAndId
      tags:
        - lake
      summary: Delete a Dataset in the specified Lake
      description: Delete a Dataset in the specified Lake
      x-speakeasy-entity-operation: CriblLakeDataset#delete
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
              example:
                count: 0
                items: []
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-lake-datasets-del-001"
      parameters:
        - name: lakeId
          in: path
          required: true
          default: "default"
          schema:
            type: string
            enum:
              - default
          description: lake id that contains the Datasets
          example: default
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: dataset id to delete
          example: web-logs
    get:
      operationId: getCriblLakeDatasetByLakeIdAndId
      tags:
        - lake
      summary: Get a Dataset in the specified Lake
      description: Get a Dataset in the specified Lake
      x-speakeasy-entity-operation: CriblLakeDataset#get
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
              example:
                count: 1
                items:
                  - id: "web-logs"
                    name: "Web Logs"
                    provider: "s3"
                    region: "us-east-1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-lake-datasets-get-001"
      parameters:
        - name: lakeId
          in: path
          required: true
          default: "default"
          schema:
            type: string
            enum:
              - default
          example: default
          description: lake id that contains the Datasets
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: dataset id to get
          example: web-logs
    patch:
      operationId: updateCriblLakeDatasetByLakeIdAndId
      tags:
        - lake
      summary: Update a Dataset in the specified Lake
      description: Update a Dataset in the specified Lake
      x-speakeasy-entity-operation: CriblLakeDataset#update
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
              example:
                count: 1
                items:
                  - id: "web-logs"
                    name: "Web Logs - Updated"
                    provider: "s3"
                    region: "us-east-1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-lake-datasets-patch-001"
      requestBody:
        description: CriblLakeDataset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CriblLakeDataset"
            example:
              name: "Web Logs - Updated"
      parameters:
        - name: lakeId
          in: path
          required: true
          default: "default"
          schema:
            type: string
            enum:
              - default
          example: default
          description: lake id that contains the Datasets
          example: "myExistingLakeId"
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: dataset id to update
          example: "myLakeDatasetToCRUD"
  /m/default_search/search/dashboard-categories:
    get:
      operationId: listDashboardCategory
      tags:
        &a37
        - dashboardCategories
      summary: Get a list of DashboardCategory objects
      description: Get a list of DashboardCategory objects
      x-speakeasy-entity-operation: SearchDashboardCategory#get
      responses:
        &a38
        "200":
          description: a list of DashboardCategory objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DashboardCategory"
              example:
                count: 2
                items:
                  - id: "observability"
                    name: "Observability"
                  - id: "security"
                    name: "Security"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-dashcats-001"
    post:
      operationId: createDashboardCategory
      tags: *a37
      summary: Create DashboardCategory
      description: Create DashboardCategory
      x-speakeasy-entity-operation: SearchDashboardCategory#create
      requestBody:
        description: New DashboardCategory object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardCategory"
            example:
              id: "product"
              name: "Product"
      responses: *a38
  "/m/default_search/search/dashboard-categories/{id}":
    get:
      operationId: getDashboardCategoryById
      tags: *a37
      summary: Get DashboardCategory by ID
      description: Get DashboardCategory by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a39
            type: string
            example: "observability"
          description: Unique ID to GET
      responses: *a38
    patch:
      operationId: updateDashboardCategoryById
      tags: *a37
      summary: Update DashboardCategory
      description: Update DashboardCategory
      x-speakeasy-entity-operation: SearchDashboardCategory#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a39
          description: Unique ID to PATCH
          example: "observability"
      requestBody:
        description: DashboardCategory object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardCategory"
            example:
              name: "Observability & SRE"
      responses: *a38
    delete:
      operationId: deleteDashboardCategoryById
      tags: *a37
      summary: Delete DashboardCategory
      description: Delete DashboardCategory
      x-speakeasy-entity-operation: SearchDashboardCategory#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a39
          description: Unique ID to DELETE
          example: "observability"
      responses: *a38
  /m/default_search/search/usage-groups:
    get:
      operationId: listUsageGroup
      tags:
        &a40
        - usage-groups
      summary: Get a list of UsageGroup objects
      description: Get a list of UsageGroup objects
      x-speakeasy-entity-operation: SearchUsageGroup#get
      responses:
        &a41
        "200":
          description: a list of UsageGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UsageGroup"
              example:
                count: 2
                items:
                  - id: "platform"
                    name: "Platform"
                  - id: "security"
                    name: "Security"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-usagegroups-001"
    post:
      operationId: createUsageGroup
      tags: *a40
      summary: Create UsageGroup
      description: Create UsageGroup
      x-speakeasy-entity-operation: SearchUsageGroup#create
      requestBody:
        description: New UsageGroup object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageGroup"
            example:
              id: "analytics"
              name: "Analytics"
      responses: *a41
  "/m/default_search/search/usage-groups/{id}":
    get:
      operationId: getUsageGroupById
      tags: *a40
      summary: Get UsageGroup by ID
      description: Get UsageGroup by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a42
            type: string
            example: "platform"
          description: Unique ID to GET
      responses: *a41
    patch:
      operationId: updateUsageGroupById
      tags: *a40
      summary: Update UsageGroup
      description: Update UsageGroup
      x-speakeasy-entity-operation: SearchUsageGroup#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a42
          description: Unique ID to PATCH
          example: "platform"
      requestBody:
        description: UsageGroup object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageGroup"
            example:
              name: "Platform Engineering"
      responses: *a41
    delete:
      operationId: deleteUsageGroupById
      tags: *a40
      summary: Delete UsageGroup
      description: Delete UsageGroup
      x-speakeasy-entity-operation: SearchUsageGroup#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a42
          description: Unique ID to DELETE
          example: "platform"
      responses: *a41
  /search/dataset-provider-types:
    get:
      operationId: listDatasetProviderType
      tags:
        &a43
        - datasets
      summary: Get a list of DatasetProviderType objects
      description: Get a list of DatasetProviderType objects
      responses:
        &a44
        "200":
          description: a list of DatasetProviderType objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatasetProviderType"
              example:
                count: 2
                items:
                  - id: "s3"
                    name: "Amazon S3"
                  - id: "azure-blob"
                    name: "Azure Blob Storage"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDatasetProviderType
      tags: *a43
      summary: Create DatasetProviderType
      description: Create DatasetProviderType
      requestBody:
        description: New DatasetProviderType object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetProviderType"
            example:
              id: "gcs"
              name: "Google Cloud Storage"
      responses: *a44
  "/search/dataset-provider-types/{id}":
    get:
      operationId: getDatasetProviderTypeById
      tags: *a43
      summary: Get DatasetProviderType by ID
      description: Get DatasetProviderType by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a45
            type: string
          description: Unique ID to GET
          example: "s3"
      responses: *a44
    patch:
      operationId: updateDatasetProviderTypeById
      tags: *a43
      summary: Update DatasetProviderType
      description: Update DatasetProviderType
      parameters:
        - name: id
          in: path
          required: true
          schema: *a45
          description: Unique ID to PATCH
          example: "s3"
      requestBody:
        description: DatasetProviderType object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetProviderType"
            example:
              name: "Amazon S3 (updated)"
      responses: *a44
    delete:
      operationId: deleteDatasetProviderTypeById
      tags: *a43
      summary: Delete DatasetProviderType
      description: Delete DatasetProviderType
      parameters:
        - name: id
          in: path
          required: true
          schema: *a45
          description: Unique ID to DELETE
          example: "s3"
      responses: *a44
  /m/default_search/search/dataset-providers:
    get:
      operationId: listDatasetProvider
      tags:
        &a46
        - datasets
      summary: Get a list of DatasetProvider objects
      description: Get a list of DatasetProvider objects
      responses:
        &a47
        "200":
          description: a list of DatasetProvider objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GenericProvider"
              example:
                count: 2
                items:
                  - id: "provider-s3-main"
                    type: "s3"
                    name: "S3 Main Bucket"
                  - id: "provider-azure-logs"
                    type: "azure-blob"
                    name: "Azure Logs Container"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDatasetProvider
      tags: *a46
      summary: Create DatasetProvider
      description: Create DatasetProvider
      x-speakeasy-entity-operation: SearchDatasetProvider#create
      requestBody:
        description: New DatasetProvider object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenericProvider"
            example:
              id: "provider-s3-backup"
              type: "s3"
              name: "S3 Backup Bucket"
              config:
                bucket: "company-backup-logs"
                region: "us-west-2"
      responses: *a47
  "/m/default_search/search/dataset-providers/{id}":
    get:
      operationId: getDatasetProviderById
      tags: *a46
      summary: Get DatasetProvider by ID
      description: Get DatasetProvider by ID
      x-speakeasy-entity-operation: SearchDatasetProvider#read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a48
            type: string
            example: "provider-s3-main"
          description: Unique ID to GET
      responses: *a47
    patch:
      operationId: updateDatasetProviderById
      tags: *a46
      summary: Update DatasetProvider
      description: Update DatasetProvider
      x-speakeasy-entity-operation: SearchDatasetProvider#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a48
          description: Unique ID to PATCH
          example: "provider-s3-main"
      requestBody:
        description: DatasetProvider object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenericProvider"
            example:
              name: "S3 Main Bucket (updated)"
      responses: *a47
    delete:
      operationId: deleteDatasetProviderById
      tags: *a46
      summary: Delete DatasetProvider
      description: Delete DatasetProvider
      x-speakeasy-entity-operation: SearchDatasetProvider#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a48
          description: Unique ID to DELETE
          example: "provider-s3-main"
      responses: *a47
  /m/default_search/search/datasets:
    get:
      operationId: listDataset
      tags:
        &a49
        - datasets
      summary: Get a list of Dataset objects
      description: Get a list of Dataset objects
      responses:
        &a50
        "200":
          description: a list of Dataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GenericDataset"
              example:
                count: 2
                items:
                  - id: "web-logs"
                    name: "Web Logs"
                    providerId: "provider-s3-main"
                  - id: "security-events"
                    name: "Security Events"
                    providerId: "provider-s3-main"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDataset
      tags: *a49
      summary: Create Dataset
      description: Create Dataset
      x-speakeasy-entity-operation: SearchDataset#create
      requestBody:
        description: New Dataset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenericDataset"
            example:
              id: "analytics"
              name: "Analytics"
              providerId: "provider-s3-main"
      responses: *a50
  "/m/default_search/search/datasets/{id}":
    get:
      operationId: getDatasetById
      tags: *a49
      summary: Get Dataset by ID
      description: Get Dataset by ID
      x-speakeasy-entity-operation: SearchDataset#read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a51
            type: string
            example: "web-logs"
          description: Unique ID to GET
      responses: *a50
    patch:
      operationId: updateDatasetById
      tags: *a49
      summary: Update Dataset
      description: Update Dataset
      x-speakeasy-entity-operation: SearchDataset#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a51
          description: Unique ID to PATCH
          example: "web-logs"
      requestBody:
        description: Dataset object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenericDataset"
            example:
              name: "Web Logs - Updated"
      responses: *a50
    delete:
      operationId: deleteDatasetById
      tags: *a49
      summary: Delete Dataset
      description: Delete Dataset
      x-speakeasy-entity-operation: SearchDataset#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a51
          description: Unique ID to DELETE
          example: "web-logs"
      responses: *a50
  "/search/datasets/{id}/acl":
    get:
      operationId: getDatasetAclById
      responses:
        &a55
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
              example:
                count: 2
                items:
                  - user: "alice@example.com"
                    perms:
                      - resource: "dataset:web-logs"
                        actions: ["read"]
                  - user: "bob@example.com"
                    perms:
                      - resource: "dataset:web-logs"
                        actions: ["read","write"]
        "401":
          &a52
          description: Unauthorized
        "500":
          &a53
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema: *a51
          description: Unique ID for ACL Get
          example: "web-logs"
      description: List accesses to Dataset granted to users
      summary: Get Dataset ACL
      tags:
        &a54
        - datasets
        - users ACL
  "/search/datasets/{id}/acl/apply":
    post:
      operationId: createDatasetAclApplyById
      requestBody:
        &a56
        description: AccessControlSchema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessControlSchema"
            example:
              entries:
                - principal: "alice@example.com"
                  resource: "dataset:web-logs"
                  actions: ["read","write"]
                - principal: "team:platform"
                  resource: "dataset:web-logs"
                  actions: ["read"]
      responses:
        &a57
        "200":
          description: N/A
        "401": *a52
        "500": *a53
      parameters:
        - name: id
          in: path
          required: true
          schema: *a51
          description: Unique ID for ACL Create
          example: "web-logs"
      description: Add/remove accesses to Dataset for users
      summary: Modify Dataset ACL
      tags: *a54
  "/search/datasets/{id}/acl/teams":
    get:
      operationId: getDatasetAclTeamsById
      responses: *a55
      parameters:
        - name: id
          in: path
          required: true
          schema: *a51
          description: Unique ID for ACL Teams Get
          example: "web-logs"
      description: List accesses to Dataset granted to Teams
      summary: Get Dataset Teams
      tags:
        &a58
        - datasets
        - teams ACL
  "/search/datasets/{id}/acl/teams/apply":
    post:
      operationId: createDatasetAclTeamsApplyById
      requestBody: *a56
      responses: *a57
      parameters:
        - name: id
          in: path
          required: true
          schema: *a51
          description: Unique ID for ACL Teams Create
          example: "web-logs"
      description: Add/remove accesses to Dataset for Teams
      summary: Modify Dataset Teams ACL
      tags: *a58
  "/m/{groupId}/lib/appscope-configs":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listAppscopeLibEntry
      tags:
        &a59
        - appscope-configs
      summary: Get a list of AppscopeLibEntry objects
      description: Get a list of AppscopeLibEntry objects
      responses:
        &a60
        "200":
          description: a list of AppscopeLibEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppscopeLibEntry"
              example:
                count: 1
                items:
                  - id: "scope-default"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: AppscopeConfig#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createAppscopeLibEntry
      tags: *a59
      summary: Create AppscopeLibEntry
      description: Create AppscopeLibEntry
      requestBody:
        description: New AppscopeLibEntry object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppscopeLibEntry"
            example:
              id: "scope-new"
      responses: *a60
  "/m/{groupId}/lib/appscope-configs/{id}":
    get:
      x-speakeasy-entity-operation: AppscopeConfig#read
      operationId: getAppscopeLibEntryById
      tags: *a59
      summary: Get AppscopeLibEntry by ID
      description: Get AppscopeLibEntry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a61
            type: string
            example: "scope-default"
          description: Unique ID to GET
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a60
    patch:
      x-speakeasy-entity-operation: AppscopeConfig#update
      operationId: updateAppscopeLibEntryById
      tags: *a59
      summary: Update AppscopeLibEntry
      description: Update AppscopeLibEntry
      parameters:
        - name: id
          in: path
          required: true
          schema: *a61
          description: Unique ID to PATCH
          example: "scope-default"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: AppscopeLibEntry object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppscopeLibEntry"
            example:
              description: "Updated appscope config"
      responses: *a60
    delete:
      x-speakeasy-entity-operation: AppscopeConfig#delete
      operationId: deleteAppscopeLibEntryById
      tags: *a59
      summary: Delete AppscopeLibEntry
      description: Delete AppscopeLibEntry
      parameters:
        - name: id
          in: path
          required: true
          schema: *a61
          description: Unique ID to DELETE
          example: "scope-default"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a60
  "/m/{groupId}/lib/grok":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listGrokFile
      tags:
        &a62
        - grokfiles
      summary: Get a list of GrokFile objects
      description: Get a list of GrokFile objects
      responses:
        &a63
        "200":
          description: a list of GrokFile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GrokFile"
              example:
                count: 1
                items:
                  - id: "grok-common"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Grok#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createGrokFile
      tags: *a62
      summary: Create GrokFile
      description: Create GrokFile
      requestBody:
        description: New GrokFile object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrokFile"
            example:
              id: "grok-new"
      responses: *a63
  "/m/{groupId}/lib/grok/{id}":
    get:
      x-speakeasy-entity-operation: Grok#read
      operationId: getGrokFileById
      tags: *a62
      summary: Get GrokFile by ID
      description: Get GrokFile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a64
            type: string
          description: Unique ID to GET
          example: "grok-common"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a63
    patch:
      x-speakeasy-entity-operation: Grok#update
      operationId: updateGrokFileById
      tags: *a62
      summary: Update GrokFile
      description: Update GrokFile
      parameters:
        - name: id
          in: path
          required: true
          schema: *a64
          description: Unique ID to PATCH
          example: "grok-common"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: GrokFile object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrokFile"
            example:
              id: "grok-common"
              patterns:
                COMBINEDAPACHELOG: "%{COMMONAPACHELOG} %{QS:referrer} %{QS:agent}"
      responses: *a63
    delete:
      x-speakeasy-entity-operation: Grok#delete
      operationId: deleteGrokFileById
      tags: *a62
      summary: Delete GrokFile
      description: Delete GrokFile
      parameters:
        - name: id
          in: path
          required: true
          schema: *a64
          description: Unique ID to DELETE
          example: "grok-common"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a63
  "/m/{groupId}/system/lookups":
    get:
      x-speakeasy-entity-operation: LookupFile#get
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listLookupFile
      tags:
        &a65
        - lookups
      summary: Get a list of LookupFile objects
      description: Get a list of LookupFile objects
      responses:
        &a66
        "200":
          description: a list of LookupFile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/LookupFile"
                    x-speakeasy-ignore: true
              example:
                count: 1
                items:
                  - id: "countries.csv"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: LookupFile#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createLookupFile
      tags: *a65
      summary: Create LookupFile
      description: Create LookupFile
      requestBody:
        description: New LookupFile object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
            example:
              id: "countries.csv"
              description: "ISO country codes"
      responses: *a66
  "/m/{groupId}/system/lookups/{id}":
    get:
      operationId: getLookupFileById
      tags: *a65
      summary: Get LookupFile by ID
      description: Get LookupFile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a67
            type: string
          description: Unique ID to GET
          example: "myNewLookupIdToCRUD"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
      responses: *a66
    patch:
      x-speakeasy-entity-operation: LookupFile#update
      operationId: updateLookupFileById
      tags: *a65
      summary: Update LookupFile
      description: Update LookupFile
      parameters:
        - name: id
          in: path
          required: true
          schema: *a67
          description: Unique ID to PATCH
          example: "myNewLookupIdToCRUD"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
      requestBody:
        description: LookupFile object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
      responses: *a66
    delete:
      x-speakeasy-entity-operation: LookupFile#delete
      operationId: deleteLookupFileById
      tags: *a65
      summary: Delete LookupFile
      description: Delete LookupFile
      parameters:
        - name: id
          in: path
          required: true
          schema: *a67
          description: Unique ID to DELETE
          example: "myNewLookupIdToCRUD"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
      responses: *a66
  "/m/{groupId}/lib/parsers":
    get:
      x-speakeasy-entity-operation: ParserLibEntry#get
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listParser
      tags:
        &a68
        - parsers
      summary: Get a list of Parser objects
      description: Get a list of Parser objects
      responses:
        &a69
        "200":
          description: a list of Parser objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ParserLibEntry"
              example:
                count: 2
                items:
                  - id: "parser-json"
                  - id: "parser-csv"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: ParserLibEntry#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createParser
      tags: *a68
      summary: Create Parser
      description: Create Parser
      requestBody:
        description: New Parser object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParserLibEntry"
            example:
              id: "parser-json"
              name: "JSON Parser"
      responses: *a69
  "/m/{groupId}/lib/parsers/{id}":
    get:
      operationId: getParserById
      tags: *a68
      summary: Get Parser by ID
      description: Get Parser by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a70
            type: string
          description: Unique ID to GET
          example: "parser-json"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a69
    patch:
      x-speakeasy-entity-operation: ParserLibEntry#update
      operationId: updateParserById
      tags: *a68
      summary: Update Parser
      description: Update Parser
      parameters:
        - name: id
          in: path
          required: true
          schema: *a70
          description: Unique ID to PATCH
          example: "parser-json"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: Parser object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParserLibEntry"
            example:
              name: "JSON Parser (updated)"
      responses: *a69
    delete:
      operationId: deleteParserById
      tags: *a68
      summary: Delete Parser
      description: Delete Parser
      x-speakeasy-entity-operation: ParserLibEntry#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a70
          description: Unique ID to DELETE
          example: "parser-json"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a69
  /lib/protobuf-libraries:
    get:
      operationId: getProtobufLibraryConfig
      tags:
        - protobuflibraries
      summary: Show list of Protobuf encodings for a given Library
      description: Show list of Protobuf encodings for a given Library
      deprecated: false
      responses:
        "200":
          description: a list of ProtobufEncodingConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProtobufEncodingConfig"
              example:
                count: 1
                items:
                  - {}
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: onlyWithEncodings
          in: query
          required: true
          schema:
            type: string
          description: onlyWithEncodings
          example: "true"
  "/lib/protobuf-libraries/{id}":
    get:
      operationId: getProtobufLibraryConfigById
      tags:
        - protobuflibraries
      summary: Show Library by Id
      description: Show Library by Id
      deprecated: false
      responses:
        "200":
          description: a list of ProtobufLibraryConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProtobufLibraryConfig"
              example:
                count: 1
                items:
                  - {}
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Library Id
          example: "lib-1"
  "/lib/protobuf-libraries/{id}/encodings/{encid}":
    get:
      operationId: getProtobufLibraryConfigEncodingsByIdAndEncId
      tags:
        - protobuflibraries
      summary: Show Protobuf library encodings by encoding id
      description: Show Protobuf library encodings by encoding id
      deprecated: false
      responses:
        "200":
          description: a list of ProtobufEncodingConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProtobufEncodingConfig"
              example:
                count: 1
                items:
                  - {}
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Library id
          example: "lib-1"
        - name: encid
          in: path
          required: true
          schema:
            type: string
          description: Encoding id
          example: "enc-1"
  "/lib/protobuf-libraries/{id}/encodings":
    get:
      operationId: getProtobufLibraryConfigEncodingsById
      tags:
        - protobuflibraries
      summary: Show list of Protobuf encodings for a given Library
      description: Show list of Protobuf encodings for a given Library
      deprecated: false
      responses:
        "200":
          description: a list of ProtobufEncodingConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProtobufEncodingConfig"
              example:
                count: 2
                items:
                  - {}
                  - {}
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Library id
          example: "lib-1"
  "/m/{groupId}/lib/regex":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listRegexLibEntry
      tags:
        &a71
        - regexes
      summary: Get a list of RegexLibEntry objects
      description: Get a list of RegexLibEntry objects
      responses:
        &a72
        "200":
          description: a list of RegexLibEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegexLibEntry"
              example:
                count: 2
                items:
                  - id: "apache"
                  - id: "nginx"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Regex#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'default'.
          default: "default"
          example: "default"
          schema:
            type: string
      operationId: createRegexLibEntry
      tags: *a71
      summary: Create RegexLibEntry
      description: Create RegexLibEntry
      requestBody:
        description: New RegexLibEntry object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegexLibEntry"
            example:
              id: "apache"
              pattern: "^%{IPORHOST:clientip} - - \\[%{HTTPDATE:timestamp}\\] \"%{WORD:method} %{DATA:path} HTTP/%{NUMBER:version}\" %{NUMBER:status} %{NUMBER:bytes}$"
      responses: *a72
  "/m/{groupId}/lib/regex/{id}":
    get:
      x-speakeasy-entity-operation: Regex#read
      operationId: getRegexLibEntryById
      tags: *a71
      summary: Get RegexLibEntry by ID
      description: Get RegexLibEntry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a73
            type: string
          description: Unique ID to GET
          example: "apache"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a72
    patch:
      x-speakeasy-entity-operation: Regex#update
      operationId: updateRegexLibEntryById
      tags: *a71
      summary: Update RegexLibEntry
      description: Update RegexLibEntry
      parameters:
        - name: id
          in: path
          required: true
          schema: *a73
          description: Unique ID to PATCH
          example: "apache"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: RegexLibEntry object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegexLibEntry"
            example:
              pattern: "^%{IPORHOST:clientip} .* \"%{WORD:method} %{DATA:path} HTTP/%{NUMBER:version}\" %{NUMBER:status} %{NUMBER:bytes}$"
      responses: *a72
    delete:
      x-speakeasy-entity-operation: Regex#delete
      operationId: deleteRegexLibEntryById
      tags: *a71
      summary: Delete RegexLibEntry
      description: Delete RegexLibEntry
      parameters:
        - name: id
          in: path
          required: true
          schema: *a73
          description: Unique ID to DELETE
          example: "apache"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a72
  /system/samples:
    get:
      operationId: listDataSample
      tags:
        &a74
        - samples
      summary: Get a list of DataSample objects
      description: Get a list of DataSample objects
      responses:
        &a75
        "200":
          description: a list of DataSample objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DataSample"
              example:
                count: 2
                items:
                  - id: "apache-sample"
                    description: "Apache access log sample"
                  - id: "syslog-sample"
                    description: "Syslog sample"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDataSample
      tags: *a74
      summary: Create DataSample
      description: Create DataSample
      requestBody:
        description: New DataSample object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSample"
            example:
              id: "nginx-sample"
              description: "Nginx access log sample"
      responses: *a75
  "/system/samples/{id}":
    get:
      operationId: getDataSampleById
      tags: *a74
      summary: Get DataSample by ID
      description: Get DataSample by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a76
            type: string
            example: "apache-sample"
          description: Unique ID to GET
      responses: *a75
    patch:
      operationId: updateDataSampleById
      tags: *a74
      summary: Update DataSample
      description: Update DataSample
      parameters:
        - name: id
          in: path
          required: true
          schema: *a76
          description: Unique ID to PATCH
          example: "apache-sample"
      requestBody:
        description: DataSample object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSample"
            example:
              description: "Apache access log sample (updated)"
      responses: *a75
    delete:
      operationId: deleteDataSampleById
      tags: *a74
      summary: Delete DataSample
      description: Delete DataSample
      parameters:
        - name: id
          in: path
          required: true
          schema: *a76
          description: Unique ID to DELETE
          example: "apache-sample"
      responses: *a75
  "/system/samples/{id}/content":
    get:
      operationId: getDataSampleContentById
      tags:
        - samples
      summary: Get sample content by ID
      description: Get sample content by ID
      deprecated: false
      responses:
        "200":
          description: a list of SampleContent objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SampleContent"
              example:
                count: 2
                items:
                  - _raw: "127.0.0.1 - - [06/Oct/2025:12:00:00 +0000] \"GET / HTTP/1.1\" 200 1024"
                  - _raw: "<34>1 2025-10-06T12:00:00Z host app - - - started"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Sample ID
          example: "apache-sample"
  /m/default_search/search/dashboards:
    get:
      operationId: listSearchDashboard
      tags:
        &a77
        - dashboards
      summary: Get a list of SearchDashboard objects
      description: Get a list of SearchDashboard objects
      x-speakeasy-entity-operation: SearchDashboard#get
      responses:
        &a78
        "200":
          description: a list of SearchDashboard objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchDashboard"
              example:
                count: 2
                items:
                  - id: "dash-overview"
                    name: "Overview"
                  - id: "dash-errors"
                    name: "Errors"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSearchDashboard
      tags: *a77
      summary: Create SearchDashboard
      description: Create SearchDashboard
      x-speakeasy-entity-operation: SearchDashboard#create
      requestBody:
        description: New SearchDashboard object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDashboard"
            example:
              id: "dash-latency"
              name: "Latency"
      responses: *a78
  "/m/default_search/search/dashboards/{id}":
    get:
      operationId: getSearchDashboardById
      tags: *a77
      summary: Get SearchDashboard by ID
      description: Get SearchDashboard by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a79
            type: string
            example: "dash-overview"
          description: Unique ID to GET
      responses: *a78
    patch:
      operationId: updateSearchDashboardById
      tags: *a77
      summary: Update SearchDashboard
      description: Update SearchDashboard
      x-speakeasy-entity-operation: SearchDashboard#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a79
          description: Unique ID to PATCH
          example: "dash-overview"
      requestBody:
        description: SearchDashboard object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDashboard"
            example:
              name: "Overview (updated)"
      responses: *a78
    delete:
      operationId: deleteSearchDashboardById
      tags: *a77
      summary: Delete SearchDashboard
      description: Delete SearchDashboard
      x-speakeasy-entity-operation: SearchDashboard#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a79
          description: Unique ID to DELETE
          example: "dash-overview"
      responses: *a78
  "/search/dashboards/{id}/acl":
    get:
      operationId: getSearchDashboardAclById
      responses:
        &a83
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
              example:
                count: 2
                items:
                  - user: "alice@example.com"
                    perms:
                      - resource: "dashboard:dash-overview"
                        actions: ["read"]
                  - user: "bob@example.com"
                    perms:
                      - resource: "dashboard:dash-overview"
                        actions: ["read","write"]
        "401":
          &a80
          description: Unauthorized
        "500":
          &a81
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema: *a79
          description: Unique ID for ACL Get
          example: "dash-overview"
      description: List accesses to SearchDashboard granted to users
      summary: Get SearchDashboard ACL
      tags:
        &a82
        - dashboards
        - users ACL
  "/search/dashboards/{id}/acl/apply":
    post:
      operationId: createSearchDashboardAclApplyById
      requestBody:
        &a84
        description: AccessControlSchema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessControlSchema"
            example:
              entries:
                - principal: "alice@example.com"
                  resource: "dashboard:dash-overview"
                  actions: ["read","write"]
      responses:
        &a85
        "200":
          description: N/A
        "401": *a80
        "500": *a81
      parameters:
        - name: id
          in: path
          required: true
          schema: *a79
          description: Unique ID for ACL Create
          example: "dash-overview"
      description: Add/remove accesses to SearchDashboard for users
      summary: Modify SearchDashboard ACL
      tags: *a82
  "/search/dashboards/{id}/acl/teams":
    get:
      operationId: getSearchDashboardAclTeamsById
      responses: *a83
      parameters:
        - name: id
          in: path
          required: true
          schema: *a79
          description: Unique ID for ACL Teams Get
          example: "dash-overview"
      description: List accesses to SearchDashboard granted to Teams
      summary: Get SearchDashboard Teams
      tags:
        &a86
        - dashboards
        - teams ACL
  "/search/dashboards/{id}/acl/teams/apply":
    post:
      operationId: createSearchDashboardAclTeamsApplyById
      requestBody: *a84
      responses: *a85
      parameters:
        - name: id
          in: path
          required: true
          schema: *a79
          description: Unique ID for ACL Teams Create
          example: "dash-overview"
      description: Add/remove accesses to SearchDashboard for Teams
      summary: Modify SearchDashboard Teams ACL
      tags: *a86
  /m/default_search/search/macros:
    get:
      operationId: listSearchMacro
      tags:
        &a87
        - macros
      summary: Get a list of SearchMacro objects
      description: Get a list of SearchMacro objects
      x-speakeasy-entity-operation: SearchMacro#get
      responses:
        &a88
        "200":
          description: a list of SearchMacro objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchMacro"
              example:
                count: 2
                items:
                  - id: "macro-errors"
                    name: "Only errors"
                    definition: "status >= 400"
                  - id: "macro-service"
                    name: "Filter by service"
                    definition: "service = $service"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSearchMacro
      tags: *a87
      summary: Create SearchMacro
      description: Create SearchMacro
      x-speakeasy-entity-operation: SearchMacro#create
      requestBody:
        description: New SearchMacro object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchMacro"
            example:
              id: "macro-latency"
              name: "High latency"
              definition: "duration_ms > 1000"
      responses: *a88
  "/m/default_search/search/macros/{id}":
    get:
      operationId: getSearchMacroById
      tags: *a87
      summary: Get SearchMacro by ID
      description: Get SearchMacro by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a89
            type: string
            example: "macro-errors"
          description: Unique ID to GET
      responses: *a88
    patch:
      operationId: updateSearchMacroById
      tags: *a87
      summary: Update SearchMacro
      description: Update SearchMacro
      x-speakeasy-entity-operation: SearchMacro#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a89
          description: Unique ID to PATCH
          example: "macro-errors"
      requestBody:
        description: SearchMacro object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchMacro"
            example:
              definition: "status >= 500"
      responses: *a88
    delete:
      operationId: deleteSearchMacroById
      tags: *a87
      summary: Delete SearchMacro
      description: Delete SearchMacro
      x-speakeasy-entity-operation: SearchMacro#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a89
          description: Unique ID to DELETE
          example: "macro-errors"
      responses: *a88
  /m/default_search/search/saved:
    get:
      operationId: listSavedQuery
      tags:
        &a90
        - savedQueries
      summary: Get a list of SavedQuery objects
      description: Get a list of SavedQuery objects
      responses:
        &a91
        "200":
          description: a list of SavedQuery objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SavedQuery"
              example:
                count: 2
                items:
                  - id: "sq-errors"
                    name: "Errors last 24h"
                    query: "status >= 400 earliest=-24h latest=now"
                  - id: "sq-latency"
                    name: "High latency"
                    query: "duration_ms > 1000 earliest=-1h latest=now"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSavedQuery
      tags: *a90
      summary: Create SavedQuery
      description: Create SavedQuery
      x-speakeasy-entity-operation: SearchSavedQuery#create
      requestBody:
        description: New SavedQuery object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedQuery"
            example:
              id: "sq-new"
              name: "New query"
              query: "service = 'api' | stats count by status"
      responses: *a91
  "/m/default_search/search/saved/{id}":
    get:
      operationId: getSavedQueryById
      tags: *a90
      summary: Get SavedQuery by ID
      description: Get SavedQuery by ID
      x-speakeasy-entity-operation: SearchSavedQuery#read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a92
            type: string
          description: Unique ID to GET
          example: "sq-errors"
      responses: *a91
    patch:
      operationId: updateSavedQueryById
      tags: *a90
      summary: Update SavedQuery
      description: Update SavedQuery
      x-speakeasy-entity-operation: SearchSavedQuery#update
      parameters:
        - name: id
          in: path
          required: true
          schema: *a92
          description: Unique ID to PATCH
          example: "sq-errors"
      requestBody:
        description: SavedQuery object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedQuery"
            example:
              name: "Errors last 48h"
              query: "status >= 400 earliest=-48h latest=now"
      responses: *a91
    delete:
      operationId: deleteSavedQueryById
      tags: *a90
      summary: Delete SavedQuery
      description: Delete SavedQuery
      x-speakeasy-entity-operation: SearchSavedQuery#delete
      parameters:
        - name: id
          in: path
          required: true
          schema: *a92
          description: Unique ID to DELETE
          example: "sq-errors"
      responses: *a91
  /search/jobs:
    get:
      operationId: listSearchJob
      tags:
        &a93
        - search
      summary: Get a list of SearchJob objects
      description: Get a list of SearchJob objects
      responses:
        &a94
        "200":
          description: a list of SearchJob objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchJob"
              example:
                count: 1
                items:
                  - id: "job-123"
                    status: "running"
                    createdAt: "2025-10-06T12:00:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSearchJob
      tags: *a93
      summary: Create SearchJob
      description: Create SearchJob
      requestBody:
        description: New SearchJob object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchJob"
            example:
              query: "service = 'api' | stats count by status"
              earliest: "-15m"
              latest: "now"
      responses: *a94
  "/search/jobs/{id}":
    get:
      operationId: getSearchJobById
      tags: *a93
      summary: Get SearchJob by ID
      description: Get SearchJob by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a95
            type: string
            example: "job-123"
          description: Unique ID to GET
      responses: *a94
    patch:
      operationId: updateSearchJobById
      tags: *a93
      summary: Update SearchJob
      description: Update SearchJob
      parameters:
        - name: id
          in: path
          required: true
          schema: *a95
          description: Unique ID to PATCH
          example: "job-123"
      requestBody:
        description: SearchJob object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchJob"
            example:
              status: "stopping"
      responses: *a94
    delete:
      operationId: deleteSearchJobById
      tags: *a93
      summary: Delete SearchJob
      description: Delete SearchJob
      parameters:
        - name: id
          in: path
          required: true
          schema: *a95
          description: Unique ID to DELETE
          example: "job-123"
      responses: *a94
  "/search/jobs/{id}/dispatch-executors":
    post:
      operationId: createSearchJobDispatchExecutorsById
      tags:
        - search
      summary: internal endpoint, dispatch search *id* to worker nodes filtered by
        worker node filter using RPC
      description: internal endpoint, dispatch search *id* to worker nodes filtered by
        worker node filter using RPC
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
          example: "job-123"
  "/search/jobs/{id}/logs":
    get:
      operationId: getSearchJobLogsById
      tags:
        - search
      summary: Get search logs
      description: Get search logs
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 3
                items:
                  - "Job started"
                  - "Dispatched to 3 executors"
                  - "Running aggregation stage"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
          example: "job-123"
  "/m/{groupId}/lib/database-connections":
    get:
      operationId: getDatabaseConnectionConfig
      tags:
        - database-connections
      summary: Get a list of DatabaseConnection objects
      description: Get a list of DatabaseConnection objects
      deprecated: false
      responses:
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatabaseConnectionConfig"
              example:
                count: 2
                items:
                  - id: "conn-clickhouse"
                    type: "clickhouse"
                    host: "db.example.com"
                    port: 8443
                  - id: "conn-snowflake"
                    type: "snowflake"
                    account: "acme"
                    region: "us-west"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-dbconns-001"
      parameters:
        - name: databaseType
          in: query
          required: false
          schema:
            type: string
          description: type of database connection
          example: "clickhouse"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
    post:
      x-speakeasy-entity-operation: DatabaseConnection#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createDatabaseConnectionConfig
      tags:
        &a96
        - database-connections
      summary: Create DatabaseConnectionConfig
      description: Create DatabaseConnectionConfig
      requestBody:
        description: New DatabaseConnectionConfig object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionConfig"
            example:
              id: "conn-clickhouse"
              type: "clickhouse"
              host: "db.example.com"
              port: 8443
              database: "logs"
              username: "readonly"
      responses:
        &a97
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatabaseConnectionConfig"
              example:
                count: 1
                items:
                  - id: "conn-clickhouse"
                    type: "clickhouse"
                    host: "db.example.com"
                    port: 8443
                    database: "logs"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/m/{groupId}/lib/database-connections/{id}":
    get:
      x-speakeasy-entity-operation: DatabaseConnection#read
      operationId: getDatabaseConnectionConfigById
      tags: *a96
      summary: Get DatabaseConnectionConfig by ID
      description: Get DatabaseConnectionConfig by ID
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: id
          in: path
          required: true
          schema:
            &a98
            type: string
          description: Unique ID to GET
          example: "conn-clickhouse"
      responses: *a97
    patch:
      x-speakeasy-entity-operation: DatabaseConnection#update
      operationId: updateDatabaseConnectionConfigById
      tags: *a96
      summary: Update DatabaseConnectionConfig
      description: Update DatabaseConnectionConfig
      parameters:
        - name: id
          in: path
          required: true
          schema: *a98
          description: Unique ID to PATCH
          example: "conn-clickhouse"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: DatabaseConnectionConfig object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionConfig"
            example:
              password: "********"
              ssl: true
      responses: *a97
    delete:
      x-speakeasy-entity-operation: DatabaseConnection#delete
      operationId: deleteDatabaseConnectionConfigById
      tags: *a96
      summary: Delete DatabaseConnectionConfig
      description: Delete DatabaseConnectionConfig
      parameters:
        - name: id
          in: path
          required: true
          schema: *a98
          description: Unique ID to DELETE
          example: "conn-clickhouse"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a97
  /lib/database-connections/test:
    post:
      operationId: createLibDatabaseConnectionsTest
      tags:
        - database-connections
      summary: Test a database connection given a type and connectionString
      description: Test a database connection given a type and connectionString
      deprecated: false
      responses:
        "200":
          description: a list of DatabaseConnectionTestResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatabaseConnectionTestResult"
              example:
                count: 1
                items:
                  - success: true
                    message: "Connection successful"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: DatabaseConnectionTest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionTest"
            example:
              type: "clickhouse"
              connectionString: "clickhouse://readonly:****@db.example.com:8443/logs"
  "/m/{groupId}/lib/breakers":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listEventBreakerRuleset
      tags:
        &a99
        - event_breaker_rules
      summary: Get a list of Event Breaker Ruleset objects
      description: Get a list of Event Breaker Ruleset objects
      responses:
        &a100
        "200":
          description: a list of Event Breaker Ruleset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EventBreakerRuleset"
                    x-speakeasy-ignore: true
              example:
                count: 1
                items:
                  - id: "breaker-syslog"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: EventBreakerRuleset#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createEventBreakerRuleset
      tags: *a99
      summary: Create Event Breaker Ruleset
      description: Create Event Breaker Ruleset
      requestBody:
        description: New Event Breaker Ruleset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
            example:
              id: "breaker-syslog"
              name: "Syslog breaker"
      responses: *a100
  "/m/{groupId}/lib/breakers/{id}":
    get:
      x-speakeasy-entity-operation: EventBreakerRuleset#read
      operationId: getEventBreakerRulesetById
      tags: *a99
      summary: Get Event Breaker Ruleset by ID
      description: Get Event Breaker Ruleset by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a101
            type: string
            example: "breaker-syslog"
          description: Unique ID to GET
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a100
    patch:
      x-speakeasy-entity-operation: EventBreakerRuleset#update
      operationId: updateEventBreakerRulesetById
      tags: *a99
      summary: Update Event Breaker Ruleset
      description: Update Event Breaker Ruleset
      parameters:
        - name: id
          in: path
          required: true
          schema: *a101
          description: Unique ID to PATCH
          example: "breaker-syslog"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: Event Breaker Ruleset object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
            example:
              name: "Syslog breaker (updated)"
      responses: *a100
    delete:
      x-speakeasy-entity-operation: EventBreakerRuleset#delete
      operationId: deleteEventBreakerRulesetById
      tags: *a99
      summary: Delete Event Breaker Ruleset
      description: Delete Event Breaker Ruleset
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: id
          in: path
          required: true
          schema: *a101
          description: Unique ID to DELETE
          example: "breaker-syslog"
      responses: *a100
  "/m/{groupId}/lib/vars":
    get:
      operationId: getGlobalVariable
      tags:
        &a105
        - global_variables
      summary: List all GlobalVars with references
      description: List all GlobalVars with references
      deprecated: false
      responses:
        &a106
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GlobalVar"
              example:
                count: 2
                items:
                  - id: "ENV"
                    value: "prod"
                  - id: "SERVICE"
                    value: "api"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: with
          in: query
          required: false
          schema:
            &a107
            type: string
          description: Pass "refs" to include references to fields the variable is used in
          example: "refs"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
    post:
      x-speakeasy-entity-operation: GlobalVar#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'default'.
          schema:
            type: string
          example: "default"
          default: "default"
      operationId: createGlobalVariable
      tags:
        &a102
        - global_variables
      summary: Create Global Variable
      description: Create Global Variable
      requestBody:
        &a108
        description: New Global Variable object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalVar"
            example:
              id: "NEW_VAR"
              value: "value"
      responses:
        &a103
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GlobalVar"
              example:
                count: 1
                items:
                  - id: "NEW_VAR"
                    value: "value"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/m/{groupId}/lib/vars/{id}":
    get:
      x-speakeasy-entity-operation: GlobalVar#read
      operationId: getGlobalVariableById
      tags: *a102
      summary: Get Global Variable by ID
      description: Get Global Variable by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a104
            type: string
          description: Unique ID to GET
          example: "ENV"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'default'.
          schema:
            type: string
          example: "default"
          default: "default"
      responses: *a103
    patch:
      x-speakeasy-entity-operation: GlobalVar#update
      operationId: updateGlobalVariableById
      tags: *a102
      summary: Update Global Variable
      description: Update Global Variable
      parameters:
        - name: id
          in: path
          required: true
          schema: *a104
          description: Unique ID to PATCH
          example: "ENV"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        &a110
        description: Global Variable object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalVar"
            example:
              value: "staging"
      responses: *a103
    delete:
      x-speakeasy-entity-operation: GlobalVar#delete
      operationId: deleteGlobalVariableById
      tags: *a102
      summary: Delete Global Variable
      description: Delete Global Variable
      parameters:
        - name: id
          in: path
          required: true
          schema: *a104
          description: Unique ID to DELETE
          example: "ENV"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a103
  "/m/{groupId}/p/{pack}/lib/vars":
    get:
      x-speakeasy-entity-operation: PackVars#read
      operationId: getGlobalVariableLibVarsByPack
      tags: *a105
      summary: List all GlobalVars with references within a Pack
      description: List all GlobalVars with references within a Pack
      deprecated: false
      responses: *a106
      parameters:
        - name: with
          in: query
          required: false
          schema: *a107
          description: Pass "refs" to include references to fields the variable is used in for pack
          example: "refs"
        - name: pack
          in: path
          required: true
          schema:
            &a109
            type: string
          description: pack ID to GET
          example: "example-pack"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            &a109
            type: string
          example: "Cribl"
    post:
      x-speakeasy-entity-operation: PackVars#create
      operationId: createGlobalVariableLibVarsByPack
      tags: *a102
      summary: Create Global Variable within a Pack
      description: Create Global Variable within a Pack
      requestBody: *a108
      responses: *a103
      parameters:
        - name: pack
          in: path
          required: true
          schema: *a109
          description: pack ID to POST
          example: "example-pack"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
  "/m/{groupId}/p/{pack}/lib/vars/{id}":
    get:
      operationId: getGlobalVariableLibVarsByPackAndId
      tags: *a102
      summary: Get Global Variable by ID within a Pack
      description: Get Global Variable by ID within a Pack
      responses: *a103
      parameters:
        - name: id
          in: path
          required: true
          schema: *a104
          description: Unique ID to GET for pack
          example: "ENV"
        - name: pack
          in: path
          required: true
          schema:
            &a109
            type: string
          description: pack ID to GET
          example: "example-pack"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            &a109
            type: string
          example: "Cribl"
    patch:
      x-speakeasy-entity-operation: PackVars#update
      operationId: updateGlobalVariableLibVarsByPackAndId
      tags: *a102
      summary: Update Global Variable within a Pack
      description: Update Global Variable within a Pack
      requestBody: *a110
      responses: *a103
      parameters:
        - name: id
          in: path
          required: true
          schema: *a104
          description: Unique ID to PATCH for pack
          example: "ENV"
        - name: pack
          in: path
          required: true
          schema: *a109
          description: pack ID to PATCH
          example: "example-pack"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
    delete:
      x-speakeasy-entity-operation: PackVars#delete
      operationId: deleteGlobalVariableLibVarsByPackAndId
      tags: *a102
      summary: Delete Global Variable within a Pack
      description: Delete Global Variable within a Pack
      responses: *a103
      parameters:
        - name: id
          in: path
          required: true
          schema: *a104
          description: Unique ID to DELETE for pack
          example: "ENV"
        - name: pack
          in: path
          required: true
          schema: *a109
          description: pack ID to DELETE
          example: "example-pack"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
  "/m/{groupId}/lib/hmac-functions":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listHmacFunction
      tags:
        &a111
        - hmac-functions
      summary: Get a list of HmacFunction objects
      description: Get a list of HmacFunction objects
      responses:
        &a112
        "200":
          description: a list of HmacFunction objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/HmacFunction"
              example:
                count: 2
                items:
                  - id: "hmac-sha256"
                    algorithm: "sha256"
                  - id: "hmac-sha1"
                    algorithm: "sha1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: HmacFunction#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createHmacFunction
      tags: *a111
      summary: Create HmacFunction
      description: Create HmacFunction
      requestBody:
        description: New HmacFunction object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HmacFunction"
            example:
              id: "hmac-sha512"
              algorithm: "sha512"
              key: "********"
      responses: *a112
  "/m/{groupId}/lib/hmac-functions/{id}":
    get:
      x-speakeasy-entity-operation: HmacFunction#read
      operationId: getHmacFunctionById
      tags: *a111
      summary: Get HmacFunction by ID
      description: Get HmacFunction by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a113
            type: string
          description: Unique ID to GET
          example: "hmac-sha256"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a112
    patch:
      x-speakeasy-entity-operation: HmacFunction#update
      operationId: updateHmacFunctionById
      tags: *a111
      summary: Update HmacFunction
      description: Update HmacFunction
      parameters:
        - name: id
          in: path
          required: true
          schema: *a113
          description: Unique ID to PATCH
          example: "hmac-sha256"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: HmacFunction object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HmacFunction"
            example:
              key: "********"
      responses: *a112
    delete:
      x-speakeasy-entity-operation: HmacFunction#delete
      operationId: deleteHmacFunctionById
      tags: *a111
      summary: Delete HmacFunction
      description: Delete HmacFunction
      parameters:
        - name: id
          in: path
          required: true
          schema: *a113
          description: Unique ID to DELETE
          example: "hmac-sha256"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a112
  "/m/{groupId}/system/inputs":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listInput
      tags:
        &a114
        - inputs
      summary: Get a list of Input objects
      description: Get a list of Input objects
      responses:
        &a115
        "200":
          description: a list of Input objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Input"
                    x-speakeasy-ignore: true
              example:
                count: 2
                items:
                  - id: "input-hec-1"
                    type: "splunk_hec"
                  - id: "input-syslog-1"
                    type: "syslog"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Source#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: id
          in: query
          required: true
          description: The id of this source instance
          schema:
            type: string
          example: "input-hec-1"
      operationId: createInput
      tags: *a114
      summary: Create Input
      description: Create Input
      requestBody:
        description: New Input object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
            example:
              type: "splunk_hec"
              config:
                port: 8088
                tls: true
      responses: *a115
  "/m/{groupId}/system/inputs/{id}":
    get:
      x-speakeasy-entity-operation: Source#read
      operationId: getInputById
      tags: *a114
      summary: Get Input by ID
      description: Get Input by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a116
            type: string
          description: Unique ID to GET
          example: "input-hec-1"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a115
    patch:
      x-speakeasy-entity-operation: Source#update
      operationId: updateInputById
      tags: *a114
      summary: Update Input
      description: Update Input
      parameters:
        - name: id
          in: path
          required: true
          schema: *a116
          description: Unique ID to PATCH
          example: "input-hec-1"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: Input object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
            example:
              config:
                tls: false
      responses: *a115
    delete:
      x-speakeasy-entity-operation: Source#delete
      operationId: deleteInputById
      tags: *a114
      summary: Delete Input
      description: Delete Input
      parameters:
        - name: id
          in: path
          required: true
          schema: *a116
          description: Unique ID to DELETE
          example: "input-hec-1"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a115
  "/m/{groupId}/system/inputs/{id}/hectoken":
    post:
      operationId: createInputHecTokenById
      tags:
        - inputs
      summary: Add token and optional metadata to an existing hec input
      description: Add token and optional metadata to an existing hec input
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - token: "1a2b3c4d-1234-5678-9abc-def012345678"
                    createdAt: "2025-10-06T12:00:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-hec-token-001"
      requestBody:
        description: AddHecTokenRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddHecTokenRequest"
            example:
              token: "1a2b3c4d-1234-5678-9abc-def012345678"
              metadata:
                description: "Token for prod ingestion"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: hec input id
          example: "input-hec-1"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
  "/m/{groupId}/system/inputs/{id}/hectoken/{token}":
    patch:
      operationId: updateInputHecTokenByIdAndToken
      tags:
        - inputs
      summary: Update token metadata on existing hec input
      description: Update token metadata on existing hec input
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - token: "1a2b3c4d-1234-5678-9abc-def012345678"
                    metadata:
                      description: "Updated description"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                requestId: "req-hec-token-002"
      requestBody:
        description: UpdateHecTokenRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHecTokenRequest"
            example:
              metadata:
                description: "Updated description"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: hec input id
          example: "input-hec-1"
        - name: token
          in: path
          required: true
          schema:
            type: string
          description: token to update
          example: "1a2b3c4d-1234-5678-9abc-def012345678"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
  /system/iometrics:
    get:
      operationId: listIoMetricsEntry
      tags:
        &a117
        - iometrics
      summary: Get a list of IoMetricsEntry objects
      description: Get a list of IoMetricsEntry objects
      responses:
        &a118
        "200":
          description: a list of IoMetricsEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/IoMetricsEntry"
              example:
                count: 2
                items:
                  - {}
                  - {}
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/iometrics/{id}":
    get:
      operationId: getIoMetricsEntryById
      tags: *a117
      summary: Get IoMetricsEntry by ID
      description: Get IoMetricsEntry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a119
            type: string
          description: Unique ID to GET
          example: "iom-001"
      responses: *a118
    patch:
      operationId: updateIoMetricsEntryById
      tags: *a117
      summary: Update IoMetricsEntry
      description: Update IoMetricsEntry
      parameters:
        - name: id
          in: path
          required: true
          schema: *a119
          description: Unique ID to PATCH
          example: "iom-001"
      requestBody:
        description: IoMetricsEntry object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IoMetricsEntry"
            example:
              throttle: 0.8
      responses: *a118
    delete:
      operationId: deleteIoMetricsEntryById
      tags: *a117
      summary: Delete IoMetricsEntry
      description: Delete IoMetricsEntry
      parameters:
        - name: id
          in: path
          required: true
          schema: *a119
          description: Unique ID to DELETE
          example: "iom-001"
      responses: *a118
  "/m/{groupId}/system/outputs":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listOutput
      tags:
        &a120
        - outputs
      summary: Get a list of Output objects
      description: Get a list of Output objects
      responses:
        &a121
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
                    x-speakeasy-ignore: true
              example:
                count: 2
                items:
                  - id: "out-s3-main"
                    type: "s3"
                  - id: "out-splunk"
                    type: "splunk_hec"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Destination#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: id
          in: query
          required: true
          description: The consumer group id to create
          schema:
            type: string
          example: "out-s3-main"
      operationId: createOutput
      tags: *a120
      summary: Create Output
      description: Create Output
      requestBody:
        description: New Output object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
            example:
              type: "s3"
              config:
                bucket: "company-logs"
                region: "us-east-1"
      responses: *a121
  "/m/{groupId}/system/outputs/{id}":
    get:
      x-speakeasy-entity-operation: Destination#read
      operationId: getOutputById
      tags: *a120
      summary: Get Output by ID
      description: Get Output by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a122
            type: string
          description: Unique ID to GET
          example: "out-s3-main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a121
    patch:
      x-speakeasy-entity-operation: Destination#update
      operationId: updateOutputById
      tags: *a120
      summary: Update Output
      description: Update Output
      parameters:
        - name: id
          in: path
          required: true
          schema: *a122
          description: Unique ID to PATCH
          example: "out-s3-main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: Output object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
            example:
              config:
                prefix: "archived/"
      responses: *a121
    delete:
      x-speakeasy-entity-operation: Destination#delete
      operationId: deleteOutputById
      tags: *a120
      summary: Delete Output
      description: Delete Output
      parameters:
        - name: id
          in: path
          required: true
          schema: *a122
          description: Unique ID to DELETE
          example: "out-s3-main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a121
  "/m/{groupId}/system/outputs/{id}/pq":
    delete:
      operationId: deleteOutputPqById
      tags:
        - outputs
      summary: Clears destination persistent queue
      description: Clears destination persistent queue
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - status: "cleared"
                    clearedAt: "2025-10-06T12:00:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Output Id
          example: "out-s3-main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
    get:
      operationId: getOutputPqById
      tags:
        - outputs
      summary: Retrieves status of latest clear PQ job for an output
      description: Retrieves status of latest clear PQ job for an output
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - status: "completed"
                    clearedAt: "2025-10-06T12:05:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Output Id
          example: "out-s3-main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
  "/m/{groupId}/system/outputs/{id}/samples":
    get:
      operationId: getOutputSamplesById
      tags:
        - outputs
      summary: Retrieve samples data for the specified output. Used to get sample data
        for the test action.
      description: Retrieve samples data for the specified output. Used to get sample
        data for the test action.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputSamplesResponse"
              example:
                count: 2
                items:
                  - _raw: "sample event 1"
                  - _raw: "sample event 2"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Output Id
          example: "myExistingOutputId"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
  "/m/{groupId}/system/outputs/{id}/test":
    post:
      operationId: createOutputTestById
      tags:
        - outputs
      summary: Send sample data to an output to validate configuration or test
        connectivity
      description: Send sample data to an output to validate configuration or test
        connectivity
      deprecated: false
      responses:
        "200":
          description: a list of OutputTestResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputTestResponse"
              example:
                count: 1
                items:
                  - success: true
                    details: "Sent 5 events"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: OutputTestRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutputTestRequest"
            example:
              events:
                - _raw: "test event 1"
                - _raw: "test event 2"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Output Id
          example: "out-s3-main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
  "/m/{groupId}/lib/parquet-schemas":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listSchema
      tags:
        &a123
        - parquetschemas
      summary: Get a list of Schema objects
      description: Get a list of Schema objects
      responses:
        &a124
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SchemaLibEntry"
              example:
                count: 2
                items:
                  - id: "schema-logs"
                    fields: []
                  - id: "schema-metrics"
                    fields: []
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: ParquetSchema#create
      operationId: createSchema
      tags: *a123
      summary: Create Schema
      description: Create Schema
      requestBody:
        description: New Schema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
            example:
              id: "schema-logs"
              fields:
                - name: "timestamp"
                  type: "timestamp"
                - name: "message"
                  type: "string"
      responses: *a124
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
  "/m/{groupId}/lib/parquet-schemas/{id}":
    get:
      x-speakeasy-entity-operation: ParquetSchema#read
      operationId: getSchemaById
      tags: *a123
      summary: Get Schema by ID
      description: Get Schema by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a125
            type: string
          description: Unique ID to GET
          example: "schema-logs"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a124
    patch:
      x-speakeasy-entity-operation: ParquetSchema#update
      operationId: updateSchemaById
      tags: *a123
      summary: Update Schema
      description: Update Schema
      parameters:
        - name: id
          in: path
          required: true
          schema: *a125
          description: Unique ID to PATCH
          example: "schema-logs"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: Schema object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
            example:
              fields:
                - name: "timestamp"
                  type: "timestamp"
                - name: "message"
                  type: "string"
                - name: "host"
                  type: "string"
      responses: *a124
    delete:
      x-speakeasy-entity-operation: ParquetSchema#delete
      operationId: deleteSchemaById
      tags: *a123
      summary: Delete Schema
      description: Delete Schema
      parameters:
        - name: id
          in: path
          required: true
          schema: *a125
          description: Unique ID to DELETE
          example: "schema-logs"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a124
  "/m/{groupId}/pipelines":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listPipeline
      tags:
        &a126
        - pipelines
      summary: Get a list of Pipeline objects
      description: Get a list of Pipeline objects
      responses:
        &a127
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
              example:
                count: 2
                items:
                  - id: "main"
                    name: "Main Pipeline"
                  - id: "enrich"
                    name: "Enrichment Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Pipeline#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createPipeline
      tags: *a126
      summary: Create Pipeline
      description: Create Pipeline
      requestBody:
        &a129
        description: New Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
            example:
              id: "new-pipeline"
              name: "New Pipeline"
      responses: *a127
  "/m/{groupId}/pipelines/{id}":
    get:
      operationId: getPipelineById
      tags: *a126
      summary: Get Pipeline by ID
      description: Get Pipeline by ID
      x-speakeasy-entity-operation: Pipeline#get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a128
            type: string
          description: Unique ID to GET
          example: "main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a127
    patch:
      x-speakeasy-entity-operation: Pipeline#update
      operationId: updatePipelineById
      tags: *a126
      summary: Update Pipeline
      description: Update Pipeline
      parameters:
        - name: id
          in: path
          required: true
          schema: *a128
          description: Unique ID to PATCH
          example: "main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        &a131
        description: Pipeline object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
            example:
              name: "Main Pipeline (updated)"
      responses: *a127
    delete:
      x-speakeasy-entity-operation: Pipeline#delete
      operationId: deletePipelineById
      tags: *a126
      summary: Delete Pipeline
      description: Delete Pipeline
      parameters:
        - name: id
          in: path
          required: true
          schema: *a128
          description: Unique ID to DELETE
          example: "main"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a127
  /system/profiler:
    get:
      operationId: listProfilerItem
      tags:
        &a132
        - profiler
      summary: Get a list of ProfilerItem objects
      description: Get a list of ProfilerItem objects
      responses:
        &a133
        "200":
          description: a list of ProfilerItem objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProfilerItem"
              example:
                count: 2
                items:
                  - {}
                  - {}
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createProfilerItem
      tags: *a132
      summary: Create ProfilerItem
      description: Create ProfilerItem
      requestBody:
        description: New ProfilerItem object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfilerItem"
            example:
              type: "cpu"
              durationSec: 60
      responses: *a133
  "/system/profiler/{id}":
    get:
      operationId: getProfilerItemById
      tags: *a132
      summary: Get ProfilerItem by ID
      description: Get ProfilerItem by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a134
            type: string
          description: Unique ID to GET
          example: "prof-001"
      responses: *a133
    patch:
      operationId: updateProfilerItemById
      tags: *a132
      summary: Update ProfilerItem
      description: Update ProfilerItem
      parameters:
        - name: id
          in: path
          required: true
          schema: *a134
          description: Unique ID to PATCH
          example: "prof-001"
      requestBody:
        description: ProfilerItem object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfilerItem"
            example:
              durationSec: 120
      responses: *a133
    delete:
      operationId: deleteProfilerItemById
      tags: *a132
      summary: Delete ProfilerItem
      description: Delete ProfilerItem
      parameters:
        - name: id
          in: path
          required: true
          schema: *a134
          description: Unique ID to DELETE
          example: "prof-001"
      responses: *a133
  /routes:
    get:
      operationId: listRoutes
      tags:
        &a135
        - routes
      summary: Get a list of Routes objects
      description: Get a list of Routes objects
      responses:
        &a136
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Routes"
              example:
                count: 1
                items:
                  - {}
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/routes/{id}":
    get:
      operationId: getRoutesById
      tags: *a135
      summary: Get Routes by ID
      description: Get Routes by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a137
            type: string
          description: Unique ID to GET
          example: "default"
      responses: *a136
    patch:
      operationId: updateRoutesById
      tags: *a135
      summary: Update Routes
      description: Update Routes
      parameters:
        - name: id
          in: path
          required: true
          schema: *a137
          description: Unique ID to PATCH
          example: "default"
      requestBody:
        &a139
        description: Routes object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Routes"
            example:
              routes: []
      responses: *a136
  "/m/{groupId}/routes/default":
    get:
      x-speakeasy-entity-operation: Routes#get
      operationId: getRoutesByGroupId
      tags: *a135
      summary: get routes for a Pack
      description: get routes for a Pack
      responses: *a136
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            &a137
            type: string
          description: group Id
          default: default
          example: default
    patch:
      x-speakeasy-entity-operation: Routes#create,update,delete
      operationId: createRoutesByGroupId
      tags: *a135
      summary: Create route for a Pack
      description: Create route for a Pack
      responses: *a136
      requestBody:
        description: Routes object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Routes"
            example:
              routes: []
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            &a137
            type: string
          description: group Id
          default: default
          example: default
  "/routes/{id}/append":
    post:
      operationId: createRoutesAppendById
      tags:
        &a140
        - routes
      summary: Appends routes to the end of the routing table
      description: Appends routes to the end of the routing table
      deprecated: false
      responses:
        &a141
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        &a142
        description: RouteDefinitions object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RouteDefinitions"
            example:
              routes: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a143
            type: string
          description: the route table to be appended to - currently default is the only
            supported value
          example: "default"
  "/packs":
    get:
      operationId: getPacks
      tags: *a135
      summary: Get a list of Pipeline objects within a Pack
      description: Get a list of Pipeline objects within a Pack
      responses: *a136
  "/m/{groupId}/p/{pack}/pipelines":
    get:
      operationId: getPipelinesByPack
      tags: *a135
      summary: Get a list of Pipeline objects within a Pack
      description: Get a list of Pipeline objects within a Pack
      responses: *a136
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to GET
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
    post:
      x-speakeasy-entity-operation: PackPipeline#create
      operationId: createPipelineByPack
      tags: *a135
      summary: Create Pipeline within a Pack
      description: Create Pipeline within a Pack
      requestBody:
        &a129
        description: New Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
            example:
              id: "myNewPackPipeline"
              name: "My New Pack Pipeline"
      responses: *a136
      parameters:
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to POST
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
  "/m/{groupId}/p/{pack}/pipelines/{id}":
    get:
      operationId: getPipelinesByPackWithId
      tags: *a135
      summary: Get a list of Pipelines by ID within a Pack
      description: Get a list of Pipeline by ID within a Pack
      x-speakeasy-entity-operation: PackPipeline#get
      responses: *a136
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to GET
          example: "myExistingPackId"
        - name: id
          in: path
          required: true
          schema: *a137
          description: Unique ID to GET for pack
          example: "myUniquePipelineIdToCRUD"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
    patch:
      x-speakeasy-entity-operation: PackPipeline#update
      operationId: updatePipelineByPackAndId
      tags: *a126
      summary: Update Pipeline within a Pack
      description: Update Pipeline within a Pack
      responses: *a127
      requestBody:
        &129
        description: New Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
            example:
              name: "My Updated Pack Pipeline"
      parameters:
        - name: id
          in: path
          required: true
          schema: *a128
          description: Unique ID to PATCH for pack
          example: "myUniquePipelineIdToCRUD"
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to PATCH
          example: "myExistingPackId"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          example: false
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
  "/m/{groupId}/p/{pack}/system/inputs":
    get:
      operationId: getSystemInputsByPack
      tags: *a135
      summary: Get a list of inputs within a Pack
      description: Get a list of inputs within a Pack
      responses: *a136
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack inputs to GET
          example: "observability-pack"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "Cribl"
    post:
      x-speakeasy-entity-operation: PackSource#create
      operationId: createSystemInputsByPack
      tags: *a126
      summary: Create input source for a Pack
      description: Create input source for a Pack
      requestBody:
        &129
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
            example:
              id: "pack-input-hec"
              type: "splunk_hec"
      responses: *a127
      parameters:
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack inputs to POST
          example: "observability-pack"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "Cribl"
        - name: id
          in: query
          required: true
          schema: *a137
          description: Unique ID to create pack source
          example: "pack-input-hec"
  "/m/{groupId}/p/{pack}/system/inputs/{id}":
    get:
      x-speakeasy-entity-operation: PackSource#read
      operationId: getSystemInputsByPackAndId
      tags: *a135
      summary: Get input source by ID within a Pack
      description: Get input source by ID within a Pack
      responses: *a136
      parameters:
        - name: id
          in: path
          required: true
          schema: *a137
          description: Unique ID to GET for pack source
          example: "pack-input-hec"
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to GET
          example: "observability-pack"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "Cribl"
    patch:
      x-speakeasy-entity-operation: PackSource#update
      operationId: updateSystemInputsByPack
      tags: *a126
      summary: Update input source a Pack
      description: Update input source a Pack
      requestBody:
        &129
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
            example:
              type: "splunk_hec"
              config:
                tls: true
      responses: *a127
      parameters:
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to PATCH
          example: "observability-pack"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          example: false
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "Cribl"
        - name: id
          in: path
          required: true
          schema: *a137
          description: Unique ID to PATCH for pack source
          example: "pack-input-hec"
    delete:
      x-speakeasy-entity-operation: PackSource#delete
      operationId: deleteSystemInputsByPack
      tags: *a126
      summary: Delete input source a Pack
      description: Delete input source a Pack
      responses: *a127
      parameters:
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to DELETE
          example: "observability-pack"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "Cribl"
        - name: id
          in: path
          required: true
          schema: *a137
          description: Unique ID to DELETE for pack source
          example: "pack-input-hec"
  "/m/{groupId}/p/{pack}/system/outputs":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: pack
          in: path
          required: true
          schema:
            type: string
          example: "observability-pack"
      operationId: listPackOutput
      tags:
        &a120
        - outputs
      summary: Get a list of Output objects
      description: Get a list of Output objects
      responses:
        &a121
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
                    x-speakeasy-ignore: true
              example:
                count: 2
                items:
                  - id: "pack-out-s3"
                    type: "s3"
                  - id: "pack-out-splunk"
                    type: "splunk_hec"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: PackDestination#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: pack
          in: path
          required: true
          schema:
            type: string
          example: "observability-pack"
        - name: id
          in: query
          required: true
          schema:
            type: string
          example: "pack-out-s3"
      operationId: createPackOutput
      tags: *a120
      summary: Create Output
      description: Create Output
      requestBody:
        description: New Output object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
            example:
              type: "s3"
              config:
                bucket: "company-logs"
                region: "us-east-1"
      responses: *a121
  "/m/{groupId}/p/{pack}/system/outputs/{id}":
    get:
      x-speakeasy-entity-operation: PackDestination#read
      operationId: getPackOutputById
      tags: *a120
      summary: Get Output by ID
      description: Get Output by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a122
            type: string
          description: Unique ID to GET
          example: "pack-out-s3"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: pack
          in: path
          required: true
          schema:
            type: string
          example: "observability-pack"
      responses: *a121
    patch:
      x-speakeasy-entity-operation: PackDestination#update
      operationId: updatePackOutputById
      tags: *a120
      summary: Update Output
      description: Update Output
      parameters:
        - name: id
          in: path
          required: true
          schema: *a122
          description: Unique ID to PATCH
          example: "pack-out-s3"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: pack
          in: path
          required: true
          schema:
            type: string
          example: "observability-pack"
      requestBody:
        description: Output object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
            example:
              config:
                prefix: "pack-archived/"
      responses: *a121
    delete:
      x-speakeasy-entity-operation: PackDestination#delete
      operationId: deletePackOutputById
      tags: *a120
      summary: Delete Output
      description: Delete Output
      parameters:
        - name: id
          in: path
          required: true
          schema: *a122
          description: Unique ID to DELETE
          example: "pack-out-s3"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: pack
          in: path
          required: true
          schema:
            type: string
          example: "observability-pack"
      responses: *a121
  "/m/{groupId}/p/{pack}/system/lookups":
    get:
      operationId: getSystemLookupsByPack
      tags: *a135
      summary: Get a list of lookup objects within a Pack
      description: Get a list of lookups objects within a Pack
      responses: *a136
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to GET
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
    post:
      x-speakeasy-entity-operation: PackLookups#create
      operationId: createSystemLookupsByPack
      tags: *a135
      summary: Create a lookup objects within a Pack
      description: Get a lookups objects within a Pack
      responses: *a136
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
            example:
              id: "countries.csv"
              description: "ISO country codes"
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to GET
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
  "/m/{groupId}/p/{pack}/system/lookups/{id}":
    get:
      x-speakeasy-entity-operation: PackLookups#read
      operationId: getSystemLookupsByPackAndId
      tags: *a135
      summary: Get list of lookups by ID within a Pack
      description: Get list of lookups by ID within a Pack
      responses: *a136
      parameters:
        - name: id
          in: path
          required: true
          schema: *a137
          description: Unique ID to GET for pack
          example: "myUniqueLookupIdToCRUD"
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to GET
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
    patch:
      x-speakeasy-entity-operation: PackLookups#update
      operationId: createSystemLookupsByPackAndId
      tags: *a126
      summary: Update system lookup within a Pack
      description: Update system lookup within a Pack
      responses: *a127
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
            example:
              description: "Updated description"
      parameters:
        - name: id
          in: path
          required: true
          schema: *a128
          description: Unique ID to PATCH for pack
          example: "myUniqueLookupIdToCRUD"
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to PATCH
          example: "myExistingPackId"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          example: false
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
    delete:
      x-speakeasy-entity-operation: PackLookups#delete
      operationId: deleteSystemLookupsByPackAndId
      tags: *a126
      summary: Delete system lookup within a Pack
      description: Delete system lookup within a Pack
      responses: *a127
      parameters:
        - name: id
          in: path
          required: true
          schema: *a128
          description: Unique ID to DELETE for pack
          example: "myUniqueLookupIdToCRUD"
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to DELETE
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
  "/m/{groupId}/p/{pack}/lib/breakers":
    get:
      operationId: getBreakersByPack
      tags: *a135
      summary: Get a list of breakers within a Pack
      description: Get a list of breakers within a Pack
      responses: *a136
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to GET
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group ID to GET
          example: "myExistingGroupId"
    post:
      x-speakeasy-entity-operation: PackBreakers#create
      operationId: createBreakersByPack
      tags: *a135
      summary: Create a breaker within a Pack
      description: Get a breaker within a Pack
      responses: *a136
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
            example:
              id: "breaker-syslog"
              name: "Syslog breaker"
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to POST
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group ID to GET
          example: "myExistingGroupId"
  "/m/{groupId}/p/{pack}/lib/breakers/{id}":
    get:
      operationId: getBreakersByPackAndId
      tags: *a135
      summary: Get list of breakers by ID within a Pack
      description: Get list of breakers by ID within a Pack
      x-speakeasy-entity-operation: PackBreakers#get
      responses: *a136
      parameters:
        - name: id
          in: path
          required: true
          schema: *a137
          description: Unique ID to GET for pack
          example: "myUniquePackBreakersIdToCRUD"
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to POST
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
    patch:
      x-speakeasy-entity-operation: PackBreakers#update
      operationId: updateBreakersByPackAndId
      tags: *a135
      summary: Update Routes within a Pack
      description: Update Routes by ID within a Pack
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
            example:
              name: "Syslog breaker (updated)"
      responses: *a136
      parameters:
        - name: id
          in: path
          required: true
          schema: *a128
          description: Unique ID to PATCH for pack
          example: "myUniquePackBreakersIdToCRUD"
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to POST
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
    delete:
      x-speakeasy-entity-operation: PackBreakers#delete
      operationId: deleteBreakersByPackAndId
      tags: *a126
      summary: Delete breakers within a Pack
      description: Delete breakers within a Pack
      responses: *a127
      parameters:
        - name: id
          in: path
          required: true
          schema: *a128
          description: Unique ID to DELETE for pack
          example: "myUniquePackBreakersIdToCRUD"
        - name: pack
          in: path
          required: true
          schema: *a138
          description: pack ID to DELETE
          example: "myExistingPackId"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "myExistingGroupId"
  "/m/{groupId}/p/{pack}/routes/default":
    get:
      x-speakeasy-entity-operation: PackRoutes#get
      operationId: getRoutesByPack
      tags: *a135
      summary: get routes for a Pack
      description: get routes for a Pack
      responses: *a136
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to GET
          example: "observability-pack"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "Cribl"
    patch:
      x-speakeasy-entity-operation: PackRoutes#create,update,delete
      operationId: createRoutesByPack
      tags: *a135
      summary: Create route for a Pack
      description: Create route for a Pack
      responses: *a136
      requestBody:
        description: Route object to be updated in specified Pack
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Routes"
            example:
              routes: []
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a138
            type: string
          description: pack ID to GET
          example: "observability-pack"
        - name: groupId
          in: path
          required: true
          schema:
            &a138
            type: string
          description: group Id
          example: "Cribl"
  "/m/{groupId}/lib/schemas":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listLibSchemas
      tags:
        &a144
        - schemas
      summary: Get a list of Schema objects
      description: Get a list of Schema objects
      responses:
        &a145
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SchemaLibEntry"
              example:
                count: 2
                items:
                  - id: "schema-logs"
                    fields: []
                  - id: "schema-metrics"
                    fields: []
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Schema#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createLibSchemas
      tags: *a144
      summary: Create Schema
      description: Create Schema
      requestBody:
        &a147
        description: New Schema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
            example:
              id: "schema-logs"
              fields:
                - name: "timestamp"
                  type: "timestamp"
                - name: "message"
                  type: "string"
      responses: *a145
  "/m/{groupId}/lib/schemas/{id}":
    get:
      x-speakeasy-entity-operation: Schema#read
      operationId: getLibSchemasById
      tags: *a144
      summary: Get Schema by ID
      description: Get Schema by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a146
            type: string
          description: Unique ID to GET
          example: "schema-logs"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a145
    patch:
      x-speakeasy-entity-operation: Schema#update
      operationId: updateLibSchemasById
      tags: *a144
      summary: Update Schema
      description: Update Schema
      parameters:
        - name: id
          in: path
          required: true
          schema: *a146
          description: Unique ID to PATCH
          example: "schema-logs"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        &a149
        description: Schema object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
            example:
              fields:
                - name: "timestamp"
                  type: "timestamp"
                - name: "message"
                  type: "string"
                - name: "host"
                  type: "string"
      responses: *a145
    delete:
      x-speakeasy-entity-operation: Schema#delete
      operationId: deleteLibSchemasById
      tags: *a144
      summary: Delete Schema
      description: Delete Schema
      parameters:
        - name: id
          in: path
          required: true
          schema: *a146
          description: Unique ID to DELETE
          example: "schema-logs"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a145
  "/p/{pack}/lib/schemas":
    get:
      operationId: getSchemaLibByPack
      tags: *a144
      summary: Get a list of Schema objects within a Pack
      description: Get a list of Schema objects within a Pack
      responses: *a145
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a148
            type: string
          description: pack ID to GET
          example: "observability-pack"
    post:
      operationId: createSchemaLibByPack
      tags: *a144
      summary: Create Schema within a Pack
      description: Create Schema within a Pack
      requestBody: *a147
      responses: *a145
      parameters:
        - name: pack
          in: path
          required: true
          schema: *a148
          description: pack ID to POST
          example: "observability-pack"
  "/p/{pack}/lib/schemas/{id}":
    get:
      operationId: getSchemaLibByPackAndId
      tags: *a144
      summary: Get Schema by ID within a Pack
      description: Get Schema by ID within a Pack
      parameters:
        - name: id
          in: path
          required: true
          schema: *a146
          description: Unique ID to GET for pack
          example: "schema-logs"
        - name: pack
          in: path
          required: true
          schema: *a148
          description: pack ID to GET
          example: "observability-pack"
      responses: *a145
    patch:
      operationId: updateSchemaLibByPackAndId
      tags: *a144
      summary: Update Schema within a Pack
      description: Update Schema within a Pack
      parameters:
        - name: id
          in: path
          required: true
          schema: *a146
          description: Unique ID to PATCH for pack
          example: "schema-logs"
        - name: pack
          in: path
          required: true
          schema: *a148
          description: pack ID to PATCH
          example: "observability-pack"
      requestBody: *a149
      responses: *a145
    delete:
      operationId: deleteSchemaLibByPackAndId
      tags: *a144
      summary: Delete Schema within a Pack
      description: Delete Schema within a Pack
      parameters:
        - name: id
          in: path
          required: true
          schema: *a146
          description: Unique ID to DELETE for pack
          example: "schema-logs"
        - name: pack
          in: path
          required: true
          schema: *a148
          description: pack ID to DELETE
          example: "observability-pack"
      responses: *a145
  /system/secrets:
    get:
      operationId: listRestSecret
      tags:
        &a150
        - secrets
      summary: Get a list of RestSecret objects
      description: Get a list of RestSecret objects
      responses:
        &a151
        "200":
          description: a list of RestSecret objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/RestSecret"
              example:
                count: 2
                items:
                  - id: "secret-s3"
                    type: "aws"
                  - id: "secret-splunk"
                    type: "token"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createRestSecret
      tags: *a150
      summary: Create RestSecret
      description: Create RestSecret
      requestBody:
        description: New RestSecret object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestSecret"
            example:
              id: "secret-s3"
              type: "aws"
              data:
                accessKeyId: "AKIA****************"
                secretAccessKey: "********************"
      responses: *a151
  "/system/secrets/{id}":
    get:
      operationId: getRestSecretById
      tags: *a150
      summary: Get RestSecret by ID
      description: Get RestSecret by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a152
            type: string
          description: Unique ID to GET
          example: "secret-s3"
      responses: *a151
    patch:
      operationId: updateRestSecretById
      tags: *a150
      summary: Update RestSecret
      description: Update RestSecret
      parameters:
        - name: id
          in: path
          required: true
          schema: *a152
          description: Unique ID to PATCH
          example: "secret-s3"
      requestBody:
        description: RestSecret object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestSecret"
            example:
              data:
                accessKeyId: "AKIA****************"
                secretAccessKey: "********************"
      responses: *a151
    delete:
      operationId: deleteRestSecretById
      tags: *a150
      summary: Delete RestSecret
      description: Delete RestSecret
      parameters:
        - name: id
          in: path
          required: true
          schema: *a152
          description: Unique ID to DELETE
          example: "secret-s3"
      responses: *a151
  /system/status/inputs:
    get:
      operationId: listInputStatus
      tags:
        &a153
        - inputs
      summary: Get a list of InputStatus objects
      description: Get a list of InputStatus objects
      responses:
        &a154
        "200":
          description: a list of InputStatus objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/InputStatus"
              example:
                count: 2
                items:
                  - id: "input-hec-1"
                    status: "running"
                  - id: "input-syslog-1"
                    status: "stopped"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/status/inputs/{id}":
    get:
      operationId: getInputStatusById
      tags: *a153
      summary: Get InputStatus by ID
      description: Get InputStatus by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID to GET
          example: "input-hec-1"
      responses: *a154
  /system/status/outputs:
    get:
      operationId: listOutputStatus
      tags:
        &a155
        - outputs
      summary: Get a list of OutputStatus objects
      description: Get a list of OutputStatus objects
      responses:
        &a156
        "200":
          description: a list of OutputStatus objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputStatus"
              example:
                count: 2
                items:
                  - id: "out-s3-main"
                    status: "healthy"
                  - id: "out-splunk"
                    status: "degraded"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/status/outputs/{id}":
    get:
      operationId: getOutputStatusById
      tags: *a155
      summary: Get OutputStatus by ID
      description: Get OutputStatus by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID to GET
          example: "out-s3-main"
      responses: *a156
  /edge/appscope/processes:
    post:
      operationId: createEdgeAppscopeProcesses
      tags:
        - edgeAppScopeProcesses
        - edge
      summary: Attach AppScope to a process running on the edge host
      description: Attach AppScope to a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
              example:
                count: 1
                items:
                  - pid: 4321
                    status: "attached"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: pid
          in: query
          required: true
          schema:
            type: string
          description: config string required
          example: "4321"
    get:
      operationId: getEdgeAppscopeProcesses
      tags:
        - edgeAppScopeProcesses
        - edge
      summary: Get a detailed list of scoped processes running on the edge host
      description: Get a detailed list of scoped processes running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
              example:
                count: 2
                items:
                  - pid: 4321
                    status: "attached"
                  - pid: 9876
                    status: "attached"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/edge/appscope/processes/{pid}":
    delete:
      operationId: deleteEdgeAppscopeProcessesByPid
      tags:
        - edgeAppScopeProcesses
        - edge
      summary: Detach AppScope from a process running on the edge host
      description: Detach AppScope from a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
              example:
                count: 1
                items:
                  - pid: 4321
                    status: "detached"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: config string required
          example: "4321"
    get:
      operationId: getEdgeAppscopeProcessesByPid
      tags:
        - edgeAppScopeProcesses
        - edge
      summary: Get details of a scoped process running on the edge host
      description: Get details of a scoped process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
              example:
                count: 1
                items:
                  - pid: 4321
                    status: "attached"
                    cmdline: "/usr/bin/myservice --flag"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: Process ID number to target
          example: "8675309"
    put:
      operationId: updateEdgeAppscopeProcessesByPid
      tags:
        - edgeAppScopeProcesses
        - edge
      summary: Update AppScope configuration for a process running on the edge host
      description: Update AppScope configuration for a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: Process ID number to target
          example: "8675309"
  /edge/events/collectors:
    get:
      operationId: getEdgeEventsCollectors
      tags:
        - edgeEvents
        - edge
      summary: Get list of configured collectors
      description: Get list of configured collectors
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 2
                items:
                  - name: "journald"
                    type: "system"
                  - name: "nginx"
                    type: "file"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/events/query:
    get:
      operationId: getEdgeEventsQuery
      tags:
        - events
      summary: Get events generated by a specified source
      description: Get events generated by a specified source
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 2
                items:
                  - timestamp: "2025-10-06T12:00:00Z"
                    source: "system_state/routes"
                    host: "edge-01.example.com"
                    message: "Route added via eth0 to 10.0.0.0/24"
                  - timestamp: "2025-10-06T12:05:00Z"
                    source: "system_state/hostsfile"
                    host: "edge-01.example.com"
                    message: "Updated host mapping for api.internal"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-7f9a2c1d"
      parameters:
        - name: Files
          in: query
          required: false
          schema:
            type: string
          description: Optional parameter, when provided the files and provided offsets
            are used to look for events.
          example: "/var/log/syslog:0-1048576,/var/log/auth.log:0-524288"
        - name: source
          in: query
          required: false
          schema:
            type: string
          description: The type of source events to search in the format {type}/{subtype}
            i.e system_state/hostsfile, system_state/routes, etc...
          example: "system_state/routes"
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of log lines to retrieve starting from offset.
          example: 100
        - name: et
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the earliest event (includes rolled files
            present on disk)
          example: 1730828400
        - name: lt
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the latest event (includes rolled files present
            on disk)
          example: 1730832000
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter
          example: "severity >= 4 and host == 'edge-01'"
  /edge/fileinspect:
    get:
      operationId: getEdgeFileinspect
      tags:
        - edgeFiles
        - edge
      summary: Get details about a file on the edge host.
      description: Get details about a file on the edge host.
      deprecated: false
      responses:
        "200":
          description: a list of EdgeFileInspectResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EdgeFileInspectResponse"
              example:
                count: 1
                items:
                  - path: "/var/log/nginx/access.log"
                    size: 1048576
                    modTime: 1730832000
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/edge/ls{path}":
    get:
      operationId: getEdgeLsByPath
      tags:
        - edgeLs
        - edge
      summary: Get a directory listing of the given path
      description: Get a directory listing of the given path
      deprecated: false
      responses:
        "200":
          description: a list of FilesystemEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/FilesystemEntry"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                count: 3
                items:
                  - name: "access.log"
                    type: "file"
                    size: 1048576
                  - name: "nginx"
                    type: "dir"
                    size: 4096
                  - name: "error.log"
                    type: "file"
                    size: 524288
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
          description: Defaults to empty for the root directory
          example: "/var/log"
  /products/edge/map/query:
    post:
      operationId: createProductsEdgeMapQuery
      tags:
        - edge
      summary: Data for the Map View for Edge Fleets (Leader only)
      description: Data for the Map View for Edge Fleets (Leader only)
      deprecated: false
      responses:
        "200":
          description: a list of EdgeMapQueryResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EdgeMapQueryResult"
              example:
                count: 1
                items:
                  - fleetId: "edge-fleet-1"
                    region: "us-east-1"
                    nodes: 42
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/metadata:
    get:
      operationId: getEdgeMetadata
      tags:
        - edge
      summary: Get the host's metadata structure
      description: Get the host's metadata structure
      deprecated: false
      responses:
        "200":
          description: a list of Metadata objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Metadata"
              example:
                count: 1
                items:
                  - os:
                      name: "linux"
                      version: "6.12.8"
                    hostname: "edge-host-01"
                    ipAddresses:
                      - "10.0.0.15"
                      - "fd00::15"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/file/ingest:
    post:
      operationId: createEdgeFileIngest
      tags:
        - file
        - ingest
        - edge
      summary: Ingest a specified file through a specified pipeline to a specified
        destination or send to routes.
      description: Ingest a specified file through a specified pipeline to a specified
        destination or send to routes.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - status: "submitted"
                    file: "/var/log/nginx/access.log"
                    pipeline: "main"
                    destination: "out-s3-main"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: filePath
          in: query
          required: false
          schema:
            type: string
          description: Absolute path to file to ingest.
          example: "/var/log/http.log"
        - name: pipelineId
          in: query
          required: false
          schema:
            type: string
          description: Id of the pipeline to use.
          example: "myPipelineId"
        - name: outputId
          in: query
          required: false
          schema:
            type: string
          description: Destination to send events to.
          example: "myOutputId"
        - name: preProcessingPipelineId
          in: query
          required: false
          schema:
            type: string
          description: Id to the pre-processing pipeline to use for routes.
          example: "myPreProcessingPipelineId"
        - name: sendToRoutes
          in: query
          required: false
          schema:
            type: string
          description: boolean condition required on whether to send events to routes.
          example: "true"
        - name: breakerRuleSet
          in: query
          required: false
          schema:
            type: string
          description: Breaker rules to use on the file.
          example: "myBreakerRuleId"
  /edge/file/sample:
    get:
      operationId: getEdgeFileSample
      tags:
        - fileSampler
        - edge
      summary: Get some number of bytes from the file at the given path
      description: Get some number of bytes from the file at the given path
      deprecated: false
      responses:
        "200":
          description: a list of SampleFile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SampleFile"
              example:
                count: 1
                items:
                  - path: "/var/log/nginx/access.log"
                    bytes: "GET / HTTP/1.1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
          description: The path to the file to sample
          example: "/var/log/nginx/access.log"
        - name: bytesRequested
          in: query
          required: false
          schema:
            type: number
          description: The number of bytes to return;   this value could be constrained by system limits.
          example: 256
  /edge/kube-logs:
    post:
      operationId: createEdgeKubeLogs
      tags:
        - edge
        - kube-logs
      summary: Make a request to the K8s API logs endpoint
      description: Make a request to the K8s API logs endpoint
      deprecated: false
      responses:
        "200":
          description: a list of object objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/object"
              example:
                count: 1
                items:
                  - log: "pod logs line 1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/kube-proxy:
    get:
      operationId: getEdgeKubeProxy
      tags:
        - edge
        - kube-proxy
      summary: Make a GET request to the K8s API
      description: Make a GET request to the K8s API
      deprecated: false
      responses:
        "200":
          description: a list of object objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/object"
              example:
                count: 1
                items:
                  - kind: "PodList"
                    items: []
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: path
          in: query
          required: false
          schema:
            type: string
          description: string optional
          example: "/api/v1/namespaces/default/pods"
  /auth/authorization-code/callback:
    get:
      operationId: getAuthAuthorizationCodeCallback
      tags:
        - auth
      summary: API call that the IDP should use for an authorization code callback
      parameters:
        - in: query
          description: Authorization Code
          name: code
          schema:
            type: string
          example: "splx-1234-abcdef"
        - in: query
          name: state
          schema:
            type: string
          example: "csrf-state-xyz"
      responses:
        "200":
          description: Authorization success
        "401":
          description: Unauthorized
  /auth/metadata:
    get:
      operationId: getAuthMetadata
      summary: Obtain metadata which Cribl Stream/Edge uses when acting as a Service
        Provider
      tags:
        - auth
      responses:
        "200":
          description: Service Provider metadata
          content:
            text/xml:
              schema:
                type: string
              example: "<EntityDescriptor entityID=\"https://stream.example.com/saml/metadata\" xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\"></EntityDescriptor>"
        "401":
          description: Unauthorized
  /auth/login:
    post:
      operationId: login
      summary: Log in and obtain Auth token
      description: This endpoint is unavailable on Cribl.Cloud. Instead, follow the
        instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud
        to get an Auth token for Cribl.Cloud.
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInfo"
            example:
              username: "admin"
              password: "********"
      security: []
      responses:
        "200":
          description: Authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "401":
          description: Unauthorized
        "403":
          description: Access denied
        "429":
          description: Rate limit exceeded
  /auth/logout:
    post:
      operationId: logout
      summary: Log current user out
      tags:
        - auth
      responses:
        "200":
          description: Log out success
        "401":
          description: Unauthorized
  /auth/slo/callback:
    post:
      operationId: createAuthSloCallback
      tags:
        - auth
      summary: API call that the IDP should use for a logout request
      requestBody:
        description: Logout request object
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SAMLResponse:
                  description: Logout request object
                  type: string
                RelayState:
                  type: string
            example:
              SAMLResponse: "PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPjwvLi4+"
              RelayState: "csrf-state-xyz"
      responses:
        "200":
          description: Logout success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded
    get:
      operationId: getAuthSloCallback
      tags:
        - auth
      summary: Accepts a logout request from an IDP and logs out the user
      parameters:
        - in: query
          description: Logout request object
          name: SAMLResponse
          schema:
            type: string
          example: "PHNhbWxwOlJlc3BvbnNlPjwvLi4+"
        - in: query
          name: RelayState
          schema:
            type: string
          example: "csrf-state-xyz"
      responses:
        "200":
          description: Logout success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded
  /auth/slo:
    get:
      operationId: getAuthSlo
      summary: Redirect user to IDP with logout request
      tags:
        - auth
      responses:
        "200":
          description: SLO redirect info
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /auth/sso/callback:
    post:
      operationId: createAuthSsoCallback
      tags:
        - auth
      summary: API call that the IDP should use for an authentication request
      requestBody:
        description: Authentication request object
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SAMLResponse:
                  description: Authentication request object
                  type: string
                RelayState:
                  type: string
            example:
              SAMLResponse: "PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPjwvLi4+"
              RelayState: "csrf-state-xyz"
      responses:
        "200":
          description: Authentication success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded
    get:
      operationId: getAuthSsoCallback
      tags:
        - auth
      summary: Accepts an authentication request from an IDP and authenticates the user
      parameters:
        - in: query
          description: Authentication request object
          name: SAMLResponse
          schema:
            type: string
          example: "{ 'logout': { 'callback': 'https://myapp.exampleco.com/saml/logout', 'slo_enabled': true } }"
        - in: query
          name: RelayState
          schema:
            type: string
          example: "HTTP-Redirect"
      responses:
        "200":
          description: Authentication success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded
  /auth/sso:
    get:
      operationId: getAuthSso
      summary: Obtain redirect information
      description: Obtain information needed to redirect users to the configured SSO
        IDP for authentication.
      tags:
        - auth
      responses:
        "200":
          description: Redirect info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedirectInfo"
              example:
                url: "https://idp.example.com/sso?SAMLRequest=...&RelayState=https%3A%2F%2Fstream.example.com%2F"
                method: "GET"
                relayState: "https://stream.example.com/"
        "401":
          description: Unauthorized
  /auth/groups:
    get:
      operationId: getAuthGroups
      tags:
        - auth
      summary: List the external authentication system's groups
      description: List the external authentication system's groups
      deprecated: false
      responses:
        "200":
          description: a list of CrudEntityBase objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CrudEntityBase"
              example:
                count: 2
                items:
                  - id: "group-admins"
                    name: "Admins"
                  - id: "group-developers"
                    name: "Developers"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-0f1e2d3c4b"
  /auth/multi-factor:
    get:
      operationId: getAuthMultiFactor
      tags:
        - auth
      summary: Get PIV configuration
      description: Get PIV configuration
      deprecated: false
      responses:
        "200":
          description: a list of MultiFactorAuthSchema objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MultiFactorAuthSchema"
              example:
                count: 1
                items:
                  - piv:
                      enabled: true
                      issuer: "CN=DoD ID CA-57"
                      ocspEnabled: true
                      allowFallback: false
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-5a6b7c8d"
  "/auth/users/{id}/token":
    delete:
      operationId: deleteAuthUsersTokenById
      tags:
        - auth
      summary: Invalidate token(s) for user *id*
      description: Invalidate token(s) for user *id*
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - tokenId: "tok_9f3c1b2a"
                    status: "invalidated"
                    invalidatedAt: "2025-10-06T12:34:56Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-1a2b3c4d"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of user to invalidate
          example: "user-12345"
        - name: ttl
          in: query
          required: false
          schema:
            type: string
          description: TTL of the token being invalidated
          example: "1h"
  "/auth/users/{id}/invalidation":
    delete:
      operationId: deleteAuthUsersInvalidationById
      tags:
        - auth
      summary: Remove invalidation for user ID
      description: Remove invalidation for user ID
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - userId: "user-12345"
                    invalidationRemoved: true
                    removedAt: "2025-10-06T12:34:56Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-7c9d2a1f"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of user to reenable
          example: "user-12345"
  /authorize/policy:
    get:
      operationId: getAuthorizePolicy
      tags:
        - authorize
      summary: get the client's authorization policy
      description: get the client's authorization policy
      deprecated: false
      responses:
        "200":
          description: a list of AuthPolicyEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuthPolicyEntry"
              example:
                count: 2
                items:
                  - resource: "pipeline:main"
                    actions: ["read","write"]
                    effect: "allow"
                  - resource: "output:s3-main"
                    actions: ["read"]
                    effect: "allow"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-a1b2c3d4"
  /authorize/roles:
    get:
      operationId: getAuthorizeRoles
      tags:
        - authorize
      summary: get the client's roles
      description: get the client's roles
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 3
                items:
                  - "admin"
                  - "developer"
                  - "viewer"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-4e5f6a7b"
  /system/capture:
    post:
      operationId: createSystemCapture
      tags:
        - preview
        - samples
      summary: Capture live incoming data
      description: Capture live incoming data
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - captureId: "cap-001"
                    status: "started"
                    startedAt: "2025-10-06T12:35:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-9a8b7c6d"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
            example:
              outputId: "s3-main"
              pipeline: "main"
              duration: "30s"
              maxEvents: 1000
              filter: "source == 'nginx'"
  "/system/projects/{projectId}/capture":
    post:
      operationId: createSystemProjectsCaptureByProjectId
      tags:
        - preview
        - samples
      summary: Capture live incoming data from a particular project and subscription
        at the destination
      description: Capture live incoming data from a particular project and
        subscription at the destination
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - captureId: "cap-prj-001"
                    status: "started"
                    startedAt: "2025-10-06T12:40:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-2b3c4d5e"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
            example:
              outputId: "s3-main"
              pipeline: "main"
              duration: "30s"
              maxEvents: 1000
              filter: "source == 'nginx'"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project ID
          example: "project-abc123"
  "/system/projects/{projectId}/subscriptions/{subscriptionId}/capture":
    post:
      operationId: createSystemProjectsSubscriptionsCaptureByProjectIdAndSubscriptionId
      tags:
        - preview
        - samples
      summary: Capture live incoming data from a particular project and subscription
        at the subscription
      description: Capture live incoming data from a particular project and
        subscription at the subscription
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - captureId: "cap-sub-001"
                    status: "started"
                    startedAt: "2025-10-06T12:41:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-6f7a8b9c"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
            example:
              outputId: "s3-main"
              pipeline: "subscription-pipeline"
              duration: "60s"
              maxEvents: 2000
              filter: "env == 'prod'"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project Id
          example: "project-abc123"
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          description: SubscriptionId Id
          example: "sub-7890"
  /changelog/viewed:
    get:
      operationId: getChangelogViewed
      tags:
        - changelog
      summary: Get changelog viewed state
      description: Get changelog viewed state
      deprecated: false
      responses:
        "200":
          description: a list of ChangelogState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChangelogState"
              example:
                count: 1
                items:
                  - version: "6.0.0"
                    viewed: true
                    viewedAt: "2025-10-06T10:00:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-abc12345"
    patch:
      operationId: updateChangelogViewed
      tags:
        - system
      summary: Update changelog viewed state
      description: Update changelog viewed state
      deprecated: false
      responses:
        "200":
          description: a list of ChangelogState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChangelogState"
              example:
                count: 1
                items:
                  - version: "6.0.0"
                    viewed: true
                    viewedAt: "2025-10-06T10:05:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-def67890"
  /output/click-house/describe-table:
    post:
      operationId: createOutputClickHouseDescribeTable
      tags:
        - click-house
      summary: Retrieve the description of the configured ClickHouse table
      description: Retrieve the description of the configured ClickHouse table
      deprecated: false
      responses:
        "200":
          description: a list of ClickHouseDescriptionResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ClickHouseDescriptionResult"
              example:
                count: 3
                items:
                  - name: "timestamp"
                    type: "DateTime"
                    nullable: false
                  - name: "host"
                    type: "String"
                    nullable: false
                  - name: "bytes"
                    type: "UInt64"
                    nullable: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-ch-01"
      requestBody:
        description: CHOutConfig object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CHOutConfig"
            example:
              host: "clickhouse.example.com"
              port: 8443
              database: "logs"
              table: "ingest_events"
              user: "stream_writer"
              password: "********"
              ssl: true
  /clui:
    get:
      operationId: getClui
      tags:
        - clui
      summary: Get CLUI search results
      description: Get CLUI search results
      deprecated: false
      responses:
        "200":
          description: a list of CluiItem objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CluiItem"
              example:
                count: 2
                items:
                  - id: "pipeline:main"
                    label: "Pipeline: main"
                    type: "pipeline"
                  - id: "route:default"
                    label: "Route: default"
                    type: "route"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search query
          example: "pipelines where name ~ 'main'"
        - name: context
          in: query
          required: false
          schema:
            type: string
            enum:
              - stream
              - edge
          description: Search query context
          example: "stream"
  /master/summary/workers:
    get:
      operationId: getSummaryWorkers
      tags:
        - distributed
        - workers
      summary: get worker and edge nodes count
      description: get worker and edge nodes count
      deprecated: false
      responses:
        "200":
          description: a list of number objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: number
              example:
                count: 2
                items:
                  - 24
                  - 8
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-sumwrk-01"
      parameters:
        - name: filterExp
          in: query
          required: false
          schema:
            type: string
          description: Filter expression evaluated against nodes
          example: "role == 'worker' && status == 'online'"
  /master/workers:
    get:
      operationId: getWorkers
      tags:
        - distributed
        - workers
      summary: get worker and edge nodes
      description: get worker and edge nodes
      deprecated: false
      responses:
        "200":
          description: a list of MasterWorkerEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MasterWorkerEntry"
              example:
                count: 2
                items:
                  - id: "worker-01"
                    host: "worker-01.example.com"
                    status: "online"
                    version: "6.0.0"
                  - id: "edge-02"
                    host: "edge-02.example.com"
                    status: "online"
                    version: "6.0.0"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-wrk-01"
      parameters:
        - name: filterExp
          in: query
          required: false
          schema:
            type: string
          description: Filter expression evaluated against nodes
          example: "role == 'worker' && status == 'online'"
        - name: sort
          in: query
          required: false
          schema:
            type: string
          description: Sorting object (JSON stringified) expression evaluated against nodes
          example: "{\"field\":\"status\",\"order\":\"asc\"}"
        - name: sortExp
          in: query
          required: false
          schema:
            type: string
          description: Sorting expression evaluated against nodes
          example: "status asc"
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of nodes to return
          example: 50
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Pagination offset
          example: 0
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter object (JSON stringified) to select nodes
          example: "{\"role\":\"worker\"}"
  /master/workers/restart:
    patch:
      operationId: updateWorkersRestart
      tags:
        - distributed
        - workers
      summary: restarts worker nodes
      description: restarts worker nodes
      deprecated: false
      responses:
        "200":
          description: a list of RestartResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/RestartResponse"
              example:
                count: 1
                items:
                  - workerId: "worker-01"
                    status: "restarting"
                    requestedAt: "2025-10-06T12:45:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-rst-01"
  "/master/bundles/{group}/{version}":
    get:
      operationId: getConfigBundlesByGroupAndVersion
      summary: Download config bundle (used by remote nodes)
      tags:
        - distributed
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: string
          example: "default"
        - name: version
          in: path
          required: true
          schema:
            type: string
          example: "2025.10.06-1234"
      responses:
        "200":
          description: Get contents of a config bundle
          content:
            application/tar+gzip:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid path
        "404":
          description: File is missing
  /master/summary:
    get:
      operationId: getSummary
      tags:
        - distributed
      summary: Get summary of Distributed deployment
      description: Get summary of Distributed deployment
      deprecated: false
      responses:
        "200":
          description: a list of DistributedSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DistributedSummary"
              example:
                count: 1
                items:
                  - workers: 24
                    managedEdges: 8
                    controllerVersion: "6.0.0"
                    lastUpdated: "2025-10-06T12:45:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-sum-01"
      parameters:
        - name: mode
          in: query
          required: false
          schema:
            type: string
            enum:
              - worker
              - managed-edge
          description: product filter
          example: "worker"
  "/system/distributed/upgrade/cancel/{group}":
    post:
      operationId: createSystemDistributedUpgradeCancelByGroup
      tags:
        - system
      summary: Cancel a running group upgrade
      description: Cancel a running group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - group: "default"
                    status: "cancelled"
                    cancelledAt: "2025-10-06T12:50:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-upg-cancel-01"
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: id of the group
          example: "default"
  "/system/distributed/upgrade/stage/{group}":
    post:
      operationId: createSystemDistributedUpgradeStageByGroup
      tags:
        - system
      summary: Stage distributed group upgrade
      description: Stage distributed group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - group: "default"
                    status: "staged"
                    targetVersion: "6.0.1"
                    stagedAt: "2025-10-06T12:55:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-upg-stage-01"
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: id of the group
          example: "default"
        - name: upgradePercentage
          in: query
          required: false
          schema:
            type: string
          description: body number percentage of nodes on the worker group to upgrade
          example: "25"
  "/system/distributed/upgrade/{group}":
    post:
      operationId: createSystemDistributedUpgradeByGroup
      tags:
        - system
      summary: Execute distributed group upgrade
      description: Execute distributed group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 1
                items:
                  - "Upgrade initiated for group 'default'"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-upg-01"
      requestBody:
        description: distributedUpgrade object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DistributedUpgradeRequest"
            example:
              version: "6.0.1"
              nodes:
                - "worker-01"
                - "worker-02"
              scheduleAt: "2025-10-06T13:00:00Z"
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: Group to upgrade
          example: "default"
  "/system/distributed/upgrade/download/{file}":
    get:
      operationId: getSystemDistributedUpgradeDownloadByFile
      tags:
        - system
      summary: Get the previously downloaded Cribl package
      description: Get the previously downloaded Cribl package
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - fileName: "cribl-6.0.0.tgz"
                    sizeBytes: 145678901
                    sha256: "9b2f1c2d3e4a5b6c7d8e90123456789abcdeffedcba09876543210fedcba1234"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-upg-dl-01"
      parameters:
        - name: file
          in: path
          required: true
          schema:
            type: string
          description: Name of the file to be downloaded
          example: "cribl-6.0.0.tgz"
  /lib/expression:
    post:
      operationId: createLibExpression
      tags:
        - expressions
      summary: Evaluate JavaScript expression
      description: Evaluate JavaScript expression
      deprecated: false
      responses:
        "200":
          description: a list of ExprLibEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ExprLibEntry"
              example:
                count: 1
                items:
                  - expression: "1 + 1"
                    result: 2
                    durationMs: 1
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-expr-01"
  /conditions:
    get:
      operationId: listCondition
      tags:
        &a157
        - conditions
      summary: Get a list of Condition objects
      description: Get a list of Condition objects
      responses:
        &a158
        "200":
          description: a list of Condition objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Condition"
              example:
                count: 2
                items:
                  - id: "cond-error-rate"
                    name: "High Error Rate"
                    expression: "status >= 500 | rate() > 10"
                  - id: "cond-latency"
                    name: "High Latency"
                    expression: "duration_ms > 2000"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-cond-01"
  "/conditions/{id}":
    get:
      operationId: getConditionById
      tags: *a157
      summary: Get Condition by ID
      description: Get Condition by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID to GET
          example: "cond-error-rate"
      responses: *a158
  /health:
    get:
      operationId: getHealthInfo
      summary: Provides health info for REST server
      security: []
      tags:
        - diag
        - health
      responses:
        "200":
          description: Healthy status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
              example:
                status: "healthy"
                uptimeSec: 123456
        "420":
          description: Shutting Down or Standby status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
              example:
                status: "shutting_down"
                reason: "Admin initiated"
  "/jobs/{id}/results":
    get:
      operationId: getJobResultsById
      tags:
        - jobs
      summary: Get results for a discover job by instance id
      description: Get results for a discover job by instance id
      responses:
        "200":
          description: Get results for a discover job by instance id
          content:
            application/x-ndjson:
              schema:
                type: string
                format: binary
              example: "{\"jobId\":\"job-123\",\"result\":\"ok\"}\n{\"jobId\":\"job-123\",\"result\":\"done\"}\n"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
          example: "job-123"
  "/jobs/{id}/cancel":
    patch:
      operationId: updateJobsCancelById
      tags:
        - jobs
      summary: Cancel a job by instance id
      description: Cancel a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobState"
              example:
                count: 1
                items:
                  - id: "job-123"
                    state: "cancelled"
                    cancelledAt: "2025-10-06T13:05:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-cancel-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
          example: "job-123"
  /jobs:
    post:
      operationId: createJobs
      tags:
        - jobs
      summary: Run or schedule a job
      description: Run or schedule a job
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 1
                items:
                  - "job-adhoc-001"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-create-01"
      requestBody:
        description: SavedJob object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedJob"
            example:
              id: "job-adhoc-001"
              runType: "adhoc"
              collectorId: "Prometheus-in"
              schedule: null
              params:
                query: "service = 'api' | stats count by status"
    get:
      operationId: getJobs
      tags:
        - jobs
      summary: Get info on jobs
      description: Get info on jobs
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: pagination offset
                  limit:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    description: the pre-limited items in the list of results
                    items:
                      $ref: "#/components/schemas/JobInfo"
              example:
                offset: 0
                limit: 2
                items:
                  - id: "job-123"
                    state: "running"
                    runType: "adhoc"
                    startedAt: "2025-10-06T12:00:00Z"
                  - id: "job-122"
                    state: "completed"
                    runType: "scheduled"
                    startedAt: "2025-10-06T11:00:00Z"
                    finishedAt: "2025-10-06T11:05:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-list-01"
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Pagination offset
          example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of items to return
          example: 50
        - name: runType
          in: query
          required: false
          schema:
            type: string
            enum:
              - adhoc
              - scheduled
              - system
          description: Filter by job run type
          example: "adhoc"
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: Filter by current job state, e.g. "running"
          example: "running"
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: Filter by job id, e.g. "id=1608713335.3&id=1608713326.1"
          example: "job-123"
        - name: collectorId
          in: query
          required: false
          schema:
            type: string
          description: Filter by collector id, e.g. "collectorId=Prometheus-in"
          example: "Prometheus-in"
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: Filter by worker group id, e.g. "defaultHybrid"
          example: "defaultHybrid"
  "/jobs/{id}":
    delete:
      operationId: deleteJobsById
      tags:
        - jobs
      summary: Remove job from job inspector by instance id
      description: Remove job from job inspector by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - id: "job-123"
                    removed: true
                    removedAt: "2025-10-06T13:10:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-del-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
          example: "job-123"
    get:
      operationId: getJobsById
      tags:
        - jobs
      summary: Get job info by instance id
      description: Get job info by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobInfo"
              example:
                count: 1
                items:
                  - id: "job-123"
                    state: "running"
                    runType: "adhoc"
                    startedAt: "2025-10-06T12:00:00Z"
                    params:
                      query: "service = 'api' | stats count by status"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-get-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
          example: "job-123"
  "/jobs/{id}/keep":
    patch:
      operationId: updateJobsKeepById
      tags:
        - jobs
      summary: prevent job from being deleted automatically
      description: prevent job from being deleted automatically
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobInfo"
              example:
                count: 1
                items:
                  - id: "job-123"
                    keep: true
                    updatedAt: "2025-10-06T13:12:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-keep-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job Instance id
          example: "job-123"
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: Group ID
          example: "default"
  "/jobs/{id}/pause":
    patch:
      operationId: updateJobsPauseById
      tags:
        - jobs
      summary: Pause a job by instance id
      description: Pause a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobState"
              example:
                count: 1
                items:
                  - id: "job-123"
                    state: "paused"
                    pausedAt: "2025-10-06T13:15:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-pause-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
          example: "job-123"
  "/jobs/{id}/resume":
    patch:
      operationId: updateJobsResumeById
      tags:
        - jobs
      summary: Resume a job by instance id
      description: Resume a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobState"
              example:
                count: 1
                items:
                  - id: "job-123"
                    state: "running"
                    resumedAt: "2025-10-06T13:16:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-resume-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job instance id
          example: "job-123"
  "/jobs/{id}/results/{group}":
    get:
      operationId: getJobsResultsByIdAndGroup
      tags:
        - jobs
      summary: Get results for a discover job by instance id
      description: Get results for a discover job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - resultFile: "/opt/cribl/state/jobs/job-123/results.ndjson"
                    sizeBytes: 24576
                    records: 150
                    group: "default"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-results-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Instance id of the job to get results for
          example: "job-123"
        - name: maxFiles
          in: query
          required: false
          schema:
            type: number
          description: Maximum files to get job results
          example: 5
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: Group the job belongs to
          example: "default"
  "/jobs/{id}/errors/{group}":
    get:
      operationId: getJobsErrorsByIdAndGroup
      tags:
        - jobs
      summary: Get Task errors for a job by id
      description: Get Task errors for a job by id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 2
                items:
                  - task: "fetch-metadata"
                    error: "Timeout contacting endpoint"
                    timestamp: "2025-10-06T13:20:00Z"
                    group: "default"
                  - task: "parse-records"
                    error: "Invalid JSON at line 42"
                    timestamp: "2025-10-06T13:21:30Z"
                    group: "default"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-errs-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Instance id of the job to get results for
          example: "job-123"
        - name: group
          in: path
          required: true
          schema:
            type: string
          description: Group the job belongs to
          example: "default"
  "/jobs/{id}/errors":
    get:
      operationId: getJobsErrorsById
      tags:
        - jobs
      summary: Get Task errors for a job by id
      description: Get Task errors for a job by id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - task: "export-results"
                    error: "S3 access denied"
                    timestamp: "2025-10-06T13:22:10Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-jobs-errs-02"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Instance id of the job to get results for
          example: "job-123"
  /security/kms/config:
    get:
      operationId: getSecurityKmsConfig
      tags:
        - security
      summary: Get Cribl KMS config
      description: Get Cribl KMS config
      deprecated: false
      responses:
        "200":
          description: a list of KMSProviderConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/KMSProviderConfig"
              example:
                count: 1
                items:
                  - provider: "aws"
                    region: "us-east-1"
                    keyId: "arn:aws:kms:us-east-1:123456789012:key/abcd-1234"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-kms-get-01"
    patch:
      operationId: updateSecurityKmsConfig
      tags:
        - security
      summary: Update Cribl KMS config
      description: Update Cribl KMS config
      deprecated: false
      responses:
        "200":
          description: a list of KMSProviderConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/KMSProviderConfig"
              example:
                count: 1
                items:
                  - provider: "aws"
                    region: "us-west-2"
                    keyId: "arn:aws:kms:us-west-2:123456789012:key/efgh-5678"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-kms-patch-01"
      requestBody:
        description: KMSProviderConfig object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KMSProviderConfig"
            example:
              provider: "aws"
              region: "us-west-2"
              keyId: "arn:aws:kms:us-west-2:123456789012:key/efgh-5678"
  /security/kms/health:
    get:
      operationId: getSecurityKmsHealth
      tags:
        - security
      summary: Get Cribl KMS health
      description: Get Cribl KMS health
      deprecated: false
      responses:
        "200":
          description: a list of KMSHealth objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/KMSHealth"
              example:
                count: 1
                items:
                  - provider: "aws"
                    status: "healthy"
                    lastChecked: "2025-10-06T12:00:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-kms-health-01"
  /system/licenses:
    get:
      operationId: listLicense
      tags:
        &a159
        - licenses
      summary: Get a list of License objects
      description: Get a list of License objects
      responses:
        &a160
        "200":
          description: a list of License objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/License"
              example:
                count: 2
                items:
                  - id: "lic-001"
                    type: "permanent"
                    issuedTo: "Acme Corp"
                    expiresAt: "2026-12-31T23:59:59Z"
                  - id: "lic-002"
                    type: "trial"
                    issuedTo: "Beta Ltd"
                    expiresAt: "2025-11-30T23:59:59Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-lic-list-01"
    post:
      operationId: createLicense
      tags:
        - licenses
      summary: Add a license to your deployment
      description: Add a license to your deployment
      deprecated: false
      responses:
        "200":
          description: a list of License objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/License"
              example:
                count: 1
                items:
                  - id: "lic-003"
                    type: "permanent"
                    issuedTo: "Globex Inc"
                    expiresAt: "2027-01-15T23:59:59Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-lic-create-01"
      requestBody:
        description: LicenseRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LicenseRequest"
  "/system/licenses/{id}":
    get:
      operationId: getLicenseById
      tags: *a159
      summary: Get License by ID
      description: Get License by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a161
            type: string
          description: Unique ID to GET
          example: "lic-001"
      responses: *a160
    delete:
      operationId: deleteLicenseById
      tags: *a159
      summary: Delete License
      description: Delete License
      parameters:
        - name: id
          in: path
          required: true
          schema: *a161
          description: Unique ID to DELETE
          example: "lic-001"
      responses: *a160
  /system/licenses/usage:
    get:
      operationId: getLicense
      tags:
        - licenses
      summary: Get license usage metrics, aggregated by day, up to last 90 days
      description: Get license usage metrics, aggregated by day, up to last 90 days
      deprecated: false
      responses:
        "200":
          description: a list of DailyUsageMetrics objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DailyUsageMetrics"
              example:
                count: 2
                items:
                  - date: "2025-10-05"
                    ingestBytes: 987654321
                    activeWorkers: 24
                  - date: "2025-10-06"
                    ingestBytes: 123456789
                    activeWorkers: 25
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-lic-usage-01"
  /system/logger:
    get:
      operationId: listLoggerConfig
      tags:
        &a162
        - logger
      summary: Get a list of LoggerConfig objects
      description: Get a list of LoggerConfig objects
      responses:
        &a163
        "200":
          description: a list of LoggerConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/LoggerConfig"
              example:
                count: 1
                items:
                  - id: "root"
                    level: "info"
                    appenders: ["console","file"]
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/logger/{id}":
    get:
      operationId: getLoggerConfigById
      tags: *a162
      summary: Get LoggerConfig by ID
      description: Get LoggerConfig by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a164
            type: string
          description: Unique ID to GET
          example: "root"
      responses: *a163
    patch:
      operationId: updateLoggerConfigById
      tags: *a162
      summary: Update LoggerConfig
      description: Update LoggerConfig
      parameters:
        - name: id
          in: path
          required: true
          schema: *a164
          description: Unique ID to PATCH
          example: "root"
      requestBody:
        description: LoggerConfig object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoggerConfig"
            example:
              level: "debug"
              appenders: ["console"]
      responses: *a163
    delete:
      operationId: deleteLoggerConfigById
      tags: *a162
      summary: Delete LoggerConfig
      description: Delete LoggerConfig
      parameters:
        - name: id
          in: path
          required: true
          schema: *a164
          description: Unique ID to DELETE
          example: "root"
      responses: *a163
  "/system/jobs/logs/{id}/{groupId}":
    get:
      operationId: getSystemJobsLogsByIdAndGroupId
      tags:
        - logging
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - path: "/opt/cribl/state/jobs/job-123/logs/worker.log"
                    startOffset: 0
                    endOffset: 4096
                    lines:
                      - "2025-10-06T12:00:00Z starting job"
                      - "2025-10-06T12:01:00Z processing batch 1"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Job id
          example: "job-123"
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of log lines to retrieve starting from offset.
          example: 1000
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Offset in the current log file to fetch the log events from.
          example: 0
        - name: endOffset
          in: query
          required: false
          schema:
            type: integer
          description: in the current log file to fetch the log events upto.
          example: 4096
        - name: et
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the earliest event (includes rolled files
            present on disk)
          example: 1730828400
        - name: lt
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the latest event (includes rolled files present
            on disk)
          example: 1730832000
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter
          example: "level >= 'WARN'"
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          description: Group ID (optional)
          example: "default"
  "/system/logs/{id}":
    get:
      operationId: getSystemLogsById
      tags:
        - logging
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - path: "/opt/cribl/log/cribl.log"
                    startOffset: 0
                    endOffset: 8192
                    lines:
                      - "2025-10-06T12:00:00Z INFO Start"
                      - "2025-10-06T12:01:00Z WARN High memory usage"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Log ID
          example: "cribl.log"
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of log lines to retrieve starting from offset.
          example: 500
        - name: endOffset
          in: query
          required: false
          schema:
            type: integer
          description: in the current log file to fetch the log events upto.
          example: 8192
        - name: et
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the earliest event (includes rolled files
            present on disk)
          example: 1730828400
        - name: lt
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the latest event (includes rolled files present
            on disk)
          example: 1730832000
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter
          example: "level >= 'WARN'"
  /system/logs:
    get:
      operationId: getSystemLogs
      tags:
        - logging
      summary: Get a list of log files
      description: Get a list of log files
      deprecated: false
      responses:
        "200":
          description: a list of LogFileInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/LogFileInfo"
              example:
                count: 2
                items:
                  - id: "cribl.log"
                    sizeBytes: 5242880
                    modified: "2025-10-06T12:30:00Z"
                  - id: "worker.log"
                    sizeBytes: 1048576
                    modified: "2025-10-06T12:25:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/logs/search:
    get:
      operationId: getSystemLogsSearch
      tags:
        - logging
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - file: "cribl.log"
                    hits: 2
                    lines:
                      - "2025-10-06T12:01:00Z WARN High memory usage"
                      - "2025-10-06T12:10:30Z ERROR Pipeline failure"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
          description: type of logs request single multi group
          example: "single"
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: id of the group to query
          example: "default"
        - name: files
          in: query
          required: false
          schema:
            type: string
          description: query string[] optional file or files to query
          example: "cribl.log,worker.log"
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of log lines to retrieve starting from offset.
          example: 1000
        - name: et
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the earliest event (includes rolled files
            present on disk)
          example: 1730828400
        - name: lt
          in: query
          required: false
          schema:
            type: integer
          description: Epoch timestamp of the latest event (includes rolled files present
            on disk)
          example: 1730832000
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: Filter
          example: "level == 'ERROR' and message ~ 'Pipeline'"
  "/m/{groupId}/packs":
    post:
      x-speakeasy-entity-operation: Pack#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: the file to upload
          example: "observability-pack-1.2.3.tgz"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          example: false
      operationId: createPacks
      tags:
        - packs
      summary: Install Pack
      description: Install Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInstallInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
              example:
                count: 1
                items:
                  - id: "observability-pack"
                    version: "1.2.3"
                    installed: true
                    installedAt: "2025-10-06T12:30:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-abc12345"
      requestBody:
        description: PackRequestBody object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackRequestBody"
            example:
              sourceUrl: "https://packs.example.com/observability-pack-1.2.3.tgz"
              overwrite: false
    get:
      operationId: getPacksByGroup
      tags:
        - packs
      summary: Get info on packs
      description: Get info on packs
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
              example:
                count: 2
                items:
                  - id: "observability-pack"
                    version: "1.2.3"
                    enabled: true
                    updatedAt: "2025-10-06T12:00:00Z"
                  - id: "security-pack"
                    version: "0.9.0"
                    enabled: false
                    updatedAt: "2025-10-05T09:15:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-abc12345"
      parameters:
        - name: with
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of entities, "outputs", "inputs"
          example: "outputs,inputs"
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          example: "Cribl"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          example: true
    put:
      operationId: updatePacks
      tags:
        - packs
      summary: Upload Pack
      description: Upload Pack
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - id: "observability-pack"
                    status: "uploaded"
                    uploadedAt: "2025-10-06T12:45:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-packs-upload-01"
      parameters:
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: the file to upload
          example: "./myLocalFile.json"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
  "/m/{groupId}/packs/{id}":
    get:
      x-speakeasy-entity-operation: Pack#read
      operationId: getPacksByID
      tags:
        - packs
      summary: Get info on pack
      description: Get info on pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
              example:
                count: 1
                items:
                  - id: "observability-pack"
                    version: "1.2.3"
                    enabled: true
                    updatedAt: "2025-10-06T12:00:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: with
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of entities, "outputs", "inputs"
          example: "outputs,inputs"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          example: false
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
          example: "observability-pack"
    delete:
      x-speakeasy-entity-operation: Pack#delete
      operationId: deletePacksById
      responses: *a127
      tags:
        - packs
      summary: Uninstall Pack from the system
      description: Uninstall Pack from the system
      deprecated: false
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
          example: "observability-pack"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          example: false
    patch:
      x-speakeasy-entity-operation: Pack#update
      operationId: updatePacksById
      tags:
        - packs
      summary: Upgrade Pack
      description: Upgrade Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
              example:
                count: 1
                items:
                  - id: "observability-pack"
                    fromVersion: "1.2.3"
                    toVersion: "1.3.0"
                    status: "upgraded"
                    upgradedAt: "2025-10-06T12:50:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
          example: "observability-pack"
        - name: source
          in: query
          required: false
          schema:
            type: string
          description: body string required Pack source
          example: "https://packs.example.com/observability-pack-1.3.0.tgz"
        - name: minor
          in: query
          required: false
          schema:
            type: string
          description: body boolean optional Only upgrade to minor/patch versions
          example: "true"
        - name: spec
          in: query
          required: false
          schema:
            type: string
          description: body string optional Specify a branch, tag or a semver spec
          example: "^1.3.0"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          example: false
  "/m/{groupId}/packs/__clone__":
    post:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createPacksClone
      tags:
        - packs
      summary: Clone Pack
      description: Clone Pack
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - sourceId: "observability-pack"
                    newId: "observability-pack-copy"
                    status: "cloned"
                    clonedAt: "2025-10-06T13:20:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-pack-clone-01"
      requestBody:
        description: PackClone object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackClone"
            example:
              sourceId: "observability-pack"
              newId: "observability-pack-copy"
              includeDependencies: true
  "/packs/{id}/refs":
    get:
      operationId: getPacksRefsById
      tags:
        - packs
      summary: Returns all entities that reference objects from outside of the pack
      description: Returns all entities that reference objects from outside of the pack
      deprecated: false
      responses:
        "200":
          description: a list of ReferencingEntity objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ReferencingEntity"
              example:
                count: 2
                items:
                  - type: "pipeline"
                    id: "main"
                    path: "pipelines/main.conf"
                  - type: "route"
                    id: "default"
                    path: "routes/default.yml"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-pack-refs-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
          example: "observability-pack"
  "/m/{groupId}/packs/{id}/export":
    get:
      operationId: getPacksExportById
      tags:
        - packs
      summary: Export Pack
      description: Export Pack
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - artifact: "observability-pack-1.2.3.tgz"
                    downloadUrl: "https://packs.example.com/exports/observability-pack-1.2.3.tgz"
                    generatedAt: "2025-10-06T13:25:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-pack-export-01"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
          example: "observability-pack"
        - name: mode
          in: query
          required: true
          schema:
            type: string
            enum:
              - merge
              - default_only
              - merge_safe
            example: "merge"
          description: 'Export mode. Note: "merge_safe" is deprecated and will be removed
            in v5.0.0. Use "merge" instead.'
          example: "default_only"
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: Filename of the exported Pack
          example: "localOutputFile.json"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "default"
  "/packs/{id}/publish":
    post:
      operationId: createPacksPublishById
      tags:
        - packs
      summary: Publish Pack back to its repository
      description: Publish Pack back to its repository
      deprecated: false
      responses:
        "200":
          description: a list of PublishPackResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PublishPackResponse"
              example:
                count: 1
                items:
                  - id: "observability-pack"
                    repository: "https://github.com/acme/observability-pack.git"
                    branch: "main"
                    commit: "1a2b3c4d"
                    status: "published"
                    publishedAt: "2025-10-06T13:30:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Pack name
          example: "observability-pack"
  /preview:
    post:
      operationId: createPreview
      tags:
        - preview
        - samples
      summary: Sends sample events through a pipeline and returns the results
      description: Sends sample events through a pipeline and returns the results
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - pipeline: "main"
                    sampleCount: 10
                    results:
                      - {"status":200,"bytes":512}
                      - {"status":404,"bytes":0}
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PreviewDataParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewDataParams"
            example:
              pipeline: "main"
              sample: "GET /healthz 200 2"
  /system/processes:
    get:
      operationId: getSystemProcesses
      tags:
        - processes
      summary: Get a list of processes under management
      description: Get a list of processes under management
      deprecated: false
      responses:
        "200":
          description: a list of ProcessEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProcessEntry"
              example:
                count: 2
                items:
                  - pid: 1234
                    name: "cribl"
                    status: "running"
                  - pid: 5678
                    name: "worker"
                    status: "running"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/products/{product}/users/{id}/acl":
    get:
      operationId: getProductsUsersAclByProductAndId
      tags:
        - users
      summary: Get user's Access Control List
      description: Get user's Access Control List
      deprecated: false
      responses:
        "200":
          description: a list of ResourcePolicy objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourcePolicy"
              example:
                count: 2
                items:
                  - resource: "pipeline:main"
                    actions: ["read","write"]
                    effect: "allow"
                  - resource: "dataset:prod-logs"
                    actions: ["read"]
                    effect: "allow"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            enum:
              - stream
              - edge
              - search
              - lake
          description: product by which to filter members
          example: "stream"
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: user id
          example: "user-12345"
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - groups
              - datasets
              - dataset-providers
              - projects
              - dashboards
              - macros
          description: resource type by which to filter access levels
          example: "datasets"
  "/products/{product}/users":
    get:
      operationId: getProductsUsersByProduct
      tags:
        - users
      summary: Get Users belonging to a product
      description: Get Users belonging to a product
      deprecated: false
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
              example:
                count: 2
                items:
                  - id: "user-12345"
                    email: "alice@example.com"
                    name: "Alice"
                  - id: "user-67890"
                    email: "bob@example.com"
                    name: "Bob"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            enum:
              - stream
              - edge
              - search
              - lake
          description: product by which to filter members
          example: "stream"
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: filter to specific group by groupId
          example: "default"
  "/products/{product}/users/__cache__":
    delete:
      operationId: deleteProductsUsersCacheByProduct
      tags:
        - users
      summary: Invalidate the members cache for a given product in SaaS deployment.
      description: Invalidate the members cache for a given product in SaaS deployment.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - product: "stream"
                    cacheInvalidated: true
                    invalidatedAt: "2025-10-06T13:40:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            enum:
              - stream
              - edge
              - search
              - lake
          description: product by which to filter members
          example: "stream"
  "/system/projects/{projectId}/version/commit":
    post:
      operationId: createSystemProjectsVersionCommitByProjectId
      tags:
        - projects
        - versioning
        - git
      summary: Commit project changes.
      description: Commit project changes.
      deprecated: false
      responses:
        "200":
          description: a list of GitCommitSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitCommitSummary"
              example:
                count: 1
                items:
                  - projectId: "project-abc123"
                    commit: "d34db33f"
                    author: "alice@example.com"
                    message: "Update pipeline and routes"
                    committedAt: "2025-10-06T13:45:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: ProjectGitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectGitCommitParams"
            example:
              message: "Update pipeline and routes"
              author: "alice@example.com"
              files:
                - "pipelines/main.conf"
                - "routes/default.yml"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project Id
          example: "project-abc123"
  "/system/projects/{projectId}/version/count":
    get:
      operationId: getSystemProjectsVersionCountByProjectId
      tags:
        - projects
        - versioning
        - git
      summary: get the count of files of changed
      description: get the count of files of changed
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - filesChanged: 7
                    additions: 120
                    deletions: 45
                    commitId: "d34db33f"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-ver-count-01"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project ID
          example: "project-abc123"
        - name: ID
          in: query
          required: false
          schema:
            type: string
          description: Commit ID
          example: "d34db33f"
  "/system/projects/{projectId}/version/diff":
    get:
      operationId: getSystemProjectsVersionDiffByProjectId
      tags:
        - projects
        - versioning
        - git
      summary: get the textual diff for given commit
      description: get the textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - filename: "routes/default.yml"
                    diff: |
                      @@ -10,7 +10,7 @@
                         destination: s3-main
                        - filter: source == 'nginx'
                        + filter: source in ['nginx','haproxy']
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-ver-diff-01"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project Id
          example: "project-abc123"
        - name: commit
          in: query
          required: false
          schema:
            type: string
          description: Commit hash (default is HEAD)
          example: "d34db33f"
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: Filename
          example: "routes/default.yml"
        - name: diffLineLimit
          in: query
          required: false
          schema:
            type: number
          description: Limit maximum lines in the diff
          example: 5000
  "/system/projects/{projectId}/version/files":
    get:
      operationId: getSystemProjectsVersionFilesByProjectId
      tags:
        - projects
        - versioning
        - git
      summary: get the files changed
      description: get the files changed
      deprecated: false
      responses:
        "200":
          description: a list of GitFilesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitFilesResponse"
              example:
                count: 3
                items:
                  - filename: "pipelines/main.conf"
                    status: "modified"
                    additions: 20
                    deletions: 3
                  - filename: "routes/default.yml"
                    status: "modified"
                    additions: 5
                    deletions: 2
                  - filename: "lookups/countries.csv"
                    status: "added"
                    additions: 250
                    deletions: 0
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-ver-files-01"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project ID
          example: "project-abc123"
        - name: ID
          in: query
          required: false
          schema:
            type: string
          description: Commit ID
          example: "d34db33f"
  "/system/projects/{projectId}/version/revert":
    post:
      operationId: createSystemProjectsVersionRevertByProjectId
      tags:
        - projects
        - versioning
        - git
      summary: Revert project changes.
      description: Revert project changes.
      deprecated: false
      responses:
        "200":
          description: a list of GitRevertResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitRevertResult"
              example:
                count: 1
                items:
                  - projectId: "project-abc123"
                    commit: "cafebabe"
                    revertedAt: "2025-10-06T13:55:00Z"
                    message: "Revert accidental route change"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: ProjectGitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectGitCommitParams"
            example:
              message: "Revert accidental route change"
              author: "alice@example.com"
              commit: "cafebabe"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project Id
          example: "project-abc123"
  "/system/projects/{projectId}/version/show":
    get:
      operationId: getSystemProjectsVersionShowByProjectId
      tags:
        - projects
        - versioning
        - git
      summary: Show project changes.
      description: Show project changes.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - summary: "3 files changed, 25 insertions(+), 5 deletions(-)"
                    commits:
                      - "d34db33f Update pipeline and routes"
                      - "cafebabe Revert accidental route change"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project Id
          example: "project-abc123"
        - name: ID
          in: query
          required: false
          schema:
            type: string
          description: Commit ID
          example: "d34db33f"
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: Filename
          example: "routes/default.yml"
        - name: diffLineLimit
          in: query
          required: false
          schema:
            type: number
          description: Limit maximum lines in the diff
          example: 5000
  /system/diag/download:
    get:
      operationId: getDiagBundle
      summary: Returns a diag bundle as a tar.gz archive
      tags:
        - diag
      responses:
        "200":
          description: A tar.gz file consisting all configuration files and recent logs
          content:
            application/tar+gzip:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
  /system/info:
    get:
      operationId: getSystemInfo
      tags:
        - diag
      summary: Get basic system information
      description: Get basic system information
      deprecated: false
      responses:
        "200":
          description: a list of SystemInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemInfo"
              example:
                count: 1
                items:
                  - version: "6.0.0"
                    commit: "1a2b3c4d"
                    buildDate: "2025-10-01T00:00:00Z"
                    platform: "linux/x86_64"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-sysinfo-01"
  /system/diag:
    get:
      operationId: getSystemDiag
      tags:
        - diag
      summary: Get list of existing diag bundles
      description: Get list of existing diag bundles
      deprecated: false
      responses:
        "200":
          description: a list of Diag objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Diag"
              example:
                count: 1
                items:
                  - id: "diag-2025-10-06-123456"
                    path: "/var/cribl/diag/diag-2025-10-06-123456.tar.gz"
                    size: 104857600
                    modTime: 1730832000
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-diag-list-01"
    delete:
      operationId: deleteSystemDiag
      tags:
        - diag
      summary: Remove diag bundle
      description: Remove diag bundle
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - path: "/var/cribl/diag/diag-2025-10-06-123456.tar.gz"
                    deleted: true
                    deletedAt: "2025-10-06T14:00:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-diag-del-01"
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
          description: Diag bundle path
          example: "/var/cribl/diag/diag-2025-10-06-123456.tar.gz"
  /system/diag/send:
    post:
      operationId: createSystemDiagSend
      tags:
        - diag
      summary: Send a diag bundle (tar.gz archive) to Cribl
      description: Send a diag bundle (tar.gz archive) to Cribl
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - path: "/var/cribl/diag/diag-2025-10-06-123456.tar.gz"
                    status: "sent"
                    requestId: "req-diag-send-01"
                    sentAt: "2025-10-06T14:05:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-diag-send-err-01"
      requestBody:
        description: SendDiagBundle object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendDiagBundle"
            example:
              path: "/var/cribl/diag/diag-2025-10-06-123456.tar.gz"
  /system/metrics/enum:
    post:
      operationId: createSystemMetricsEnum
      tags:
        - metrics
      summary: Enumerate all internal system metrics
      description: Enumerate all internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of MetricNameInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MetricNameInfo"
              example:
                count: 2
                items:
                  - name: "cribl.input.bytes"
                    description: "Bytes received by input"
                  - name: "cribl.output.sent"
                    description: "Events sent by output"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: SystemMetricsEnum object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemMetricsEnum"
            example:
              metricNameFilter: "cribl.*"
              includeDimensions: true
  /system/metrics:
    get:
      operationId: getSystemMetrics
      tags:
        - metrics
      summary: Query raw internal system metrics
      description: Query raw internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - metric: "cribl.input.bytes"
                    datapoints:
                      - [1730831400, 12345]
                      - [1730831460, 23456]
                    dimensions:
                      input: "hec"
                      group: "default"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: wp
          in: query
          required: false
          schema:
            type: string
          description: worker process to query, this would work only on a worker node
          example: "wp-1"
        - name: numBuckets
          in: query
          required: false
          schema:
            type: number
          description: buckets in the past to include in the query results
          example: 60
        - name: earliest
          in: query
          required: false
          schema:
            type: string
          description: earliest time to query against
          example: "-1h"
        - name: latest
          in: query
          required: false
          schema:
            type: string
          description: latest time to query against
          example: "now"
        - name: metricNameFilter
          in: query
          required: false
          schema:
            type: string
          description: can be a regex or an array of metric names
          example: "cribl.input.*"
        - name: filterExpr
          in: query
          required: false
          schema:
            type: string
          description: a js expression to apply against the metrics returned (can filter
            dimensions)
          example: "dimensions.group === 'default'"
  /system/metrics/query:
    post:
      operationId: createSystemMetricsQuery
      tags:
        - metrics
      summary: Aggregate raw internal system metrics
      description: Aggregate raw internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - metric: "cribl.input.bytes"
                    aggregation: "sum"
                    buckets:
                      - ts: 1730831400
                        value: 34567
                      - ts: 1730831460
                        value: 45678
                    dimensions:
                      input: "hec"
                      group: "default"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: MetricsAggOpts object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricsAggOpts"
            example:
              aggregations:
                - metric: "cribl.input.bytes"
                  op: "sum"
              bucketSizeSec: 60
              earliest: "-1h"
              latest: "now"
              filterExpr: "dimensions.group === 'default'"
  /system/settings/reload:
    post:
      operationId: reloadSettings
      summary: Reload Cribl settings from the filesystem
      tags:
        - system
      responses:
        "200":
          description: Success
        "500":
          description: Internal error
  /system/settings/restart:
    post:
      operationId: triggerRestart
      summary: Restart Cribl server
      tags:
        - system
      responses:
        "200":
          description: Success
        "500":
          description: Internal error
  /system/settings/auth:
    get:
      operationId: getSystemSettingsAuth
      tags:
        - system
      summary: Get authentication settings
      description: Get authentication settings
      deprecated: false
      responses:
        "200":
          description: a list of AuthConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuthConfig"
              example:
                count: 1
                items:
                  - mode: "sso"
                    providers:
                      - type: "saml"
                        entityId: "https://stream.example.com/saml/metadata"
                        ssoUrl: "https://idp.example.com/sso"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateSystemSettingsAuth
      tags:
        - system
      summary: Update authentication settings
      description: Update authentication settings
      deprecated: false
      responses:
        "200":
          description: a list of AuthConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuthConfig"
              example:
                count: 1
                items:
                  - mode: "local"
                    providers: []
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/conf:
    get:
      operationId: getSystemSettingsConf
      tags:
        - system
      summary: Get Cribl system settings
      description: Get Cribl system settings
      deprecated: false
      responses:
        "200":
          description: a list of SystemSettingsConf objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemSettingsConf"
              example:
                count: 1
                items:
                  - api:
                      baseUrl: "https://leader.example.com:9000"
                      disabled: false
                    telemetry:
                      usage: true
                      metrics: true
                    security:
                      cspEnabled: true
                      corsEnabled: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateSystemSettingsConf
      tags:
        - system
      summary: Update Cribl system settings
      description: Update Cribl system settings
      deprecated: false
      responses:
        "200":
          description: a list of SystemSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemSettings"
              example:
                count: 1
                items:
                  - updated: true
                    updatedAt: "2025-10-06T14:10:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: SystemSettingsConf object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemSettingsConf"
            example:
              api:
                baseUrl: "https://leader.example.com:9000"
                disabled: false
              telemetry:
                usage: true
                metrics: true
              security:
                cspEnabled: true
                corsEnabled: true
  /system/settings/git-settings:
    get:
      operationId: getSystemSettingsGitSettings
      tags:
        - system
        - git
      summary: Get git settings
      description: Get git settings
      deprecated: false
      responses:
        "200":
          description: a list of GitSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitSettings"
              example:
                count: 1
                items:
                  - branch: "main"
                    remote: "origin"
                    url: "git@github.com:acme/stream-config.git"
                    authType: "ssh"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateSystemSettingsGitSettings
      tags:
        - system
        - git
      summary: Update git settings
      description: Update git settings
      deprecated: false
      responses:
        "200":
          description: a list of GitSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitSettings"
              example:
                count: 1
                items:
                  - branch: "main"
                    remote: "origin"
                    url: "git@github.com:acme/stream-config.git"
                    authType: "https"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/search-limits:
    get:
      operationId: getSystemSettingsSearchLimits
      tags:
        - system
      summary: Get search limits
      description: Get search limits
      deprecated: false
      responses:
        "200":
          description: a list of SearchSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchSettings"
              example:
                count: 1
                items:
                  - maxConcurrentSearches: 5
                    maxResultRows: 10000
                    maxScanBytes: "10GB"
                    queryTimeoutSec: 60
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-search-limits-01"
  /system/settings:
    get:
      operationId: getSystemSettings
      tags:
        - system
      summary: "Get Cribl system settings. Deprecated: use specific endpoints
        /system/limits, /system/job-limits, /system/redis-cache-limits,
        /system/services-limits, /system/settings/git-settings, and
        /system/settings/conf respectively"
      description: "Get Cribl system settings. Deprecated: use specific endpoints
        /system/limits, /system/job-limits, /system/redis-cache-limits,
        /system/services-limits, /system/settings/git-settings, and
        /system/settings/conf respectively"
      deprecated: true
      responses:
        "200":
          description: a list of SystemSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemSettings"
              example:
                count: 1
                items:
                  - telemetry:
                      usage: true
                      metrics: true
                    auth:
                      mode: "sso"
                    git:
                      branch: "main"
                      remote: "origin"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-sys-settings-get-01"
    patch:
      operationId: updateSystemSettings
      tags:
        - system
      summary: "Update Cribl system settings. Deprecated: use specific endpoints
        /system/limits, /system/job-limits, /system/settings/git-settings,
        /system/settings/auth and /system/settings/conf respectively"
      description: "Update Cribl system settings. Deprecated: use specific endpoints
        /system/limits, /system/job-limits, /system/settings/git-settings,
        /system/settings/auth and /system/settings/conf respectively"
      deprecated: true
      responses:
        "200":
          description: a list of SystemSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemSettings"
              example:
                count: 1
                items:
                  - telemetry:
                      usage: false
                      metrics: true
                    auth:
                      mode: "local"
                    git:
                      branch: "develop"
                      remote: "origin"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-sys-settings-patch-01"
  /system/settings/cribl:
    get:
      operationId: getSystemSettingsCribl
      tags:
        - system
      summary: Get public settings visible to any logged user
      description: Get public settings visible to any logged user
      deprecated: false
      responses:
        "200":
          description: a list of PublicSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PublicSettings"
              example:
                count: 1
                items:
                  - apiProtocol: "https"
                    intercom: false
                    isRegistered: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/upgrade:
    get:
      operationId: getSystemSettingsUpgrade
      tags:
        - system
      summary: Get a list of Cribl versions available for upgrade
      description: Get a list of Cribl versions available for upgrade
      deprecated: false
      responses:
        "200":
          description: a list of UpgradeResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UpgradeResult"
              example:
                count: 2
                items:
                  - version: "6.0.1"
                    downloadUrl: "https://downloads.example.com/cribl/6.0.1/cribl-6.0.1.tgz"
                    releaseDate: "2025-10-01"
                  - version: "6.1.0"
                    downloadUrl: "https://downloads.example.com/cribl/6.1.0/cribl-6.1.0.tgz"
                    releaseDate: "2025-11-15"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/settings/upgrade/{version}":
    post:
      operationId: createSystemSettingsUpgradeByVersion
      tags:
        - system
      summary: Upgrade Cribl to a given version
      description: Upgrade Cribl to a given version
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 1
                items:
                  - "Upgrade to 6.0.1 initiated"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Version number
          example: "6.0.1"
  /system/settings/upgrade-from-package:
    post:
      operationId: createSystemSettingsUpgradeFromPackage
      tags:
        - system
      summary: Upgrade master node with the provided package
      description: Upgrade master node with the provided package
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 1
                items:
                  - "Upgrade package upload successful"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: upgradeMaster object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpgradeMasterRequest"
            example:
              packageUrl: "https://downloads.example.com/cribl/6.0.1/cribl-6.0.1.tgz"
              allowDowngrade: false
  "/ui/{key}":
    get:
      operationId: getUiByKey
      tags:
        - uiState
      summary: Get UI state by key
      description: Get UI state by key
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - key: "theme"
                    value: "dark"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: UI state key
          example: "theme"
    patch:
      operationId: updateUiByKey
      tags:
        - uiState
      summary: Update UI state by key
      description: Update UI state by key
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - key: "theme"
                    value: "light"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: UI State Patch object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UiStatePatch"
            example:
              value: "light"
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: UI state key
          example: "theme"
  /version/undo:
    post:
      operationId: undoLastCommit
      tags:
        - versioning
        - git
      summary: undo the last commit
      description: undo the last commit
      responses:
        "200":
          description: The operation completed
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-version-undo-01"
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
          example: "myExistingGroupId"
  /version/branch:
    get:
      operationId: getVersionBranch
      tags:
        - versioning
        - git
      summary: get the list of branches
      description: get the list of branches
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 2
                items:
                  - name: "main"
                    ahead: 0
                    behind: 0
                  - name: "feature/new-output"
                    ahead: 3
                    behind: 1
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/commit:
    post:
      x-speakeasy-entity-operation: Commit#create
      operationId: createVersionCommit
      tags:
        - versioning
        - git
      summary: create a new commit containing the current configs the given log
        message describing the changes.
      description: create a new commit containing the current configs the given log
        message describing the changes.
      deprecated: false
      responses:
        "200":
          description: a list of GitCommitSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitCommitSummary"
              example:
                count: 1
                items:
                  - commit: "d34db33f"
                    author: "alice@example.com"
                    message: "Update pipeline and routes"
                    timestamp: "2025-10-06T14:15:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: GitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GitCommitParams"
            example:
              message: "Update pipeline and routes"
              author: "alice@example.com"
              files:
                - "pipelines/main.conf"
                - "routes/default.yml"
  /version/count:
    get:
      operationId: getVersionCount
      tags:
        - versioning
        - git
      summary: get the count of files of changed
      description: get the count of files of changed
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - filesChanged: 7
                    additions: 120
                    deletions: 45
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
          example: "default"
        - name: ID
          in: query
          required: false
          schema:
            type: string
          description: Commit ID
          example: "d34db33f"
  /version/current-branch:
    get:
      operationId: getVersionCurrentBranch
      tags:
        - versioning
        - git
      summary: returns git branch that the config is checked out to, if any
      description: returns git branch that the config is checked out to, if any
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - branch: "main"
                    dirty: false
                    lastCommit: "d34db33f"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/diff:
    get:
      operationId: getVersionDiff
      tags:
        - versioning
        - git
      summary: get the textual diff for given commit
      description: get the textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - filename: "routes/default.yml"
                    diff: |
                      @@ -10,7 +10,7 @@
                         destination: s3-main
                        - filter: source == 'nginx'
                        + filter: source in ['nginx','haproxy']
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: commit
          in: query
          required: false
          schema:
            type: string
          description: Commit hash (default is HEAD)
          example: "d34db33f"
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
          example: "default"
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: Filename
          example: "routes/default.yml"
        - name: diffLineLimit
          in: query
          required: false
          schema:
            type: number
          description: Limit maximum lines in the diff
          example: 5000
  /version/files:
    get:
      operationId: getVersionFiles
      tags:
        - versioning
        - git
      summary: get the files changed
      description: get the files changed
      deprecated: false
      responses:
        "200":
          description: a list of GitFilesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitFilesResponse"
              example:
                count: 2
                items:
                  - filename: "pipelines/main.conf"
                    status: "modified"
                    additions: 20
                    deletions: 3
                  - filename: "routes/default.yml"
                    status: "added"
                    additions: 42
                    deletions: 0
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
          example: "default"
        - name: ID
          in: query
          required: false
          schema:
            type: string
          description: Commit ID
          example: "d34db33f"
  /version/info:
    get:
      operationId: getVersionInfo
      tags:
        - versioning
        - git
      summary: Get info about versioning availability
      description: Get info about versioning availability
      deprecated: false
      responses:
        "200":
          description: a list of GitInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitInfo"
              example:
                count: 1
                items:
                  - initialized: true
                    remote: "origin"
                    branch: "main"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/push:
    post:
      operationId: createVersionPush
      tags:
        - versioning
        - git
      summary: push the current configs to the remote repository.
      description: push the current configs to the remote repository.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - remote: "origin"
                    branch: "main"
                    pushed: true
                    commit: "d34db33f"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/revert:
    post:
      operationId: createVersionRevert
      tags:
        - versioning
        - git
      summary: revert a commit
      description: revert a commit
      deprecated: false
      responses:
        "200":
          description: a list of GitRevertResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitRevertResult"
              example:
                count: 1
                items:
                  - commit: "cafebabe"
                    reverted: true
                    message: "Revert accidental route change"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: GitRevertParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GitRevertParams"
            example:
              commit: "cafebabe"
              force: false
              message: "Revert accidental route change"
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
          example: "default"
  /version/show:
    get:
      operationId: getVersionShow
      tags:
        - versioning
        - git
      summary: get the log message and textual diff for given commit
      description: get the log message and textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - commit: "d34db33f"
                    message: "Update pipeline and routes"
                    diff: |
                      @@ -10,7 +10,7 @@
                         destination: s3-main
                        - filter: source == 'nginx'
                        + filter: source in ['nginx','haproxy']
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: commit
          in: query
          required: false
          schema:
            type: string
          description: Commit hash (default is HEAD)
          example: "d34db33f"
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
          example: "default"
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: Filename
          example: "routes/default.yml"
        - name: diffLineLimit
          in: query
          required: false
          schema:
            type: number
          description: Limit maximum lines in the diff
          example: 5000
  /version/status:
    get:
      operationId: getVersionStatus
      tags:
        - versioning
        - git
      summary: get the the working tree status
      description: get the the working tree status
      deprecated: false
      responses:
        "200":
          description: a list of GitStatusResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitStatusResult"
              example:
                count: 1
                items:
                  - branch: "main"
                    ahead: 0
                    behind: 0
                    changes:
                      - path: "pipelines/main.conf"
                        status: "modified"
                      - path: "lookups/countries.csv"
                        status: "added"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
          description: Group ID
          example: "default"
  /version/sync:
    post:
      operationId: createVersionSync
      tags:
        - versioning
        - git
      summary: syncs with remote repo via POST requests
      description: syncs with remote repo via POST requests
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - remote: "origin"
                    fetched: true
                    pushed: false
                    updatedRefs: ["refs/heads/main"]
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/ai/settings/features/{feature}":
    get:
      operationId: getAiSettingsFeaturesByFeature
      tags:
        - ai-settings
      summary: Returns setting for a specific feature
      description: Returns setting for a specific feature
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - feature: "copilotAutoGitCommitMessages"
                    enabled: false
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: feature
          in: path
          required: true
          schema:
            type: string
          description: Feature name to get settings for
          example: "copilotAutoGitCommitMessages"
    post:
      operationId: createAiSettingsFeaturesByFeature
      tags:
        - ai-settings
      summary: Updates setting for a specific feature
      description: Updates setting for a specific feature
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - feature: "copilotAutoGitCommitMessages"
                    enabled: true
                    updatedAt: "2025-10-06T14:20:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: feature
          in: path
          required: true
          schema:
            type: string
          description: Feature name to update settings for
          example: "copilotAutoGitCommitMessages"
  /ai/settings/features:
    get:
      operationId: getAiSettingsFeatures
      tags:
        - ai-settings
      summary: Returns all feature settings
      description: Returns all feature settings
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 2
                items:
                  - feature: "copilotAutoGitCommitMessages"
                    enabled: true
                  - feature: "aiAssistant"
                    enabled: false
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createAiSettingsFeatures
      tags:
        - ai-settings
      summary: Updates all AI settings at once
      description: Updates all AI settings at once
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - updated: 2
                    features:
                      copilotAutoGitCommitMessages: true
                      aiAssistant: false
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /ai/consent:
    get:
      operationId: getAiConsent
      tags:
        - consent
      summary: Fetches the AI consent information, specifically the org GUID and
        accepted boolean.
      description: Fetches the AI consent information, specifically the org GUID and
        accepted boolean.
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - orgGuid: "org-123e4567-e89b-12d3-a456-426614174000"
                    accepted: true
                    updatedAt: "2025-10-06T14:25:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createAiConsent
      tags:
        - consent
      summary: Stores the AI consent information, specifically the org GUID and
        accepted boolean.
      description: Stores the AI consent information, specifically the org GUID and
        accepted boolean.
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
              example:
                count: 1
                items:
                  - orgGuid: "org-123e4567-e89b-12d3-a456-426614174000"
                    accepted: true
                    savedAt: "2025-10-06T14:26:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/event-breaker-preview:
    post:
      operationId: createSearchEventBreakerPreview
      tags:
        - search
      summary: Runs an event breaker rule on the specified data
      description: Runs an event breaker rule on the specified data
      deprecated: false
      responses:
        "200":
          description: a list of PreviewResponseBody objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PreviewResponseBody"
              example:
                count: 1
                items:
                  - matched: true
                    events:
                      - raw: "2025-10-06T14:30:00Z GET /api 200 12ms"
                        broken: true
                        reason: "timestamp boundary"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-ebr-prev-01"
      requestBody:
        description: DatatypePreviewRequestBody object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatatypePreviewRequestBody"
            example:
              type: "raw"
              rawData: "2025-10-06T14:30:00Z GET /api 200 12ms\n2025-10-06T14:30:01Z GET /healthz 200 2ms"
              breakerRuleSet: "default-breakers"
  /search/healthcheck:
    get:
      operationId: getSearchHealthcheck
      tags:
        - search
      summary: Get health check metric for search
      description: Get health check metric for search
      deprecated: false
      responses:
        "200":
          description: a list of SearchHealthCheckStatus objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchHealthCheckStatus"
              example:
                count: 1
                items:
                  - service: "search"
                    status: "ok"
                    lastChecked: "2025-10-06T14:31:00Z"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unexpected error"
                status: 500
                requestId: "req-search-health-01"
  "/search/jobs/{id}/metrics":
    get:
      operationId: getSearchJobsMetricsById
      tags:
        - search
      summary: Get search job metrics
      description: Get search job metrics
      deprecated: false
      responses:
        "200":
          description: string object
          content:
            application/json:
              schema:
                type: string
              example: "{\"processed\": 10234, \"matched\": 9876, \"durationMs\": 4521}"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
          example: "job-123"
  /search/job-metrics:
    get:
      operationId: getSearchJobMetrics
      tags:
        - search
      summary: List metrics for all search jobs
      description: List metrics for all search jobs
      deprecated: false
      responses:
        "200":
          description: string object
          content:
            application/json:
              schema:
                type: string
              example: "{\"jobs\": [{\"id\":\"job-123\",\"processed\":10234,\"matched\":9876}]}"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/preview:
    post:
      operationId: createSearchPreview
      tags:
        - search
      summary: Applies a query snippet on a set of input events for preview
      description: Applies a query snippet on a set of input events for preview
      deprecated: false
      responses:
        "200":
          description: a list of PreviewResponseBody objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PreviewResponseBody"
              example:
                count: 1
                items:
                  - events:
                      - {"status":200,"bytes":512}
                      - {"status":404,"bytes":0}
                    matched: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PreviewRequestBody object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewRequestBody"
            example:
              query: "stats count by status"
              sample: "GET /healthz 200 2"
  /search/trust-policies:
    get:
      operationId: listTrustPolicy
      tags:
        - trust-policies
      summary: Get a list of TrustPolicy objects
      description: Get a list of TrustPolicy objects
      responses:
        "200":
          description: a list of TrustPolicy objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/TrustPolicy"
              example:
                count: 1
                items:
                  - id: "policy-default"
                    name: "Default Trust Policy"
                    rules:
                      - "allow:*.example.com"
                      - "deny:*.evil.com"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/search/trust-policies/{id}": {}
  "/search/jobs/{id}/stages/{stageId}/results":
    get:
      operationId: getSearchJobsStagesResultsByIdAndStageId
      tags:
        - search
      summary: List search results for a given stage. Note that this cannot be the
        root stage!
      description: List search results for a given stage. Note that this cannot be the
        root stage!
      deprecated: false
      responses:
        "200":
          description: string object
          content:
            application/json:
              schema:
                type: string
              example: "{\"stageId\":\"stage-parse\",\"rows\":10,\"preview\":true}"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job ID
          example: "job-123"
        - name: stageId
          in: path
          required: true
          schema:
            type: string
          description: id of the search job stage
          example: "stage-parse"
  "/search/jobs/{id}/results":
    get:
      operationId: getSearchJobsResultsById
      tags:
        - search
      summary: List search results, when lower/upper bound is provided, offset is
        relative to the time range.
      description: List search results, when lower/upper bound is provided, offset is
        relative to the time range.
      deprecated: false
      responses:
        "200":
          description: SearchResultsResults for the Search /results and /results-poll
            endpoints. object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJobResults"
              example:
                lowerBound: 1730831700
                upperBound: 1730832000
                nextOffset: 100
                results:
                  - _time: "2025-10-06T14:35:00Z"
                    status: 200
                    bytes: 512
                    service: "api"
                  - _time: "2025-10-06T14:35:02Z"
                    status: 404
                    bytes: 0
                    service: "api"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
          example: "job-123"
        - name: limit
          in: query
          required: false
          schema:
            type: number
          description: maximum number of events returned
          example: 100
        - name: offset
          in: query
          required: false
          schema:
            type: number
          description: starting offset of the events
          example: 0
        - name: lowerBound
          in: query
          required: false
          schema:
            type: number
          description: lower bound of the time range, inclusive
          example: 1730831700
        - name: upperBound
          in: query
          required: false
          schema:
            type: number
          description: upper bound of the time range, exclusive
          example: 1730832000
  "/search/jobs/{id}/results-poll":
    get:
      operationId: getSearchJobsResultsPollById
      tags:
        - search
      summary: List search results
      description: List search results
      deprecated: false
      responses:
        "200":
          description: SearchResultsResults for the Search /results and /results-poll
            endpoints. object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJobResults"
              example:
                lastJobStatus: "running"
                nextOffset: 200
                results:
                  - _time: "2025-10-06T14:36:00Z"
                    status: 200
                    bytes: 1024
                    service: "web"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: search job id
          example: "job-123"
        - name: limit
          in: query
          required: false
          schema:
            type: number
          description: maximum number of events returned
          example: 100
        - name: offset
          in: query
          required: false
          schema:
            type: number
          description: starting offset of the events
          example: 200
        - name: lowerBound
          in: query
          required: false
          schema:
            type: number
          description: lower bound of the time range, inclusive
          example: 1730831700
        - name: upperBound
          in: query
          required: false
          schema:
            type: number
          description: upper bound of the time range, exclusive
          example: 1730832000
        - name: lastJobStatus
          in: query
          required: false
          description: last known status of the Search Job. Used to return immediatelyupon
            status change if the status was queued.
          schema:
            type: string
          example: "running"
  "/edge/containers/{id}":
    get:
      operationId: getEdgeContainersById
      tags:
        - edgeContainers
        - edge
      summary: Get details for a single container on the edge host. Add stream=true to
        get a stream instead.
      description: Get details for a single container on the edge host. Add
        stream=true to get a stream instead.
      deprecated: false
      responses:
        "200":
          description: a list of Container objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Container"
              example:
                count: 1
                items:
                  - id: "container-abc123"
                    name: "nginx"
                    image: "nginx:1.25"
                    state: "running"
                    mounts:
                      - destination: "/var/log"
                        source: "/var/lib/containers/.../var/log"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID
          example: "container-abc123"
  /edge/containers:
    get:
      operationId: getEdgeContainers
      tags:
        - edgeContainers
        - edge
      summary: Get a detailed list of containers running on the edge host.
      description: Get a detailed list of containers running on the edge host.
      deprecated: false
      responses:
        "200":
          description: a list of Container objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Container"
              example:
                count: 2
                items:
                  - id: "container-abc123"
                    name: "nginx"
                    image: "nginx:1.25"
                    state: "running"
                  - id: "container-def456"
                    name: "redis"
                    image: "redis:7"
                    state: "exited"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/logs:
    get:
      operationId: getEdgeLogs
      tags:
        - edge
      summary: list log files
      description: list log files
      deprecated: false
      responses:
        "200":
          description: a list of EdgeFile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EdgeFile"
              example:
                count: 2
                items:
                  - filePath: "/var/log/nginx/access.log"
                    id: "file-abc123"
                    modTime: 1730832000
                    mode: "0644"
                    owner: "root"
                    size: 1048576
                  - filePath: "/var/log/syslog"
                    id: "file-def456"
                    modTime: 1730832100
                    mode: "0644"
                    owner: "root"
                    size: 2097152
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: mode
          in: query
          required: false
          schema:
            type: string
          description: Discovery Mode (default is "auto")
          example: "auto"
        - name: allow
          in: query
          required: false
          schema:
            type: string
          description: query array[string] optional List of allowed-filename wildcard
            patterns
          example: "*.log,*.txt"
        - name: path
          in: query
          required: false
          schema:
            type: string
          description: Search directory for "manual" mode
          example: "/var/log"
        - name: depth
          in: query
          required: false
          schema:
            type: number
          description: Search depth for "manual" mode
          example: 2
  "/edge/processes/{pid}":
    get:
      operationId: getEdgeProcessesByPid
      tags:
        - edgeProcesses
        - edge
      summary: Get details of a process running on the edge host
      description: Get details of a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of Process objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Process"
              example:
                count: 1
                items:
                  - id: "proc-abc123"
                    pid: 5678
                    ppid: 1
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: PID of the process
          example: "8675309"
  /edge/processes:
    get:
      operationId: getEdgeProcesses
      tags:
        - edgeProcesses
        - edge
      summary: Get a detailed list of processes running on the edge host
      description: Get a detailed list of processes running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of Process objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Process"
              example:
                count: 2
                items:
                  - id: "proc-nginx"
                    pid: 1234
                    ppid: 1
                  - id: "proc-redis"
                    pid: 4321
                    ppid: 1
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /functions:
    get:
      operationId: listFunction
      tags:
        &a165
        - functions
      summary: Get a list of Function objects
      description: Get a list of Function objects
      responses:
        &a166
        "200":
          description: a list of Function objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Function"
              example:
                count: 2
                items:
                  - id: "util-parse-json"
                    name: "Parse JSON"
                  - id: "mask-secrets"
                    name: "Mask Secrets"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/functions/{id}":
    get:
      operationId: getFunctionById
      tags: *a165
      summary: Get Function by ID
      description: Get Function by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a167
            type: string
          description: Unique ID to GET
          example: "util-parse-json"
      responses: *a166
  "/p/{pack}/functions":
    get:
      operationId: getFunctionByPack
      tags: *a165
      summary: Get a list of Function objects within a Pack
      description: Get a list of Function objects within a Pack
      responses: *a166
      parameters:
        - name: pack
          in: path
          required: true
          schema:
            &a168
            type: string
          description: pack ID to GET
          example: "observability-pack"
  "/p/{pack}/functions/{id}":
    get:
      operationId: getFunctionByPackAndId
      tags: *a165
      summary: Get Function by ID within a Pack
      description: Get Function by ID within a Pack
      parameters:
        - name: id
          in: path
          required: true
          schema: *a167
          description: Unique ID to GET for pack
          example: "util-parse-json"
        - name: pack
          in: path
          required: true
          schema: *a168
          description: pack ID to GET
          example: "observability-pack"
      responses: *a166
  /collectors:
    get:
      operationId: listCollector
      tags:
        &a169
        - collectors
      summary: Get a list of Collector objects
      description: Get a list of Collector objects
      responses:
        &a170
        "200":
          description: a list of Collector objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Collector"
              example:
                count: 1
                items:
                  - id: "collector-01"
                    description: "Collects metrics from Prometheus"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/collectors/{id}":
    get:
      operationId: getCollectorById
      tags: *a169
      summary: Get Collector by ID
      description: Get Collector by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID to GET
          example: "collector-01"
      responses: *a170
  /executors:
    get:
      operationId: listExecutor
      tags:
        &a171
        - executors
      summary: Get a list of Executor objects
      description: Get a list of Executor objects
      responses:
        &a172
        "200":
          description: a list of Executor objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Executor"
              example:
                count: 1
                items:
                  - id: "executor-01"
                    description: "Executes scheduled searches"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/executors/{id}":
    get:
      operationId: getExecutorById
      tags: *a171
      summary: Get Executor by ID
      description: Get Executor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID to GET
          example: "executor-01"
      responses: *a172
  "/m/{groupId}/system/projects":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: listProject
      tags:
        &a173
        - projects
      summary: Get a list of Project objects
      description: Get a list of Project objects
      responses:
        &a174
        "200":
          description: a list of Project objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectConfig"
              example:
                count: 1
                items:
                  - id: "project-abc123"
                    description: "Web logs ingestion"
                    destinations: ["s3-main"]
                    subscriptions: ["web-logs"]
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Project#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      operationId: createProject
      tags: *a173
      summary: Create Project
      description: Create Project
      requestBody:
        description: New Project object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectConfig"
            example:
              id: "project-abc123"
              description: "Web logs ingestion"
              destinations: ["s3-main"]
              subscriptions: ["web-logs"]
      responses: *a174
  "/m/{groupId}/system/projects/{id}":
    get:
      x-speakeasy-entity-operation: Project#read
      operationId: getProjectById
      tags: *a173
      summary: Get Project by ID
      description: Get Project by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            &a175
            type: string
          description: Unique ID to GET
          example: "project-abc123"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a174
    patch:
      x-speakeasy-entity-operation: Project#update
      operationId: updateProjectById
      tags: *a173
      summary: Update Project
      description: Update Project
      parameters:
        - name: id
          in: path
          required: true
          schema: *a175
          description: Unique ID to PATCH
          example: "project-abc123"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      requestBody:
        description: Project object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectConfig"
            example:
              id: "project-abc123"
              description: "Web logs ingestion"
              destinations: ["s3-main"]
              subscriptions: ["web-logs"]
      responses: *a174
    delete:
      x-speakeasy-entity-operation: Project#delete
      operationId: deleteProjectById
      tags: *a173
      summary: Delete Project
      description: Delete Project
      parameters:
        - name: id
          in: path
          required: true
          schema: *a175
          description: Unique ID to DELETE
          example: "project-abc123"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "Cribl"
      responses: *a174
  "/system/projects/{id}/acl":
    get:
      operationId: getProjectAclById
      responses:
        &a179
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
              example:
                count: 2
                items:
                  - user: "alice@example.com"
                    perms:
                      - resource: "project:project-abc123"
                        actions: ["read","write"]
                        effect: "allow"
                  - user: "bob@example.com"
                    perms:
                      - resource: "project:project-abc123"
                        actions: ["read"]
                        effect: "allow"
        "401":
          &a176
          description: Unauthorized
        "500":
          &a177
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema: *a175
          description: Unique ID for ACL Get
          example: "project-abc123"
      description: List accesses to Project granted to users
      summary: Get Project ACL
      tags:
        &a178
        - projects
        - users ACL
  "/system/projects/{id}/acl/apply":
    post:
      operationId: createProjectAclApplyById
      requestBody:
        &a180
        description: AccessControlSchema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessControlSchema"
            example:
              entries:
                - principal: "alice@example.com"
                  resource: "project:project-abc123"
                  actions: ["read","write"]
                - principal: "bob@example.com"
                  resource: "project:project-abc123"
                  actions: ["read"]
      responses:
        &a181
        "200":
          description: N/A
        "401": *a176
        "500": *a177
      parameters:
        - name: id
          in: path
          required: true
          schema: *a175
          description: Unique ID for ACL Create
          example: "project-abc123"
      description: Add/remove accesses to Project for users
      summary: Modify Project ACL
      tags: *a178
  "/system/projects/{id}/acl/teams":
    get:
      operationId: getProjectAclTeamsById
      responses: *a179
      parameters:
        - name: id
          in: path
          required: true
          schema: *a175
          description: Unique ID for ACL Teams Get
          example: "project-abc123"
      description: List accesses to Project granted to Teams
      summary: Get Project Teams
      tags:
        &a182
        - projects
        - teams ACL
  "/system/projects/{id}/acl/teams/apply":
    post:
      operationId: createProjectAclTeamsApplyById
      requestBody: *a180
      responses: *a181
      parameters:
        - name: id
          in: path
          required: true
          schema: *a175
          description: Unique ID for ACL Teams Create
          example: "project-abc123"
      description: Add/remove accesses to Project for Teams
      summary: Modify Project Teams ACL
      tags: *a182
  "/system/projects/{projectId}/destinations":
    get:
      operationId: getProjectDestinationsByProjectId
      tags:
        - projects
      summary: Lists destinations associated with this project.
      description: Lists destinations associated with this project.
      deprecated: false
      responses:
        "200":
          description: a list of ProjectDestination objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectDestination"
              example:
                count: 2
                items:
                  - id: "s3-main"
                    type: "s3"
                  - id: "kafka-orders"
                    type: "kafka"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project Id
          example: "project-abc123"
  "/m/{groupId}/system/subscriptions":
    get:
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          description: Project enabled
          example: true
        - name: description
          in: query
          required: false
          schema:
            type: string
          description: Project description
          example: "This is how you describe a project with runes that form words"
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: filter
          example: "truthy"
        - name: pipeline
          in: query
          required: false
          schema:
            type: string
          description: pipeline to be used
          example: "myExistingPipelineId"
      operationId: listSubscription
      tags:
        &a183
        - subscriptions
      summary: Get a list of Subscription objects
      description: Get a list of Subscription objects
      responses:
        &a184
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
              example:
                count: 2
                items:
                  - id: "web-logs"
                    pipeline: "main"
                    description: "Web logs pipeline"
                    disabled: false
                    filter: "truthy"
                  - id: "audit-logs"
                    pipeline: "audit"
                    description: "Security audit logs"
                    disabled: false
                    filter: "severity >= 4"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Subscription#create
      parameters:
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
        - name: disabled
          in: query
          required: false
          schema:
            type: boolean
          description: Project Id
          example: false
        - name: description
          in: query
          required: false
          schema:
            type: string
          description: Project description
          example: "Words describe things"
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: filter
          example: "truthy"
        - name: pipeline
          in: query
          required: true
          schema:
            type: string
          description: pipeline to be used
          example: "myExistingPipelineId"
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: new Id to be used for subscription to be created
          example: "myUniqueSubscriptionId"
      operationId: createSubscription
      tags:
        - subscriptions
      summary: Create subscription
      description: Create subscription
      deprecated: false
      responses:
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
              example:
                count: 1
                items:
                  - id: "myUniqueSubscriptionId"
                    pipeline: "myExistingPipelineId"
                    description: "Words describe things"
                    disabled: false
                    filter: "truthy"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: Subscription object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
            example:
              id: "myUniqueSubscriptionId"
              pipeline: "myExistingPipelineId"
              description: "Words describe things"
              disabled: false
              filter: "truthy"
  "/m/{groupId}/system/subscriptions/{id}":
    get:
      x-speakeasy-entity-operation: Subscription#read
      operationId: getSubscriptionById
      tags: *a183
      summary: Get Subscription by ID
      description: Get Subscription by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique ID to GET
          example: "myUniqueSubscriptionId"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
      responses: *a184
    patch:
      x-speakeasy-entity-operation: Subscription#update
      operationId: updateSubscriptionById
      tags:
        - subscriptions
      summary: Update subscription
      description: Update subscription
      deprecated: false
      responses:
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
              example:
                count: 1
                items:
                  - id: "myUniqueSubscriptionId"
                    pipeline: "myExistingPipelineId"
                    description: "Updated description"
                    disabled: false
                    filter: "truthy"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Subscription ID
          example: "myUniqueSubscriptionId"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
    delete:
      x-speakeasy-entity-operation: Subscription#delete
      operationId: deleteSubscriptionById
      tags:
        - subscriptions
      summary: Delete subscription
      description: Delete subscription
      deprecated: false
      responses:
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
              example:
                count: 1
                items:
                  - id: "myUniqueSubscriptionId"
                    deleted: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Subscription ID
          example: "myUniqueSubscriptionId"
        - name: groupId
          in: path
          required: true
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          schema:
            type: string
          example: "myExistingGroupId"
  "/system/projects/{projectId}/subscriptions":
    get:
      operationId: getSubscriptionByProjectId
      tags:
        - projects
        - subscriptions
      summary: Get the subscriptions associated with the project
      description: Get the subscriptions associated with the project
      deprecated: false
      responses:
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
              example:
                count: 2
                items:
                  - id: "web-logs"
                    pipeline: "main"
                    description: "Web logs pipeline"
                    disabled: false
                  - id: "audit-logs"
                    pipeline: "audit"
                    description: "Security audit logs"
                    disabled: false
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
          description: Project Id
          example: "project-abc123"
  "/master/groups/{id}/configVersion":
    get:
      x-speakeasy-entity-operation: ConfigVersion#read
      operationId: getGroupsConfigVersionById
      tags:
        - groups
      summary: Get effective bundle version for given Group
      description: Get effective bundle version for given Group
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
              example:
                count: 1
                items:
                  - "2025.10.06-1234"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group ID
          example: "default"
  "/products/{product}/groups":
    post:
      x-speakeasy-entity-operation: Group#create
      operationId: createProductsGroupsByProduct
      tags:
        - groups
      summary: Create a Fleet or Worker Group
      description: Create a Fleet or Worker Group
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
              example:
                count: 1
                items:
                  - id: "workers-west"
                    cloud:
                      provider: "aws"
                      region: "us-west-2"
                    onPrem: false
                    workerRemoteAccess: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: ConfigGroup object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigGroup"
            example:
              id: "workers-west"
              cloud:
                provider: "aws"
                region: "us-west-2"
              onPrem: false
              workerRemoteAccess: true
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            enum:
              - stream
              - edge
          description: Cribl Product
          example: "stream"
    get:
      operationId: getProductsGroupsByProduct
      tags:
        - groups
      summary: Get a list of ConfigGroup objects
      description: Get a list of ConfigGroup objects
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
              example:
                count: 2
                items:
                  - id: "workers-west"
                    cloud:
                      provider: "aws"
                      region: "us-west-2"
                    onPrem: false
                    workerRemoteAccess: true
                  - id: "edge-eu"
                    cloud:
                      provider: "azure"
                      region: "westeurope"
                    onPrem: false
                    workerRemoteAccess: false
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            enum:
              - stream
              - edge
          description: Cribl Product
          example: "edge"
  "/master/groups/{id}":
    get:
      x-speakeasy-entity-operation: Group#get
      operationId: getGroupsById
      tags:
        - groups
      summary: Get a specific ConfigGroup object
      description: Get a specific ConfigGroup object
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
              example:
                count: 1
                items:
                  - id: "workers-west"
                    onPrem: false
                    workerRemoteAccess: true
                    streamtags: ["prod","west"]
                    cloud:
                      provider: "aws"
                      region: "us-west-2"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group id
          example: "workers-west"
        - name: fields
          in: query
          required: false
          schema:
            type: string
          description: "fields to add to results: git.commit, git.localChanges, git.log"
          example: "git.commit,git.localChanges"
    patch:
      operationId: updateGroupsById
      tags:
      - groups
      summary: Update a specific ConfigGroup object
      description: Update a specific ConfigGroup object
      x-speakeasy-entity-operation: Group#update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group id
          example: "workers-west"
      responses:
        '200':
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count_total:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
              example:
                count_total: 1
                items:
                  - id: "workers-west"
                    workerRemoteAccess: false
                    streamtags: ["prod","west"]
    delete:
      operationId: deleteGroupsById
      tags:
      - groups
      summary: Delete a specific ConfigGroup object
      description: Delete a specific ConfigGroup object
      x-speakeasy-entity-operation: Group#delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group id
          example: "workers-west"
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
              example:
                count: 1
                items:
                  - id: "workers-west"
                    deleted: true
  "/products/{product}/groups/{id}/acl/teams":
    get:
      operationId: getProductsGroupsAclTeamsByProductAndId
      tags:
        - teams
      summary: ACL of team with permissions for resources in this Group
      description: ACL of team with permissions for resources in this Group
      deprecated: false
      responses:
        "200":
          description: a list of TeamAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamAccessControlList"
              example:
                count: 1
                items:
                  - team: "platform-team"
                    perms:
                      - resource: "group:workers-west"
                        actions: ["read","write"]
                        effect: "allow"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            enum:
              - stream
              - edge
          description: Cribl Product
          example: "stream"
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group ID
          example: "myExistingGroupId"
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - groups
              - datasets
              - dataset-providers
              - projects
              - dashboards
              - macros
          description: resource type by which to filter access levels
          example: "groups"
  "/master/groups/{id}/acl":
    get:
      operationId: getGroupsAclById
      tags:
        - groups
        - users ACL
      summary: ACL of members with permissions for resources in this Group
      description: ACL of members with permissions for resources in this Group
      deprecated: false
      responses:
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
              example:
                count: 2
                items:
                  - user: "alice@example.com"
                    perms:
                      - resource: "group:workers-west"
                        actions: ["read","write"]
                        effect: "allow"
                  - user: "bob@example.com"
                    perms:
                      - resource: "group:workers-west"
                        actions: ["read"]
                        effect: "allow"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Group id
          example: "workers-west"
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - groups
              - datasets
              - dataset-providers
              - projects
              - dashboards
              - macros
          description: resource type by which to filter access levels
          example: "projects"
  /master/groups/{id}/deploy:
    patch:
      operationId: updateGroupsDeployById
      tags:
      - groups
      summary: Deploy commits for a Fleet or Worker Group
      description: Deploy commits for a Fleet or Worker Group
      x-speakeasy-entity-operation: Deploy#create
      responses:
        '200':
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count_total:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfigGroup'
              example:
                count_total: 1
                items:
                  - id: "workers-west"
                    version: "2025.10.06-1234"
                    deployedAt: "2025-10-06T14:45:00Z"
        '401':
          description: Unauthorized
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        description: DeployRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
            example:
              targetVersion: "2025.10.06-1234"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Group ID
        example: "workers-west"
servers:
- url: https://{workspaceId}-{organizationId}.{cloudDomain}
  x-speakeasy-server-id: cloud
  variables:
    workspaceId:
      default: main
      description: The Workspace name
      example: main
    organizationId:
      default: ian
      description: The Organization ID
      example: learning-developer-fd7u8
    cloudDomain:
      default: cribl.cloud
      description: Cribl Cloud domain name
      example: cribl.cloud
