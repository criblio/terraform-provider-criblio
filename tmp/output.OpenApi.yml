components:
    schemas:
        AMTrustPolicy:
            properties:
                Statement:
                    items:
                        properties:
                            Action:
                                oneOf:
                                    - type: string
                                    - items:
                                        type: string
                                      type: array
                            Condition:
                                properties:
                                    StringEquals:
                                        type: object
                                type: object
                            Effect:
                                type: string
                            Principal:
                                properties:
                                    AWS:
                                        type: string
                                required:
                                    - AWS
                                type: object
                        required:
                            - Action
                            - Effect
                            - Principal
                        type: object
                    type: array
                Version:
                    type: string
            required:
                - Statement
                - Version
            type: object
        AUTH_PROVIDER:
            enum:
                - token
                - aws-iam
                - aws-ec2
            type: string
        AWSKMSServiceConfig:
            properties:
                kmsKeyArn:
                    type: string
                region:
                    type: string
            required:
                - kmsKeyArn
                - region
            type: object
        AccessControl:
            type: object
        AccessControlSchema:
            properties:
                add:
                    $ref: '#/components/schemas/AccessControl'
                rm:
                    $ref: '#/components/schemas/AccessControl'
            type: object
        AddHecTokenRequest:
            properties:
                description:
                    type: string
                enabled:
                    type: boolean
                metadata:
                    items:
                        properties:
                            name:
                                type: string
                            value:
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    type: array
                token:
                    type: string
            required:
                - token
            type: object
        AggregationMgrOptions:
            properties:
                aggregations:
                    items:
                        type: string
                    type: array
                cumulative:
                    type: boolean
                dotsAsLiterals:
                    type: boolean
                flushEventLimit:
                    type: number
                flushMemLimit:
                    type: number
                hostname:
                    type: string
                idleTimeLimitSeconds:
                    type: number
                lagToleranceSeconds:
                    type: number
                metricsMode:
                    type: boolean
                prefix:
                    type: string
                preserveSplitByStructure:
                    type: boolean
                searchAggMode:
                    $ref: '#/components/schemas/SearchAggMode'
                splitBys:
                    items:
                        type: string
                    type: array
                sufficientStatsOnly:
                    type: boolean
                timeWindowSeconds:
                    type: number
            required:
                - aggregations
                - cumulative
                - flushEventLimit
                - flushMemLimit
                - hostname
                - metricsMode
                - sufficientStatsOnly
                - timeWindowSeconds
            type: object
        AppMode:
            enum:
                - single
                - master
                - worker
                - edge
                - managed-edge
            type: string
        AppScopeProcess:
            properties:
                cfg:
                    $ref: '#/components/schemas/AppscopeConfigWithCustom'
                config_id:
                    type: string
                id:
                    type: string
                interfaces:
                    items:
                        properties:
                            config:
                                type: string
                            connected:
                                type: boolean
                            name:
                                type: string
                        type: object
                    type: array
                lastError:
                    type: string
                process:
                    properties:
                        hostPid:
                            type: number
                        id:
                            type: string
                        machine_id:
                            type: string
                        pid:
                            type: number
                        uuid:
                            type: string
                    required:
                        - pid
                    type: object
                processingStatus:
                    $ref: '#/components/schemas/AppScopeProcessingStatus'
                source_id:
                    type: string
                status:
                    $ref: '#/components/schemas/AppScopeProcessStatus'
            required:
                - id
            type: object
        AppScopeProcessStatus:
            enum:
                - green
                - yellow
                - red
            nullable: true
            type: string
        AppScopeProcessingStatus:
            enum:
                - normal
                - attaching
                - attach_failed
                - updating
                - update_failed
                - detaching
                - detached
                - detach_failed
            nullable: true
            type: string
        AppscopeConfig:
            properties:
                cribl:
                    properties:
                        authtoken:
                            type: string
                        enable:
                            type: boolean
                        transport:
                            $ref: '#/components/schemas/AppscopeTransport'
                        useScopeSourceTransport:
                            type: boolean
                    type: object
                event:
                    properties:
                        enable:
                            type: boolean
                        format:
                            properties:
                                enhancefs:
                                    type: boolean
                                maxeventpersec:
                                    type: number
                            required:
                                - enhancefs
                                - maxeventpersec
                            type: object
                        transport:
                            $ref: '#/components/schemas/AppscopeTransport'
                        type:
                            enum:
                                - ndjson
                            type: string
                        watch:
                            items:
                                properties:
                                    allowbinary:
                                        type: boolean
                                    enabled:
                                        type: boolean
                                    field:
                                        type: string
                                    headers:
                                        type: string
                                    name:
                                        type: string
                                    type:
                                        type: string
                                    value:
                                        type: string
                                required:
                                    - type
                                type: object
                            type: array
                    required:
                        - enable
                        - format
                        - transport
                        - type
                        - watch
                    type: object
                libscope:
                    properties:
                        commanddir:
                            type: string
                        configevent:
                            type: boolean
                        log:
                            properties:
                                level:
                                    enum:
                                        - error
                                        - debug
                                        - info
                                        - warning
                                        - none
                                    type: string
                                transport:
                                    $ref: '#/components/schemas/AppscopeTransport'
                            type: object
                        summaryperiod:
                            type: number
                    type: object
                metric:
                    properties:
                        enable:
                            type: boolean
                        format:
                            properties:
                                statsdmaxlen:
                                    type: number
                                statsdprefix:
                                    type: string
                                type:
                                    type: string
                                verbosity:
                                    type: number
                            type: object
                        transport:
                            $ref: '#/components/schemas/AppscopeTransport'
                        watch:
                            items:
                                type: string
                            type: array
                    required:
                        - enable
                        - format
                        - transport
                        - watch
                    type: object
                payload:
                    properties:
                        dir:
                            type: string
                        enable:
                            type: boolean
                    required:
                        - dir
                        - enable
                    type: object
                protocol:
                    items:
                        properties:
                            binary:
                                type: boolean
                            detect:
                                type: boolean
                            len:
                                type: number
                            name:
                                type: string
                            payload:
                                type: boolean
                            regex:
                                type: string
                        required:
                            - binary
                            - detect
                            - len
                            - name
                            - payload
                            - regex
                        type: object
                    type: array
                tags:
                    items:
                        properties:
                            key:
                                type: string
                            value:
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    type: array
            type: object
        AppscopeConfigWithCustom:
            properties:
                cribl:
                    properties:
                        authtoken:
                            type: string
                        enable:
                            type: boolean
                        transport:
                            $ref: '#/components/schemas/AppscopeTransport'
                        useScopeSourceTransport:
                            type: boolean
                    type: object
                custom:
                    items:
                        $ref: '#/components/schemas/AppscopeCustom'
                    type: array
                event:
                    properties:
                        enable:
                            type: boolean
                        format:
                            properties:
                                enhancefs:
                                    type: boolean
                                maxeventpersec:
                                    type: number
                            required:
                                - enhancefs
                                - maxeventpersec
                            type: object
                        transport:
                            $ref: '#/components/schemas/AppscopeTransport'
                        type:
                            enum:
                                - ndjson
                            type: string
                        watch:
                            items:
                                properties:
                                    allowbinary:
                                        type: boolean
                                    enabled:
                                        type: boolean
                                    field:
                                        type: string
                                    headers:
                                        type: string
                                    name:
                                        type: string
                                    type:
                                        type: string
                                    value:
                                        type: string
                                required:
                                    - type
                                type: object
                            type: array
                    required:
                        - enable
                        - format
                        - transport
                        - type
                        - watch
                    type: object
                libscope:
                    properties:
                        commanddir:
                            type: string
                        configevent:
                            type: boolean
                        log:
                            properties:
                                level:
                                    enum:
                                        - error
                                        - debug
                                        - info
                                        - warning
                                        - none
                                    type: string
                                transport:
                                    $ref: '#/components/schemas/AppscopeTransport'
                            type: object
                        summaryperiod:
                            type: number
                    type: object
                metric:
                    properties:
                        enable:
                            type: boolean
                        format:
                            properties:
                                statsdmaxlen:
                                    type: number
                                statsdprefix:
                                    type: string
                                type:
                                    type: string
                                verbosity:
                                    type: number
                            type: object
                        transport:
                            $ref: '#/components/schemas/AppscopeTransport'
                        watch:
                            items:
                                type: string
                            type: array
                    required:
                        - enable
                        - format
                        - transport
                        - watch
                    type: object
                payload:
                    properties:
                        dir:
                            type: string
                        enable:
                            type: boolean
                    required:
                        - dir
                        - enable
                    type: object
                protocol:
                    items:
                        properties:
                            binary:
                                type: boolean
                            detect:
                                type: boolean
                            len:
                                type: number
                            name:
                                type: string
                            payload:
                                type: boolean
                            regex:
                                type: string
                        required:
                            - binary
                            - detect
                            - len
                            - name
                            - payload
                            - regex
                        type: object
                    type: array
                tags:
                    items:
                        properties:
                            key:
                                type: string
                            value:
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    type: array
            type: object
        AppscopeCustom:
            properties:
                ancestor:
                    type: string
                arg:
                    type: string
                config:
                    $ref: '#/components/schemas/AppscopeConfig'
                env:
                    type: string
                hostname:
                    type: string
                procname:
                    type: string
                username:
                    type: string
            required:
                - config
            type: object
        AppscopeLibEntry:
            properties:
                config:
                    $ref: '#/components/schemas/AppscopeConfigWithCustom'
                description:
                    type: string
                id:
                    type: string
                lib:
                    $ref: '#/components/schemas/CriblLib'
                tags:
                    type: string
            required:
                - config
                - description
                - id
                - lib
            type: object
        AppscopeTransport:
            properties:
                buffer:
                    enum:
                        - line
                        - full
                    type: string
                host:
                    type: string
                path:
                    type: string
                port:
                    type: number
                tls:
                    properties:
                        cacertpath:
                            type: string
                        enable:
                            type: boolean
                        validateserver:
                            type: boolean
                    type: object
                type:
                    type: string
            type: object
        AuthConfig:
            properties:
                fallback:
                    type: boolean
                fallbackBadLogin:
                    type: boolean
                filter_type:
                    type: string
                host:
                    type: string
                port:
                    type: number
                ssl:
                    type: boolean
                type:
                    enum:
                        - ldap
                        - splunk
                        - local
                        - saas
                        - saml
                        - openid
                    type: string
            required:
                - fallback
                - fallbackBadLogin
                - host
                - port
                - ssl
                - type
            type: object
        AuthPolicyEntry:
            properties:
                actions:
                    items:
                        type: string
                    type: array
                object:
                    type: string
            required:
                - actions
                - object
            type: object
        AuthToken:
            properties:
                token:
                    type: string
            required:
                - token
            type: object
        AwsMetadata:
            properties:
                hostname:
                    type: string
                identity:
                    additionalProperties: true
                    type: object
                public_ipv4:
                    type: string
                roles:
                    items:
                        type: string
                    type: array
                security_groups:
                    items:
                        type: string
                    type: array
                tags:
                    type: object
                version:
                    type: number
            required:
                - version
            type: object
        BannerMessage:
            additionalProperties: false
            properties:
                created:
                    description: Time created
                    title: Time
                    type: number
                customThemes:
                    items:
                        type: string
                    type: array
                enabled:
                    description: Show a banner on top of all pages
                    title: Enable banner
                    type: boolean
                id:
                    title: Banner ID
                    type: string
                invertFontColor:
                    title: Invert font color
                    type: boolean
                link:
                    description: Optionally, provide a URL to append to the message
                    pattern: ^https?://
                    title: Link URL
                    type: string
                linkDisplay:
                    description: Optionally, display your link with a short text label instead of the raw URL (100-character limit)
                    maxLength: 100
                    title: Link display
                    type: string
                message:
                    description: Enter a message to display to all your Organization's users, across all Cribl products. Limited to one line and 100 characters; will be truncated as needed.
                    maxLength: 100
                    title: Banner message
                    type: string
                theme:
                    pattern: ^((#?[0-9a-fA-F]{6})|(orange)|(yellow)|(green)|(blue)|(purple)|(magenta)|(red)){1}$
                    title: Background color
                    type: string
                type:
                    enum:
                        - custom
                        - system
                    title: Banner type
                    type: string
            required:
                - type
                - message
                - theme
                - enabled
            type: object
        BulletinMessage:
            additionalProperties: false
            properties:
                group:
                    title: Group
                    type: string
                id:
                    title: Message ID
                    type: string
                metadata:
                    items:
                        type: object
                    type: array
                severity:
                    enum:
                        - info
                        - warn
                        - error
                        - fatal
                    title: Severity
                    type: string
                text:
                    title: Text
                    type: string
                time:
                    title: Occurrence Time
                    type: number
                title:
                    title: Title
                    type: string
            required:
                - id
                - text
            type: object
        CHOutConfig:
            properties:
                asyncInserts:
                    type: boolean
                auth:
                    $ref: '#/components/schemas/HTTPOutAuthConfig'
                authType:
                    enum:
                        - token
                        - none
                        - textSecret
                        - basic
                        - credentialsSecret
                        - secret
                        - manual
                        - manualAPIKey
                        - sslUserCertificate
                    type: string
                columnMappings:
                    items:
                        properties:
                            columnName:
                                type: string
                            columnType:
                                type: string
                            columnValueExpression:
                                type: string
                        required:
                            - columnName
                            - columnType
                            - columnValueExpression
                        type: object
                    type: array
                compress:
                    type: boolean
                concurrency:
                    type: number
                database:
                    type: string
                dumpFormatErrorsToDisk:
                    type: boolean
                excludeMappingFields:
                    items:
                        type: string
                    type: array
                extraHttpHeaders:
                    items:
                        $ref: '#/components/schemas/NameValue'
                    type: array
                extraParams:
                    items:
                        $ref: '#/components/schemas/HTTPOutExtraParamConfig'
                    type: array
                failedRequestLoggingMode:
                    type: string
                flushPeriodSec:
                    type: number
                format:
                    $ref: '#/components/schemas/Format'
                keepAlive:
                    type: boolean
                loadBalanced:
                    type: boolean
                mappingType:
                    $ref: '#/components/schemas/MappingType'
                maxConnectionReuseSec:
                    type: number
                maxPayloadEvents:
                    type: number
                maxPayloadSizeKB:
                    type: number
                maxSockets:
                    type: number
                method:
                    type: string
                password:
                    type: string
                rejectUnauthorized:
                    type: boolean
                responseHonorRetryAfterHeader:
                    type: boolean
                responseRetrySettings:
                    items:
                        $ref: '#/components/schemas/HTTPOutResponseRetryConfig'
                    type: array
                safeHeaders:
                    items:
                        type: string
                    type: array
                sqlUsername:
                    type: string
                tableName:
                    type: string
                tableNameExpression:
                    type: string
                timeoutRetrySettings:
                    $ref: '#/components/schemas/RetryBackoffOptions'
                timeoutSec:
                    type: number
                tls:
                    $ref: '#/components/schemas/TLSClientParams'
                token:
                    type: string
                totalMemoryLimitKB:
                    type: number
                url:
                    type: string
                urls:
                    type: array
                useRoundRobinDns:
                    type: boolean
                username:
                    type: string
                waitForAsyncInserts:
                    type: boolean
            required:
                - asyncInserts
                - database
                - flushPeriodSec
                - format
                - loadBalanced
                - mappingType
                - tableName
                - url
            type: object
        CPUTimeMetric:
            properties:
                billableCPUSeconds:
                    type: number
                totalCPUSeconds:
                    type: number
                totalExecCPUSeconds:
                    type: number
            required:
                - totalCPUSeconds
                - totalExecCPUSeconds
            type: object
        CacheConnection:
            properties:
                acceleratedFields:
                    items:
                        type: string
                    type: array
                cacheRef:
                    type: string
                createdAt:
                    type: number
                migrationQueryId:
                    type: string
                retentionInDays:
                    type: number
            required:
                - cacheRef
                - createdAt
                - retentionInDays
            type: object
        CacheStatusByDatasetId: {}
        CaptureParams:
            properties:
                duration:
                    type: number
                filter:
                    type: string
                level:
                    type: number
                maxEvents:
                    type: number
                stepDuration:
                    type: number
                workerId:
                    type: string
                workerThreshold:
                    type: number
            required:
                - duration
                - filter
                - level
                - maxEvents
            type: object
        Certificate:
            properties:
                ca:
                    description: Optionally, drag/drop or upload all CA certificates in PEM/Base64 format. Or, paste certificate contents here. Certificates can be used for client and/or server authentication.
                    title: CA certificate
                    type: string
                cert:
                    description: Drag/drop or upload host certificate in PEM/Base64 format, or paste its contents here
                    title: Certificate
                    type: string
                description:
                    title: Description
                    type: string
                id:
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: Name
                    type: string
                inUse:
                    description: List of configurations that reference this certificate
                    items:
                        type: string
                    title: Referenced
                    type: array
                passphrase:
                    title: Passphrase
                    type: string
                privKey:
                    title: Private key
                    type: string
            required:
                - id
                - cert
                - privKey
            type: object
        ChangelogState:
            properties:
                lastViewedCurrent:
                    type: string
                lastViewedUpgrade:
                    type: string
            type: object
        ChartConfig:
            properties:
                applyThreshold:
                    type: boolean
                axis:
                    properties:
                        xAxis:
                            type: string
                        yAxis:
                            items:
                                type: string
                            type: array
                        yAxisExcluded:
                            items:
                                type: string
                            type: array
                    type: object
                color:
                    type: string
                colorPalette:
                    type: number
                colorPaletteReversed:
                    type: boolean
                colorThresholds:
                    properties:
                        thresholds:
                            items:
                                properties:
                                    color:
                                        type: string
                                    threshold:
                                        type: number
                                required:
                                    - color
                                    - threshold
                                type: object
                            type: array
                    required:
                        - thresholds
                    type: object
                customData:
                    properties:
                        connectNulls:
                            type: string
                        dataFields:
                            items:
                                type: string
                            type: array
                        isPointColor:
                            type: boolean
                        limitToTopN:
                            type: number
                        lines:
                            type: boolean
                        nameField:
                            type: string
                        pointColorPalette:
                            type: number
                        pointColorPaletteReversed:
                            type: boolean
                        pointScale:
                            oneOf:
                                - type: string
                                - type: number
                        pointScaleDataField:
                            type: string
                        seriesCount:
                            type: number
                        splitBy:
                            type: string
                        stack:
                            type: boolean
                        summarizeOthers:
                            type: boolean
                        trellis:
                            type: boolean
                    type: object
                decimals:
                    type: number
                label:
                    type: string
                legend:
                    properties:
                        position:
                            type: string
                        truncate:
                            type: boolean
                    type: object
                mapDetails:
                    properties:
                        latitudeField:
                            type: string
                        longitudeField:
                            type: string
                        mapSourceID:
                            type: string
                        mapType:
                            type: string
                        nameField:
                            type: string
                        pointScale:
                            oneOf:
                                - type: string
                                - type: number
                        valueField:
                            type: string
                    type: object
                onClickAction:
                    properties:
                        search:
                            type: string
                        selectedDashboardId:
                            type: string
                        selectedInputId:
                            type: string
                        selectedLinkId:
                            type: string
                        selectedTimerangeInputId:
                            type: string
                        type:
                            type: string
                    type: object
                prefix:
                    type: string
                separator:
                    type: boolean
                series:
                    items:
                        $ref: '#/components/schemas/ChartSeries'
                    type: array
                shouldApplyUserChartSettings:
                    type: boolean
                style:
                    type: boolean
                suffix:
                    type: string
                type:
                    type: string
                xAxis:
                    properties:
                        dataField:
                            type: string
                        inverse:
                            type: boolean
                        labelInterval:
                            type: string
                        labelOrientation:
                            type: number
                        name:
                            type: string
                        offset:
                            type: number
                        position:
                            type: string
                        type:
                            type: string
                    type: object
                yAxis:
                    properties:
                        dataField:
                            items:
                                type: string
                            type: array
                        interval:
                            type: number
                        max:
                            type: number
                        min:
                            type: number
                        position:
                            type: string
                        scale:
                            type: string
                        splitLine:
                            type: boolean
                        type:
                            type: string
                    type: object
            required:
                - colorPalette
                - type
            type: object
        ChartData:
            items:
                type: object
            type: array
        ChartSeries:
            properties:
                color:
                    type: string
                data:
                    $ref: '#/components/schemas/ChartData'
                map:
                    type: string
                name:
                    type: string
                type:
                    $ref: '#/components/schemas/ChartType'
                yAxisField:
                    type: string
            required:
                - name
            type: object
        ChartType:
            enum:
                - area
                - column
                - events
                - funnel
                - gauge
                - horizontalBar
                - line
                - map
                - pie
                - scatter
                - single
                - table
            type: string
        ClickHouseDescriptionColumn:
            properties:
                name:
                    type: string
                type:
                    type: string
            required:
                - name
                - type
            type: object
        ClickHouseDescriptionResult:
            properties:
                description:
                    items:
                        $ref: '#/components/schemas/ClickHouseDescriptionColumn'
                    type: array
                errorMsg:
                    type: string
                success:
                    type: boolean
            required:
                - success
            type: object
        CloudProvider:
            enum:
                - aws
                - azure
            nullable: true
            type: string
        CluiItem:
            properties:
                category:
                    enum:
                        - link
                    type: string
                groupId:
                    type: string
                id:
                    type: string
                name:
                    type: string
                packId:
                    type: string
                subType:
                    type: string
                type:
                    $ref: '#/components/schemas/CluiType'
            required:
                - category
                - type
            type: object
        CluiType:
            enum:
                - input
                - output
                - route
                - pipeline
                - knowledge
                - collector
                - pack
                - monitoring
            type: string
        Collector:
            $ref: '#/components/schemas/Function'
        ColumnFilterSettings:
            properties:
                contains:
                    $ref: '#/components/schemas/ColumnSetting'
            required:
                - contains
            type: object
        ColumnFormatSettings:
            properties:
                palette:
                    $ref: '#/components/schemas/ColumnSetting'
                precision:
                    $ref: '#/components/schemas/ColumnSetting'
                prefix:
                    $ref: '#/components/schemas/ColumnSetting'
                suffix:
                    $ref: '#/components/schemas/ColumnSetting'
            required:
                - palette
                - precision
                - prefix
                - suffix
            type: object
        ColumnOrderSettings:
            properties:
                order:
                    $ref: '#/components/schemas/ColumnSetting'
            required:
                - order
            type: object
        ColumnSetting: {}
        ColumnSortSettings:
            properties:
                sort:
                    $ref: '#/components/schemas/ColumnSetting'
            required:
                - sort
            type: object
        Commit:
            properties:
                author_email:
                    type: string
                author_name:
                    type: string
                date:
                    type: string
                hash:
                    type: string
                message:
                    type: string
                short:
                    type: string
            required:
                - date
                - hash
                - message
                - short
            type: object
        CommonServiceLimitConfigs:
            properties:
                memoryLimit:
                    type: string
            required:
                - memoryLimit
            type: object
        Condition:
            $ref: '#/components/schemas/Function'
        ConfigGroup:
            properties:
                cloud:
                    $ref: '#/components/schemas/ConfigGroupCloud'
                configVersion:
                    type: string
                deployingWorkerCount:
                    type: number
                description:
                    type: string
                estimatedIngestRate:
                    type: number
                git:
                    properties:
                        commit:
                            type: string
                        localChanges:
                            type: number
                        log:
                            items:
                                $ref: '#/components/schemas/Commit'
                            type: array
                    type: object
                id:
                    type: string
                incompatibleWorkerCount:
                    type: number
                inherits:
                    type: string
                isFleet:
                    type: boolean
                isSearch:
                    type: boolean
                lookupDeployments:
                    items:
                        $ref: '#/components/schemas/ConfigGroupLookups'
                    type: array
                name:
                    type: string
                onPrem:
                    type: boolean
                provisioned:
                    type: boolean
                streamtags:
                    items:
                        type: string
                    type: array
                tags:
                    type: string
                type:
                    enum:
                        - lake_access
                    type: string
                upgradeVersion:
                    type: string
                workerCount:
                    type: number
                workerRemoteAccess:
                    type: boolean
            required:
                - configVersion
                - id
            type: object
        ConfigGroupCloud:
            properties:
                provider:
                    $ref: '#/components/schemas/CloudProvider'
                region:
                    type: string
            required:
                - provider
                - region
            type: object
        ConfigGroupLookups:
            properties:
                context:
                    type: string
                lookups:
                    items:
                        properties:
                            deployedVersion:
                                type: string
                            file:
                                type: string
                            version:
                                type: string
                        required:
                            - file
                        type: object
                    type: array
            required:
                - context
                - lookups
            type: object
        Connection:
            properties:
                output:
                    type: string
                pipeline:
                    type: string
            required:
                - output
            type: object
        Container:
            properties:
                command:
                    oneOf:
                        - type: string
                        - items:
                            type: string
                          type: array
                containerd:
                    $ref: '#/components/schemas/ContainerdInfo'
                created:
                    type: number
                docker:
                    $ref: '#/components/schemas/DockerInfo'
                id:
                    type: string
                image:
                    type: string
                ips:
                    items:
                        type: string
                    type: array
                name:
                    type: string
                ports:
                    items:
                        $ref: '#/components/schemas/ContainerPort'
                    type: array
                status:
                    type: string
                type:
                    enum:
                        - docker
                        - containerd
                    type: string
            required:
                - command
                - created
                - id
                - image
                - name
                - status
                - type
            type: object
        ContainerPort:
            properties:
                privatePort:
                    type: number
                publicPort:
                    type: number
            required:
                - privatePort
                - publicPort
            type: object
        ContainerdContainer:
            properties:
                mounts:
                    items:
                        $ref: '#/components/schemas/ContainerdMount'
                    type: array
                root:
                    $ref: '#/components/schemas/ContainerdRoot'
            required:
                - mounts
                - root
            type: object
        ContainerdInfo:
            properties:
                container:
                    $ref: '#/components/schemas/ContainerdContainer'
                image:
                    additionalProperties: true
                    type: object
                metrics:
                    additionalProperties: true
                    type: object
                namespace:
                    additionalProperties: true
                    type: object
                task:
                    $ref: '#/components/schemas/ContainerdTask'
            required:
                - container
            type: object
        ContainerdMount:
            properties:
                destination:
                    type: string
                source:
                    type: string
            required:
                - destination
                - source
            type: object
        ContainerdRoot:
            properties:
                path:
                    type: string
            required:
                - path
            type: object
        ContainerdTask:
            properties:
                process:
                    additionalProperties: true
                    type: object
            type: object
        CriblEvent:
            properties:
                _raw:
                    type: string
            required:
                - _raw
            type: object
        CriblLakeDataset:
            properties:
                acceleratedFields:
                    items:
                        type: string
                    type: array
                bucketName:
                    type: string
                cacheConnection:
                    $ref: '#/components/schemas/CacheConnection'
                deletionStartedAt:
                    type: number
                description:
                    type: string
                format:
                    enum:
                        - json
                        - ddss
                        - parquet
                    type: string
                id:
                    type: string
                retentionPeriodInDays:
                    type: number
                searchConfig:
                    $ref: '#/components/schemas/LakeDatasetSearchConfig'
                viewName:
                    type: string
            required:
                - bucketName
                - id
            type: object
        CriblLib:
            enum:
                - cribl
                - cribl-custom
                - custom
            type: string
        CriblMetadata:
            properties:
                config_version:
                    type: string
                group:
                    type: string
                install_type:
                    type: string
                mode:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
                version:
                    type: string
            required:
                - mode
                - version
            type: object
        CrudEntityBase:
            properties:
                id:
                    type: string
            required:
                - id
            type: object
        CrudPolicy:
            properties:
                Create:
                    items:
                        $ref: '#/components/schemas/AuthPolicyEntry'
                    type: array
                Delete:
                    items:
                        $ref: '#/components/schemas/AuthPolicyEntry'
                    type: array
                List:
                    items:
                        $ref: '#/components/schemas/AuthPolicyEntry'
                    type: array
                Read:
                    items:
                        $ref: '#/components/schemas/AuthPolicyEntry'
                    type: array
                Replace:
                    items:
                        $ref: '#/components/schemas/AuthPolicyEntry'
                    type: array
                Update:
                    items:
                        $ref: '#/components/schemas/AuthPolicyEntry'
                    type: array
            required:
                - Create
                - Delete
                - List
                - Read
                - Replace
                - Update
            type: object
        DailyUsageMetrics:
            properties:
                droppedBytes:
                    type: number
                endTime:
                    type: number
                exemptedLicenseInBytes:
                    type: number
                inBytes:
                    type: number
                inEvents:
                    type: number
                inMetricsEvents:
                    type: number
                outBytes:
                    type: number
                outEvents:
                    type: number
                startTime:
                    type: number
            required:
                - endTime
                - exemptedLicenseInBytes
                - inBytes
                - inEvents
                - outBytes
                - outEvents
                - startTime
            type: object
        DashboardCategory:
            properties:
                description:
                    type: string
                id:
                    type: string
                isPack:
                    type: boolean
                name:
                    type: string
            required:
                - id
                - name
            type: object
        DashboardElementType:
            enum:
                - chart.line
                - chart.column
                - chart.horizontalBar
                - chart.area
                - chart.scatter
                - chart.pie
                - chart.funnel
                - chart.gauge
                - chart.map
                - list.events
                - list.table
                - counter.single
                - input.timerange
                - input.dropdown
                - input.text
                - input.number
            type: string
        DashboardElementVariant:
            enum:
                - visualization
                - input
                - markdown
            type: string
        DashboardLayout:
            properties:
                h:
                    type: number
                w:
                    type: number
                x:
                    type: number
                "y":
                    type: number
            required:
                - h
                - w
                - x
                - "y"
            type: object
        DataSample:
            additionalProperties: true
            properties:
                description:
                    description: Brief description of this sample file. Optional.
                    title: Description
                    type: string
                id:
                    title: ID
                    type: string
                pipelineId:
                    description: Select a pipeline to associate with sample with. Select GLOBAL if not sure. Deprecated.
                    title: Associate with Pipeline
                    type: string
                sampleName:
                    title: File name
                    type: string
                tags:
                    description: One or more tags related to this sample file. Optional.
                    title: Tags
                    type: string
                ttl:
                    description: Time to live (TTL) for the sample; reset after each use. Leave empty to never expire.
                    title: Expiration (hours)
                    type: number
            required:
                - id
                - sampleName
            type: object
        DatabaseConnectionConfig:
            properties:
                authType:
                    type: string
                configObj:
                    type: string
                connectionString:
                    type: string
                connectionTimeout:
                    type: number
                databaseType:
                    $ref: '#/components/schemas/DatabaseConnectionType'
                description:
                    type: string
                id:
                    type: string
                password:
                    type: string
                requestTimeout:
                    type: number
                tags:
                    type: string
                user:
                    type: string
            required:
                - authType
                - databaseType
                - description
                - id
            type: object
        DatabaseConnectionTest:
            properties:
                authType:
                    type: string
                configObj:
                    type: string
                connectionString:
                    type: string
                connectionTimeout:
                    type: number
                databaseType:
                    type: string
                password:
                    type: string
                textSecret:
                    type: string
                user:
                    type: string
            required:
                - authType
                - databaseType
            type: object
        DatabaseConnectionTestResult:
            properties:
                errorMsg:
                    type: string
                success:
                    type: boolean
            required:
                - success
            type: object
        DatabaseConnectionType:
            enum:
                - mysql
                - oracle
                - postgres
                - sqlserver
            type: string
        Dataset: {}
        DatasetMetadata:
            properties:
                earliest:
                    type: string
                enableAcceleration:
                    type: boolean
                fieldList:
                    items:
                        type: string
                    type: array
                latestRunInfo:
                    $ref: '#/components/schemas/DatasetMetadataRunInfo'
                scanMode:
                    enum:
                        - detailed
                        - quick
                    type: string
            required:
                - earliest
                - enableAcceleration
                - fieldList
                - scanMode
            type: object
        DatasetMetadataRunInfo:
            properties:
                earliestScannedTime:
                    type: number
                finishedAt:
                    type: number
                latestScannedTime:
                    type: number
                objectCount:
                    type: number
            type: object
        DatasetOrigin:
            enum:
                - leader_local
                - remote
                - worker_local
            type: string
        DatasetProvider: {}
        DatasetProviderType:
            properties:
                description:
                    type: string
                id:
                    enum:
                        - prometheus
                        - cribl_lake
                        - s3
                        - gcs
                        - azure_blob
                        - cribl_leader
                        - cribl_edge
                        - amazon_security_lake
                        - api_http
                        - api_aws
                        - api_azure
                        - api_gcp
                        - api_google_workspace
                        - api_msgraph
                        - api_okta
                        - api_tailscale
                        - api_zoom
                        - api_opensearch
                        - api_elasticsearch
                        - api_azure_data_explorer
                        - snowflake
                        - clickhouse
                        - cribl_meta
                    type: string
                locality:
                    $ref: '#/components/schemas/OriginConfig'
            required:
                - id
            type: object
        DatatypeOverrides:
            properties:
                breakerRulesets:
                    items:
                        $ref: '#/components/schemas/EventBreakerRuleset'
                    type: array
                disableBreakers:
                    type: boolean
            required:
                - disableBreakers
            type: object
        DatatypePreviewInput:
            oneOf:
                - properties:
                    dataset:
                        type: string
                    type:
                        enum:
                            - dataset
                        type: string
                  required:
                    - dataset
                    - type
                  type: object
                - properties:
                    rawData:
                        type: string
                    type:
                        enum:
                            - rawData
                        type: string
                  required:
                    - rawData
                    - type
                  type: object
        DatatypePreviewRequestBody:
            properties:
                eventBreakerRule:
                    $ref: '#/components/schemas/EventBreakerRule'
                input:
                    $ref: '#/components/schemas/DatatypePreviewInput'
            required:
                - input
            type: object
        Diag:
            properties:
                id:
                    type: string
                modTime:
                    type: number
                path:
                    type: string
                size:
                    type: number
            required:
                - id
                - path
            type: object
        DistributedSummary:
            properties:
                groups:
                    properties:
                        count:
                            type: number
                        destinations:
                            type: number
                        pipelines:
                            type: number
                        routes:
                            type: number
                        sources:
                            type: number
                    required:
                        - count
                        - destinations
                        - pipelines
                        - routes
                        - sources
                    type: object
                workers:
                    properties:
                        alive:
                            type: number
                        confVersions:
                            type: number
                        count:
                            type: number
                        groups:
                            type: number
                        softwareVersions:
                            type: number
                        unhealthy:
                            type: number
                    required:
                        - alive
                        - confVersions
                        - count
                        - groups
                        - softwareVersions
                        - unhealthy
                    type: object
            required:
                - groups
                - workers
            type: object
        DistributedUpgradeRequest:
            additionalProperties: false
            properties:
                packageUrls:
                    description: Provide your own URLs or local paths for platform-specific Cribl packages
                    items:
                        properties:
                            packageHashUrl:
                                description: Package's MD5 or SHA256 hash HTTP URL or local path
                                minLength: 1
                                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)\.(tgz|msi)?\.(md5|sha256)
                                title: Package Hash Location
                                type: string
                            packageUrl:
                                description: Package HTTP URL or local path
                                minLength: 1
                                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)
                                title: Platform-Specific Package Location
                                type: string
                        required:
                            - packageUrl
                        type: object
                    title: Custom Path
                    type: array
                upgradeMode:
                    enum:
                        - rolling
                        - regular
                        - batch
                    title: Upgrade mode
                    type: string
                upgradePercentage:
                    default: 1
                    description: Percentage of the total worker nodes on the group to run the upgrade on
                    maximum: 1
                    minimum: 1e-05
                    title: Percentage of workers to upgrade
                    type: number
                versionTo:
                    title: Exact version to match
                    type: string
                workerRetries:
                    default: 5
                    description: Number of times to retry conncecting to a worker node before marking the upgrade as failed.
                    minimum: 1
                    title: Worker node connect retry count
                    type: number
                workerRetryDelay:
                    default: 1000
                    description: Delay between retries
                    minimum: 100
                    title: Worker node connect retry delay
                    type: number
            type: object
        DockerGraphDriver:
            properties:
                Data:
                    $ref: '#/components/schemas/DockerGraphDriverData'
            type: object
        DockerGraphDriverData:
            properties:
                MergedDir:
                    type: string
            required:
                - MergedDir
            type: object
        DockerInfo:
            properties:
                Config:
                    additionalProperties: true
                    type: object
                GraphDriver:
                    $ref: '#/components/schemas/DockerGraphDriver'
                LogPath:
                    type: string
                Mounts:
                    items:
                        $ref: '#/components/schemas/DockerMount'
                    type: array
                NetworkSettings:
                    additionalProperties: true
                    type: object
                Path:
                    type: string
                State:
                    additionalProperties: true
                    type: object
                Stats:
                    additionalProperties: true
                    type: object
            type: object
        DockerMount:
            properties:
                Destination:
                    type: string
                Source:
                    type: string
            required:
                - Destination
                - Source
            type: object
        EdgeFile:
            properties:
                filePath:
                    type: string
                id:
                    type: string
                modTime:
                    type: number
                mode:
                    type: string
                owner:
                    type: number
                processInfo:
                    items:
                        $ref: '#/components/schemas/FileProcessInfo'
                    type: array
                size:
                    type: number
            required:
                - filePath
                - id
                - modTime
                - mode
                - owner
                - size
            type: object
        EdgeFileInspectResponse:
            type: object
        EdgeHeartbeatMetricsMode:
            enum:
                - minimal
                - basic
                - all
                - custom
            type: string
        EdgeMapQueryResult:
            properties:
                __worker_info:
                    properties:
                        hostname:
                            type: string
                    required:
                        - hostname
                    type: object
                __worker_node:
                    type: string
            required:
                - __worker_info
                - __worker_node
            type: object
        EnvMetadata:
            type: object
        Error:
            properties:
                message:
                    description: Error message
                    type: string
            type: object
        EventBreakerRule:
            properties:
                cleanFields:
                    type: boolean
                condition:
                    type: string
                delimiter:
                    type: string
                delimiterRegex:
                    type: string
                disabled:
                    type: boolean
                escapeChar:
                    type: string
                eventBreakerRegex:
                    type: string
                fields:
                    items:
                        $ref: '#/components/schemas/EventBreakerRuleFields'
                    type: array
                fieldsLineRegex:
                    type: string
                headerLineRegex:
                    type: string
                index:
                    type: number
                jsonArrayField:
                    type: string
                jsonExtractAll:
                    type: boolean
                jsonTimeField:
                    type: string
                maxEventBytes:
                    type: number
                name:
                    type: string
                nullFieldVal:
                    type: string
                parser:
                    oneOf:
                        - properties:
                            allowedKeyChars:
                                type: boolean
                            allowedValueChars:
                                items:
                                    type: string
                                type: array
                            cleanFields:
                                items:
                                    type: string
                                type: array
                            delimChar:
                                type: string
                            dstField:
                                type: string
                            escapeChar:
                                type: string
                            fieldFilterExpr:
                                type: string
                            fields:
                                items:
                                    type: string
                                type: array
                            keep:
                                items:
                                    type: string
                                type: array
                            mode:
                                $ref: '#/components/schemas/ParserMode'
                            nullValue:
                                type: string
                            quoteChar:
                                type: string
                            remove:
                                items:
                                    type: string
                                type: array
                            srcField:
                                type: string
                            type:
                                enum:
                                    - clf
                                    - csv
                                    - delim
                                    - elff
                                type: string
                          required:
                            - mode
                            - srcField
                            - type
                          type: object
                        - properties:
                            dstField:
                                type: string
                            mode:
                                $ref: '#/components/schemas/ParserMode'
                            pattern:
                                type: string
                            patternList:
                                items:
                                    properties:
                                        pattern:
                                            type: string
                                    required:
                                        - pattern
                                    type: object
                                type: array
                            source:
                                type: string
                            srcField:
                                type: string
                            type:
                                enum:
                                    - grok
                                type: string
                          required:
                            - mode
                            - srcField
                            - type
                          type: object
                        - properties:
                            cleanFields:
                                items:
                                    type: string
                                type: array
                            dstField:
                                type: string
                            fieldFilterExpr:
                                type: string
                            fields:
                                items:
                                    type: string
                                type: array
                            keep:
                                items:
                                    type: string
                                type: array
                            mode:
                                $ref: '#/components/schemas/ParserMode'
                            remove:
                                items:
                                    type: string
                                type: array
                            srcField:
                                type: string
                            type:
                                enum:
                                    - json
                                type: string
                          required:
                            - mode
                            - srcField
                            - type
                          type: object
                        - properties:
                            allowedKeyChars:
                                type: boolean
                            allowedValueChars:
                                items:
                                    type: string
                                type: array
                            cleanFields:
                                items:
                                    type: string
                                type: array
                            delimChar:
                                type: string
                            dstField:
                                type: string
                            escapeChar:
                                type: string
                            fieldFilterExpr:
                                type: string
                            fields:
                                items:
                                    type: string
                                type: array
                            keep:
                                items:
                                    type: string
                                type: array
                            mode:
                                $ref: '#/components/schemas/ParserMode'
                            nullValue:
                                type: string
                            quoteChar:
                                type: string
                            remove:
                                items:
                                    type: string
                                type: array
                            srcField:
                                type: string
                            type:
                                enum:
                                    - kvp
                                type: string
                          required:
                            - mode
                            - srcField
                            - type
                          type: object
                parserEnabled:
                    type: boolean
                quoteChar:
                    type: string
                shouldUseDataRaw:
                    type: boolean
                timeField:
                    type: string
                timestamp:
                    properties:
                        format:
                            type: string
                        length:
                            type: number
                        type:
                            enum:
                                - auto
                                - format
                                - current
                            type: string
                    required:
                        - type
                    type: object
                timestampAnchorRegex:
                    type: string
                timestampEarliest:
                    type: string
                timestampLatest:
                    type: string
                timestampTimezone:
                    oneOf:
                        - type: string
                        - properties:
                            name:
                                type: string
                            offsets:
                                items:
                                    type: number
                                type: array
                            untils:
                                items:
                                    type: number
                                type: array
                          required:
                            - name
                            - offsets
                            - untils
                          type: object
                type:
                    enum:
                        - regex
                        - timestamp
                        - json
                        - csv
                        - json_array
                        - header
                        - aws_cloudtrail
                        - aws_vpcflow
                    type: string
            required:
                - condition
                - maxEventBytes
                - name
                - timestamp
                - timestampAnchorRegex
                - timestampTimezone
            type: object
        EventBreakerRuleFields:
            properties:
                name:
                    type: string
                value:
                    type: string
            required:
                - name
                - value
            type: object
        EventBreakerRuleset:
            additionalProperties: false
            properties:
                description:
                    title: Description
                    type: string
                id:
                    pattern: ^[a-zA-Z0-9\-_ ]+$
                    title: ID
                    type: string
                lib:
                    default: custom
                    enum:
                        - custom
                        - cribl-custom
                    title: Library
                    type: string
                minRawLength:
                    default: 256
                    description: The  minimum number of characters in _raw to determine which rule to use
                    maximum: 100000
                    minimum: 50
                    title: Min raw length
                    type: number
                rules:
                    description: A list of rules that will be applied, in order, to the input data stream
                    items:
                        properties:
                            condition:
                                default: "true"
                                description: JavaScript expression applied to the beginning of a file or object, to determine whether the rule applies to all contained events.
                                title: Filter condition
                                type: string
                            disabled:
                                default: false
                                description: Disable this breaker rule (enabled by default)
                                title: Disabled
                                type: boolean
                            fields:
                                description: Key-value pairs to be added to each event
                                items:
                                    properties:
                                        name:
                                            title: Name
                                            type: string
                                        value:
                                            description: The JavaScript expression used to compute the field's value (can be constant)
                                            title: Value expression
                                            type: string
                                    required:
                                        - value
                                    type: object
                                title: Fields
                                type: array
                            maxEventBytes:
                                default: 51200
                                description: The maximum number of bytes in an event before it is flushed to the pipelines
                                maximum: 134217728
                                minimum: 1
                                title: Max event bytes
                                type: number
                            name:
                                title: Name
                                type: string
                            parserEnabled:
                                default: false
                                title: Parser
                                type: boolean
                            shouldUseDataRaw:
                                default: false
                                description: Enable to set an internal field on events indicating that the field in the data called _raw should be used. This can be useful for post processors that want to use that field for event._raw, instead of replacing it with the actual raw event.
                                title: Data _raw
                                type: boolean
                            timestamp:
                                description: Auto, manual format (strptime), or current time
                                properties:
                                    format:
                                        title: Format
                                        type: string
                                    length:
                                        default: 150
                                        minimum: 2
                                        title: Length
                                        type: number
                                    type:
                                        default: auto
                                        enum:
                                            - auto
                                            - format
                                            - current
                                        title: Timestamp type
                                        type: string
                                required:
                                    - type
                                title: Timestamp format
                                type: object
                            timestampAnchorRegex:
                                default: /^/
                                description: The regex to match before attempting timestamp extraction. Use $ (end-of-string anchor) to prevent extraction.
                                title: Timestamp anchor
                                type: string
                            timestampEarliest:
                                default: -420weeks
                                description: 'The earliest timestamp value allowed relative to now. Example: -42years. Parsed values prior to this date will be set to current time.'
                                title: Earliest timestamp allowed
                                type: string
                            timestampLatest:
                                default: +1week
                                description: 'The latest timestamp value allowed relative to now. Example: +42days. Parsed values after this date will be set to current time.'
                                title: Future timestamp allowed
                                type: string
                            timestampTimezone:
                                default: local
                                description: Timezone to assign to timestamps without timezone info
                                title: Default timezone
                                type: string
                            type:
                                default: regex
                                enum:
                                    - regex
                                    - json
                                    - json_array
                                    - header
                                    - timestamp
                                    - csv
                                    - aws_cloudtrail
                                    - aws_vpcflow
                                title: Event Breaker type
                                type: string
                        required:
                            - name
                            - type
                            - condition
                            - timestampAnchorRegex
                            - timestamp
                        type: object
                    title: Rules
                    type: array
                tags:
                    title: Tags
                    type: string
            required:
                - id
            type: object
        Executor:
            $ref: '#/components/schemas/Function'
        ExprLibEntry:
            properties:
                context:
                    additionalProperties: true
                    type: object
                evalType:
                    type: string
                expr:
                    description: JavaScript expression to evaluate
                    type: string
                id:
                    type: string
                pack:
                    type: string
                result:
                    additionalProperties: true
                    type: object
                unprotected:
                    type: boolean
            required:
                - expr
                - id
            type: object
        Expression:
            $ref: '#/components/schemas/CrudPolicy'
        FeaturesEntry:
            properties:
                disabled:
                    type: boolean
                id:
                    type: string
            required:
                - disabled
                - id
            type: object
        FileProcessInfo:
            properties:
                pid:
                    type: number
                process:
                    type: string
            required:
                - pid
                - process
            type: object
        FilesystemEntry:
            properties:
                mode:
                    type: string
                name:
                    type: string
                stats:
                    additionalProperties: true
                    type: object
                symLinkInfo:
                    $ref: '#/components/schemas/SymLinkInfo'
                type:
                    type: string
            required:
                - name
                - type
            type: object
        Format:
            enum:
                - json-compact-each-row-with-names
                - json-each-row
            type: string
        Function:
            properties:
                __conf:
                    additionalProperties: true
                    type: object
                __filename:
                    type: string
                disabled:
                    type: boolean
                group:
                    type: string
                id:
                    type: string
                initTime:
                    type: number
                loadTime:
                    type: number
                modTime:
                    type: number
                name:
                    type: string
                uischema:
                    additionalProperties: true
                    type: object
                version:
                    type: string
            required:
                - __conf
                - __filename
                - disabled
                - group
                - id
                - initTime
                - loadTime
                - modTime
                - name
                - uischema
                - version
            type: object
        GitCommitParams:
            properties:
                effective:
                    type: boolean
                files:
                    items:
                        type: string
                    type: array
                group:
                    type: string
                message:
                    type: string
            required:
                - message
            type: object
        GitCommitSummary:
            properties:
                author:
                    properties:
                        email:
                            type: string
                        name:
                            type: string
                    required:
                        - email
                        - name
                    type: object
                branch:
                    type: string
                commit:
                    type: string
                files:
                    properties:
                        created:
                            items:
                                type: string
                            type: array
                        deleted:
                            items:
                                type: string
                            type: array
                        modified:
                            items:
                                type: string
                            type: array
                        renamed:
                            items:
                                type: string
                            type: array
                    type: object
                summary:
                    properties:
                        changes:
                            type: number
                        deletions:
                            type: number
                        insertions:
                            type: number
                    required:
                        - changes
                        - deletions
                        - insertions
                    type: object
            required:
                - author
                - branch
                - commit
                - files
                - summary
            type: object
        GitFile:
            properties:
                children:
                    items:
                        $ref: '#/components/schemas/GitFile'
                    type: array
                name:
                    type: string
                state:
                    type: string
            required:
                - name
            type: object
        GitFilesResponse:
            properties:
                commitMessage:
                    additionalProperties: true
                    type: object
                count:
                    type: number
                items:
                    items:
                        $ref: '#/components/schemas/GitFile'
                    type: array
            required:
                - commitMessage
                - count
                - items
            type: object
        GitInfo:
            properties:
                remote:
                    oneOf:
                        - type: string
                        - type: boolean
                versioning:
                    type: boolean
            required:
                - remote
                - versioning
            type: object
        GitOpsType:
            enum:
                - none
                - pull
                - push
            type: string
        GitRevertParams:
            properties:
                commit:
                    type: string
                force:
                    type: boolean
                message:
                    type: string
            required:
                - commit
                - message
            type: object
        GitRevertResult:
            properties:
                audit:
                    properties:
                        files:
                            properties:
                                created:
                                    items:
                                        type: string
                                    type: array
                                deleted:
                                    items:
                                        type: string
                                    type: array
                                modified:
                                    items:
                                        type: string
                                    type: array
                                renamed:
                                    items:
                                        type: string
                                    type: array
                            type: object
                        group:
                            type: string
                        id:
                            type: string
                    required:
                        - files
                        - group
                        - id
                    type: object
                reverted:
                    type: boolean
            required:
                - audit
                - reverted
            type: object
        GitSettings:
            properties:
                authType:
                    type: string
                autoAction:
                    type: string
                autoActionMessage:
                    type: string
                autoActionSchedule:
                    type: string
                branch:
                    type: string
                commitDeploySingleAction:
                    type: boolean
                copilotAutoGitCommitMessages:
                    type: boolean
                defaultCommitMessage:
                    type: string
                gitOps:
                    $ref: '#/components/schemas/GitOpsType'
                password:
                    type: string
                remote:
                    type: string
                sshKey:
                    type: string
                strictHostKeyChecking:
                    type: boolean
                timeout:
                    type: number
                user:
                    type: string
            type: object
        GitStatusResult:
            properties:
                ahead:
                    type: number
                behind:
                    type: number
                conflicted:
                    items:
                        type: string
                    type: array
                created:
                    items:
                        type: string
                    type: array
                current:
                    type: string
                deleted:
                    items:
                        type: string
                    type: array
                files:
                    items:
                        properties:
                            index:
                                type: string
                            path:
                                type: string
                            working_dir:
                                type: string
                        required:
                            - index
                            - path
                            - working_dir
                        type: object
                    type: array
                modified:
                    items:
                        type: string
                    type: array
                not_added:
                    items:
                        type: string
                    type: array
                renamed:
                    items:
                        properties:
                            from:
                                type: string
                            to:
                                type: string
                        required:
                            - from
                            - to
                        type: object
                    type: array
                staged:
                    items:
                        type: string
                    type: array
                tracking:
                    type: string
            required:
                - ahead
                - behind
                - conflicted
                - created
                - current
                - deleted
                - files
                - modified
                - not_added
                - renamed
                - staged
                - tracking
            type: object
        GlobalVar:
            properties:
                description:
                    description: Brief description of this variable. Optional.
                    title: Description
                    type: string
                id:
                    description: Global variable name.
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: Name
                    type: string
                lib:
                    title: Library
                    type: string
                tags:
                    description: One or more tags related to this variable. Optional.
                    title: Tags
                    type: string
                type:
                    default: any
                    description: Type of variable
                    enum:
                        - string
                        - number
                        - encryptedString
                        - boolean
                        - array
                        - object
                        - expression
                        - any
                    title: Type
                    type: string
                value:
                    description: Value of variable
                    title: Value
                    type: string
            required:
                - id
                - type
            type: object
        GrokFile:
            properties:
                content:
                    type: string
                id:
                    type: string
                size:
                    type: number
                tags:
                    type: string
            required:
                - content
                - id
                - size
            type: object
        HBCriblInfo:
            properties:
                config:
                    properties:
                        featuresRev:
                            type: string
                        hbPeriodSeconds:
                            type: number
                        logStreamEnv:
                            type: string
                        policyRev:
                            type: string
                        version:
                            type: string
                    type: object
                deploymentId:
                    type: string
                distMode:
                    $ref: '#/components/schemas/AppMode'
                edgeNodes:
                    type: number
                group:
                    type: string
                guid:
                    type: string
                installType:
                    type: string
                lookupVersions:
                    $ref: '#/components/schemas/LookupVersions'
                master:
                    $ref: '#/components/schemas/HBLeaderInfo'
                pid:
                    type: number
                startTime:
                    type: number
                tags:
                    items:
                        type: string
                    type: array
                version:
                    type: string
            required:
                - config
                - distMode
                - group
                - guid
                - startTime
                - tags
            type: object
        HBLeaderInfo:
            properties:
                host:
                    type: string
                port:
                    type: number
                servername:
                    type: string
                tls:
                    type: boolean
            required:
                - host
                - port
            type: object
        HTTPOutAuthConfig:
            properties:
                disabled:
                    type: boolean
                password:
                    type: string
                token:
                    type: string
                username:
                    type: string
            type: object
        HTTPOutExtraParamConfig:
            properties:
                name:
                    type: string
                value:
                    additionalProperties: true
                    type: object
            required:
                - name
                - value
            type: object
        HTTPOutResponseRetryConfig:
            properties:
                backoffRate:
                    type: number
                httpStatus:
                    type: number
                initialBackoff:
                    type: number
                maxBackoff:
                    type: number
            type: object
        HealthStatus:
            properties:
                role:
                    enum:
                        - primary
                        - standby
                    type: string
                startTime:
                    type: number
                status:
                    enum:
                        - healthy
                        - shutting down
                        - standby
                    type: string
            required:
                - status
                - startTime
            type: object
        HeartbeatMetadata:
            properties:
                aws:
                    properties:
                        enabled:
                            type: boolean
                        region:
                            type: string
                        tags:
                            type: object
                        type:
                            type: string
                        zone:
                            type: string
                    required:
                        - enabled
                        - region
                        - type
                        - zone
                    type: object
                hostOs:
                    properties:
                        addresses:
                            items:
                                type: string
                            type: array
                        enabled:
                            type: boolean
                        id:
                            type: string
                        version:
                            type: string
                    required:
                        - addresses
                        - enabled
                        - id
                        - version
                    type: object
                kube:
                    properties:
                        enabled:
                            type: boolean
                        namespace:
                            type: string
                        node:
                            type: string
                        owner:
                            properties:
                                kind:
                                    type: string
                                name:
                                    type: string
                            required:
                                - kind
                                - name
                            type: object
                        pod:
                            type: string
                        source:
                            type: string
                    required:
                        - enabled
                        - namespace
                        - node
                        - pod
                        - source
                    type: object
                os:
                    properties:
                        addresses:
                            items:
                                type: string
                            type: array
                        enabled:
                            type: boolean
                        id:
                            type: string
                        version:
                            type: string
                    required:
                        - addresses
                        - enabled
                        - id
                        - version
                    type: object
            type: object
        HmacFunction:
            properties:
                description:
                    type: string
                headerExpression:
                    type: string
                headerName:
                    type: string
                id:
                    type: string
                lib:
                    $ref: '#/components/schemas/CriblLib'
                stringBuilders:
                    items:
                        type: string
                    type: array
                stringDelim:
                    type: string
            required:
                - headerExpression
                - headerName
                - id
                - lib
                - stringBuilders
            type: object
        Input:
            oneOf:
                - $ref: '#/components/schemas/InputCollection'
                - $ref: '#/components/schemas/InputKafka'
                - $ref: '#/components/schemas/InputMsk'
                - $ref: '#/components/schemas/InputHttp'
                - $ref: '#/components/schemas/InputSplunk'
                - $ref: '#/components/schemas/InputSplunkSearch'
                - $ref: '#/components/schemas/InputSplunkHec'
                - $ref: '#/components/schemas/InputAzureBlob'
                - $ref: '#/components/schemas/InputElastic'
                - $ref: '#/components/schemas/InputConfluentCloud'
                - $ref: '#/components/schemas/InputGrafana'
                - $ref: '#/components/schemas/InputLoki'
                - $ref: '#/components/schemas/InputPrometheusRw'
                - $ref: '#/components/schemas/InputPrometheus'
                - $ref: '#/components/schemas/InputEdgePrometheus'
                - $ref: '#/components/schemas/InputOffice365Mgmt'
                - $ref: '#/components/schemas/InputOffice365Service'
                - $ref: '#/components/schemas/InputOffice365MsgTrace'
                - $ref: '#/components/schemas/InputEventhub'
                - $ref: '#/components/schemas/InputExec'
                - $ref: '#/components/schemas/InputFirehose'
                - $ref: '#/components/schemas/InputGooglePubsub'
                - $ref: '#/components/schemas/InputCribl'
                - $ref: '#/components/schemas/InputCriblTcp'
                - $ref: '#/components/schemas/InputCriblHttp'
                - $ref: '#/components/schemas/InputCriblLakeHttp'
                - $ref: '#/components/schemas/InputTcpjson'
                - $ref: '#/components/schemas/InputSystemMetrics'
                - $ref: '#/components/schemas/InputSystemState'
                - $ref: '#/components/schemas/InputKubeMetrics'
                - $ref: '#/components/schemas/InputKubeLogs'
                - $ref: '#/components/schemas/InputKubeEvents'
                - $ref: '#/components/schemas/InputWindowsMetrics'
                - $ref: '#/components/schemas/InputCrowdstrike'
                - $ref: '#/components/schemas/InputDatadogAgent'
                - $ref: '#/components/schemas/InputDatagen'
                - $ref: '#/components/schemas/InputHttpRaw'
                - $ref: '#/components/schemas/InputKinesis'
                - $ref: '#/components/schemas/InputCriblmetrics'
                - $ref: '#/components/schemas/InputMetrics'
                - $ref: '#/components/schemas/InputS3'
                - $ref: '#/components/schemas/InputS3Inventory'
                - $ref: '#/components/schemas/InputSnmp'
                - $ref: '#/components/schemas/InputOpenTelemetry'
                - $ref: '#/components/schemas/InputModelDrivenTelemetry'
                - $ref: '#/components/schemas/InputSqs'
                - $ref: '#/components/schemas/InputSyslog'
                - $ref: '#/components/schemas/InputFile'
                - $ref: '#/components/schemas/InputTcp'
                - $ref: '#/components/schemas/InputAppscope'
                - $ref: '#/components/schemas/InputWef'
                - $ref: '#/components/schemas/InputWinEventLogs'
                - $ref: '#/components/schemas/InputRawUdp'
                - $ref: '#/components/schemas/InputJournalFiles'
                - $ref: '#/components/schemas/InputWiz'
                - $ref: '#/components/schemas/InputNetflow'
                - $ref: '#/components/schemas/InputSecurityLake'
                - $ref: '#/components/schemas/InputZscalerHec'
        InputAppscope:
            properties:
                authToken:
                    default: ""
                    description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
                    title: Auth token
                    type: string
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
                    title: Enable proxy protocol
                    type: boolean
                enableUnixPath:
                    default: false
                    description: Toggle to Yes to specify a file-backed UNIX domain socket connection, instead of a network host and port.
                    title: UNIX domain socket
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                filter:
                    properties:
                        allow:
                            description: Specify processes that AppScope should be loaded into, and the config to use.
                            items:
                                properties:
                                    arg:
                                        description: Specify a string to substring-match against process command-line.
                                        title: Process argument
                                        type: string
                                    config:
                                        description: Choose a config to apply to processes that match the process name and/or argument.
                                        title: AppScope config
                                        type: string
                                    procname:
                                        description: Specify the name of a process or family of processes.
                                        title: Process name
                                        type: string
                                required:
                                    - procname
                                    - config
                                type: object
                            title: Rules
                            type: array
                        transportURL:
                            description: To override the UNIX domain socket or address/port specified in General Settings (while leaving Authentication settings as is), enter a URL.
                            title: Transport override
                            type: string
                    type: object
                host:
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipWhitelistRegex:
                    default: /.*/
                    description: Regex matching IP addresses that are allowed to establish a connection
                    title: IP allowlist regex
                    type: string
                maxActiveCxn:
                    default: 1000
                    description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
                    minimum: 0
                    title: Active connection limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                persistence:
                    properties:
                        compress:
                            default: gzip
                            enum:
                                - none
                                - gzip
                            title: Data compression format
                            type: string
                        destPath:
                            default: $CRIBL_HOME/state/appscope
                            description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/appscope
                            title: Path location
                            type: string
                        enable:
                            default: false
                            description: Spool events and metrics on disk for Cribl Edge and Search
                            title: Enable disk spooling
                            type: boolean
                        maxDataSize:
                            default: 1GB
                            description: 'Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted.'
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Data size limit
                            type: string
                        maxDataTime:
                            default: 24h
                            description: 'Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted.'
                            pattern: \d+[smhd]$
                            title: Data age limit
                            type: string
                        timeWindow:
                            default: 10m
                            description: Time span for each file bucket
                            title: Bucket time span
                            type: string
                    title: Persistence
                    type: object
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketEndingMaxWait:
                    default: 30
                    description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Forced socket termination timeout (seconds)
                    type: number
                socketIdleTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Socket idle timeout (seconds)
                    type: number
                socketMaxLifespan:
                    default: 0
                    description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
                    minimum: 0
                    title: Socket max lifespan (seconds)
                    type: number
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - appscope
                    type: string
                unixSocketPath:
                    default: $CRIBL_HOME/state/appscope.sock
                    description: Path to the UNIX domain socket to listen on.
                    title: UNIX socket path
                    type: string
                unixSocketPerms:
                    description: Permissions to set for socket e.g., 777. If empty, falls back to the runtime user's default permissions.
                    title: UNIX socket permissions
                    type: string
            required:
                - id
                - type
            type: object
        InputAzureBlob:
            properties:
                authType:
                    default: manual
                    enum:
                        - manual
                        - secret
                        - clientSecret
                        - clientCert
                    title: Authentication method
                    type: string
                azureCloud:
                    description: The Azure cloud to use. Defaults to Azure Public Cloud.
                    title: Azure Cloud
                    type: string
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                certificate:
                    properties:
                        certificateName:
                            description: The certificate you registered as credentials for your app in the Azure portal
                            title: Certificate
                            type: string
                    required:
                        - certificateName
                    type: object
                clientId:
                    description: The service principal's client ID
                    title: Client ID
                    type: string
                clientTextSecret:
                    description: Select or create a stored text secret
                    title: Client secret (text secret)
                    type: string
                connectionString:
                    description: Enter your Azure Storage account connection string. If left blank, Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
                    title: Connection string
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                endpointSuffix:
                    description: Endpoint suffix for the service URL. Takes precedence over the Azure Cloud setting. Defaults to core.windows.net.
                    title: Endpoint suffix
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileFilter:
                    default: /.*/
                    description: 'Regex matching file names to download and process. Defaults to: .*'
                    title: Filename filter
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxMessages:
                    default: 1
                    description: 'The maximum number of messages to return in a poll request. Azure storage queues never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 32.'
                    maximum: 32
                    minimum: 1
                    title: Message limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                numReceivers:
                    default: 1
                    description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
                    maximum: 100
                    minimum: 1
                    title: Number of receivers
                    type: number
                parquetChunkDownloadTimeout:
                    default: 600
                    description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
                    maximum: 3600
                    minimum: 1
                    title: Parquet chunk download timeout (seconds)
                    type: number
                parquetChunkSizeMB:
                    default: 5
                    description: Maximum file size for each Parquet chunk
                    maximum: 100
                    minimum: 1
                    title: Parquet chunk size limit (MB)
                    type: number
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                queueName:
                    description: 'The storage account queue name blob notifications will be read from. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myQueue-${C.vars.myVar}`'
                    title: Queue
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                servicePeriodSecs:
                    default: 5
                    description: The duration (in seconds) which pollers should be validated and restarted if exited
                    maximum: 10
                    minimum: 1
                    title: Service period (secs)
                    type: number
                skipOnError:
                    default: false
                    description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
                    title: Skip file on error
                    type: boolean
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                storageAccountName:
                    description: The name of your Azure storage account
                    title: Storage account name
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tenantId:
                    description: The service principal's tenant ID
                    title: Tenant ID
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: Connection string (text secret)
                    type: string
                type:
                    enum:
                        - azure_blob
                    type: string
                visibilityTimeout:
                    default: 600
                    description: The duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request.
                    maximum: 604800
                    minimum: 0
                    title: Visibility timeout (secs)
                    type: number
            required:
                - queueName
                - type
            type: object
        InputCollection:
            properties:
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                output:
                    description: Destination to send results to
                    title: Destination
                    type: string
                pipeline:
                    description: Pipeline to process results
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                preprocess:
                    properties:
                        args:
                            description: Arguments to be added to the custom command
                            items:
                                type: string
                            title: Arguments
                            type: array
                        command:
                            description: Command to feed the data through (via stdin) and process its output (stdout)
                            title: Command
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                    required:
                        - disabled
                    type: object
                sendToRoutes:
                    default: true
                    description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
                    title: Send to Routes
                    type: boolean
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                type:
                    default: collection
                    enum:
                        - collection
                    type: string
            required:
                - id
                - type
            type: object
        InputConfluentCloud:
            properties:
                authenticationTimeout:
                    default: 10000
                    description: Maximum time to wait for Kafka to respond to an authentication request
                    maximum: 3600000
                    minimum: 1000
                    title: Authentication timeout (ms)
                    type: number
                autoCommitInterval:
                    description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
                    maximum: 3600000
                    minimum: 1000
                    title: Offset commit interval (ms)
                    type: number
                autoCommitThreshold:
                    description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
                    maximum: 10000
                    minimum: 1
                    title: Offset commit threshold
                    type: number
                backoffRate:
                    default: 2
                    description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
                    maximum: 20
                    minimum: 2
                    title: Backoff multiplier
                    type: number
                brokers:
                    description: List of Confluent Cloud bootstrap servers to use, such as yourAccount.confluent.cloud:9092
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Bootstrap servers
                    type: array
                connectionTimeout:
                    default: 10000
                    description: Maximum time to wait for a connection to complete successfully
                    maximum: 3600000
                    minimum: 1000
                    title: Connection timeout (ms)
                    type: number
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fromBeginning:
                    default: true
                    description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
                    title: From beginning
                    type: boolean
                groupId:
                    default: Cribl
                    description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
                    title: Group ID
                    type: string
                heartbeatInterval:
                    default: 3000
                    description: |4-
                              Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                              Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                              See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
                    maximum: 3600000
                    minimum: 1000
                    title: Heartbeat interval (ms)
                    type: number
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                initialBackoff:
                    default: 300
                    description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
                    maximum: 600000
                    minimum: 300
                    title: Initial retry interval (ms)
                    type: number
                kafkaSchemaRegistry:
                    properties:
                        auth:
                            description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
                            properties:
                                credentialsSecret:
                                    description: Select or create a secret that references your credentials
                                    title: Credentials secret
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                            required:
                                - disabled
                            type: object
                        connectionTimeout:
                            default: 30000
                            description: Maximum time to wait for a Schema Registry connection to complete successfully
                            maximum: 60000
                            minimum: 1000
                            title: Connection timeout (ms)
                            type: number
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxRetries:
                            default: 1
                            description: Maximum number of times to try fetching schemas from the Schema Registry
                            maximum: 100
                            minimum: 0
                            title: Retry limit
                            type: number
                        requestTimeout:
                            default: 30000
                            description: Maximum time to wait for the Schema Registry to respond to a request
                            maximum: 60000
                            minimum: 1000
                            title: Request timeout (ms)
                            type: number
                        schemaRegistryURL:
                            default: http://localhost:8081
                            description: 'URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http.'
                            title: Schema Registry URL
                            type: string
                        tls:
                            properties:
                                caPath:
                                    description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                                    title: CA certificate path
                                    type: string
                                certPath:
                                    description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                                    title: Certificate path (mutual auth)
                                    type: string
                                certificateName:
                                    description: The name of the predefined certificate
                                    title: Certificate
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                                maxVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Maximum TLS version
                                    type: string
                                minVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Minimum TLS version
                                    type: string
                                passphrase:
                                    description: Passphrase to use to decrypt private key
                                    title: Passphrase
                                    type: string
                                privKeyPath:
                                    description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                                    title: Private key path (mutual auth)
                                    type: string
                                rejectUnauthorized:
                                    default: true
                                    description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                                    title: Validate server certs
                                    type: boolean
                                servername:
                                    description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                                    title: Server name (SNI)
                                    type: string
                            title: TLS settings (client side)
                            type: object
                    required:
                        - disabled
                    title: Kafka Schema Registry Authentication
                    type: object
                maxBackOff:
                    default: 30000
                    description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
                    maximum: 180000
                    minimum: 30000
                    title: Backoff limit (ms)
                    type: number
                maxBytes:
                    default: 10485760
                    description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
                    maximum: 1000000000
                    minimum: 1
                    title: Byte limit
                    type: number
                maxBytesPerPartition:
                    default: 1048576
                    description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
                    maximum: 10000000
                    minimum: 1
                    title: Byte limit, per partition
                    type: number
                maxRetries:
                    default: 5
                    description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
                    maximum: 100
                    minimum: 0
                    title: Retry limit
                    type: number
                maxSocketErrors:
                    default: 0
                    description: Maximum number of network errors before the consumer re-creates a socket
                    maximum: 100
                    minimum: 0
                    title: Error limit, per socket
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                reauthenticationThreshold:
                    default: 10000
                    description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
                    maximum: 1800000
                    minimum: 1000
                    title: Reauthentication threshold (ms)
                    type: number
                rebalanceTimeout:
                    default: 60000
                    description: |4-
                              Maximum allowed time for each worker to join the group after a rebalance begins.
                              If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                              See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
                    maximum: 3600000
                    minimum: 1000
                    title: Rebalance timeout (ms)
                    type: number
                requestTimeout:
                    default: 60000
                    description: Maximum time to wait for Kafka to respond to a request
                    maximum: 3600000
                    minimum: 1000
                    title: Request timeout (ms)
                    type: number
                sasl:
                    description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
                    properties:
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        mechanism:
                            default: plain
                            enum:
                                - plain
                                - scram-sha-256
                                - scram-sha-512
                                - kerberos
                            title: SASL mechanism
                            type: string
                    required:
                        - disabled
                    title: Authentication
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                sessionTimeout:
                    default: 30000
                    description: "\n      Timeout used to detect client failures when using Kafka's group-management facilities.\n      If the client sends no heartbeats to the broker before the timeout expires, \n      the broker will remove the client from the group and initiate a rebalance.\n      Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.\n      See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details."
                    maximum: 3600000
                    minimum: 1000
                    title: Session timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: false
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                topics:
                    default: []
                    description: 'Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only.'
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Topic
                    type: array
                type:
                    enum:
                        - confluent_cloud
                    type: string
            required:
                - brokers
                - topics
            type: object
        InputCribl:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                filter:
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - cribl
                    type: string
            required:
                - id
                - type
            type: object
        InputCriblHttp:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                authTokens:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        type: string
                    title: Auth tokens
                    type: array
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - cribl_http
                    type: string
            required:
                - host
                - port
            type: object
        InputCriblLakeHttp:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                authTokens:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        type: string
                    title: Auth tokens
                    type: array
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - cribl_lake_http
                    type: string
            required:
                - host
                - port
            type: object
        InputCriblTcp:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableLoadBalancing:
                    default: false
                    description: Load balance traffic across all Worker Processes
                    title: Enable load balancing
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
                    title: Enable proxy protocol
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxActiveCxn:
                    default: 1000
                    description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
                    minimum: 0
                    title: Active connection limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketEndingMaxWait:
                    default: 30
                    description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Forced socket termination timeout (seconds)
                    type: number
                socketIdleTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Socket idle timeout (seconds)
                    type: number
                socketMaxLifespan:
                    default: 0
                    description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
                    minimum: 0
                    title: Socket max lifespan (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - cribl_tcp
                    type: string
            required:
                - host
                - port
            type: object
        InputCriblmetrics:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fullFidelity:
                    default: true
                    description: 'Include granular metrics. Disabling this will drop the following metrics events: `cribl.logstream.host.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.index.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.source.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.sourcetype.(in_bytes,in_events,out_bytes,out_events)`.'
                    title: Full fidelity
                    type: boolean
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                prefix:
                    default: cribl.logstream.
                    description: A prefix that is applied to the metrics provided by Cribl Stream
                    title: Metric name prefix
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - criblmetrics
                    type: string
            required:
                - id
                - type
            type: object
        InputCrowdstrike:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsAccountId:
                    description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
                    title: AWS account ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                checkpointing:
                    properties:
                        enabled:
                            default: false
                            description: Resume processing files after an interruption
                            title: Enable checkpointing
                            type: boolean
                        retries:
                            default: 5
                            description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
                            maximum: 100
                            minimum: 0
                            title: Retries
                            type: number
                    required:
                        - enabled
                    type: object
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: true
                    description: Use Assume Role credentials to access Amazon S3
                    title: Enable for Amazon S3
                    type: boolean
                enableSQSAssumeRole:
                    default: false
                    description: Use Assume Role credentials when accessing Amazon SQS
                    title: Enable for Amazon SQS
                    type: boolean
                encoding:
                    description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
                    title: Encoding
                    type: string
                endpoint:
                    description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileFilter:
                    default: /.*/
                    description: 'Regex matching file names to download and process. Defaults to: .*'
                    title: Filename filter
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxMessages:
                    default: 1
                    description: 'The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10.'
                    maximum: 10
                    minimum: 1
                    title: Message limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                numReceivers:
                    default: 1
                    description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
                    maximum: 100
                    minimum: 1
                    title: Number of receivers
                    type: number
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pollTimeout:
                    default: 10
                    description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
                    maximum: 20
                    minimum: 1
                    title: Poll timeout (secs)
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                preprocess:
                    properties:
                        args:
                            description: Arguments to be added to the custom command
                            items:
                                type: string
                            title: Arguments
                            type: array
                        command:
                            description: Command to feed the data through (via stdin) and process its output (stdout)
                            title: Command
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                    required:
                        - disabled
                    type: object
                processedTagKey:
                    description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
                    title: Tag key
                    type: string
                processedTagValue:
                    description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
                    title: Tag value
                    type: string
                queueName:
                    description: 'The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: ''{url}/myQueueName''. Example: ''https://host:port/myQueueName''. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`.'
                    title: Queue
                    type: string
                region:
                    description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing S3 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                skipOnError:
                    default: false
                    description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
                    title: Skip file on error
                    type: boolean
                socketTimeout:
                    default: 300
                    description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
                    maximum: 43200
                    minimum: 1
                    title: Socket timeout
                    type: number
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tagAfterProcessing:
                    enum:
                        - false
                        - true
                type:
                    enum:
                        - crowdstrike
                    type: string
                visibilityTimeout:
                    default: 21600
                    description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
                    maximum: 43200
                    minimum: 0
                    title: Visibility timeout seconds
                    type: number
            required:
                - queueName
                - type
            type: object
        InputDatadogAgent:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extractMetrics:
                    default: false
                    description: Toggle to Yes to extract each incoming metric to multiple events, one per data point. This works well when sending metrics to a statsd-type output. If sending metrics to DatadogHQ or any destination that accepts arbitrary JSON, leave toggled to No (the default).
                    title: Extract metrics
                    type: boolean
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                proxyMode:
                    properties:
                        enabled:
                            default: false
                            description: Toggle to Yes to send key validation requests from Datadog Agent to the Datadog API. If toggled to No (the default), Stream handles key validation requests by always responding that the key is valid.
                            title: Forward API key validation requests
                            type: boolean
                        rejectUnauthorized:
                            default: true
                            description: Whether to reject certificates that cannot be verified against a valid CA (e.g., self-signed certificates).
                            title: Reject unauthorized certificates
                            type: boolean
                    required:
                        - enabled
                    title: ""
                    type: object
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - datadog_agent
                    type: string
            required:
                - host
                - port
            type: object
        InputDatagen:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                samples:
                    items:
                        properties:
                            eventsPerSec:
                                default: 10
                                description: Maximum number of events to generate per second per Worker Node. Defaults to 10.
                                minimum: 1
                                title: Events Per Second Per Worker Node
                                type: number
                            sample:
                                title: Data Generator File Name
                                type: string
                        required:
                            - sample
                            - eventsPerSec
                        type: object
                    minItems: 1
                    title: Datagens
                    type: array
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - datagen
                    type: string
            required:
                - samples
                - type
            type: object
        InputEdgePrometheus:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                authType:
                    default: manual
                    description: Enter credentials directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                        - kubernetes
                    title: Authentication method
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                dimensionList:
                    default:
                        - host
                        - source
                    description: Other dimensions to include in events
                    items:
                        title: dimension
                        type: string
                    minItems: 0
                    title: Extra Dimensions
                    type: array
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                discoveryType:
                    default: static
                    description: Target discovery mechanism. Use static to manually enter a list of targets.
                    enum:
                        - static
                        - dns
                        - ec2
                        - k8s-node
                        - k8s-pods
                    title: Discovery Type
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access EC2
                    title: Enable for EC2
                    type: boolean
                endpoint:
                    description: EC2 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to EC2-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 15
                    description: How often in seconds to scrape targets for metrics.
                    minimum: 2
                    title: Poll Interval
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                nameList:
                    default: []
                    description: List of DNS names to resolve
                    items:
                        title: DNS Names
                        type: string
                    minItems: 1
                    title: DNS Names
                    type: array
                password:
                    description: Password for Prometheus Basic authentication
                    title: Password
                    type: string
                persistence:
                    properties:
                        compress:
                            default: gzip
                            description: Data compression format. Default is gzip.
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        enable:
                            default: false
                            description: Spool events on disk for Cribl Edge and Search. Default is disabled.
                            title: Enable disk spooling
                            type: boolean
                        maxDataSize:
                            default: 1GB
                            description: 'Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB.'
                            pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
                            title: Data size limit
                            type: string
                        maxDataTime:
                            default: 24h
                            description: 'Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h.'
                            pattern: \d+[smhd]$
                            title: Data age limit
                            type: string
                        timeWindow:
                            default: 10m
                            description: Time period for grouping spooled events. Default is 10m.
                            title: Bucket time span
                            type: string
                    title: Disk Spooling
                    type: object
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                podFilter:
                    default:
                        - description: Scrape pod if annotation is true
                          filter: metadata.annotations['prometheus.io/scrape']
                    description: |4
                          Add rules to decide which pods to discover for metrics.
                          Pods are searched if no rules are given or of all the rules'
                          expressions evaluate to true.
                    items:
                        properties:
                            description:
                                description: Optional description of this rule's purpose
                                title: Description
                                type: string
                            filter:
                                description: JavaScript expression applied to pods objects. Return 'true' to include it.
                                title: Filter Expression
                                type: string
                        required:
                            - filter
                        type: object
                    title: Filter Rules
                    type: array
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                recordType:
                    default: SRV
                    description: DNS Record type to resolve
                    enum:
                        - SRV
                        - A
                        - AAAA
                    title: Record Type
                    type: string
                region:
                    description: Region where the EC2 is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                scrapePath:
                    default: /metrics
                    description: Path to use when collecting metrics from discovered targets
                    pattern: ^/.*
                    title: Path
                    type: string
                scrapePathExpr:
                    default: metadata.annotations['prometheus.io/path'] || '/metrics'
                    description: Path to use when collecting metrics from discovered targets
                    title: Path
                    type: string
                scrapePort:
                    default: 9090
                    description: The port number in the metrics URL for discovered targets.
                    maximum: 65535
                    minimum: 1
                    title: Port
                    type: number
                scrapePortExpr:
                    default: metadata.annotations['prometheus.io/port'] || 9090
                    description: The port number in the metrics URL for discovered targets.
                    title: Port
                    type: string
                scrapeProtocol:
                    default: http
                    description: Protocol to use when collecting metrics
                    enum:
                        - http
                        - https
                    title: Protocol
                    type: string
                scrapeProtocolExpr:
                    default: metadata.annotations['prometheus.io/scheme'] || 'http'
                    description: Protocol to use when collecting metrics
                    title: Protocol
                    type: string
                searchFilter:
                    description: EC2 Instance Search Filter
                    items:
                        properties:
                            Name:
                                description: 'Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list'
                                title: Filter Name
                                type: string
                            Values:
                                default: []
                                description: Search Filter Values, if empty only "running" EC2 instances will be returned
                                items:
                                    minLength: 1
                                    type: string
                                minItems: 0
                                title: Filter Values
                                type: array
                        required:
                            - Name
                            - Values
                        type: object
                    title: Search Filter
                    type: array
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing EC2 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                targets:
                    default: []
                    items:
                        properties:
                            host:
                                description: Name of host from which to pull metrics.
                                title: Host
                                type: string
                            path:
                                default: /metrics
                                description: Path to use when collecting metrics from discovered targets
                                pattern: ^/.*
                                title: Path
                                type: string
                            port:
                                default: 9090
                                description: The port number in the metrics URL for discovered targets.
                                maximum: 65535
                                minimum: 1
                                title: Port
                                type: number
                            protocol:
                                default: http
                                description: Protocol to use when collecting metrics
                                enum:
                                    - http
                                    - https
                                title: Protocol
                                type: string
                        required:
                            - host
                        type: object
                    minItems: 1
                    title: Targets
                    type: array
                timeout:
                    default: 5000
                    description: Timeout, in milliseconds, before aborting HTTP connection attempts; 1-60000 or 0 to disable
                    maximum: 60000
                    minimum: 0
                    title: HTTP Connection Timeout
                    type: number
                type:
                    enum:
                        - edge_prometheus
                    type: string
                usePublicIp:
                    default: true
                    description: Use public IP address for discovered targets. Set to false if the private IP address should be used.
                    title: Use Public IP
                    type: boolean
                username:
                    description: Username for Prometheus Basic authentication
                    title: Username
                    type: string
            required:
                - interval
                - discoveryType
            type: object
        InputElastic:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                apiVersion:
                    default: 8.3.2
                    description: The API version to use for communicating with the server
                    enum:
                        - 6.8.4
                        - 8.3.2
                        - custom
                    title: API version
                    type: string
                authTokens:
                    description: Bearer tokens to include in the authorization header
                    items:
                        type: string
                    title: Token
                    type: array
                authType:
                    default: none
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - authTokens
                    title: Authentication type
                    type: string
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                customAPIVersion:
                    default: |-
                        {
                            "name": "AzU84iL",
                            "cluster_name": "cribl",
                            "cluster_uuid": "Js6_Z2VKS3KbfRSxPmPbaw",
                            "version": {
                                "number": "8.3.2",
                                "build_type": "tar",
                                "build_hash": "bca0c8d",
                                "build_date": "2019-10-16T06:19:49.319352Z",
                                "build_snapshot": false,
                                "lucene_version": "9.7.2",
                                "minimum_wire_compatibility_version": "7.17.0",
                                "minimum_index_compatibility_version": "7.0.0"
                            },
                            "tagline": "You Know, for Search"
                        }
                    description: Custom version information to respond to requests
                    title: Custom API Version
                    type: string
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                elasticAPI:
                    default: /
                    description: Absolute path on which to listen for Elasticsearch API requests. Defaults to /. _bulk will be appended automatically. For example, /myPath becomes /myPath/_bulk. Requests can then be made to either /myPath/_bulk or /myPath/<myIndexName>/_bulk. Other entries are faked as success.
                    pattern: ^/
                    title: Elasticsearch API endpoint
                    type: string
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    default:
                        - name: X-elastic-product
                          value: Elasticsearch
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                proxyMode:
                    properties:
                        authType:
                            default: none
                            description: Enter credentials directly, or select a stored secret
                            enum:
                                - none
                                - manual
                                - secret
                            title: Authentication method
                            type: string
                        enabled:
                            default: false
                            description: Enable proxying of non-bulk API requests to an external Elastic server. Enable this only if you understand the implications. See [Cribl Docs](https://docs.cribl.io/stream/sources-elastic/#proxy-mode) for more details.
                            title: Enable proxy mode
                            type: boolean
                        rejectUnauthorized:
                            default: false
                            description: Reject certificates that cannot be verified against a valid CA (such as self-signed certificates)
                            title: Reject unauthorized certificates
                            type: boolean
                        removeHeaders:
                            description: List of headers to remove from the request to proxy
                            items:
                                minLength: 1
                                type: string
                            minItems: 0
                            title: Remove headers
                            type: array
                        timeoutSec:
                            default: 60
                            description: Amount of time, in seconds, to wait for a proxy request to complete before canceling it
                            maximum: 9007199254740991
                            minimum: 1
                            title: Proxy request timeout
                            type: number
                        url:
                            description: URL of the Elastic server to proxy non-bulk requests to, such as http://elastic:9200
                            title: Proxy URL
                            type: string
                    required:
                        - enabled
                    title: ""
                    type: object
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - elastic
                    type: string
                username:
                    title: Username
                    type: string
            required:
                - host
                - port
                - elasticAPI
            type: object
        InputEventhub:
            properties:
                authenticationTimeout:
                    default: 10000
                    description: Maximum time to wait for Kafka to respond to an authentication request
                    maximum: 3600000
                    minimum: 1000
                    title: Authentication timeout (ms)
                    type: number
                autoCommitInterval:
                    description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
                    maximum: 3600000
                    minimum: 1000
                    title: Offset commit interval (ms)
                    type: number
                autoCommitThreshold:
                    description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
                    maximum: 10000
                    minimum: 1
                    title: Offset commit threshold
                    type: number
                backoffRate:
                    default: 2
                    description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
                    maximum: 20
                    minimum: 2
                    title: Backoff multiplier
                    type: number
                brokers:
                    description: 'List of Event Hubs Kafka brokers to connect to (example: yourdomain.servicebus.windows.net:9093). The hostname can be found in the host portion of the primary or secondary connection string in Shared Access Policies.'
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Brokers
                    type: array
                connectionTimeout:
                    default: 10000
                    description: Maximum time to wait for a connection to complete successfully
                    maximum: 3600000
                    minimum: 1000
                    title: Connection timeout (ms)
                    type: number
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fromBeginning:
                    default: true
                    description: Start reading from earliest available data; relevant only during initial subscription
                    title: From beginning
                    type: boolean
                groupId:
                    default: Cribl
                    description: The consumer group this instance belongs to. Default is 'Cribl'.
                    title: Group ID
                    type: string
                heartbeatInterval:
                    default: 3000
                    description: |4-
                              Expected time (heartbeat.interval.ms in Kafka domain) between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                              Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                              See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
                    maximum: 3600000
                    minimum: 1000
                    title: Heartbeat interval (ms)
                    type: number
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                initialBackoff:
                    default: 300
                    description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
                    maximum: 600000
                    minimum: 300
                    title: Initial retry interval (ms)
                    type: number
                maxBackOff:
                    default: 30000
                    description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
                    maximum: 180000
                    minimum: 30000
                    title: Backoff limit (ms)
                    type: number
                maxBytes:
                    default: 10485760
                    description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
                    maximum: 1000000000
                    minimum: 1
                    title: Byte limit
                    type: number
                maxBytesPerPartition:
                    default: 1048576
                    description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
                    maximum: 10000000
                    minimum: 1
                    title: Byte limit, per partition
                    type: number
                maxRetries:
                    default: 5
                    description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
                    maximum: 100
                    minimum: 0
                    title: Retry limit
                    type: number
                maxSocketErrors:
                    default: 0
                    description: Maximum number of network errors before the consumer re-creates a socket
                    maximum: 100
                    minimum: 0
                    title: Error limit, per socket
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                minimizeDuplicates:
                    default: false
                    description: Minimize duplicate events by starting only one consumer for each topic partition
                    title: Minimize duplicates
                    type: boolean
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                reauthenticationThreshold:
                    default: 10000
                    description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
                    maximum: 1800000
                    minimum: 1000
                    title: Reauthentication threshold (ms)
                    type: number
                rebalanceTimeout:
                    default: 60000
                    description: |4-
                              Maximum allowed time (rebalance.timeout.ms in Kafka domain) for each worker to join the group after a rebalance begins.
                              If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                              See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
                    maximum: 3600000
                    minimum: 1000
                    title: Rebalance timeout (ms)
                    type: number
                requestTimeout:
                    default: 60000
                    description: Maximum time to wait for Kafka to respond to a request
                    maximum: 3600000
                    minimum: 1000
                    title: Request timeout (ms)
                    type: number
                sasl:
                    description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
                    properties:
                        disabled:
                            default: false
                            title: Disabled
                            type: boolean
                        mechanism:
                            default: plain
                            enum:
                                - plain
                                - oauthbearer
                            title: SASL mechanism
                            type: string
                    required:
                        - disabled
                    title: Authentication
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                sessionTimeout:
                    default: 30000
                    description: |4-
                              Timeout (session.timeout.ms in Kafka domain) used to detect client failures when using Kafka's group-management facilities.
                              If the client sends no heartbeats to the broker before the timeout expires, the broker will remove the client from the group and initiate a rebalance.
                              Value must be lower than rebalanceTimeout.
                              See details [here](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
                    maximum: 300000
                    minimum: 6000
                    title: Session timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        disabled:
                            default: false
                            title: Disabled
                            type: boolean
                        rejectUnauthorized:
                            default: true
                            description: Reject certificates that are not authorized by a CA in the CA certificate path, or by another trusted CA (such as the system's)
                            title: Validate server certs
                            type: boolean
                    required:
                        - disabled
                    title: TLS settings (client side)
                    type: object
                topics:
                    default: []
                    description: 'The name of the Event Hub (Kafka topic) to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Event Hubs Source to only a single topic.'
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Event Hub name
                    type: array
                type:
                    enum:
                        - eventhub
                    type: string
            required:
                - brokers
                - topics
            type: object
        InputExec:
            properties:
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                command:
                    description: Command to execute; supports Bourne shell (or CMD on Windows) syntax
                    title: Command
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                cronSchedule:
                    default: '* * * * *'
                    description: Cron schedule to execute the command on.
                    title: Schedule
                    type: string
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 60
                    description: Interval between command executions in seconds.
                    minimum: 1
                    title: Interval
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                retries:
                    default: 10
                    description: Maximum number of retry attempts in the event that the command fails
                    minimum: 0
                    title: Retry limit
                    type: number
                scheduleType:
                    default: interval
                    description: Select a schedule type; either an interval (in seconds) or a cron-style schedule.
                    enum:
                        - interval
                        - cronSchedule
                    title: Schedule type
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - exec
            required:
                - command
                - type
            type: object
        InputFile:
            properties:
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                checkFileModTime:
                    default: false
                    description: Skip files with modification times earlier than the maximum age duration
                    title: Check file modification times
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                deleteFiles:
                    default: false
                    description: Delete files after they have been collected
                    title: Delete files
                    type: boolean
                depth:
                    description: Set how many subdirectories deep to search. Use 0 to search only files in the given path, 1 to also look in its immediate subdirectories, etc. Leave it empty for unlimited depth.
                    minimum: 0
                    title: Max depth
                    type: number
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                filenames:
                    default:
                        - '*/log/*'
                        - '*log'
                    description: The full path of discovered files are matched against this wildcard list
                    items:
                        type: string
                    title: Filename allowlist
                    type: array
                forceText:
                    default: false
                    description: Forces files containing binary data to be streamed as text
                    title: Force text format
                    type: boolean
                hashLen:
                    default: 256
                    description: Length of file header bytes to use in hash for unique file identification
                    minimum: 1
                    title: Hash length
                    type: number
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                idleTimeout:
                    default: 300
                    description: Time, in seconds, before an idle file is closed
                    minimum: 1
                    title: Idle timeout
                    type: number
                includeUnidentifiableBinary:
                    default: false
                    description: Stream binary files as Base64-encoded chunks.
                    title: Enable binary files
                    type: boolean
                interval:
                    default: 10
                    description: Time, in seconds, between scanning for files
                    minimum: 1
                    title: Polling interval
                    type: number
                maxAgeDur:
                    description: 'The maximum age of files to monitor. Format examples: 60s, 4h, 3d, 1w. Age is relative to file modification time. Leave empty to apply no age filters.'
                    title: Age duration limit
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                mode:
                    default: auto
                    description: Choose how to discover files to monitor
                    enum:
                        - auto
                        - manual
                    type: string
                path:
                    description: Directory path to search for files. Environment variables will be resolved, e.g. $CRIBL_HOME/log/.
                    title: Search path
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                suppressMissingPathErrors:
                    default: false
                    title: Suppress errors when search path does not exist
                    type: boolean
                tailOnly:
                    default: false
                    description: Read only new entries at the end of all files discovered at next startup. @{product} will then read newly discovered files from the head. Disable this to resume reading all files from head.
                    title: Collect from end
                    type: boolean
                type:
                    enum:
                        - file
            required:
                - id
                - type
            type: object
        InputFirehose:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                authTokens:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        type: string
                    title: Auth tokens
                    type: array
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - firehose
                    type: string
            required:
                - host
                - port
            type: object
        InputGooglePubsub:
            properties:
                concurrency:
                    default: 5
                    description: How many streams to pull messages from at one time. Doubling the value doubles the number of messages this Source pulls from the topic (if available), while consuming more CPU and memory. Defaults to 5.
                    maximum: 100
                    minimum: 1
                    title: Number of concurrent streams
                    type: number
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                createSubscription:
                    default: true
                    description: Create subscription if it does not exist
                    title: Create subscription
                    type: boolean
                createTopic:
                    default: false
                    description: Create topic if it does not exist
                    title: Create topic
                    type: boolean
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                googleAuthMethod:
                    default: manual
                    description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Google authentication method
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxBacklog:
                    default: 1000
                    description: If Destination exerts backpressure, this setting limits how many inbound events Stream will queue for processing before it stops retrieving events
                    minimum: 1
                    title: Backlog limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                orderedDelivery:
                    default: false
                    description: Receive events in the order they were added to the queue. The process sending events must have ordering enabled.
                    title: Ordered delivery
                    type: boolean
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                region:
                    description: Region to retrieve messages from. Select 'default' to allow Google to auto-select the nearest region. When using ordered delivery, the selected region must be allowed by message storage policy.
                    title: Region
                    type: string
                requestTimeout:
                    default: 60000
                    description: Pull request timeout, in milliseconds
                    minimum: 10000
                    title: Request timeout (ms)
                    type: number
                secret:
                    description: Select or create a stored text secret
                    title: Service account credentials (text secret)
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                serviceAccountCredentials:
                    description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
                    title: Service account credentials
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                subscriptionName:
                    description: ID of the subscription to use when receiving events
                    title: Subscription ID
                    type: string
                topicName:
                    description: ID of the topic to receive events from
                    title: Topic ID
                    type: string
                type:
                    enum:
                        - google_pubsub
                    type: string
            required:
                - topicName
                - subscriptionName
            type: object
        InputGrafana:
            anyOf:
                - required:
                    - prometheusAPI
                - required:
                    - lokiAPI
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: Maximum time to wait for additional data, after the last response was sent, before closing a socket connection. This can be very useful when Grafana Agent remote write's request frequency is high so, reusing connections, would help mitigating the cost of creating a new connection per request. Note that Grafana Agent's embedded Prometheus would attempt to keep connections open for up to 5 minutes.
                    maximum: 600
                    minimum: 1
                    title: Keep alive timeout (seconds)
                    type: number
                lokiAPI:
                    default: /loki/api/v1/push
                    description: 'Absolute path on which to listen for Loki logs requests. Defaults to /loki/api/v1/push, which will (in this example) expand as: ''http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push''. Either this field or ''Remote Write API endpoint'' must be configured.'
                    pattern: ^/
                    title: Logs API endpoint
                    type: string
                lokiAuth:
                    properties:
                        authHeaderExpr:
                            default: '`Bearer ${token}`'
                            description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                            title: Authorize expression
                            type: string
                        authType:
                            default: none
                            description: Loki logs authentication type
                            enum:
                                - none
                                - basic
                                - credentialsSecret
                                - token
                                - textSecret
                                - oauth
                            title: Authentication type
                            type: string
                        credentialsSecret:
                            description: Select or create a secret that references your credentials
                            title: Credentials secret
                            type: string
                        loginUrl:
                            description: URL for OAuth
                            pattern: ^https?://.*
                            title: Login URL
                            type: string
                        oauthHeaders:
                            description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                            items:
                                properties:
                                    name:
                                        description: OAuth header name
                                        title: Name
                                        type: string
                                    value:
                                        description: OAuth header value
                                        title: Value
                                        type: string
                                required:
                                    - name
                                    - value
                                type: object
                            title: OAuth headers
                            type: array
                        oauthParams:
                            description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                            items:
                                properties:
                                    name:
                                        description: OAuth parameter name
                                        title: Name
                                        type: string
                                    value:
                                        description: OAuth parameter value
                                        title: Value
                                        type: string
                                required:
                                    - name
                                    - value
                                type: object
                            title: OAuth parameters
                            type: array
                        password:
                            title: Password
                            type: string
                        secret:
                            description: Secret parameter value to pass in request body
                            title: OAuth secret
                            type: string
                        secretParamName:
                            description: Secret parameter name to pass in request body
                            title: OAuth Secret parameter name
                            type: string
                        textSecret:
                            description: Select or create a stored text secret
                            title: Token (text secret)
                            type: string
                        token:
                            description: Bearer token to include in the authorization header
                            title: Token
                            type: string
                        tokenAttributeName:
                            description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                            title: Token attribute name
                            type: string
                        tokenTimeoutSecs:
                            default: 3600
                            description: How often the OAuth token should be refreshed.
                            maximum: 300000
                            minimum: 1
                            title: Refresh interval (secs.)
                            type: number
                        username:
                            title: Username
                            type: string
                    type: object
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                prometheusAPI:
                    default: /api/prom/push
                    description: 'Absolute path on which to listen for Grafana Agent''s Remote Write requests. Defaults to /api/prom/push, which will expand as: ''http://<your‑upstream‑URL>:<your‑port>/api/prom/push''. Either this field or ''Logs API endpoint'' must be configured.'
                    pattern: ^/
                    title: Remote Write API endpoint
                    type: string
                prometheusAuth:
                    properties:
                        authHeaderExpr:
                            default: '`Bearer ${token}`'
                            description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                            title: Authorize expression
                            type: string
                        authType:
                            default: none
                            description: Remote Write authentication type
                            enum:
                                - none
                                - basic
                                - credentialsSecret
                                - token
                                - textSecret
                                - oauth
                            title: Authentication type
                            type: string
                        credentialsSecret:
                            description: Select or create a secret that references your credentials
                            title: Credentials secret
                            type: string
                        loginUrl:
                            description: URL for OAuth
                            pattern: ^https?://.*
                            title: Login URL
                            type: string
                        oauthHeaders:
                            description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                            items:
                                properties:
                                    name:
                                        description: OAuth header name
                                        title: Name
                                        type: string
                                    value:
                                        description: OAuth header value
                                        title: Value
                                        type: string
                                required:
                                    - name
                                    - value
                                type: object
                            title: OAuth headers
                            type: array
                        oauthParams:
                            description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                            items:
                                properties:
                                    name:
                                        description: OAuth parameter name
                                        title: Name
                                        type: string
                                    value:
                                        description: OAuth parameter value
                                        title: Value
                                        type: string
                                required:
                                    - name
                                    - value
                                type: object
                            title: OAuth parameters
                            type: array
                        password:
                            title: Password
                            type: string
                        secret:
                            description: Secret parameter value to pass in request body
                            title: OAuth secret
                            type: string
                        secretParamName:
                            description: Secret parameter name to pass in request body
                            title: OAuth Secret parameter name
                            type: string
                        textSecret:
                            description: Select or create a stored text secret
                            title: Token (text secret)
                            type: string
                        token:
                            description: Bearer token to include in the authorization header
                            title: Token
                            type: string
                        tokenAttributeName:
                            description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                            title: Token attribute name
                            type: string
                        tokenTimeoutSecs:
                            default: 3600
                            description: How often the OAuth token should be refreshed.
                            maximum: 300000
                            minimum: 1
                            title: Refresh interval (secs.)
                            type: number
                        username:
                            title: Username
                            type: string
                    type: object
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - grafana
                    type: string
            required:
                - host
                - port
            type: object
        InputHttp:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                authTokens:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        type: string
                    title: Auth tokens
                    type: array
                authTokensExt:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        properties:
                            description:
                                title: Description
                                type: string
                            metadata:
                                description: Fields to add to events referencing this token
                                items:
                                    properties:
                                        name:
                                            title: Field Name
                                            type: string
                                        value:
                                            description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                            title: Value
                                            type: string
                                    required:
                                        - name
                                        - value
                                    type: object
                                title: Fields
                                type: array
                            token:
                                description: 'Shared secret to be provided by any client (Authorization: <token>)'
                                title: Token
                                type: string
                        required:
                            - token
                        type: object
                    title: Auth tokens
                    type: array
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                criblAPI:
                    default: /cribl
                    description: Absolute path on which to listen for the Cribl HTTP API requests. Only _bulk (default /cribl/_bulk) is available. Use empty string to disable.
                    pattern: ^/|^$
                    title: Cribl HTTP event API
                    type: string
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                elasticAPI:
                    default: /elastic
                    description: Absolute path on which to listen for the Elasticsearch API requests. Only _bulk (default /elastic/_bulk) is available. Use empty string to disable.
                    pattern: ^/|^$
                    title: Elasticsearch API endpoint (Bulk API)
                    type: string
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                splunkHecAPI:
                    default: /services/collector
                    description: Absolute path on which listen for the Splunk HTTP Event Collector API requests. Use empty string to disable.
                    pattern: ^/|^$
                    title: Splunk HEC endpoint
                    type: string
                splunkHecAcks:
                    default: false
                    title: Enable Splunk HEC acknowledgements
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - http
                    type: string
            required:
                - host
                - port
            type: object
        InputHttpRaw:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                allowedMethods:
                    default:
                        - '*'
                    description: List of HTTP methods accepted by this input. Wildcards are supported (such as P*, GET). Defaults to allow all.
                    items:
                        minLength: 1
                        type: string
                    title: Allowed HTTP methods
                    type: array
                allowedPaths:
                    default:
                        - '*'
                    description: List of URI paths accepted by this input, wildcards are supported, e.g /api/v*/hook. Defaults to allow all.
                    items:
                        minLength: 1
                        type: string
                    title: Allowed URI paths
                    type: array
                authTokens:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        type: string
                    title: Auth tokens
                    type: array
                authTokensExt:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        properties:
                            description:
                                title: Description
                                type: string
                            metadata:
                                description: Fields to add to events referencing this token
                                items:
                                    properties:
                                        name:
                                            title: Field Name
                                            type: string
                                        value:
                                            description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                            title: Value
                                            type: string
                                    required:
                                        - name
                                        - value
                                    type: object
                                title: Fields
                                type: array
                            token:
                                description: 'Shared secret to be provided by any client (Authorization: <token>)'
                                title: Token
                                type: string
                        required:
                            - token
                        type: object
                    title: Auth tokens
                    type: array
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - http_raw
                    type: string
            required:
                - host
                - port
            type: object
        InputJournalFiles:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                currentBoot:
                    default: false
                    description: Skip log messages that are not part of the current boot session.
                    title: Current boot only
                    type: boolean
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 10
                    description: 'Time, in seconds, between scanning for journals. '
                    minimum: 1
                    title: Polling interval
                    type: number
                journals:
                    default:
                        - system
                    description: The full path of discovered journals are matched against this wildcard list.
                    items:
                        type: string
                    title: Journal allowlist
                    type: array
                maxAgeDur:
                    description: 'The maximum log message age, in duration form (e.g,: 60s, 4h, 3d, 1w).  Default of no value will apply no max age filters.'
                    title: Age duration limit
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                path:
                    description: Directory path to search for journals. Environment variables will be resolved, e.g. $CRIBL_EDGE_FS_ROOT/var/log/journal/$MACHINE_ID.
                    title: Search path
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                rules:
                    default:
                        - description: Allow log messages having 'emergency', 'alert', 'critical', 'error', or 'warning' priority
                          filter: severity <= 4
                    description: Add rules to decide which journal objects to allow. Events are generated if no rules are given or if all the rules' expressions evaluate to true.
                    items:
                        properties:
                            description:
                                description: Optional description of this rule's purpose
                                title: Description
                                type: string
                            filter:
                                description: JavaScript expression applied to Journal objects. Return 'true' to include it.
                                title: Filter Expression
                                type: string
                        required:
                            - filter
                        type: object
                    title: Filter Rules
                    type: array
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - journal_files
            required:
                - path
                - journals
            type: object
        InputKafka:
            properties:
                authenticationTimeout:
                    default: 10000
                    description: Maximum time to wait for Kafka to respond to an authentication request
                    maximum: 3600000
                    minimum: 1000
                    title: Authentication timeout (ms)
                    type: number
                autoCommitInterval:
                    description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
                    maximum: 3600000
                    minimum: 1000
                    title: Offset commit interval (ms)
                    type: number
                autoCommitThreshold:
                    description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
                    maximum: 10000
                    minimum: 1
                    title: Offset commit threshold
                    type: number
                backoffRate:
                    default: 2
                    description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
                    maximum: 20
                    minimum: 2
                    title: Backoff multiplier
                    type: number
                brokers:
                    description: Enter each Kafka bootstrap server you want to use. Specify the hostname and port (such as mykafkabroker:9092) or just the hostname (in which case @{product} will assign port 9092).
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Bootstrap servers
                    type: array
                connectionTimeout:
                    default: 10000
                    description: Maximum time to wait for a connection to complete successfully
                    maximum: 3600000
                    minimum: 1000
                    title: Connection timeout (ms)
                    type: number
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fromBeginning:
                    default: true
                    description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
                    title: From beginning
                    type: boolean
                groupId:
                    default: Cribl
                    description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
                    title: Group ID
                    type: string
                heartbeatInterval:
                    default: 3000
                    description: |4-
                              Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                              Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                              See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
                    maximum: 3600000
                    minimum: 1000
                    title: Heartbeat interval (ms)
                    type: number
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                initialBackoff:
                    default: 300
                    description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
                    maximum: 600000
                    minimum: 300
                    title: Initial retry interval (ms)
                    type: number
                kafkaSchemaRegistry:
                    properties:
                        auth:
                            description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
                            properties:
                                credentialsSecret:
                                    description: Select or create a secret that references your credentials
                                    title: Credentials secret
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                            required:
                                - disabled
                            type: object
                        connectionTimeout:
                            default: 30000
                            description: Maximum time to wait for a Schema Registry connection to complete successfully
                            maximum: 60000
                            minimum: 1000
                            title: Connection timeout (ms)
                            type: number
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxRetries:
                            default: 1
                            description: Maximum number of times to try fetching schemas from the Schema Registry
                            maximum: 100
                            minimum: 0
                            title: Retry limit
                            type: number
                        requestTimeout:
                            default: 30000
                            description: Maximum time to wait for the Schema Registry to respond to a request
                            maximum: 60000
                            minimum: 1000
                            title: Request timeout (ms)
                            type: number
                        schemaRegistryURL:
                            default: http://localhost:8081
                            description: 'URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http.'
                            title: Schema Registry URL
                            type: string
                        tls:
                            properties:
                                caPath:
                                    description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                                    title: CA certificate path
                                    type: string
                                certPath:
                                    description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                                    title: Certificate path (mutual auth)
                                    type: string
                                certificateName:
                                    description: The name of the predefined certificate
                                    title: Certificate
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                                maxVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Maximum TLS version
                                    type: string
                                minVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Minimum TLS version
                                    type: string
                                passphrase:
                                    description: Passphrase to use to decrypt private key
                                    title: Passphrase
                                    type: string
                                privKeyPath:
                                    description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                                    title: Private key path (mutual auth)
                                    type: string
                                rejectUnauthorized:
                                    default: true
                                    description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                                    title: Validate server certs
                                    type: boolean
                                servername:
                                    description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                                    title: Server name (SNI)
                                    type: string
                            title: TLS settings (client side)
                            type: object
                    required:
                        - disabled
                    title: Kafka Schema Registry Authentication
                    type: object
                maxBackOff:
                    default: 30000
                    description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
                    maximum: 180000
                    minimum: 30000
                    title: Backoff limit (ms)
                    type: number
                maxBytes:
                    default: 10485760
                    description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
                    maximum: 1000000000
                    minimum: 1
                    title: Byte limit
                    type: number
                maxBytesPerPartition:
                    default: 1048576
                    description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
                    maximum: 10000000
                    minimum: 1
                    title: Byte limit, per partition
                    type: number
                maxRetries:
                    default: 5
                    description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
                    maximum: 100
                    minimum: 0
                    title: Retry limit
                    type: number
                maxSocketErrors:
                    default: 0
                    description: Maximum number of network errors before the consumer re-creates a socket
                    maximum: 100
                    minimum: 0
                    title: Error limit, per socket
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                reauthenticationThreshold:
                    default: 10000
                    description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
                    maximum: 1800000
                    minimum: 1000
                    title: Reauthentication threshold (ms)
                    type: number
                rebalanceTimeout:
                    default: 60000
                    description: |4-
                              Maximum allowed time for each worker to join the group after a rebalance begins.
                              If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                              See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
                    maximum: 3600000
                    minimum: 1000
                    title: Rebalance timeout (ms)
                    type: number
                requestTimeout:
                    default: 60000
                    description: Maximum time to wait for Kafka to respond to a request
                    maximum: 3600000
                    minimum: 1000
                    title: Request timeout (ms)
                    type: number
                sasl:
                    description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
                    properties:
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        mechanism:
                            default: plain
                            enum:
                                - plain
                                - scram-sha-256
                                - scram-sha-512
                                - kerberos
                            title: SASL mechanism
                            type: string
                    required:
                        - disabled
                    title: Authentication
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                sessionTimeout:
                    default: 30000
                    description: "\n      Timeout used to detect client failures when using Kafka's group-management facilities.\n      If the client sends no heartbeats to the broker before the timeout expires, \n      the broker will remove the client from the group and initiate a rebalance.\n      Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.\n      See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details."
                    maximum: 3600000
                    minimum: 1000
                    title: Session timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                topics:
                    default: []
                    description: 'Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only.'
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Topic
                    type: array
                type:
                    enum:
                        - kafka
                    type: string
            required:
                - brokers
                - topics
            type: object
        InputKinesis:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                avoidDuplicates:
                    default: false
                    description: When resuming streaming from a stored state, Stream will read the next available record, rather than rereading the last-read record. Enabling this setting can cause data loss after a Worker Node's unexpected shutdown or restart.
                    title: Avoid duplicate records
                    type: boolean
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access Kinesis stream
                    title: Enable for Kinesis stream
                    type: boolean
                endpoint:
                    description: Kinesis stream service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Kinesis stream-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                getRecordsLimit:
                    default: 5000
                    description: Maximum number of records per getRecords call
                    maximum: 10000
                    minimum: 5000
                    title: Records limit per call
                    type: number
                getRecordsLimitTotal:
                    default: 20000
                    description: Maximum number of records, across all shards, to pull down at once per Worker Process
                    minimum: 20000
                    title: Total records limit
                    type: number
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                loadBalancingAlgorithm:
                    default: ConsistentHashing
                    description: The load-balancing algorithm to use for spreading out shards across Workers and Worker Processes
                    enum:
                        - ConsistentHashing
                        - RoundRobin
                    title: Shard load balancing
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                payloadFormat:
                    default: cribl
                    description: Format of data inside the Kinesis Stream records. Gzip compression is automatically detected.
                    enum:
                        - cribl
                        - ndjson
                        - cloudwatch
                        - line
                    title: Record data format
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                region:
                    description: Region where the Kinesis stream is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                serviceInterval:
                    default: 1
                    description: Time interval in minutes between consecutive service calls
                    maximum: 5
                    minimum: 1
                    title: Service period
                    type: number
                shardExpr:
                    default: "true"
                    description: A JavaScript expression to be called with each shardId for the stream. If the expression evaluates to a truthy value, the shard will be processed.
                    title: Shard selection expression
                    type: string
                shardIteratorType:
                    default: TRIM_HORIZON
                    description: Location at which to start reading a shard for the first time
                    enum:
                        - TRIM_HORIZON
                        - LATEST
                    title: Shard iterator start
                    type: string
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing Kinesis stream requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamName:
                    description: Kinesis Data Stream to read data from
                    title: Stream name
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - kinesis
                    type: string
                verifyKPLCheckSums:
                    default: false
                    description: Verify Kinesis Producer Library (KPL) event checksums
                    title: Verify KPL checksums
                    type: boolean
            required:
                - streamName
                - region
            type: object
        InputKubeEvents:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                rules:
                    default: []
                    description: Filtering on event fields
                    items:
                        properties:
                            description:
                                description: Optional description of this rule's purpose
                                title: Description
                                type: string
                            filter:
                                description: JavaScript expression applied to Kubernetes objects. Return 'true' to include it.
                                title: Filter Expression
                                type: string
                        required:
                            - filter
                        type: object
                    title: Filter Rules
                    type: array
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - kube_events
                    type: string
            required:
                - id
                - type
            type: object
        InputKubeLogs:
            properties:
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableLoadBalancing:
                    default: false
                    description: Load balance traffic across all Worker Processes
                    title: Enable load balancing
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 15
                    description: Time, in seconds, between checks for new containers. Default is 15 secs.
                    minimum: 1
                    title: Polling interval
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                persistence:
                    properties:
                        compress:
                            default: gzip
                            description: Data compression format. Default is gzip.
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        enable:
                            default: false
                            description: Spool events on disk for Cribl Edge and Search. Default is disabled.
                            title: Enable disk spooling
                            type: boolean
                        maxDataSize:
                            default: 1GB
                            description: 'Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB.'
                            pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
                            title: Data size limit
                            type: string
                        maxDataTime:
                            default: 24h
                            description: 'Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h.'
                            pattern: \d+[smhd]$
                            title: Data age limit
                            type: string
                        timeWindow:
                            default: 10m
                            description: Time period for grouping spooled events. Default is 10m.
                            title: Bucket time span
                            type: string
                    title: Disk Spooling
                    type: object
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                rules:
                    default:
                        - description: Ignore the kube-* namespace
                          filter: '!metadata.namespace.startsWith(''kube-'')'
                    description: Add rules to decide which Pods to collect logs from. Logs are collected if no rules are given or if all the rules' expressions evaluate to true.
                    items:
                        properties:
                            description:
                                description: Optional description of this rule's purpose
                                title: Description
                                type: string
                            filter:
                                description: JavaScript expression applied to Pod objects. Return 'true' to include it.
                                title: Filter Expression
                                type: string
                        required:
                            - filter
                        type: object
                    title: Filter Rules
                    type: array
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                timestamps:
                    default: false
                    description: For use when containers do not emit a timestamp, prefix each line of output with a timestamp. If you enable this setting, you can use the Kubernetes Logs Event Breaker and the kubernetes_logs Pre-processing Pipeline to remove them from the events after the timestamps are extracted.
                    title: Enable timestamps
                    type: boolean
                type:
                    enum:
                        - kube_logs
                    type: string
            required:
                - id
                - type
            type: object
        InputKubeMetrics:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 15
                    description: Time, in seconds, between consecutive metrics collections. Default is 15 secs.
                    minimum: 1
                    title: Polling interval
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                persistence:
                    properties:
                        compress:
                            default: gzip
                            enum:
                                - none
                                - gzip
                            title: Data compression format
                            type: string
                        destPath:
                            default: $CRIBL_HOME/state/kube_metrics
                            description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
                            title: Path location
                            type: string
                        enable:
                            default: false
                            description: Spool metrics on disk for Cribl Search
                            title: Enable disk spooling
                            type: boolean
                        maxDataSize:
                            default: 1GB
                            description: 'Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted.'
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Data size limit
                            type: string
                        maxDataTime:
                            default: 24h
                            description: 'Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted.'
                            pattern: \d+[smhd]$
                            title: Data age limit
                            type: string
                        timeWindow:
                            default: 10m
                            description: Time span for each file bucket
                            title: Bucket time span
                            type: string
                    title: persistence
                    type: object
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                rules:
                    default:
                        - description: Ignore the kube-* namespace
                          filter: '!metadata.namespace.startsWith(''kube-'')'
                    description: Add rules to decide which Kubernetes objects to generate metrics for. Events are generated if no rules are given or of all the rules' expressions evaluate to true.
                    items:
                        properties:
                            description:
                                description: Optional description of this rule's purpose
                                title: Description
                                type: string
                            filter:
                                description: JavaScript expression applied to Kubernetes objects. Return 'true' to include it.
                                title: Filter Expression
                                type: string
                        required:
                            - filter
                        type: object
                    title: Filter Rules
                    type: array
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - kube_metrics
                    type: string
            required:
                - id
                - type
            type: object
        InputLoki:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: none
                    description: Loki logs authentication type
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                lokiAPI:
                    default: /loki/api/v1/push
                    description: 'Absolute path on which to listen for Loki logs requests. Defaults to /loki/api/v1/push, which will (in this example) expand as: ''http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push''.'
                    pattern: ^/
                    title: Logs API endpoint
                    type: string
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                type:
                    enum:
                        - loki
                    type: string
                username:
                    title: Username
                    type: string
            required:
                - host
                - port
                - lokiAPI
            type: object
        InputMetrics:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Enable if the connection is proxied by a device that supports Proxy Protocol V1 or V2
                    title: Enable proxy protocol
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipWhitelistRegex:
                    default: /.*/
                    description: Regex matching IP addresses that are allowed to send data
                    title: IP allowlist regex
                    type: string
                maxBufferSize:
                    default: 1000
                    description: Maximum number of events to buffer when downstream is blocking. Only applies to UDP.
                    minimum: 0
                    title: Buffer size limit (events)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tcpPort:
                    description: Enter TCP port number to listen on. Not required if listening on UDP.
                    maximum: 65535
                    title: TCP Port
                    type: number
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - metrics
                    type: string
                udpPort:
                    description: Enter UDP port number to listen on. Not required if listening on TCP.
                    maximum: 65535
                    title: UDP Port
                    type: number
                udpSocketRxBufSize:
                    description: 'Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization.'
                    maximum: 4294967295
                    minimum: 256
                    title: UDP socket buffer size (bytes)
                    type: number
            required:
                - host
                - type
            type: object
        InputModelDrivenTelemetry:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxActiveCxn:
                    default: 1000
                    description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
                    minimum: 0
                    title: Active connection limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    default: 57000
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                shutdownTimeoutMs:
                    default: 5000
                    description: Time in milliseconds to allow the server to shutdown gracefully before forcing shutdown. Defaults to 5000.
                    minimum: 1
                    title: Shutdown timeout
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - model_driven_telemetry
                    type: string
            required:
                - host
                - port
            type: object
        InputMsk:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                authenticationTimeout:
                    default: 10000
                    description: Maximum time to wait for Kafka to respond to an authentication request
                    maximum: 3600000
                    minimum: 1000
                    title: Authentication timeout (ms)
                    type: number
                autoCommitInterval:
                    description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
                    maximum: 3600000
                    minimum: 1000
                    title: Offset commit interval (ms)
                    type: number
                autoCommitThreshold:
                    description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
                    maximum: 10000
                    minimum: 1
                    title: Offset commit threshold
                    type: number
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                backoffRate:
                    default: 2
                    description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
                    maximum: 20
                    minimum: 2
                    title: Backoff multiplier
                    type: number
                brokers:
                    description: Enter each Kafka bootstrap server you want to use. Specify the hostname and port (such as mykafkabroker:9092) or just the hostname (in which case @{product} will assign port 9092).
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Bootstrap servers
                    type: array
                connectionTimeout:
                    default: 10000
                    description: Maximum time to wait for a connection to complete successfully
                    maximum: 3600000
                    minimum: 1000
                    title: Connection timeout (ms)
                    type: number
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access MSK
                    title: Enable for MSK
                    type: boolean
                endpoint:
                    description: MSK cluster service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to MSK cluster-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fromBeginning:
                    default: true
                    description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
                    title: From beginning
                    type: boolean
                groupId:
                    default: Cribl
                    description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
                    title: Group ID
                    type: string
                heartbeatInterval:
                    default: 3000
                    description: |4-
                              Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                              Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                              See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
                    maximum: 3600000
                    minimum: 1000
                    title: Heartbeat interval (ms)
                    type: number
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                initialBackoff:
                    default: 300
                    description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
                    maximum: 600000
                    minimum: 300
                    title: Initial retry interval (ms)
                    type: number
                kafkaSchemaRegistry:
                    properties:
                        auth:
                            description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
                            properties:
                                credentialsSecret:
                                    description: Select or create a secret that references your credentials
                                    title: Credentials secret
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                            required:
                                - disabled
                            type: object
                        connectionTimeout:
                            default: 30000
                            description: Maximum time to wait for a Schema Registry connection to complete successfully
                            maximum: 60000
                            minimum: 1000
                            title: Connection timeout (ms)
                            type: number
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxRetries:
                            default: 1
                            description: Maximum number of times to try fetching schemas from the Schema Registry
                            maximum: 100
                            minimum: 0
                            title: Retry limit
                            type: number
                        requestTimeout:
                            default: 30000
                            description: Maximum time to wait for the Schema Registry to respond to a request
                            maximum: 60000
                            minimum: 1000
                            title: Request timeout (ms)
                            type: number
                        schemaRegistryURL:
                            default: http://localhost:8081
                            description: 'URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http.'
                            title: Schema Registry URL
                            type: string
                        tls:
                            properties:
                                caPath:
                                    description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                                    title: CA certificate path
                                    type: string
                                certPath:
                                    description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                                    title: Certificate path (mutual auth)
                                    type: string
                                certificateName:
                                    description: The name of the predefined certificate
                                    title: Certificate
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                                maxVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Maximum TLS version
                                    type: string
                                minVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Minimum TLS version
                                    type: string
                                passphrase:
                                    description: Passphrase to use to decrypt private key
                                    title: Passphrase
                                    type: string
                                privKeyPath:
                                    description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                                    title: Private key path (mutual auth)
                                    type: string
                                rejectUnauthorized:
                                    default: true
                                    description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                                    title: Validate server certs
                                    type: boolean
                                servername:
                                    description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                                    title: Server name (SNI)
                                    type: string
                            title: TLS settings (client side)
                            type: object
                    required:
                        - disabled
                    title: Kafka Schema Registry Authentication
                    type: object
                maxBackOff:
                    default: 30000
                    description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
                    maximum: 180000
                    minimum: 30000
                    title: Backoff limit (ms)
                    type: number
                maxBytes:
                    default: 10485760
                    description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
                    maximum: 1000000000
                    minimum: 1
                    title: Byte limit
                    type: number
                maxBytesPerPartition:
                    default: 1048576
                    description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
                    maximum: 10000000
                    minimum: 1
                    title: Byte limit, per partition
                    type: number
                maxRetries:
                    default: 5
                    description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
                    maximum: 100
                    minimum: 0
                    title: Retry limit
                    type: number
                maxSocketErrors:
                    default: 0
                    description: Maximum number of network errors before the consumer re-creates a socket
                    maximum: 100
                    minimum: 0
                    title: Error limit, per socket
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                reauthenticationThreshold:
                    default: 10000
                    description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
                    maximum: 1800000
                    minimum: 1000
                    title: Reauthentication threshold (ms)
                    type: number
                rebalanceTimeout:
                    default: 60000
                    description: |4-
                              Maximum allowed time for each worker to join the group after a rebalance begins.
                              If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                              See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
                    maximum: 3600000
                    minimum: 1000
                    title: Rebalance timeout (ms)
                    type: number
                region:
                    description: Region where the MSK cluster is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                requestTimeout:
                    default: 60000
                    description: Maximum time to wait for Kafka to respond to a request
                    maximum: 3600000
                    minimum: 1000
                    title: Request timeout (ms)
                    type: number
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                sessionTimeout:
                    default: 30000
                    description: "\n      Timeout used to detect client failures when using Kafka's group-management facilities.\n      If the client sends no heartbeats to the broker before the timeout expires, \n      the broker will remove the client from the group and initiate a rebalance.\n      Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.\n      See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details."
                    maximum: 3600000
                    minimum: 1000
                    title: Session timeout (ms)
                    type: number
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing MSK cluster requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: false
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                topics:
                    default: []
                    description: 'Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only.'
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Topic
                    type: array
                type:
                    enum:
                        - msk
                    type: string
            required:
                - brokers
                - topics
                - region
                - awsAuthenticationMethod
            type: object
        InputNetflow:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enablePassThrough:
                    default: false
                    description: Allow forwarding of events to a NetFlow destination. Enabling this feature will generate an extra event containing __netflowRaw which can be routed to a NetFlow destination. Note that these events will not count against ingest quota.
                    title: Enable pass-through
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist.
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                ipfixEnabled:
                    default: false
                    description: Accept messages in IPFIX format.
                    title: IPFIX
                    type: boolean
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    default: 2055
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                templateCacheMinutes:
                    default: 30
                    description: Specifies how many minutes NetFlow v9 templates are cached before being discarded if not refreshed. Adjust based on your network's template update frequency to optimize performance and memory usage.
                    maximum: 3600
                    minimum: 1
                    title: Template cache minutes
                    type: number
                type:
                    enum:
                        - netflow
                    type: string
                udpSocketRxBufSize:
                    description: 'Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization.'
                    maximum: 4294967295
                    minimum: 256
                    title: UDP socket buffer size (bytes)
                    type: number
                v5Enabled:
                    default: true
                    description: Accept messages in Netflow V5 format.
                    title: V5
                    type: boolean
                v9Enabled:
                    default: true
                    description: Accept messages in Netflow V9 format.
                    title: V9
                    type: boolean
            required:
                - host
                - port
            type: object
        InputOffice365Mgmt:
            properties:
                appId:
                    description: Office 365 Azure Application ID
                    title: App ID
                    type: string
                authType:
                    default: manual
                    description: Enter client secret directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                clientSecret:
                    description: Office 365 Azure client secret
                    title: Client secret
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                contentConfig:
                    default:
                        - contentType: Active Directory
                          description: Poll interval minutes (1-60)
                          enabled: false
                          interval: 15
                          logLevel: info
                        - contentType: Exchange
                          description: Poll interval minutes (1-60)
                          enabled: false
                          interval: 15
                          logLevel: info
                        - contentType: SharePoint
                          description: Poll interval minutes (1-60)
                          enabled: false
                          interval: 15
                          logLevel: info
                        - contentType: General
                          description: Poll interval minutes (1-60)
                          enabled: false
                          interval: 15
                          logLevel: info
                        - contentType: DLP
                          description: Poll interval minutes (1-60)
                          enabled: false
                          interval: 15
                          logLevel: info
                    description: 'Enable Office 365 Management Activity API content types and polling intervals. Polling intervals are used to set up search date range and cron schedule, e.g.: */${interval} * * * *. Because of this, intervals entered must be evenly divisible by 60 to give a predictable schedule.'
                    items:
                        properties:
                            contentType:
                                description: Office 365 Management Activity API Content Type
                                title: Content Type
                                type: string
                            description:
                                description: If interval type is minutes the value entered must evenly divisible by 60 or save will fail
                                title: Interval Description
                                type: string
                            enabled:
                                title: Enabled
                                type: boolean
                            interval:
                                maximum: 60
                                minimum: 1
                                title: Interval
                                type: number
                            logLevel:
                                description: Collector runtime Log Level
                                enum:
                                    - error
                                    - warn
                                    - info
                                    - debug
                                title: Log Level
                                type: string
                        type: object
                    title: Content Types
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                ingestionLag:
                    default: 0
                    description: Use this setting to account for ingestion lag. This is necessary because there can be a lag of 60 - 90 minutes (or longer) before Office 365 events are available for retrieval.
                    maximum: 7200
                    minimum: 0
                    title: Ingestion lag (minutes)
                    type: number
                jobTimeout:
                    default: "0"
                    description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
                    pattern: ^\d+[sm]?$
                    title: Job timeout
                    type: string
                keepAliveTime:
                    default: 30
                    description: How often workers should check in with the scheduler to keep job subscription alive
                    minimum: 10
                    title: Keep alive time (seconds)
                    type: number
                maxMissedKeepAlives:
                    default: 3
                    description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
                    minimum: 2
                    title: Worker timeout (periods)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                planType:
                    default: enterprise_gcc
                    description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
                    enum:
                        - enterprise_gcc
                        - gcc
                        - gcc_high
                        - dod
                    title: Subscription plan
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                publisherIdentifier:
                    description: Optional Publisher Identifier to use in API requests, defaults to tenant id if not defined. For more information see [here](https://docs.microsoft.com/en-us/office/office-365-management-api/office-365-management-activity-api-reference#start-a-subscription)
                    title: Publisher Identifier
                    type: string
                retryRules:
                    properties:
                        codes:
                            default:
                                - 429
                                - 500
                                - 503
                            description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
                            items:
                                minLength: 1
                                type: number
                            minItems: 1
                            title: Retry HTTP codes
                            type: array
                        enableHeader:
                            default: true
                            description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
                            title: Honor Retry-After header
                            type: boolean
                        interval:
                            default: 1000
                            description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
                            maximum: 20000
                            minimum: 0
                            title: Initial retry interval (ms)
                            type: number
                        limit:
                            default: 5
                            description: The maximum number of times to retry a failed HTTP request
                            maximum: 20
                            minimum: 0
                            title: Retry limit
                            type: number
                        multiplier:
                            default: 2
                            description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        retryConnectReset:
                            default: false
                            description: Retry request when a connection reset (ECONNRESET) error occurs
                            title: Retry connection reset
                            type: boolean
                        retryConnectTimeout:
                            default: false
                            description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
                            title: Retry connection timeout
                            type: boolean
                        type:
                            default: backoff
                            description: The algorithm to use when performing HTTP retries
                            enum:
                                - none
                                - backoff
                                - static
                            title: Retry type
                            type: string
                    required:
                        - type
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tenantId:
                    description: Office 365 Azure Tenant ID
                    title: Tenant ID
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: Client secret (text secret)
                    type: string
                timeout:
                    default: 300
                    description: HTTP request inactivity timeout, use 0 to disable
                    maximum: 2400
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - office365_mgmt
                    type: string
            required:
                - tenantId
                - appId
                - planType
            type: object
        InputOffice365MsgTrace:
            properties:
                authType:
                    default: oauth
                    description: Select authentication method.
                    enum:
                        - manual
                        - secret
                        - oauth
                        - oauthSecret
                        - oauthCert
                    title: Authentication method
                    type: string
                certOptions:
                    properties:
                        certPath:
                            description: Path to the certificate to use. Certificate should be in PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate.
                            title: Certificate
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt the private key.
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path to the private key to use. Key should be in PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                    required:
                        - privKeyPath
                        - certPath
                    type: object
                clientId:
                    description: client_id to pass in the OAuth request parameter.
                    title: Client ID
                    type: string
                clientSecret:
                    description: client_secret to pass in the OAuth request parameter.
                    title: Client secret
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                credentialsSecret:
                    description: Select or create a secret that references your credentials.
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                disableTimeFilter:
                    default: true
                    description: Disables time filtering of events when a date range is specified.
                    title: Disable time filter
                    type: boolean
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                endDate:
                    description: 'Backward offset for the search range''s tail. (E.g.: -2h@h) Message Trace data is delayed; this parameter (with Date range start) compensates for delay and gaps.'
                    title: Date range end
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                interval:
                    default: 60
                    description: How often (in minutes) to run the report. Must divide evenly into 60 minutes to create a predictable schedule, or Save will fail.
                    maximum: 60
                    minimum: 1
                    title: Poll interval
                    type: number
                jobTimeout:
                    default: "0"
                    description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
                    pattern: ^\d+[sm]?$
                    title: Job timeout
                    type: string
                keepAliveTime:
                    default: 30
                    description: How often workers should check in with the scheduler to keep job subscription alive
                    minimum: 10
                    title: Keep alive time (seconds)
                    type: number
                logLevel:
                    default: info
                    description: Log Level (verbosity) for collection runtime behavior.
                    enum:
                        - error
                        - warn
                        - info
                        - debug
                        - silly
                    title: Log level
                    type: string
                maxMissedKeepAlives:
                    default: 3
                    description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
                    minimum: 2
                    title: Worker timeout (periods)
                    type: number
                maxTaskReschedule:
                    default: 1
                    description: Maximum number of times a task can be rescheduled
                    minimum: 1
                    title: Task reschedule limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                password:
                    description: Password to run Message Trace API call.
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                planType:
                    default: enterprise_gcc
                    description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
                    enum:
                        - enterprise_gcc
                        - gcc
                        - gcc_high
                        - dod
                    title: Subscription plan
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                rescheduleDroppedTasks:
                    default: true
                    description: Reschedule tasks that failed with non-fatal errors
                    title: Reschedule tasks
                    type: boolean
                resource:
                    default: https://outlook.office365.com
                    description: Resource to pass in the OAuth request parameter.
                    title: Resource
                    type: string
                retryRules:
                    properties:
                        codes:
                            default:
                                - 429
                                - 500
                                - 503
                            description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
                            items:
                                minLength: 1
                                type: number
                            minItems: 1
                            title: Retry HTTP codes
                            type: array
                        enableHeader:
                            default: true
                            description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
                            title: Honor Retry-After header
                            type: boolean
                        interval:
                            default: 1000
                            description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
                            maximum: 20000
                            minimum: 0
                            title: Initial retry interval (ms)
                            type: number
                        limit:
                            default: 5
                            description: The maximum number of times to retry a failed HTTP request
                            maximum: 20
                            minimum: 0
                            title: Retry limit
                            type: number
                        multiplier:
                            default: 2
                            description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        retryConnectReset:
                            default: false
                            description: Retry request when a connection reset (ECONNRESET) error occurs
                            title: Retry connection reset
                            type: boolean
                        retryConnectTimeout:
                            default: false
                            description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
                            title: Retry connection timeout
                            type: boolean
                        type:
                            default: backoff
                            description: The algorithm to use when performing HTTP retries
                            enum:
                                - none
                                - backoff
                                - static
                            title: Retry type
                            type: string
                    required:
                        - type
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                startDate:
                    description: 'Backward offset for the search range''s head. (E.g.: -3h@h) Message Trace data is delayed; this parameter (with Date range end) compensates for delay and gaps.'
                    title: Date range start
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tenantId:
                    description: Directory ID (tenant identifier) in Azure Active Directory.
                    title: Tenant identifier
                    type: string
                textSecret:
                    description: Select or create a secret that references your client_secret to pass in the OAuth request parameter.
                    title: Client secret
                    type: string
                timeout:
                    default: 300
                    description: HTTP request inactivity timeout. Maximum is 2400 (40 minutes); enter 0 to wait indefinitely.
                    maximum: 2400
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - office365_msg_trace
                    type: string
                url:
                    default: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
                    description: URL to use when retrieving report data.
                    title: Report URL
                    type: string
                username:
                    description: Username to run Message Trace API call.
                    title: Username
                    type: string
            required:
                - url
                - interval
            type: object
        InputOffice365Service:
            properties:
                appId:
                    description: Office 365 Azure Application ID
                    title: App ID
                    type: string
                authType:
                    default: manual
                    description: Enter client secret directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                clientSecret:
                    description: Office 365 Azure client secret
                    title: Client secret
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                contentConfig:
                    default:
                        - contentType: Current Status
                          description: Poll interval minutes (1-60)
                          enabled: false
                          interval: 15
                          logLevel: info
                        - contentType: Messages
                          description: Poll interval minutes (1-60)
                          enabled: false
                          interval: 15
                          logLevel: info
                    description: 'Enable Office 365 Service Communication API content types and polling intervals. Polling intervals are used to set up search date range and cron schedule, e.g.: */${interval} * * * *. Because of this, intervals entered for current and historical status must be evenly divisible by 60 to give a predictable schedule.'
                    items:
                        properties:
                            contentType:
                                description: Office 365 Services API Content Type
                                title: Content Type
                                type: string
                            description:
                                description: If interval type is minutes the value entered must evenly divisible by 60 or save will fail
                                title: Interval Description
                                type: string
                            enabled:
                                title: Enabled
                                type: boolean
                            interval:
                                maximum: 60
                                minimum: 0
                                title: Interval
                                type: number
                            logLevel:
                                description: Collector runtime Log Level
                                enum:
                                    - error
                                    - warn
                                    - info
                                    - debug
                                title: Log Level
                                type: string
                        type: object
                    title: Content Types
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                jobTimeout:
                    default: "0"
                    description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
                    pattern: ^\d+[sm]?$
                    title: Job timeout
                    type: string
                keepAliveTime:
                    default: 30
                    description: How often workers should check in with the scheduler to keep job subscription alive
                    minimum: 10
                    title: Keep alive time (seconds)
                    type: number
                maxMissedKeepAlives:
                    default: 3
                    description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
                    minimum: 2
                    title: Worker timeout (periods)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                planType:
                    default: enterprise_gcc
                    description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
                    enum:
                        - enterprise_gcc
                        - gcc
                        - gcc_high
                        - dod
                    title: Subscription plan
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                retryRules:
                    properties:
                        codes:
                            default:
                                - 429
                                - 500
                                - 503
                            description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
                            items:
                                minLength: 1
                                type: number
                            minItems: 1
                            title: Retry HTTP codes
                            type: array
                        enableHeader:
                            default: true
                            description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
                            title: Honor Retry-After header
                            type: boolean
                        interval:
                            default: 1000
                            description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
                            maximum: 20000
                            minimum: 0
                            title: Initial retry interval (ms)
                            type: number
                        limit:
                            default: 5
                            description: The maximum number of times to retry a failed HTTP request
                            maximum: 20
                            minimum: 0
                            title: Retry limit
                            type: number
                        multiplier:
                            default: 2
                            description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        retryConnectReset:
                            default: false
                            description: Retry request when a connection reset (ECONNRESET) error occurs
                            title: Retry connection reset
                            type: boolean
                        retryConnectTimeout:
                            default: false
                            description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
                            title: Retry connection timeout
                            type: boolean
                        type:
                            default: backoff
                            description: The algorithm to use when performing HTTP retries
                            enum:
                                - none
                                - backoff
                                - static
                            title: Retry type
                            type: string
                    required:
                        - type
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tenantId:
                    description: Office 365 Azure Tenant ID
                    title: Tenant ID
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: Client secret (text secret)
                    type: string
                timeout:
                    default: 300
                    description: HTTP request inactivity timeout, use 0 to disable
                    maximum: 2400
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - office365_service
                    type: string
            required:
                - tenantId
                - appId
            type: object
        InputOpenTelemetry:
            properties:
                activityLogSampleRate: {}
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: none
                    description: OpenTelemetry authentication type
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                captureHeaders: {}
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Enable to expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader: {}
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extractLogs:
                    default: false
                    description: Enable to extract each incoming log record to a separate event
                    title: Extract logs
                    type: boolean
                extractMetrics:
                    default: false
                    description: Enable to extract each incoming Gauge or IntGauge metric to multiple events, one per data point
                    title: Extract metrics
                    type: boolean
                extractSpans:
                    default: false
                    description: Enable to extract each incoming span to a separate event
                    title: Extract spans
                    type: boolean
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist.
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 15
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 sec.; maximum 600 sec. (10 min.).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                maxActiveCxn:
                    default: 1000
                    description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
                    minimum: 0
                    title: Active connection limit
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                otlpVersion:
                    default: 0.10.0
                    description: The version of OTLP Protobuf definitions to use when interpreting received data
                    enum:
                        - 0.10.0
                        - 1.3.1
                    title: OTLP version
                    type: string
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    default: 4317
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                protocol:
                    default: grpc
                    description: Select whether to leverage gRPC or HTTP for OpenTelemetry
                    enum:
                        - grpc
                        - http
                    title: Protocol
                    type: string
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                type:
                    enum:
                        - open_telemetry
                    type: string
                username:
                    title: Username
                    type: string
            required:
                - host
                - port
            type: object
        InputPrometheus:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                authType:
                    default: manual
                    description: Enter credentials directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                dimensionList:
                    default:
                        - host
                        - source
                    description: Other dimensions to include in events
                    items:
                        title: dimension
                        type: string
                    minItems: 0
                    title: Extra Dimensions
                    type: array
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                discoveryType:
                    default: static
                    description: Target discovery mechanism. Use static to manually enter a list of targets.
                    enum:
                        - static
                        - dns
                        - ec2
                    title: Discovery Type
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access EC2
                    title: Enable for EC2
                    type: boolean
                endpoint:
                    description: EC2 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to EC2-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                interval:
                    default: 15
                    description: How often in minutes to scrape targets for metrics, 60 must be evenly divisible by the value or save will fail.
                    maximum: 60
                    minimum: 1
                    title: Poll Interval
                    type: number
                jobTimeout:
                    default: "0"
                    description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
                    pattern: ^\d+[sm]?$
                    title: Job timeout
                    type: string
                keepAliveTime:
                    default: 30
                    description: How often workers should check in with the scheduler to keep job subscription alive
                    minimum: 10
                    title: Keep alive time (seconds)
                    type: number
                logLevel:
                    default: info
                    description: Collector runtime Log Level
                    enum:
                        - error
                        - warn
                        - info
                        - debug
                    title: Log Level
                    type: string
                maxMissedKeepAlives:
                    default: 3
                    description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
                    minimum: 2
                    title: Worker timeout (periods)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                nameList:
                    default: []
                    description: List of DNS names to resolve
                    items:
                        title: DNS Names
                        type: string
                    minItems: 1
                    title: DNS Names
                    type: array
                password:
                    description: Password for Prometheus Basic authentication
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                recordType:
                    default: SRV
                    description: DNS Record type to resolve
                    enum:
                        - SRV
                        - A
                        - AAAA
                    title: Record Type
                    type: string
                region:
                    description: Region where the EC2 is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                scrapePath:
                    default: /metrics
                    description: Path to use when collecting metrics from discovered targets
                    pattern: ^/.*
                    title: Metrics Path
                    type: string
                scrapePort:
                    default: 9090
                    description: The port number in the metrics URL for discovered targets.
                    maximum: 65535
                    minimum: 1
                    title: Metrics Port
                    type: number
                scrapeProtocol:
                    default: http
                    description: Protocol to use when collecting metrics
                    enum:
                        - http
                        - https
                    title: Metrics Protocol
                    type: string
                searchFilter:
                    description: EC2 Instance Search Filter
                    items:
                        properties:
                            Name:
                                description: 'Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list'
                                title: Filter Name
                                type: string
                            Values:
                                default: []
                                description: Search Filter Values, if empty only "running" EC2 instances will be returned
                                items:
                                    minLength: 1
                                    type: string
                                minItems: 0
                                title: Filter Values
                                type: array
                        required:
                            - Name
                            - Values
                        type: object
                    title: Search Filter
                    type: array
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing EC2 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                targetList:
                    default: []
                    description: 'List of Prometheus targets to pull metrics from. Values can be in URL or host[:port] format. For example: http://localhost:9090/metrics, localhost:9090, or localhost. In cases where just host[:port] is specified, the endpoint will resolve to ''http://host[:port]/metrics''.'
                    items:
                        title: Targets
                        type: string
                    minItems: 1
                    title: Targets
                    type: array
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - prometheus
                    type: string
                usePublicIp:
                    default: true
                    description: Use public IP address for discovered targets. Set to false if the private IP address should be used.
                    title: Use Public IP
                    type: boolean
                username:
                    description: Username for Prometheus Basic authentication
                    title: Username
                    type: string
            required:
                - interval
                - logLevel
            type: object
        InputPrometheusRw:
            properties:
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: none
                    description: Remote Write authentication type
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                prometheusAPI:
                    default: /write
                    description: 'Absolute path on which to listen for Prometheus requests. Defaults to /write, which will expand as: http://<your‑upstream‑URL>:<your‑port>/write.'
                    pattern: ^/
                    title: Remote Write API endpoint
                    type: string
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                type:
                    enum:
                        - prometheus_rw
                    type: string
                username:
                    title: Username
                    type: string
            required:
                - host
                - port
                - prometheusAPI
            type: object
        InputRawUdp:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ingestRawBytes:
                    default: false
                    description: If true, a __rawBytes field will be added to each event containing the raw bytes of the datagram.
                    title: Ingest raw bytes
                    type: boolean
                ipWhitelistRegex:
                    default: /.*/
                    description: Regex matching IP addresses that are allowed to send data
                    title: IP allowlist regex
                    type: string
                maxBufferSize:
                    default: 1000
                    description: Maximum number of events to buffer when downstream is blocking.
                    minimum: 0
                    title: Buffer size limit (events)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                singleMsgUdpPackets:
                    default: false
                    description: If true, each UDP packet is assumed to contain a single message. If false, each UDP packet is assumed to contain multiple messages, separated by newlines.
                    title: Single msg per UDP
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - raw_udp
                    type: string
                udpSocketRxBufSize:
                    description: 'Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization.'
                    maximum: 4294967295
                    minimum: 256
                    title: UDP socket buffer size (bytes)
                    type: number
            required:
                - host
                - port
            type: object
        InputS3:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsAccountId:
                    description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
                    title: AWS account ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                checkpointing:
                    properties:
                        enabled:
                            default: false
                            description: Resume processing files after an interruption
                            title: Enable checkpointing
                            type: boolean
                        retries:
                            default: 5
                            description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
                            maximum: 100
                            minimum: 0
                            title: Retries
                            type: number
                    required:
                        - enabled
                    type: object
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: true
                    description: Use Assume Role credentials to access Amazon S3
                    title: Enable for Amazon S3
                    type: boolean
                enableSQSAssumeRole:
                    default: false
                    description: Use Assume Role credentials when accessing Amazon SQS
                    title: Enable for Amazon SQS
                    type: boolean
                encoding:
                    description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
                    title: Encoding
                    type: string
                endpoint:
                    description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileFilter:
                    default: /.*/
                    description: 'Regex matching file names to download and process. Defaults to: .*'
                    title: Filename filter
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxMessages:
                    default: 1
                    description: 'The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10.'
                    maximum: 10
                    minimum: 1
                    title: Message limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                numReceivers:
                    default: 1
                    description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
                    maximum: 100
                    minimum: 1
                    title: Number of receivers
                    type: number
                parquetChunkDownloadTimeout:
                    default: 600
                    description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
                    maximum: 3600
                    minimum: 1
                    title: Parquet chunk download timeout (seconds)
                    type: number
                parquetChunkSizeMB:
                    default: 5
                    description: Maximum file size for each Parquet chunk
                    maximum: 100
                    minimum: 1
                    title: Parquet chunk size limit (MB)
                    type: number
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pollTimeout:
                    default: 10
                    description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
                    maximum: 20
                    minimum: 1
                    title: Poll timeout (secs)
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                preprocess:
                    properties:
                        args:
                            description: Arguments to be added to the custom command
                            items:
                                type: string
                            title: Arguments
                            type: array
                        command:
                            description: Command to feed the data through (via stdin) and process its output (stdout)
                            title: Command
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                    required:
                        - disabled
                    type: object
                processedTagKey:
                    description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
                    title: Tag key
                    type: string
                processedTagValue:
                    description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
                    title: Tag value
                    type: string
                queueName:
                    description: 'The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: ''{url}/myQueueName''. Example: ''https://host:port/myQueueName''. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`.'
                    title: Queue
                    type: string
                region:
                    description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing S3 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                skipOnError:
                    default: false
                    description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
                    title: Skip file on error
                    type: boolean
                socketTimeout:
                    default: 300
                    description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
                    maximum: 43200
                    minimum: 1
                    title: Socket timeout
                    type: number
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tagAfterProcessing:
                    default: false
                    description: Add a tag to processed S3 objects. Requires s3:GetObjectTagging and s3:PutObjectTagging AWS permissions.
                    title: Tag after processing
                    type: boolean
                type:
                    enum:
                        - s3
                    type: string
                visibilityTimeout:
                    default: 600
                    description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
                    maximum: 43200
                    minimum: 0
                    title: Visibility timeout seconds
                    type: number
            required:
                - queueName
                - type
            type: object
        InputS3Inventory:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsAccountId:
                    description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
                    title: AWS account ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                checkpointing:
                    properties:
                        enabled:
                            default: false
                            description: Resume processing files after an interruption
                            title: Enable checkpointing
                            type: boolean
                        retries:
                            default: 5
                            description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
                            maximum: 100
                            minimum: 0
                            title: Retries
                            type: number
                    required:
                        - enabled
                    type: object
                checksumSuffix:
                    default: checksum
                    description: Filename suffix of the manifest checksum file. If a filename matching this suffix is received        in the queue, the matching manifest file will be downloaded and validated against its value. Defaults to "checksum"
                    title: Checksum Suffix
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: true
                    description: Use Assume Role credentials to access Amazon S3
                    title: Enable for Amazon S3
                    type: boolean
                enableSQSAssumeRole:
                    default: false
                    description: Use Assume Role credentials when accessing Amazon SQS
                    title: Enable for Amazon SQS
                    type: boolean
                endpoint:
                    description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileFilter:
                    default: /.*/
                    description: 'Regex matching file names to download and process. Defaults to: .*'
                    title: Filename filter
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxManifestSizeKB:
                    default: 4096
                    description: Maximum download size (KB) of each manifest or checksum file. Manifest files larger than this size will not be read.        Defaults to 4096.
                    minimum: 1
                    title: Manifest size limit (KB)
                    type: integer
                maxMessages:
                    default: 1
                    description: 'The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10.'
                    maximum: 10
                    minimum: 1
                    title: Message limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                numReceivers:
                    default: 1
                    description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
                    maximum: 100
                    minimum: 1
                    title: Number of receivers
                    type: number
                parquetChunkDownloadTimeout:
                    default: 600
                    description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
                    maximum: 3600
                    minimum: 1
                    title: Parquet chunk download timeout (seconds)
                    type: number
                parquetChunkSizeMB:
                    default: 5
                    description: Maximum file size for each Parquet chunk
                    maximum: 100
                    minimum: 1
                    title: Parquet chunk size limit (MB)
                    type: number
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pollTimeout:
                    default: 10
                    description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
                    maximum: 20
                    minimum: 1
                    title: Poll timeout (secs)
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                preprocess:
                    properties:
                        args:
                            description: Arguments to be added to the custom command
                            items:
                                type: string
                            title: Arguments
                            type: array
                        command:
                            description: Command to feed the data through (via stdin) and process its output (stdout)
                            title: Command
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                    required:
                        - disabled
                    type: object
                processedTagKey:
                    description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
                    title: Tag key
                    type: string
                processedTagValue:
                    description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
                    title: Tag value
                    type: string
                queueName:
                    description: 'The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: ''{url}/myQueueName''. Example: ''https://host:port/myQueueName''. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`.'
                    title: Queue
                    type: string
                region:
                    description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing S3 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                skipOnError:
                    default: false
                    description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
                    title: Skip file on error
                    type: boolean
                socketTimeout:
                    default: 300
                    description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
                    maximum: 43200
                    minimum: 1
                    title: Socket timeout
                    type: number
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tagAfterProcessing:
                    enum:
                        - false
                        - true
                type:
                    enum:
                        - s3_inventory
                    type: string
                validateInventoryFiles:
                    default: false
                    description: If set to Yes, each inventory file in the manifest will be validated against its checksum. Defaults to false
                    title: Validate inventory files
                    type: boolean
                visibilityTimeout:
                    default: 600
                    description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
                    maximum: 43200
                    minimum: 0
                    title: Visibility timeout seconds
                    type: number
            required:
                - queueName
                - type
            type: object
        InputSecurityLake:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsAccountId:
                    description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
                    title: AWS account ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                checkpointing:
                    properties:
                        enabled:
                            default: false
                            description: Resume processing files after an interruption
                            title: Enable checkpointing
                            type: boolean
                        retries:
                            default: 5
                            description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
                            maximum: 100
                            minimum: 0
                            title: Retries
                            type: number
                    required:
                        - enabled
                    type: object
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: true
                    description: Use Assume Role credentials to access Amazon S3
                    title: Enable for Amazon S3
                    type: boolean
                enableSQSAssumeRole:
                    default: false
                    description: Use Assume Role credentials when accessing Amazon SQS
                    title: Enable for Amazon SQS
                    type: boolean
                encoding:
                    description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
                    title: Encoding
                    type: string
                endpoint:
                    description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileFilter:
                    default: /.*/
                    description: 'Regex matching file names to download and process. Defaults to: .*'
                    title: Filename filter
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxMessages:
                    default: 1
                    description: 'The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10.'
                    maximum: 10
                    minimum: 1
                    title: Message limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                numReceivers:
                    default: 1
                    description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
                    maximum: 100
                    minimum: 1
                    title: Number of receivers
                    type: number
                parquetChunkDownloadTimeout:
                    default: 600
                    description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
                    maximum: 3600
                    minimum: 1
                    title: Parquet chunk download timeout (seconds)
                    type: number
                parquetChunkSizeMB:
                    default: 5
                    description: Maximum file size for each Parquet chunk
                    maximum: 100
                    minimum: 1
                    title: Parquet chunk size limit (MB)
                    type: number
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pollTimeout:
                    default: 10
                    description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
                    maximum: 20
                    minimum: 1
                    title: Poll timeout (secs)
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                preprocess:
                    properties:
                        args:
                            description: Arguments to be added to the custom command
                            items:
                                type: string
                            title: Arguments
                            type: array
                        command:
                            description: Command to feed the data through (via stdin) and process its output (stdout)
                            title: Command
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                    required:
                        - disabled
                    type: object
                processedTagKey:
                    description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
                    title: Tag key
                    type: string
                processedTagValue:
                    description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
                    title: Tag value
                    type: string
                queueName:
                    description: 'The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: ''{url}/myQueueName''. Example: ''https://host:port/myQueueName''. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`.'
                    title: Queue
                    type: string
                region:
                    description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing S3 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                skipOnError:
                    default: false
                    description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
                    title: Skip file on error
                    type: boolean
                socketTimeout:
                    default: 300
                    description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
                    maximum: 43200
                    minimum: 1
                    title: Socket timeout
                    type: number
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tagAfterProcessing:
                    enum:
                        - false
                        - true
                type:
                    enum:
                        - security_lake
                    type: string
                visibilityTimeout:
                    default: 600
                    description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
                    maximum: 43200
                    minimum: 0
                    title: Visibility timeout seconds
                    type: number
            required:
                - queueName
                - type
            type: object
        InputSnmp:
            properties:
                bestEffortParsing:
                    default: false
                    description: If enabled, the parser will attempt to parse varbind octet strings as UTF-8, first, otherwise will fallback to other methods
                    title: Best effort parsing
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipWhitelistRegex:
                    default: /.*/
                    description: Regex matching IP addresses that are allowed to send data
                    title: IP allowlist regex
                    type: string
                maxBufferSize:
                    default: 1000
                    description: Maximum number of events to buffer when downstream is blocking.
                    minimum: 0
                    title: Buffer size limit (events)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    default: 162
                    description: UDP port to receive SNMP traps on. Defaults to 162.
                    maximum: 65535
                    title: UDP port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                snmpV3Auth:
                    description: Authentication parameters for SNMPv3 trap. Set the log level to debug if you are experiencing authentication or decryption issues.
                    properties:
                        allowUnmatchedTrap:
                            default: false
                            description: Pass through traps that don't match any of the configured users. @{product} will not attempt to decrypt these traps.
                            title: Allow unmatched traps
                            type: boolean
                        v3AuthEnabled:
                            default: false
                            title: Enabled
                            type: boolean
                        v3Users:
                            description: User credentials for receiving v3 traps
                            items:
                                properties:
                                    authKey: {}
                                    authProtocol:
                                        default: none
                                        enum:
                                            - none
                                            - md5
                                            - sha
                                            - sha224
                                            - sha256
                                            - sha384
                                            - sha512
                                        title: Authentication protocol
                                        type: string
                                    name:
                                        minLength: 1
                                        title: V3 name
                                        type: string
                                    privProtocol:
                                        default: none
                                required:
                                    - name
                                type: object
                            minItems: 1
                            title: SNMP v3 users
                            type: array
                    required:
                        - v3AuthEnabled
                    title: SNMPv3 authentication
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - snmp
                    type: string
                udpSocketRxBufSize:
                    description: 'Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization.'
                    maximum: 4294967295
                    minimum: 256
                    title: UDP socket buffer size (bytes)
                    type: number
                varbindsWithTypes:
                    default: false
                    description: If enabled, parses varbinds as an array of objects that include OID, value, and type
                    title: Include varbind types
                    type: boolean
            required:
                - host
                - port
            type: object
        InputSplunk:
            properties:
                authTokens:
                    description: Shared secrets to be provided by any Splunk forwarder. If empty, unauthorized access is permitted.
                    items:
                        properties:
                            description:
                                title: Description
                                type: string
                            token:
                                description: Shared secrets to be provided by any Splunk forwarder. If empty, unauthorized access is permitted.
                                title: Token
                                type: string
                        required:
                            - token
                        type: object
                    title: Auth tokens
                    type: array
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                compress:
                    default: disabled
                    description: Controls whether to support reading compressed data from a forwarder. Select 'Automatic' to match the forwarder's configuration, or 'Disabled' to reject compressed connections.
                    enum:
                        - disabled
                        - auto
                        - always
                    title: Compression
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                dropControlFields:
                    default: true
                    description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If disabled, control fields are stored in the internal field `__ctrlFields`.
                    title: Drop control fields
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
                    title: Enable proxy protocol
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extractMetrics:
                    default: false
                    description: Extract and process Splunk-generated metrics as Cribl metrics
                    title: Extract metrics
                    type: boolean
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipWhitelistRegex:
                    default: /.*/
                    description: Regex matching IP addresses that are allowed to establish a connection
                    title: IP allowlist regex
                    type: string
                maxActiveCxn:
                    default: 1000
                    description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
                    minimum: 0
                    title: Active connection limit
                    type: number
                maxS2Sversion:
                    default: v3
                    description: The highest S2S protocol version to advertise during handshake
                    enum:
                        - v3
                        - v4
                    title: Max S2S version
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketEndingMaxWait:
                    default: 30
                    description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Forced socket termination timeout (seconds)
                    type: number
                socketIdleTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Socket idle timeout (seconds)
                    type: number
                socketMaxLifespan:
                    default: 0
                    description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
                    minimum: 0
                    title: Socket max lifespan (seconds)
                    type: number
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - splunk
                    type: string
                useFwdTimezone:
                    default: true
                    description: Event Breakers will determine events' time zone from UF-provided metadata, when TZ can't be inferred from the raw event
                    title: Use Universal Forwarder time zone
                    type: boolean
            required:
                - host
                - port
            type: object
        InputSplunkHec:
            properties:
                accessControlAllowHeaders:
                    description: Optionally, list HTTP headers that @{product} will send to allowed origins as "Access-Control-Allow-Headers" in a CORS preflight response. Use "*" to allow all headers.
                    items:
                        minLength: 1
                        type: string
                    minItems: 0
                    title: CORS allowed headers
                    type: array
                accessControlAllowOrigin:
                    description: Optionally, list HTTP origins to which @{product} should send CORS (cross-origin resource sharing) Access-Control-Allow-* headers. Supports wildcards.
                    items:
                        minLength: 1
                        type: string
                    minItems: 0
                    title: CORS allowed origins
                    type: array
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                allowedIndexes:
                    description: List values allowed in HEC event index field. Leave blank to skip validation. Supports wildcards. The values here can expand index validation at the token level.
                    items:
                        minLength: 1
                        type: string
                    minItems: 0
                    title: Allowed indexes
                    type: array
                authTokens:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        properties:
                            allowedIndexesAtToken:
                                description: Enter the values you want to allow in the HEC event index field at the token level. Supports wildcards. To skip validation, leave blank.
                                items:
                                    minLength: 1
                                    type: string
                                minItems: 0
                                title: Allowed indexes
                                type: array
                            authType:
                                default: manual
                                description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                                enum:
                                    - manual
                                    - secret
                                title: Authentication method
                                type: string
                            description:
                                description: Optional token description
                                title: Description
                                type: string
                            enabled:
                                default: true
                                title: Enable token
                                type: boolean
                            metadata:
                                description: Fields to add to events referencing this token
                                items:
                                    properties:
                                        name:
                                            title: Field Name
                                            type: string
                                        value:
                                            description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                            title: Value
                                            type: string
                                    required:
                                        - name
                                        - value
                                    type: object
                                title: Fields
                                type: array
                            token: {}
                            tokenSecret: {}
                        required:
                            - token
                        type: object
                    title: Auth tokens
                    type: array
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                dropControlFields:
                    default: true
                    description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If disabled, control fields are stored in the internal field `__ctrlFields`.
                    title: Drop control fields (S2S only)
                    type: boolean
                emitTokenMetrics:
                    default: false
                    description: Emit per-token (<prefix>.http.perToken) and summary (<prefix>.http.summary) request metrics
                    title: Emit per-token request metrics
                    type: boolean
                enableHealthCheck: {}
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extractMetrics:
                    default: false
                    description: Extract and process Splunk-generated metrics as Cribl metrics
                    title: Extract metrics (S2S only)
                    type: boolean
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to every event. Overrides fields added at the token or request level. See [the Source documentation](https://docs.cribl.io/stream/sources-splunk-hec/#fields) for more info.
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                splunkHecAPI:
                    default: /services/collector
                    description: Absolute path on which to listen for the Splunk HTTP Event Collector API requests. This input supports the /event, /raw and /s2s endpoints.
                    pattern: ^/
                    title: Splunk HEC endpoint
                    type: string
                splunkHecAcks:
                    default: false
                    description: Enable Splunk HEC acknowledgements
                    title: Splunk HEC acks
                    type: boolean
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - splunk_hec
                    type: string
                useFwdTimezone:
                    default: true
                    description: Event Breakers will determine events' time zone from UF-provided metadata, when TZ can't be inferred from the raw event
                    title: Use Universal Forwarder time zone (S2S only)
                    type: boolean
            required:
                - host
                - port
                - splunkHecAPI
            type: object
        InputSplunkSearch:
            properties:
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: basic
                    description: Splunk Search authentication type
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                breakerRulesets:
                    default:
                        - Splunk Search Ruleset
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                cronSchedule:
                    default: '*/15 * * * *'
                    description: A cron schedule on which to run this job
                    title: Cron schedule
                    type: string
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                earliest:
                    default: -16m@m
                    description: 'The earliest time boundary for the search. Can be an exact or relative time. Examples: ''2022-01-14T12:00:00Z'' or ''-16m@m'''
                    title: Earliest
                    type: string
                encoding:
                    description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
                    title: Encoding
                    type: string
                endpoint:
                    default: /services/search/v2/jobs/export
                    description: REST API used to create a search
                    title: Search endpoint
                    type: string
                endpointHeaders:
                    description: Optional request headers to send to the endpoint
                    items:
                        properties:
                            name:
                                title: Header Name
                                type: string
                            value:
                                description: JavaScript expression to compute the header's value, normally enclosed in backticks (e.g., `${earliest}`). If a constant, use single quotes (e.g., 'earliest'). Values without delimiters (e.g., earliest) are evaluated as strings.
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Endpoint headers
                    type: array
                endpointParams:
                    description: Optional request parameters to send to the endpoint
                    items:
                        properties:
                            name:
                                title: Parameter Name
                                type: string
                            value:
                                description: JavaScript expression to compute the parameter's value, normally enclosed in backticks (e.g., `${earliest}`). If a constant, use single quotes (e.g., 'earliest'). Values without delimiters (e.g., earliest) are evaluated as strings.
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Endpoint parameters
                    type: array
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                jobTimeout:
                    default: "0"
                    description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
                    pattern: ^\d+[sm]?$
                    title: Job timeout
                    type: string
                keepAliveTime:
                    default: 30
                    description: How often workers should check in with the scheduler to keep job subscription alive
                    minimum: 10
                    title: Keep alive time (seconds)
                    type: number
                latest:
                    default: -1m@m
                    description: 'The latest time boundary for the search. Can be an exact or relative time. Examples: ''2022-01-14T12:00:00Z'' or ''-1m@m'''
                    title: Latest
                    type: string
                logLevel:
                    description: Collector runtime log level (verbosity)
                    enum:
                        - error
                        - warn
                        - info
                        - debug
                    title: Log level
                    type: string
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                maxMissedKeepAlives:
                    default: 3
                    description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
                    minimum: 2
                    title: Worker timeout (periods)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                outputMode:
                    default: json
                    description: Format of the returned output
                    enum:
                        - csv
                        - json
                    title: Output mode
                    type: string
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                rejectUnauthorized:
                    default: false
                    description: Reject certificates that cannot be verified against a valid CA (such as self-signed certificates)
                    title: Reject unauthorized certificates
                    type: boolean
                requestTimeout:
                    default: 0
                    description: HTTP request inactivity timeout. Use 0 for no timeout.
                    maximum: 2400
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                retryRules:
                    properties:
                        codes:
                            default:
                                - 429
                                - 503
                            description: List of HTTP codes that trigger a retry. Leave empty to use the default list of 429 and 503.
                            items:
                                minLength: 1
                                type: number
                            minItems: 1
                            title: Retry HTTP codes
                            type: array
                        enableHeader:
                            default: true
                            description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
                            title: Honor Retry-After header
                            type: boolean
                        interval:
                            default: 1000
                            description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
                            maximum: 20000
                            minimum: 0
                            title: Initial retry interval (ms)
                            type: number
                        limit:
                            default: 5
                            description: The maximum number of times to retry a failed HTTP request
                            maximum: 20
                            minimum: 0
                            title: Retry limit
                            type: number
                        multiplier:
                            default: 2
                            description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        retryConnectReset:
                            default: false
                            description: Retry request when a connection reset (ECONNRESET) error occurs
                            title: Retry connection reset
                            type: boolean
                        retryConnectTimeout:
                            default: false
                            description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
                            title: Retry connection timeout
                            type: boolean
                        type:
                            default: backoff
                            description: The algorithm to use when performing HTTP retries
                            enum:
                                - none
                                - backoff
                                - static
                            title: Retry type
                            type: string
                    required:
                        - type
                    type: object
                search:
                    description: 'Enter Splunk search here. Examples: ''index=myAppLogs level=error channel=myApp'' OR ''| mstats avg(myStat) as myStat WHERE index=myStatsIndex.'''
                    title: Search
                    type: string
                searchHead:
                    default: https://localhost:8089
                    description: Search head base URL. Can be an expression. Default is https://localhost:8089.
                    title: Search head
                    type: string
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - splunk_search
                    type: string
                useRoundRobinDns:
                    default: false
                    description: When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned
                    title: Round-robin DNS
                    type: boolean
                username:
                    title: Username
                    type: string
            required:
                - searchHead
                - search
                - cronSchedule
                - endpoint
                - outputMode
            type: object
        InputSqs:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsAccountId:
                    description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
                    title: AWS account ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                createQueue:
                    default: false
                    description: Create queue if it does not exist
                    title: Create queue
                    type: boolean
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access SQS
                    title: Enable for SQS
                    type: boolean
                endpoint:
                    description: SQS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SQS-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                maxMessages:
                    default: 10
                    description: 'The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10.'
                    maximum: 10
                    minimum: 1
                    title: Message limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                numReceivers:
                    default: 3
                    description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
                    maximum: 100
                    minimum: 1
                    title: Number of receivers
                    type: number
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pollTimeout:
                    default: 10
                    description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
                    maximum: 20
                    minimum: 1
                    title: Poll timeout (secs)
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                queueName:
                    description: 'The name, URL, or ARN of the SQS queue to read events from. When a non-AWS URL is specified, format must be: ''{url}/myQueueName''. Example: ''https://host:port/myQueueName''. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can only be evaluated at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`.'
                    title: Queue
                    type: string
                queueType:
                    default: standard
                    description: The queue type used (or created)
                    enum:
                        - standard
                        - fifo
                    title: Queue type
                    type: string
                region:
                    description: AWS Region where the SQS queue is located. Required, unless the Queue entry is a URL or ARN that includes a Region.
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing SQS requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - sqs
                    type: string
                visibilityTimeout:
                    default: 600
                    description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
                    maximum: 43200
                    minimum: 0
                    title: Visibility Timeout Seconds
                    type: number
            required:
                - queueName
                - queueType
            type: object
        InputStatus:
            properties:
                id:
                    type: string
                status:
                    properties:
                        health:
                            enum:
                                - Green
                                - Yellow
                                - Red
                            type: string
                        metrics:
                            additionalProperties: true
                            type: object
                        timestamp:
                            type: number
                        useStatusFromLB:
                            type: boolean
                    required:
                        - health
                        - metrics
                        - timestamp
                    type: object
            required:
                - id
                - status
            type: object
        InputSyslog:
            anyOf:
                - required:
                    - host
                    - udpPort
                - required:
                    - host
                    - tcpPort
            properties:
                allowNonStandardAppName:
                    default: false
                    description: Enable if RFC 3164-formatted messages have hyphens in the app name portion of the TAG section. If disabled, only alphanumeric characters and underscores are allowed. Ignored for RFC 5424-formatted messages.
                    title: Allow non-standard app name
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableEnhancedProxyHeaderParsing:
                    description: When enabled, parses PROXY protocol headers during the TLS handshake. Disable if compatibility issues arise.
                    title: Enable enhanced TLS handshake for proxy protocol
                    type: boolean
                enableLoadBalancing:
                    default: false
                    description: Load balance traffic across all Worker Processes
                    title: Enable TCP load balancing
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Enable if the connection is proxied by a device that supports Proxy Protocol V1 or V2
                    title: Enable proxy protocol
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                inferFraming:
                    default: true
                    description: Enable if we should infer the syslog framing of the incoming messages.
                    title: Infer Syslog framing
                    type: boolean
                ipWhitelistRegex:
                    default: /.*/
                    description: Regex matching IP addresses that are allowed to send data
                    title: IP allowlist regex
                    type: string
                keepFieldsList:
                    default: []
                    description: Wildcard list of fields to keep from source data; * = ALL (default)
                    items:
                        type: string
                    minItems: 0
                    title: Fields to keep
                    type: array
                maxActiveCxn:
                    default: 1000
                    description: Maximum number of active connections allowed per Worker Process for TCP connections. Use 0 for unlimited.
                    minimum: 0
                    title: Active connection limit
                    type: number
                maxBufferSize:
                    default: 1000
                    description: Maximum number of events to buffer when downstream is blocking. Only applies to UDP.
                    minimum: 0
                    title: Buffer size limit (events)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                octetCounting:
                    default: false
                    description: Enable if incoming messages use octet counting per RFC 6587.
                    title: Octet count framing
                    type: boolean
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                singleMsgUdpPackets:
                    default: false
                    description: Treat UDP packet data received as full syslog message
                    title: Single msg per UDP
                    type: boolean
                socketEndingMaxWait:
                    default: 30
                    description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: TCP forced socket termination timeout (seconds)
                    type: number
                socketIdleTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: TCP socket idle timeout (seconds)
                    type: number
                socketMaxLifespan:
                    default: 0
                    description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
                    minimum: 0
                    title: TCP Socket max lifespan (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                strictlyInferOctetCounting:
                    default: true
                    description: Enable if we should infer octet counting only if the messages comply with RFC 5424.
                    title: Strictly infer octet count framing
                    type: boolean
                tcpPort:
                    description: Enter TCP port number to listen on. Not required if listening on UDP.
                    maximum: 65535
                    title: TCP port
                    type: number
                timestampTimezone:
                    default: local
                    description: Timezone to assign to timestamps without timezone info
                    title: Default timezone
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - syslog
                    type: string
                udpPort:
                    description: Enter UDP port number to listen on. Not required if listening on TCP.
                    maximum: 65535
                    title: UDP port
                    type: number
                udpSocketRxBufSize:
                    description: 'Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization.'
                    maximum: 4294967295
                    minimum: 256
                    title: UDP socket buffer size (bytes)
                    type: number
            required:
                - host
                - type
            type: object
        InputSystemMetrics:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                container:
                    properties:
                        allContainers:
                            default: false
                            description: Include stopped and paused containers
                            title: All containers
                            type: boolean
                        detail:
                            default: false
                            description: Generate full container metrics
                            title: Detailed metrics
                            type: boolean
                        dockerSocket:
                            default:
                                - /var/run/docker.sock
                                - /run/docker.sock
                            description: Full paths for Docker's UNIX-domain socket
                            items:
                                type: string
                            title: Docker socket
                            type: array
                        dockerTimeout:
                            default: 5
                            description: Timeout, in seconds, for the Docker API
                            minimum: 1
                            title: Docker timeout
                            type: number
                        filters:
                            description: Containers matching any of these will be included. All are included if no filters are added.
                            items:
                                properties:
                                    expr:
                                        title: Expression
                                        type: string
                                required:
                                    - expr
                                type: object
                            title: Container filters
                            type: array
                        mode:
                            default: basic
                            description: Select the level of detail for container metrics
                            enum:
                                - basic
                                - all
                                - custom
                                - disabled
                            type: string
                        perDevice:
                            default: false
                            description: Generate separate metrics for each device
                            title: Per-device metrics
                            type: boolean
                    type: object
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    properties:
                        custom:
                            properties:
                                cpu:
                                    properties:
                                        detail:
                                            default: false
                                            description: Generate metrics for all CPU states
                                            title: Detailed metrics
                                            type: boolean
                                        mode:
                                            default: basic
                                            description: Select the level of detail for CPU metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                        perCpu:
                                            default: false
                                            description: Generate metrics for each CPU
                                            title: Per-CPU metrics
                                            type: boolean
                                        time:
                                            default: false
                                            description: Generate raw, monotonic CPU time counters
                                            title: CPU time metrics
                                            type: boolean
                                    type: object
                                disk:
                                    properties:
                                        detail:
                                            default: false
                                            description: Generate full disk metrics
                                            title: Detailed metrics
                                            type: boolean
                                        devices:
                                            default:
                                                - '!loop*'
                                                - '*'
                                            description: 'Block devices to include/exclude. Examples: sda*, !loop*. Wildcards and ! (not) operators are supported. All devices are included if this list is empty.'
                                            items:
                                                type: string
                                            title: Device filter
                                            type: array
                                        fstypes:
                                            default: []
                                            description: 'Filesystem types to include/exclude. Examples: ext4, !*tmpfs, !squashfs. Wildcards and ! (not) operators are supported. All types are included if this list is empty.'
                                            items:
                                                type: string
                                            title: Filesystem type filter
                                            type: array
                                        mode:
                                            default: basic
                                            description: Select the level of detail for disk metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                        mountpoints:
                                            default: []
                                            description: 'Filesystem mountpoints to include/exclude. Examples: /, /home, !/proc*, !/tmp. Wildcards and ! (not) operators are supported. All mountpoints are included if this list is empty.'
                                            items:
                                                type: string
                                            title: Mountpoint filter
                                            type: array
                                        perDevice:
                                            default: false
                                            description: Generate separate metrics for each device
                                            title: Per-device metrics
                                            type: boolean
                                    type: object
                                memory:
                                    properties:
                                        detail:
                                            default: false
                                            description: Generate metrics for all memory states
                                            title: Detailed metrics
                                            type: boolean
                                        mode:
                                            default: basic
                                            description: Select the level of detail for memory metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                    type: object
                                network:
                                    properties:
                                        detail:
                                            default: false
                                            description: Generate full network metrics
                                            title: Detailed metrics
                                            type: boolean
                                        devices:
                                            default:
                                                - '!lo'
                                                - '*'
                                            description: 'Network interfaces to include/exclude. Examples: eth0, !lo. All interfaces are included if this list is empty.'
                                            items:
                                                type: string
                                            title: Interface filter
                                            type: array
                                        mode:
                                            default: basic
                                            description: Select the level of detail for network metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                        perInterface:
                                            default: false
                                            description: Generate separate metrics for each interface
                                            title: Per-interface metrics
                                            type: boolean
                                    type: object
                                system:
                                    properties:
                                        mode:
                                            default: basic
                                            description: Select the level of detail for system metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                        processes:
                                            default: false
                                            description: Generate metrics for the numbers of processes in various states
                                            title: Process metrics
                                            type: boolean
                                    type: object
                            type: object
                        mode:
                            default: basic
                            description: Select level of detail for host metrics
                            enum:
                                - basic
                                - all
                                - custom
                                - disabled
                            type: string
                    type: object
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 10
                    description: Time, in seconds, between consecutive metric collections. Default is 10 seconds.
                    minimum: 1
                    title: Polling interval
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                persistence:
                    properties:
                        compress:
                            default: gzip
                            enum:
                                - none
                                - gzip
                            title: Data compression format
                            type: string
                        destPath:
                            default: $CRIBL_HOME/state/system_metrics
                            description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/system_metrics
                            title: Path location
                            type: string
                        enable:
                            default: false
                            description: Spool metrics to disk for Cribl Edge and Search
                            title: Enable disk spooling
                            type: boolean
                        maxDataSize:
                            default: 1GB
                            description: 'Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted.'
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Data size limit
                            type: string
                        maxDataTime:
                            default: 24h
                            description: 'Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted.'
                            pattern: \d+[smhd]$
                            title: Data age limit
                            type: string
                        timeWindow:
                            default: 10m
                            description: Time span for each file bucket
                            title: Bucket time span
                            type: string
                    title: persistence
                    type: object
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                process:
                    properties:
                        sets:
                            description: Configure sets to collect process metrics
                            items:
                                properties:
                                    filter:
                                        title: Filter Expression
                                        type: string
                                    includeChildren:
                                        default: false
                                        title: Include Child Processes
                                        type: boolean
                                    name:
                                        title: Set Name
                                        type: string
                                required:
                                    - name
                                    - filter
                                type: object
                            title: Process sets
                            type: array
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - system_metrics
                    type: string
            required:
                - id
                - type
            type: object
        InputSystemState:
            properties:
                collectors:
                    properties:
                        disk:
                            description: Creates events for physical disks, partitions, and file systems
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Disks & File Systems
                            type: object
                        dns:
                            description: Creates events for DNS resolvers and search entries
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: DNS
                            type: object
                        firewall:
                            description: Creates events for Firewall rules entries
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Firewall
                            type: object
                        hostsfile:
                            description: Creates events based on entries collected from the hosts file
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Hosts File
                            type: object
                        interfaces:
                            description: Creates events for each of the host’s network interfaces
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Interfaces
                            type: object
                        loginUsers:
                            description: Creates events from list of logged-in users
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Logged-In Users
                            type: object
                        metadata:
                            description: Creates events based on the host system’s current state
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Host Info
                            type: object
                        ports:
                            description: Creates events from list of listening ports
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Listening Ports
                            type: object
                        routes:
                            description: Creates events based on entries collected from the host’s network routes
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Routes
                            type: object
                        services:
                            description: Creates events from the list of services
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Services
                            type: object
                        user:
                            description: Creates events for local users and groups
                            properties:
                                enable:
                                    default: true
                                    title: Enabled
                                    type: boolean
                            title: Users & Groups
                            type: object
                    type: object
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disableNativeModule:
                    default: false
                    description: Enable to use built-in tools (PowerShell) to collect events instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-system-state/#advanced-tab)
                    title: Use Windows Tools
                    type: boolean
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 300
                    description: Time, in seconds, between consecutive state collections. Default is 300 seconds (5 minutes).
                    minimum: 1
                    title: Polling interval
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                persistence:
                    properties:
                        compress:
                            default: none
                            enum:
                                - none
                                - gzip
                            title: Data compression format
                            type: string
                        destPath:
                            default: $CRIBL_HOME/state/system_state
                            description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/system_state
                            title: Path location
                            type: string
                        enable:
                            default: false
                            description: Spool metrics to disk for Cribl Edge and Search
                            title: Enable disk spooling
                            type: boolean
                        maxDataSize:
                            default: 1GB
                            description: 'Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted.'
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Data size limit
                            type: string
                        maxDataTime:
                            default: 24h
                            description: 'Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted.'
                            pattern: \d+[smhd]$
                            title: Data age limit
                            type: string
                        timeWindow:
                            default: 10m
                            description: Time span for each file bucket
                            title: Bucket time span
                            type: string
                    type: object
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - system_state
                    type: string
            required:
                - id
                - type
            type: object
        InputTcp:
            properties:
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                breakerRulesets:
                    description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                    items:
                        type: string
                    title: Event Breaker rulesets
                    type: array
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHeader:
                    default: false
                    description: 'Client will pass the header record with every new connection. The header can contain an authToken, and an object with a list of fields and values to add to every event. These fields can be used to simplify Event Breaker selection, routing, etc. Header has this format, and must be followed by a newline: { "authToken" : "myToken", "fields": { "field1": "value1", "field2": "value2" } }'
                    title: Enable header
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
                    title: Enable proxy protocol
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipWhitelistRegex:
                    default: /.*/
                    description: Regex matching IP addresses that are allowed to establish a connection
                    title: IP allowlist regex
                    type: string
                maxActiveCxn:
                    default: 1000
                    description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
                    minimum: 0
                    title: Active connection limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                preprocess:
                    properties:
                        args:
                            description: Arguments to be added to the custom command
                            items:
                                type: string
                            title: Arguments
                            type: array
                        command:
                            description: Command to feed the data through (via stdin) and process its output (stdout)
                            title: Command
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                    required:
                        - disabled
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketEndingMaxWait:
                    default: 30
                    description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Forced socket termination timeout (seconds)
                    type: number
                socketIdleTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Socket idle timeout (seconds)
                    type: number
                socketMaxLifespan:
                    default: 0
                    description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
                    minimum: 0
                    title: Socket max lifespan (seconds)
                    type: number
                staleChannelFlushMs:
                    default: 10000
                    description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                    maximum: 43200000
                    minimum: 10
                    title: Event Breaker buffer timeout (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - tcp
                    type: string
            required:
                - host
                - port
            type: object
        InputTcpjson:
            properties:
                authToken:
                    default: ""
                    description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
                    title: Auth token
                    type: string
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableLoadBalancing:
                    default: false
                    description: Load balance traffic across all Worker Processes
                    title: Enable load balancing
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
                    title: Enable proxy protocol
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipWhitelistRegex:
                    default: /.*/
                    description: Regex matching IP addresses that are allowed to establish a connection
                    title: IP allowlist regex
                    type: string
                maxActiveCxn:
                    default: 1000
                    description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
                    minimum: 0
                    title: Active connection limit
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketEndingMaxWait:
                    default: 30
                    description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Forced socket termination timeout (seconds)
                    type: number
                socketIdleTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
                    minimum: 0
                    title: Socket idle timeout (seconds)
                    type: number
                socketMaxLifespan:
                    default: 0
                    description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
                    minimum: 0
                    title: Socket max lifespan (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - tcpjson
                    type: string
            required:
                - host
                - port
            type: object
        InputWef:
            properties:
                allowMachineIdMismatch:
                    default: false
                    description: Allow events to be ingested even if their MachineID does not match the client certificate CN
                    title: Allow MachineID mismatch
                    type: boolean
                authMethod:
                    default: clientCert
                    description: How to authenticate incoming client connections
                    enum:
                        - clientCert
                        - kerberos
                    title: Authentication method
                    type: string
                caFingerprint:
                    description: SHA1 fingerprint expected by the client, if it does not match the first certificate in the configured CA chain
                    title: CA fingerprint override
                    type: string
                captureHeaders:
                    default: false
                    description: Add request headers to events in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                enableHealthCheck:
                    default: false
                    description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
                    title: Health check endpoint
                    type: boolean
                enableProxyHeader:
                    default: false
                    description: Preserve the client’s original IP address in the __srcIpPort field when connecting through an HTTP proxy that supports the X-Forwarded-For header. This does not apply to TCP-layer Proxy Protocol v1/v2.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 90
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                keytab:
                    description: Path to the keytab file containing the service principal credentials. @{product} will use `/etc/krb5.keytab` if not provided.
                    title: Keytab location
                    type: string
                logFingerprintMismatch:
                    default: false
                    description: Log a warning if the client certificate authority (CA) fingerprint does not match the expected value. A mismatch prevents Cribl from receiving events from the Windows Event Forwarder.
                    title: Log CA fingerprint mismatch warning
                    type: boolean
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    default: 5986
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                principal:
                    description: Kerberos principal used for authentication, typically in the form HTTP/<hostname>@<REALM>
                    title: Service principal name
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                subscriptions:
                    description: Subscriptions to events on forwarding endpoints
                    items:
                        minLength: 1
                        properties:
                            batchTimeout:
                                default: 60
                                description: Interval (in seconds) over which the endpoint should collect events before sending them to Stream
                                minimum: 0
                                title: Batch timeout
                                type: number
                            compress:
                                default: true
                                description: Receive compressed events from the source
                                title: Compression
                                type: boolean
                            contentFormat:
                                default: Raw
                                description: Content format in which the endpoint should deliver events
                                enum:
                                    - Raw
                                    - RenderedText
                                title: Format
                                type: string
                            heartbeatInterval:
                                default: 60
                                description: Maximum time (in seconds) between endpoint checkins before considering it unavailable
                                minimum: 1
                                title: Heartbeat
                                type: number
                            locale:
                                default: en-US
                                description: The RFC-3066 locale the Windows clients should use when sending events. Defaults to "en-US".
                                title: Locale
                                type: string
                            metadata:
                                description: Fields to add to events ingested under this subscription
                                items:
                                    properties:
                                        name:
                                            title: Field Name
                                            type: string
                                        value:
                                            description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                            title: Value
                                            type: string
                                    required:
                                        - name
                                        - value
                                    type: object
                                title: Fields
                                type: array
                            querySelector:
                                default: simple
                                enum:
                                    - simple
                                    - xml
                                title: Query builder mode
                                type: string
                            readExistingEvents:
                                default: false
                                description: Newly subscribed endpoints will send previously existing events. Disable to receive new events only.
                                title: Read existing events
                                type: boolean
                            sendBookmarks:
                                default: true
                                description: Keep track of which events have been received, resuming from that point after a re-subscription. This setting takes precedence over 'Read existing events'. See [Cribl Docs](https://docs.cribl.io/stream/sources-wef/#subscriptions) for more details.
                                title: Use bookmarks
                                type: boolean
                            subscriptionName:
                                title: Subscription name
                                type: string
                            targets:
                                default:
                                    - '*'
                                description: The DNS names of the endpoints that should forward these events. You may use wildcards, such as *.mydomain.com
                                items:
                                    minLength: 1
                                    type: string
                                title: Targets
                                type: array
                            version:
                                description: Version UUID for this subscription. If any subscription parameters are modified, this value will change.
                                title: Version
                                type: string
                        required:
                            - subscriptionName
                            - contentFormat
                            - heartbeatInterval
                            - batchTimeout
                            - targets
                        type: object
                    title: Subscriptions
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Server path containing CA certificates (in PEM format) to use. Can reference $ENV_VARS. If multiple certificates are present in a .pem, each must directly certify the one preceding it.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: Name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex:
                            default: /.*/
                            description: Regex matching allowable common names in peer certificates' subject attribute
                            title: Common name
                            type: string
                        disabled:
                            default: false
                            description: Enable TLS
                            title: Disabled
                            type: boolean
                        keytab: {}
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        ocspCheck:
                            default: false
                            description: Enable OCSP check of certificate
                            title: Verify certificate via OCSP
                            type: boolean
                        ocspCheckFailClose:
                            default: false
                            description: If enabled, checks will fail on any OCSP error. Otherwise, checks will fail only when a certificate is revoked, ignoring other errors.
                            title: Strict validation
                            type: boolean
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        principal: {}
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: Required for WEF certificate authentication
                            title: Validate client certs
                            type: boolean
                        requestCert:
                            default: true
                            description: Required for WEF certificate authentication
                            title: Authenticate client
                            type: boolean
                    required:
                        - privKeyPath
                        - certPath
                        - caPath
                    title: mTLS settings
                    type: object
                type:
                    enum:
                        - wef
                    type: string
            required:
                - host
                - port
                - subscriptions
            type: object
        InputWinEventLogs:
            properties:
                batchSize:
                    default: 500
                    description: The maximum number of events to read in one polling interval. A batch size higher than 500 can cause delays when pulling from multiple event logs. (Applicable for pre-4.8.0 nodes that use Windows Tools)
                    minimum: 1
                    title: Batch size
                    type: number
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disableNativeModule:
                    default: false
                    description: Enable to use built-in tools (PowerShell for JSON, wevtutil for XML) to collect event logs instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-windows-event-logs/#advanced-settings)
                    title: Use Windows Tools
                    type: boolean
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                eventFormat:
                    default: json
                    description: Format of individual events
                    enum:
                        - json
                        - xml
                    title: Event format
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 10
                    description: Time, in seconds, between checking for new entries (Applicable for pre-4.8.0 nodes that use Windows Tools)
                    minimum: 1
                    title: Polling interval
                    type: number
                logNames:
                    default:
                        - Application
                        - Security
                        - System
                    description: Enter the event logs to collect. Run "Get-WinEvent -ListLog *" in PowerShell to see the available logs.
                    items:
                        type: string
                    minItems: 1
                    title: Event logs
                    type: array
                    uniqueItems: true
                maxEventBytes:
                    default: 51200
                    description: The maximum number of bytes in an event before it is flushed to the pipelines
                    maximum: 134217728
                    minimum: 1
                    title: Max event bytes
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                readMode:
                    default: oldest
                    description: Read all stored and future event logs, or only future events
                    enum:
                        - oldest
                        - newest
                    title: Read mode
                    type: string
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - win_event_logs
                    type: string
            required:
                - logNames
                - type
            type: object
        InputWindowsMetrics:
            properties:
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disableNativeModule:
                    default: false
                    description: Enable to use built-in tools (PowerShell) to collect metrics instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-windows-metrics/#advanced-tab)
                    title: Use Windows Tools
                    type: boolean
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    properties:
                        custom:
                            properties:
                                cpu:
                                    properties:
                                        detail:
                                            default: false
                                            description: Generate metrics for all CPU states
                                            title: Detailed metrics
                                            type: boolean
                                        mode:
                                            default: basic
                                            description: Select the level of details for CPU metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                        perCpu:
                                            default: false
                                            description: Generate metrics for each CPU
                                            title: Per-CPU metrics
                                            type: boolean
                                        time:
                                            default: false
                                            description: Generate raw, monotonic CPU time counters
                                            title: CPU time metrics
                                            type: boolean
                                    type: object
                                disk:
                                    properties:
                                        mode:
                                            default: basic
                                            description: Select the level of details for disk metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                        perVolume:
                                            default: false
                                            description: Generate separate metrics for each volume
                                            title: Per volume metrics
                                            type: boolean
                                        volumes:
                                            default:
                                                - '!HarddiskVolume*'
                                                - '*'
                                            description: 'Windows volumes to include/exclude. E.g.: C:, !E:, etc. Wildcards and ! (not) operators are supported. All volumes are included if this list is empty.'
                                            items:
                                                type: string
                                            title: Volume filter
                                            type: array
                                    type: object
                                memory:
                                    properties:
                                        detail:
                                            default: false
                                            description: Generate metrics for all memory states
                                            title: Detailed metrics
                                            type: boolean
                                        mode:
                                            default: basic
                                            description: Select the level of details for memory metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                    type: object
                                network:
                                    properties:
                                        detail:
                                            default: false
                                            description: Generate full network metrics
                                            title: Detailed metrics
                                            type: boolean
                                        devices:
                                            default:
                                                - '!6to4*'
                                                - '!*Debug*'
                                                - '!*Virtual*'
                                                - '!*Tunneling*'
                                                - '!*IP-HTTPS*'
                                                - '*'
                                            description: Network interfaces to include/exclude. All interfaces are included if this list is empty.
                                            items:
                                                type: string
                                            title: Interface filter
                                            type: array
                                        mode:
                                            default: basic
                                            description: Select the level of details for network metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                        perInterface:
                                            default: false
                                            description: Generate separate metrics for each interface
                                            title: Per interface metrics
                                            type: boolean
                                    type: object
                                system:
                                    properties:
                                        detail:
                                            default: false
                                            description: Generate metrics for all system information
                                            title: Detailed metrics
                                            type: boolean
                                        mode:
                                            default: basic
                                            description: Select the level of details for system metrics
                                            enum:
                                                - basic
                                                - all
                                                - custom
                                                - disabled
                                            type: string
                                    type: object
                            type: object
                        mode:
                            default: basic
                            description: Select level of detail for host metrics
                            enum:
                                - basic
                                - all
                                - custom
                                - disabled
                            type: string
                    type: object
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                interval:
                    default: 10
                    description: Time, in seconds, between consecutive metric collections. Default is 10 seconds.
                    minimum: 1
                    title: Polling interval
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                persistence:
                    properties:
                        compress:
                            default: gzip
                            enum:
                                - none
                                - gzip
                            title: Data compression format
                            type: string
                        destPath:
                            default: $CRIBL_HOME/state/windows_metrics
                            description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/windows_metrics
                            title: Path location
                            type: string
                        enable:
                            default: false
                            description: Spool metrics to disk for Cribl Edge and Search
                            title: Enable disk spooling
                            type: boolean
                        maxDataSize:
                            default: 1GB
                            description: 'Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted.'
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Data size limit
                            type: string
                        maxDataTime:
                            default: 24h
                            description: 'Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted.'
                            pattern: \d+[smhd]$
                            title: Data age limit
                            type: string
                        timeWindow:
                            default: 10m
                            description: Time span for each file bucket
                            title: Bucket time span
                            type: string
                    title: persistence
                    type: object
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                process:
                    properties:
                        sets:
                            description: Configure sets to collect process metrics
                            items:
                                properties:
                                    filter:
                                        title: Filter Expression
                                        type: string
                                    includeChildren:
                                        default: false
                                        title: Include Child Processes
                                        type: boolean
                                    name:
                                        title: Set Name
                                        type: string
                                required:
                                    - name
                                    - filter
                                type: object
                            title: Process sets
                            type: array
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                type:
                    enum:
                        - windows_metrics
                    type: string
            required:
                - id
                - type
            type: object
        InputWiz:
            properties:
                authAudienceOverride:
                    description: The audience to use when requesting an OAuth token for a custom auth URL. When not specified, `wiz-api` will be used.
                    title: Authentication audience
                    type: string
                authType:
                    default: manual
                    description: Enter client secret directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                authUrl:
                    description: The authentication URL to generate an OAuth token
                    title: Authentication URL
                    type: string
                clientId:
                    description: The client ID of the Wiz application
                    title: Client ID
                    type: string
                clientSecret:
                    description: The client secret of the Wiz application
                    title: Client secret
                    type: string
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                contentConfig:
                    default:
                        - contentDescription: Get all Audit Logs
                          contentQuery: |-
                            ({
                              query: `query AuditLogTable($first: Int $after: String $filterBy: AuditLogEntryFilters){
                                auditLogEntries(first: $first after: $after filterBy: $filterBy) {
                                  nodes {
                                    id
                                    action
                                    requestId
                                    status
                                    timestamp
                                    actionParameters
                                    userAgent
                                    sourceIP
                                    serviceAccount {
                                      id
                                      name
                                    }
                                    user {
                                      id
                                      name
                                    }
                                  }
                                  pageInfo {
                                    hasNextPage
                                    endCursor
                                  }
                                }
                              }`,
                              variables: {
                                first: 100,
                                after: endCursor,
                                filterBy: {
                                  timestamp: {
                                    after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                                    before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                                  },
                                  status: ["SUCCESS", "FAILED","INVALID","ACCESS_DENIED"]
                                }
                              }
                            })
                          contentType: Audit Logs
                          cronSchedule: '*/15 * * * *'
                          earliest: -15m@m
                          enabled: false
                          jobTimeout: "0"
                          latest: now
                          logLevel: info
                          maxPages: 100
                          stateMergeExpression: 'prevState.latestTime > newState.latestTime ? prevState : newState'
                          stateTracking: false
                          stateUpdateExpression: '__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}'
                        - contentDescription: Get Cloud Configuration Report
                          contentQuery: |-
                            ({
                              query: `query CloudConfigurationFindingsPage($filterBy: ConfigurationFindingFilters, $first: Int, $after: String, $orderBy: ConfigurationFindingOrder) {
                                configurationFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                                  nodes {
                                    id
                                    targetExternalId
                                    targetObjectProviderUniqueId
                                    firstSeenAt
                                    severity
                                    result
                                    status
                                    remediation
                                    resource {
                                      id
                                      providerId
                                      name
                                      nativeType
                                      type
                                      region
                                      subscription {
                                        id
                                        name
                                        externalId
                                        cloudProvider
                                      }
                                      projects {
                                        id
                                        name
                                        riskProfile {
                                          businessImpact
                                        }
                                      }
                                      tags {
                                        key
                                        value
                                      }
                                    }
                                    rule {
                                      id
                                      graphId
                                      name
                                      description
                                      remediationInstructions
                                      functionAsControl
                                    }
                                    securitySubCategories {
                                      id
                                      title
                                      category {
                                        id
                                        name
                                        framework {
                                          id
                                          name
                                        }
                                      }
                                    }
                                    ignoreRules {
                                      id
                                      name
                                      enabled
                                      expiredAt
                                    }
                                  }
                                  pageInfo {
                                    hasNextPage
                                    endCursor
                                  }
                                }
                              }`,
                              variables: {
                                first: 100,
                                after: endCursor,
                                filterBy: {
                                  id: [],
                                  source: [],
                                  rule: {
                                    id: [],
                                    name: [],
                                    description: []
                                  },
                                  result: ["PASS","FAIL","ERROR", "NOT_ASSESSED"],
                                  severity: ["NONE","LOW","MEDIUM","HIGH","CRITICAL"],
                                  status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"
                                  ],
                                  frameworkCategory: [],
                                  firstSeenAt: {
                                    after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                                    before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                                  }
                                }
                              }
                            })
                          contentType: Configuration Findings
                          cronSchedule: 0 */12 * * *
                          earliest: -12h@h
                          enabled: false
                          jobTimeout: "0"
                          latest: now
                          logLevel: info
                          maxPages: 100
                          stateMergeExpression: 'prevState.latestTime > newState.latestTime ? prevState : newState'
                          stateTracking: false
                          stateUpdateExpression: '__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}'
                        - contentDescription: Get Open Issues
                          contentQuery: |-
                            ({
                              query: `query IssuesTable($filterBy: IssueFilters, $first: Int, $after: String, $orderBy: IssueOrder) {
                                issues: issuesV2(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                                  nodes {
                                    id
                                    control {
                                      id
                                      name
                                      description
                                      resolutionRecommendation
                                      securitySubCategories {
                                        title
                                        category {
                                          name
                                          framework {
                                            name
                                          }
                                        }
                                      }
                                    }
                                    createdAt
                                    updatedAt
                                    sourceRule {
                                      id
                                      name
                                    }
                                    dueAt
                                    resolvedAt
                                    statusChangedAt
                                    project {
                                      id
                                      name
                                      slug
                                      businessUnit
                                      riskProfile {
                                        businessImpact
                                      }
                                    }
                                    status
                                    severity
                                    type
                                    entitySnapshot {
                                      id
                                      type
                                      nativeType
                                      name
                                      status
                                      cloudPlatform
                                      cloudProviderURL
                                      providerId
                                      region
                                      resourceGroupExternalId
                                      subscriptionExternalId
                                      subscriptionName
                                      subscriptionTags
                                      tags
                                      externalId
                                    }
                                    notes {
                                      createdAt
                                      updatedAt
                                      text
                                      user {
                                        name
                                        email
                                      }
                                      serviceAccount {
                                        name
                                      }
                                    }
                                    serviceTickets {
                                      externalId
                                      name
                                      url
                                    }
                                  }
                                  pageInfo {
                                    hasNextPage
                                    endCursor
                                  }
                                }
                              }`,
                              variables: {
                                first: 100,
                                after: endCursor,
                                filterBy: {
                                  sourceRule: {
                                    id: []
                                  },
                                  relatedEntity: {
                                    type: []
                                  },
                                  status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"],
                                  severity: ["INFORMATIONAL","LOW","MEDIUM","HIGH","CRITICAL"],
                                  type: ["TOXIC_COMBINATION","THREAT_DETECTION","CLOUD_CONFIGURATION"],
                                  createdAt: {
                                    after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                                    before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                                  }
                                }
                              }
                            })
                          contentType: Issues
                          cronSchedule: 0 */12 * * *
                          earliest: -12h@h
                          enabled: false
                          jobTimeout: "0"
                          latest: now
                          logLevel: info
                          maxPages: 0
                          stateMergeExpression: 'prevState.latestTime > newState.latestTime ? prevState : newState'
                          stateTracking: false
                          stateUpdateExpression: '__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}'
                        - contentDescription: Get Vulnerability Findings
                          contentQuery: |-
                            ({
                              query: `query VulnerabilityFindingsPage($filterBy: VulnerabilityFindingFilters, $first: Int, $after: String, $orderBy: VulnerabilityFindingOrder) {
                                vulnerabilityFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                                  nodes {
                                    id
                                    portalUrl
                                    name
                                    CVEDescription
                                    CVSSSeverity
                                    score
                                    exploitabilityScore
                                    impactScore
                                    hasExploit
                                    hasCisaKevExploit
                                    status
                                    vendorSeverity
                                    firstDetectedAt
                                    lastDetectedAt
                                    resolvedAt
                                    description
                                    remediation
                                    detailedName
                                    version
                                    fixedVersion
                                    detectionMethod
                                    link
                                    locationPath
                                    resolutionReason
                                    vulnerableAsset {
                                      ... on VulnerableAssetBase {
                                        id
                                        type
                                        name
                                        region
                                        providerUniqueId
                                        cloudProviderURL
                                        cloudPlatform
                                        status
                                        subscriptionName
                                        subscriptionExternalId
                                        subscriptionId
                                        tags
                                      }
                                      ... on VulnerableAssetVirtualMachine {
                                        operatingSystem
                                        ipAddresses
                                      }
                                      ... on VulnerableAssetServerless {
                                        runtime
                                      }
                                      ... on VulnerableAssetContainerImage {
                                        imageId
                                      }
                                      ... on VulnerableAssetContainer {
                                        ImageExternalId
                                        VmExternalId
                                        ServerlessContainer
                                        PodNamespace
                                        PodName
                                        NodeName
                                      }
                                    }
                                  }
                                  pageInfo {
                                    hasNextPage
                                    endCursor
                                  }
                                }
                              }`,
                              variables: {
                                first: 100,
                                after: endCursor,
                                filterBy: {
                                  id: [],
                                  status: [],
                                  assetType: [],
                                  vendorSeverity: [],
                                  assetId: [],
                                  vulnerabilityId: [],
                                  detectionMethod: [],
                                  assetStatus: [],
                                  firstSeenAt: {
                                    after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                                    before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                                  }
                                }
                              }
                            })
                          contentType: Vulnerabilities
                          cronSchedule: 0 */12 * * *
                          earliest: -12h@h
                          enabled: false
                          jobTimeout: "0"
                          latest: now
                          logLevel: info
                          maxPages: 0
                          stateMergeExpression: 'prevState.latestTime > newState.latestTime ? prevState : newState'
                          stateTracking: false
                          stateUpdateExpression: '__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}'
                    items:
                        properties:
                            contentDescription:
                                title: Description
                                type: string
                            contentType:
                                description: The name of the Wiz query
                                pattern: ^[a-zA-Z0-9_-\s]+$
                                title: Content name
                                type: string
                            enabled:
                                default: false
                                title: Enable content
                                type: boolean
                        required:
                            - contentType
                            - contentQuery
                            - cronSchedule
                            - earliest
                            - latest
                        type: object
                    title: Content types
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                endpoint:
                    default: https://api.<region>.app.wiz.io/graphql
                    description: 'The Wiz GraphQL API endpoint. Example: https://api.us1.app.wiz.io/graphql'
                    pattern: ^https:\/\/
                    title: GraphQL endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                keepAliveTime:
                    default: 30
                    description: How often workers should check in with the scheduler to keep job subscription alive
                    minimum: 10
                    title: Keep alive time (seconds)
                    type: number
                maxMissedKeepAlives:
                    default: 3
                    description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
                    minimum: 2
                    title: Worker timeout (periods)
                    type: number
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 300
                    description: HTTP request inactivity timeout. Use 0 to disable.
                    maximum: 2400
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                retryRules:
                    properties:
                        codes:
                            default:
                                - 429
                                - 503
                            description: List of HTTP codes that trigger a retry. Leave empty to use the default list of 429 and 503.
                            items:
                                minLength: 1
                                type: number
                            minItems: 1
                            title: Retry HTTP codes
                            type: array
                        enableHeader:
                            default: true
                            description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
                            title: Honor Retry-After header
                            type: boolean
                        interval:
                            default: 1000
                            description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
                            maximum: 20000
                            minimum: 0
                            title: Initial retry interval (ms)
                            type: number
                        limit:
                            default: 5
                            description: The maximum number of times to retry a failed HTTP request
                            maximum: 20
                            minimum: 0
                            title: Retry limit
                            type: number
                        multiplier:
                            default: 2
                            description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        retryConnectReset:
                            default: false
                            description: Retry request when a connection reset (ECONNRESET) error occurs
                            title: Retry connection reset
                            type: boolean
                        retryConnectTimeout:
                            default: false
                            description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
                            title: Retry connection timeout
                            type: boolean
                        type:
                            default: backoff
                            description: The algorithm to use when performing HTTP retries
                            enum:
                                - none
                                - backoff
                                - static
                            title: Retry type
                            type: string
                    required:
                        - type
                    type: object
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Client Secret (text secret)
                    type: string
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - wiz
                    type: string
            required:
                - endpoint
                - authUrl
                - clientId
                - contentConfig
            type: object
        InputZscalerHec:
            properties:
                accessControlAllowHeaders:
                    description: Optionally, list HTTP headers that @{product} will send to allowed origins as "Access-Control-Allow-Headers" in a CORS preflight response. Use "*" to allow all headers.
                    items:
                        minLength: 1
                        type: string
                    minItems: 0
                    title: CORS allowed headers
                    type: array
                accessControlAllowOrigin:
                    description: Optionally, list HTTP origins to which @{product} should send CORS (cross-origin resource sharing) Access-Control-Allow-* headers. Supports wildcards.
                    items:
                        minLength: 1
                        type: string
                    minItems: 0
                    title: CORS allowed origins
                    type: array
                activityLogSampleRate:
                    default: 100
                    description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
                    minimum: 1
                    title: Activity log sample rate
                    type: number
                allowedIndexes:
                    description: List values allowed in HEC event index field. Leave blank to skip validation. Supports wildcards. The values here can expand index validation at the token level.
                    items:
                        minLength: 1
                        type: string
                    minItems: 0
                    title: Allowed indexes
                    type: array
                authTokens:
                    description: 'Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted.'
                    items:
                        properties:
                            allowedIndexesAtToken:
                                description: Enter the values you want to allow in the HEC event index field at the token level. Supports wildcards. To skip validation, leave blank.
                                items:
                                    minLength: 1
                                    type: string
                                minItems: 0
                                title: Allowed indexes
                                type: array
                            authType:
                                default: manual
                                description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                                enum:
                                    - manual
                                    - secret
                                title: Authentication method
                                type: string
                            description:
                                title: Description
                                type: string
                            enabled:
                                default: true
                                title: Enable token
                                type: boolean
                            metadata:
                                description: Fields to add to events referencing this token
                                items:
                                    properties:
                                        name:
                                            title: Field Name
                                            type: string
                                        value:
                                            description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                            title: Value
                                            type: string
                                    required:
                                        - name
                                        - value
                                    type: object
                                title: Fields
                                type: array
                            token: {}
                            tokenSecret: {}
                        required:
                            - token
                        type: object
                    title: Auth tokens
                    type: array
                captureHeaders:
                    default: false
                    description: Add request headers to events, in the __headers field
                    title: Capture request headers
                    type: boolean
                connections:
                    description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
                    items:
                        properties:
                            output:
                                title: Destination
                                type: string
                            pipeline:
                                title: Pipeline or Pack
                                type: string
                        required:
                            - output
                        type: object
                    title: Use QuickConnect
                    type: array
                description:
                    title: Description
                    type: string
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                emitTokenMetrics:
                    default: false
                    description: Enable to emit per-token (<prefix>.http.perToken) and summary (<prefix>.http.summary) request metrics
                    title: Emit per-token request metrics
                    type: boolean
                enableHealthCheck: {}
                enableProxyHeader:
                    default: false
                    description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
                    title: Show originating IP
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                hecAPI:
                    default: /services/collector
                    description: Absolute path on which to listen for the Zscaler HTTP Event Collector API requests. This input supports the /event endpoint.
                    pattern: ^/
                    title: HEC endpoint
                    type: string
                hecAcks:
                    default: false
                    description: Whether to enable Zscaler HEC acknowledgements
                    title: Zscaler HEC Acks
                    type: boolean
                host:
                    default: 0.0.0.0
                    description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
                    title: Address
                    type: string
                id:
                    description: Unique ID for this input
                    title: Input ID
                    type: string
                ipAllowlistRegex:
                    default: /.*/
                    description: Messages from matched IP addresses will be processed, unless also matched by the denylist
                    title: IP allowlist regex
                    type: string
                ipDenylistRegex:
                    default: /^$/
                    description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
                    title: IP denylist regex
                    type: string
                keepAliveTimeout:
                    default: 5
                    description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
                    maximum: 600
                    minimum: 1
                    title: Keep-alive timeout (seconds)
                    type: number
                maxActiveReq:
                    default: 256
                    description: 'Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput.'
                    minimum: 0
                    title: Active request limit
                    type: number
                maxRequestsPerSocket:
                    default: 0
                    description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
                    minimum: 0
                    title: Requests-per-socket limit
                    type: integer
                metadata:
                    description: Fields to add to every event. May be overridden by fields added at the token or request level.
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                pipeline:
                    description: Pipeline to process data from this Source before sending it through the Routes
                    title: Pipeline
                    type: string
                port:
                    description: Port to listen on
                    maximum: 65535
                    title: Port
                    type: number
                pq:
                    properties:
                        commitFrequency:
                            default: 42
                            description: The number of events to send downstream before committing that Stream has read them
                            minimum: 1
                            title: Commit frequency
                            type: number
                        compress:
                            default: none
                            description: Codec to use to compress the persisted data
                            enum:
                                - none
                                - gzip
                            title: Compression
                            type: string
                        maxBufferSize:
                            default: 1000
                            description: The maximum number of events to hold in memory before writing the events to disk
                            minimum: 42
                            title: Buffer size limit
                            type: number
                        maxFileSize:
                            default: 1 MB
                            description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: File size limit
                            type: string
                        maxSize:
                            default: 5GB
                            description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                            pattern: ^\d+\s*(?:\w{2})?$
                            title: Queue size limit
                            type: string
                        mode:
                            default: always
                            description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
                            enum:
                                - smart
                                - always
                            title: Mode
                            type: string
                        path:
                            default: $CRIBL_HOME/state/queues
                            description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/inputs/<input-id>'
                            title: Queue file path
                            type: string
                    type: object
                pqEnabled:
                    default: false
                    description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
                    title: Enable persistent queue
                    type: boolean
                requestTimeout:
                    default: 0
                    description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
                    minimum: 0
                    title: Request timeout (seconds)
                    type: number
                sendToRoutes:
                    default: true
                    description: Select whether to send data to Routes, or directly to Destinations.
                    type: boolean
                socketTimeout:
                    default: 0
                    description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
                    minimum: 0
                    title: Socket timeout (seconds)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        commonNameRegex: {}
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path
                            type: string
                        rejectUnauthorized: {}
                        requestCert:
                            default: false
                            description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
                            title: Authenticate client (mutual auth)
                            type: boolean
                    title: TLS settings (server side)
                    type: object
                type:
                    enum:
                        - zscaler_hec
                    type: string
            required:
                - host
                - port
                - hecAPI
            type: object
        InstallWarnings: {}
        IoMetricsEntry:
            properties:
                canDelete:
                    type: boolean
                id:
                    type: string
                level:
                    $ref: '#/components/schemas/IoMetricsEntryLevel'
            required:
                - id
                - level
            type: object
        IoMetricsEntryLevel:
            enum:
                - minimal
                - basic
                - detailed
                - comprehensive
            type: string
        JobExecutionWarning:
            properties:
                text:
                    type: string
                type:
                    type: string
            required:
                - type
            type: object
        JobInfo:
            properties:
                args:
                    $ref: '#/components/schemas/RunnableJob'
                id:
                    type: string
                keep:
                    type: boolean
                status:
                    $ref: '#/components/schemas/JobStatus'
            required:
                - args
                - id
                - status
            type: object
        JobSettings:
            properties:
                concurrentJobLimit:
                    type: number
                concurrentScheduledJobLimit:
                    type: number
                concurrentSystemJobLimit:
                    type: number
                concurrentSystemTaskLimit:
                    type: number
                concurrentTaskLimit:
                    type: number
                disableTasks:
                    type: boolean
                finishedJobArtifactsLimit:
                    type: number
                finishedTaskArtifactsLimit:
                    type: number
                jobArtifactsReaperPeriod:
                    type: string
                jobTimeout:
                    type: string
                maxTaskPerc:
                    type: number
                schedulingPolicy:
                    type: string
                taskHeartbeatPeriod:
                    type: number
                taskManifestFlushPeriodMs:
                    type: number
                taskManifestMaxBufferSize:
                    type: number
                taskManifestReadBufferSize:
                    type: string
                taskPollTimeoutMs:
                    type: number
            required:
                - concurrentJobLimit
                - concurrentScheduledJobLimit
                - concurrentSystemJobLimit
                - concurrentSystemTaskLimit
                - concurrentTaskLimit
                - finishedJobArtifactsLimit
                - finishedTaskArtifactsLimit
                - jobArtifactsReaperPeriod
                - jobTimeout
                - maxTaskPerc
                - schedulingPolicy
                - taskHeartbeatPeriod
                - taskManifestFlushPeriodMs
                - taskManifestMaxBufferSize
                - taskManifestReadBufferSize
                - taskPollTimeoutMs
            type: object
        JobState:
            properties:
                id:
                    type: string
                state:
                    type: string
            required:
                - id
                - state
            type: object
        JobStatus:
            properties:
                reason:
                    additionalProperties: true
                    type: object
                state:
                    $ref: '#/components/schemas/State'
            required:
                - state
            type: object
        KMSHealth:
            properties:
                auth:
                    $ref: '#/components/schemas/KMSHealthTest'
                connection:
                    $ref: '#/components/schemas/KMSHealthTest'
                system:
                    $ref: '#/components/schemas/KMSHealthTest'
            required:
                - auth
                - connection
                - system
            type: object
        KMSHealthStatus:
            enum:
                - 0
                - 1
                - 2
                - 3
            type: integer
        KMSHealthTest:
            properties:
                details:
                    additionalProperties: true
                    type: object
                status:
                    $ref: '#/components/schemas/KMSHealthStatus'
            required:
                - status
            type: object
        KMSProviderConfig:
            properties:
                auth:
                    oneOf:
                        - properties:
                            assumeRoleArn:
                                type: string
                            assumeRoleExternalId:
                                type: string
                            awsApiKey:
                                type: string
                            awsAuthenticationMethod:
                                type: string
                            awsSecretKey:
                                type: string
                            enableAssumeRole:
                                type: boolean
                            provider:
                                $ref: '#/components/schemas/AUTH_PROVIDER'
                            token:
                                type: string
                            vaultAWSIAMServerID:
                                type: string
                            vaultRole:
                                type: string
                          required:
                            - provider
                            - vaultAWSIAMServerID
                          type: object
                        - properties:
                            assumeRoleArn:
                                type: string
                            assumeRoleExternalId:
                                type: string
                            awsApiKey:
                                type: string
                            awsAuthenticationMethod:
                                type: string
                            awsSecretKey:
                                type: string
                            enableAssumeRole:
                                type: boolean
                          type: object
                enableHealthCheck:
                    type: boolean
                healthCheckEndpoint:
                    type: string
                namespace:
                    type: string
                provider:
                    $ref: '#/components/schemas/SECRET_PROVIDER'
                secretDir:
                    type: string
                service:
                    $ref: '#/components/schemas/AWSKMSServiceConfig'
                tls:
                    $ref: '#/components/schemas/VaultKMSTlsClientConfig'
                url:
                    type: string
            required:
                - enableHealthCheck
                - provider
            type: object
        KeyMetadataEntity:
            properties:
                algorithm:
                    default: aes-256-cbc
                    enum:
                        - aes-256-cbc
                        - aes-256-gcm
                    title: Encryption algorithm
                    type: string
                cipherKey:
                    title: Encrypted key
                    type: string
                created:
                    title: Creation time
                    type: number
                description:
                    title: Description
                    type: string
                expires:
                    title: Expiration time
                    type: number
                group:
                    description: Name of the Group/Fleet that created this key
                    title: Group/Fleet
                    type: string
                ivSize:
                    default: 12
                    description: Length of the initialization vector, in bytes
                    enum:
                        - 12
                        - 13
                        - 14
                        - 15
                        - 16
                    title: Initialization vector size
                    type: integer
                keyId:
                    title: Key ID
                    type: string
                keyclass:
                    default: 0
                    minimum: 0
                    title: Key class
                    type: number
                kms:
                    default: local
                    enum:
                        - local
                    title: KMS for this key
                    type: string
                plainKey:
                    title: Plain text key
                    type: string
                useIV:
                    default: false
                    description: Seed encryption with a [nonce](https://en.wikipedia.org/wiki/Cryptographic_nonce) to make the key more random and unique. Must be enabled with the aes-256-gcm algorithm.
                    title: Use initialization vector
                    type: boolean
            required:
                - keyId
                - algorithm
                - kms
                - keyclass
            type: object
        KubeMetadata:
            properties:
                cluster:
                    additionalProperties: true
                    type: object
                container:
                    additionalProperties: true
                    type: object
                namespace:
                    type: string
                node:
                    additionalProperties: true
                    type: object
                pod:
                    additionalProperties: true
                    type: object
                source:
                    type: string
            required:
                - namespace
                - source
            type: object
        LakeDatasetSearchConfig:
            properties:
                datatypes:
                    items:
                        type: string
                    type: array
                metadata:
                    $ref: '#/components/schemas/DatasetMetadata'
            type: object
        License:
            properties:
                cls:
                    enum:
                        - prod
                        - trial
                        - free
                    type: string
                email:
                    type: string
                exp:
                    type: number
                f_ph:
                    type: number
                f_phg:
                    type: number
                guid:
                    type: string
                iat:
                    type: number
                id:
                    type: string
                iss:
                    type: string
                license:
                    type: string
                quota:
                    type: number
                sub:
                    type: string
                title:
                    type: string
            required:
                - cls
                - email
                - exp
                - f_ph
                - f_phg
                - guid
                - iat
                - id
                - iss
                - license
                - quota
                - title
            type: object
        LicenseInfo:
            properties:
                email:
                    type: string
                isRegistered:
                    type: boolean
                isSplunkApp:
                    type: boolean
                limits:
                    $ref: '#/components/schemas/LicenseLimits'
                type:
                    enum:
                        - prod
                        - trial
                        - free
                    type: string
            required:
                - isRegistered
                - limits
                - type
            type: object
        LicenseLimits:
            properties:
                edge_groups:
                    type: number
                edge_procs:
                    type: number
                kms:
                    type: number
                lake_ddss:
                    type: number
                lakehouse:
                    type: number
                leader_resiliency:
                    type: number
                max_executors_per_search:
                    type: number
                notifications:
                    type: number
                persistent_queue:
                    type: number
                projects:
                    type: number
                rbac:
                    type: number
                remote_auth:
                    type: number
                remote_git:
                    type: number
                s3_bundle:
                    type: number
                search_acceleration:
                    type: number
                search_groups:
                    type: number
                system_email:
                    type: number
                worker_groups:
                    type: number
                worker_procs:
                    type: number
            required:
                - rbac
                - remote_auth
                - remote_git
                - worker_groups
                - worker_procs
            type: object
        LicenseRequest:
            properties:
                license:
                    type: string
            required:
                - license
            type: object
        LimitRuleDefinitions: {}
        Limits:
            properties:
                cpuProfileTTL:
                    type: string
                edgeMetricsCustomExpression:
                    type: string
                edgeMetricsMode:
                    $ref: '#/components/schemas/EdgeHeartbeatMetricsMode'
                edgeNodesCount:
                    type: number
                enableMetricsPersistence:
                    type: boolean
                eventsMetadataSources:
                    items:
                        type: string
                    type: array
                lookupMaxSize:
                    type: string
                lookupMaxTotalSize:
                    type: string
                maxMetrics:
                    type: number
                maxPQSize:
                    type: string
                metricsDirectory:
                    type: string
                metricsDropList:
                    items:
                        type: string
                    type: array
                metricsFieldsBlacklist:
                    items:
                        type: string
                    type: array
                metricsGCPeriod:
                    type: string
                metricsMaxCardinality:
                    type: number
                metricsMaxDiskSpace:
                    type: string
                metricsNeverDropList:
                    items:
                        type: string
                    type: array
                metricsWorkerIdBlacklist:
                    items:
                        type: string
                    type: array
                minFreeSpace:
                    type: string
                samples:
                    properties:
                        maxSize:
                            type: string
                    required:
                        - maxSize
                    type: object
            required:
                - cpuProfileTTL
                - enableMetricsPersistence
                - metricsDirectory
                - metricsFieldsBlacklist
                - metricsGCPeriod
                - metricsNeverDropList
                - metricsWorkerIdBlacklist
                - minFreeSpace
                - samples
            type: object
        LogFileInfo:
            properties:
                id:
                    type: string
                path:
                    type: string
            required:
                - id
                - path
            type: object
        LoggerConfig:
            properties:
                channels:
                    items:
                        $ref: '#/components/schemas/LoggerEntry'
                    type: array
                defaultRedactFields:
                    items:
                        type: string
                    type: array
                id:
                    type: string
                limitRate:
                    type: number
                maxSizeBytes:
                    type: number
                redactFields:
                    items:
                        type: string
                    type: array
                redactLabel:
                    type: string
            required:
                - channels
                - id
                - limitRate
                - maxSizeBytes
                - redactFields
                - redactLabel
            type: object
        LoggerEntry:
            properties:
                canDelete:
                    type: boolean
                id:
                    type: string
                level:
                    type: string
            required:
                - id
                - level
            type: object
        LoginInfo:
            properties:
                password:
                    type: string
                username:
                    type: string
            required:
                - username
                - password
            type: object
        LookupFile:
            anyOf:
                - properties:
                    fileInfo:
                        properties:
                            filename:
                                pattern: ^\w[\w .-]+$
                                type: string
                        required:
                            - filename
                        type: object
                - properties:
                    content:
                        description: File content.
                        type: string
            properties:
                description:
                    title: Description
                    type: string
                id:
                    pattern: ^\w[\w -]+(?:\.csv|\.gz|\.csv\.gz|\.mmdb)?$
                    title: Filename
                    type: string
                mode:
                    default: memory
                    enum:
                        - memory
                        - disk
                    title: Mode
                    type: string
                pendingTask:
                    properties:
                        error:
                            description: Error message if task has failed
                            readOnly: true
                            type: string
                        id:
                            description: Task ID (generated).
                            readOnly: true
                            type: string
                        type:
                            description: Task type
                            enum:
                                - IMPORT
                                - INDEX
                            readOnly: true
                            type: string
                    readOnly: true
                    type: object
                size:
                    description: File size. Optional.
                    type: number
                tags:
                    description: One or more tags related to this lookup. Optional.
                    title: Tags
                    type: string
                version:
                    description: Unique string generated for each modification of this lookup
                    readOnly: true
                    type: string
            required:
                - id
            type: object
        LookupFileInfoResponse:
            properties:
                filename:
                    type: string
                rows:
                    type: number
                size:
                    type: number
            required:
                - filename
                - rows
                - size
            type: object
        LookupVersions:
            type: object
        MappingType:
            enum:
                - automatic
                - custom
            type: string
        MasterWorkerEntry:
            properties:
                deployable:
                    type: boolean
                firstMsgTime:
                    type: number
                group:
                    type: string
                id:
                    type: string
                info:
                    $ref: '#/components/schemas/NodeProvidedInfo'
                lastMetrics:
                    type: object
                lastMsgTime:
                    type: number
                metadata:
                    $ref: '#/components/schemas/HeartbeatMetadata'
                nodeUpgradeStatus:
                    $ref: '#/components/schemas/NodeUpgradeStatus'
                status:
                    type: string
                type:
                    enum:
                        - info
                        - req
                        - resp
                    type: string
                workerProcesses:
                    type: number
                workers:
                    properties:
                        count:
                            type: number
                    required:
                        - count
                    type: object
            required:
                - firstMsgTime
                - group
                - id
                - info
                - lastMsgTime
                - workerProcesses
            type: object
        MaxConcurrentSearchesType:
            oneOf:
                - type: number
        MembershipSchema:
            properties:
                add:
                    items:
                        type: string
                    type: array
                rm:
                    items:
                        type: string
                    type: array
            type: object
        Metadata:
            properties:
                aws:
                    $ref: '#/components/schemas/AwsMetadata'
                cribl:
                    $ref: '#/components/schemas/CriblMetadata'
                env:
                    $ref: '#/components/schemas/EnvMetadata'
                hostOs:
                    $ref: '#/components/schemas/OsMetadata'
                kube:
                    $ref: '#/components/schemas/KubeMetadata'
                os:
                    $ref: '#/components/schemas/OsMetadata'
                timestamp:
                    type: number
            required:
                - timestamp
            type: object
        MetricNameInfo:
            properties:
                dims:
                    items:
                        properties:
                            count:
                                type: number
                            name:
                                type: string
                            values:
                                items:
                                    type: string
                                type: array
                        required:
                            - count
                            - name
                            - values
                        type: object
                    type: array
                name:
                    type: string
            required:
                - dims
                - name
            type: object
        MetricsAggOpts:
            properties:
                aggs:
                    $ref: '#/components/schemas/AggregationMgrOptions'
                alwaysBounds:
                    type: boolean
                earliest:
                    oneOf:
                        - type: string
                        - type: number
                latest:
                    oneOf:
                        - type: string
                        - type: number
                metrics:
                    $ref: '#/components/schemas/MetricsStore'
                where:
                    type: string
            required:
                - aggs
            type: object
        MetricsStore:
            properties: {}
            type: object
        MultiFactorAuthSchema:
            properties:
                accessControlAllowOrigin:
                    type: string
                allowLogin:
                    type: boolean
                apiServerUrl:
                    type: string
                disabled:
                    type: boolean
                type:
                    enum:
                        - piv
                    type: string
                usernameField:
                    type: string
                usernameRegex:
                    type: string
            required:
                - accessControlAllowOrigin
                - allowLogin
                - apiServerUrl
                - disabled
                - type
                - usernameField
                - usernameRegex
            type: object
        NameValue:
            properties:
                name:
                    type: string
                value:
                    $ref: '#/components/schemas/Expression'
            required:
                - name
                - value
            type: object
        NetworkInterfaces:
            type: object
        NodeActiveUpgradeStatus:
            enum:
                - 0
                - 1
                - 2
            type: integer
        NodeFailedUpgradeStatus:
            enum:
                - 0
                - 1
            type: integer
        NodeProvidedInfo:
            properties:
                architecture:
                    type: string
                aws:
                    properties:
                        enabled:
                            type: boolean
                        region:
                            type: string
                        tags:
                            type: object
                        type:
                            type: string
                        zone:
                            type: string
                    required:
                        - enabled
                        - region
                        - type
                        - zone
                    type: object
                conn_ip:
                    type: string
                cpus:
                    type: number
                cribl:
                    $ref: '#/components/schemas/HBCriblInfo'
                freeDiskSpace:
                    type: number
                hostOs:
                    properties:
                        addresses:
                            items:
                                type: string
                            type: array
                        enabled:
                            type: boolean
                        id:
                            type: string
                        version:
                            type: string
                    required:
                        - addresses
                        - enabled
                        - id
                        - version
                    type: object
                hostname:
                    type: string
                isSaasWorker:
                    type: boolean
                kube:
                    properties:
                        enabled:
                            type: boolean
                        namespace:
                            type: string
                        node:
                            type: string
                        owner:
                            properties:
                                kind:
                                    type: string
                                name:
                                    type: string
                            required:
                                - kind
                                - name
                            type: object
                        pod:
                            type: string
                        source:
                            type: string
                    required:
                        - enabled
                        - namespace
                        - node
                        - pod
                        - source
                    type: object
                localTime:
                    type: number
                metadata:
                    $ref: '#/components/schemas/HeartbeatMetadata'
                node:
                    type: string
                os:
                    oneOf:
                        - properties:
                            addresses:
                                items:
                                    type: string
                                type: array
                            enabled:
                                type: boolean
                            id:
                                type: string
                            version:
                                type: string
                          required:
                            - addresses
                            - enabled
                            - id
                            - version
                          type: object
                        - properties:
                            addresses:
                                items:
                                    type: string
                                type: array
                          required:
                            - addresses
                          type: object
                platform:
                    type: string
                release:
                    type: string
                totalDiskSpace:
                    type: number
                totalmem:
                    type: number
            required:
                - architecture
                - cpus
                - cribl
                - freeDiskSpace
                - hostname
                - node
                - platform
                - release
                - totalDiskSpace
                - totalmem
            type: object
        NodeSkippedUpgradeStatus:
            enum:
                - 0
                - 1
                - 2
                - 3
            type: integer
        NodeUpgradeState:
            enum:
                - 0
                - 1
                - 2
                - 3
            type: integer
        NodeUpgradeStatus:
            properties:
                active:
                    $ref: '#/components/schemas/NodeActiveUpgradeStatus'
                failed:
                    $ref: '#/components/schemas/NodeFailedUpgradeStatus'
                skipped:
                    $ref: '#/components/schemas/NodeSkippedUpgradeStatus'
                state:
                    $ref: '#/components/schemas/NodeUpgradeState'
                timestamp:
                    type: number
            required:
                - state
                - timestamp
            type: object
        Notification:
            properties:
                condition:
                    title: Condition
                    type: string
                conf:
                    properties: {}
                    title: Condition-specific configs
                    type: object
                disabled:
                    default: false
                    title: Disabled
                    type: boolean
                id:
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: ID
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Fields
                    type: array
                targetConfigs:
                    items:
                        anyOf:
                            - properties:
                                conf:
                                    properties:
                                        body:
                                            description: Email body
                                            title: Message
                                            type: string
                                        emailRecipient:
                                            properties:
                                                bcc:
                                                    description: 'Bcc: Recipients'' email addresses'
                                                    title: Bcc
                                                    type: string
                                                cc:
                                                    description: 'Cc: Recipients'' email addresses'
                                                    title: Cc
                                                    type: string
                                                to:
                                                    description: Recipients' email addresses
                                                    title: To
                                                    type: string
                                            required:
                                                - to
                                            type: object
                                        subject:
                                            description: Email subject
                                            title: Subject
                                            type: string
                                    title: Notification config for SMTP target
                                    type: object
                        properties:
                            id:
                                pattern: ^[a-zA-Z0-9_-]+$
                                title: Notification target ID
                                type: string
                        required:
                            - id
                        type: object
                    title: Target configuration
                    type: array
                targets:
                    default: []
                    description: Targets to send any Notifications to
                    items:
                        type: string
                    title: Notification targets
                    type: array
            required:
                - id
                - condition
            type: object
        NotificationTarget:
            properties:
                id:
                    type: string
                type:
                    type: string
            required:
                - id
                - type
            type: object
        OriginConfig:
            properties:
                filterExpression:
                    type: string
                origin:
                    $ref: '#/components/schemas/DatasetOrigin'
            required:
                - origin
            type: object
        OsMetadata:
            properties:
                arch:
                    type: string
                cpu_count:
                    type: number
                cpu_speed_mhz:
                    type: number
                cpu_type:
                    type: string
                gid:
                    type: number
                homedir:
                    type: string
                hostname:
                    type: string
                interfaces:
                    $ref: '#/components/schemas/NetworkInterfaces'
                machine_id:
                    type: string
                memory:
                    type: number
                os_id:
                    type: string
                os_name:
                    type: string
                os_version:
                    type: string
                os_version_id:
                    type: string
                platform:
                    type: string
                release:
                    type: string
                timezone:
                    type: string
                timezone_offset:
                    type: string
                uid:
                    type: number
                username:
                    type: string
            required:
                - arch
                - cpu_count
                - cpu_speed_mhz
                - cpu_type
                - gid
                - homedir
                - hostname
                - interfaces
                - machine_id
                - memory
                - os_id
                - os_name
                - os_version
                - os_version_id
                - platform
                - release
                - timezone
                - timezone_offset
                - uid
                - username
            type: object
        Output:
            oneOf:
                - $ref: '#/components/schemas/OutputDefault'
                - $ref: '#/components/schemas/OutputWebhook'
                - $ref: '#/components/schemas/OutputSentinel'
                - $ref: '#/components/schemas/OutputDevnull'
                - $ref: '#/components/schemas/OutputSyslog'
                - $ref: '#/components/schemas/OutputSplunk'
                - $ref: '#/components/schemas/OutputSplunkLb'
                - $ref: '#/components/schemas/OutputSplunkHec'
                - $ref: '#/components/schemas/OutputTcpjson'
                - $ref: '#/components/schemas/OutputWavefront'
                - $ref: '#/components/schemas/OutputSignalfx'
                - $ref: '#/components/schemas/OutputFilesystem'
                - $ref: '#/components/schemas/OutputS3'
                - $ref: '#/components/schemas/OutputAzureBlob'
                - $ref: '#/components/schemas/OutputAzureDataExplorer'
                - $ref: '#/components/schemas/OutputAzureLogs'
                - $ref: '#/components/schemas/OutputKinesis'
                - $ref: '#/components/schemas/OutputHoneycomb'
                - $ref: '#/components/schemas/OutputAzureEventhub'
                - $ref: '#/components/schemas/OutputGoogleChronicle'
                - $ref: '#/components/schemas/OutputGoogleCloudStorage'
                - $ref: '#/components/schemas/OutputGoogleCloudLogging'
                - $ref: '#/components/schemas/OutputGooglePubsub'
                - $ref: '#/components/schemas/OutputExabeam'
                - $ref: '#/components/schemas/OutputKafka'
                - $ref: '#/components/schemas/OutputConfluentCloud'
                - $ref: '#/components/schemas/OutputMsk'
                - $ref: '#/components/schemas/OutputElastic'
                - $ref: '#/components/schemas/OutputElasticCloud'
                - $ref: '#/components/schemas/OutputNewrelic'
                - $ref: '#/components/schemas/OutputNewrelicEvents'
                - $ref: '#/components/schemas/OutputInfluxdb'
                - $ref: '#/components/schemas/OutputCloudwatch'
                - $ref: '#/components/schemas/OutputMinio'
                - $ref: '#/components/schemas/OutputStatsd'
                - $ref: '#/components/schemas/OutputStatsdExt'
                - $ref: '#/components/schemas/OutputGraphite'
                - $ref: '#/components/schemas/OutputRouter'
                - $ref: '#/components/schemas/OutputSns'
                - $ref: '#/components/schemas/OutputSqs'
                - $ref: '#/components/schemas/OutputSnmp'
                - $ref: '#/components/schemas/OutputSumoLogic'
                - $ref: '#/components/schemas/OutputDatadog'
                - $ref: '#/components/schemas/OutputGrafanaCloud'
                - $ref: '#/components/schemas/OutputLoki'
                - $ref: '#/components/schemas/OutputPrometheus'
                - $ref: '#/components/schemas/OutputRing'
                - $ref: '#/components/schemas/OutputOpenTelemetry'
                - $ref: '#/components/schemas/OutputServiceNow'
                - $ref: '#/components/schemas/OutputDataset'
                - $ref: '#/components/schemas/OutputCriblTcp'
                - $ref: '#/components/schemas/OutputCriblHttp'
                - $ref: '#/components/schemas/OutputHumioHec'
                - $ref: '#/components/schemas/OutputCrowdstrikeNextGenSiem'
                - $ref: '#/components/schemas/OutputDlS3'
                - $ref: '#/components/schemas/OutputSecurityLake'
                - $ref: '#/components/schemas/OutputCriblLake'
                - $ref: '#/components/schemas/OutputDiskSpool'
                - $ref: '#/components/schemas/OutputClickHouse'
                - $ref: '#/components/schemas/OutputXsiam'
                - $ref: '#/components/schemas/OutputNetflow'
                - $ref: '#/components/schemas/OutputDynatraceHttp'
                - $ref: '#/components/schemas/OutputDynatraceOtlp'
        OutputAzureBlob:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                authType:
                    default: manual
                    enum:
                        - manual
                        - secret
                        - clientSecret
                        - clientCert
                    title: Authentication method
                    type: string
                automaticSchema:
                    default: false
                    description: Automatically calculate the schema based on the events of each Parquet file generated
                    title: Automatic schema
                    type: boolean
                azureCloud:
                    description: The Azure cloud to use. Defaults to Azure Public Cloud.
                    title: Azure Cloud
                    type: string
                baseFileName:
                    default: '`CriblOut`'
                    description: JavaScript expression to define the output filename prefix (can be constant)
                    title: File name prefix expression
                    type: string
                certificate:
                    properties:
                        certificateName:
                            description: The certificate you registered as credentials for your app in the Azure portal
                            title: Certificate
                            type: string
                    required:
                        - certificateName
                    type: object
                clientId:
                    description: The service principal's client ID
                    title: Client ID
                    type: string
                clientTextSecret:
                    description: Select or create a stored text secret
                    title: Client secret (text secret)
                    type: string
                compress:
                    default: gzip
                    description: Data compression format to apply to HTTP content before it is delivered
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                compressionLevel:
                    default: best_speed
                    description: Compression level to apply before moving files to final destination
                    enum:
                        - best_speed
                        - normal
                        - best_compression
                    title: Compression level
                    type: string
                connectionString:
                    description: Enter your Azure Storage account connection string. If left blank, Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
                    title: Connection string
                    type: string
                containerName:
                    description: The Azure Blob Storage container name. Name can include only lowercase letters, numbers, and hyphens. For dynamic container names, enter a JavaScript expression within quotes or backtickss, to be evaluated at initialization. The expression can evaluate to a constant value and can reference Global Variables, such as `myContainer-${C.env["CRIBL_WORKER_ID"]}`.
                    title: Container name
                    type: string
                createContainer:
                    default: false
                    description: Create the configured container in Azure Blob Storage if it does not already exist
                    title: Create container
                    type: boolean
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                destPath:
                    description: Root directory prepended to path before uploading. Value can be a JavaScript expression enclosed in quotes or backticks, to be evaluated at initialization. The expression can evaluate to a constant value and can reference Global Variables, such as `myBlobPrefix-${C.env["CRIBL_WORKER_ID"]}`.
                    title: Blob prefix
                    type: string
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                enablePageChecksum:
                    default: false
                    description: Parquet tools can use the checksum of a Parquet page to verify data integrity
                    title: Write page checksum
                    type: boolean
                enableStatistics:
                    default: true
                    description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
                    title: Write statistics
                    type: boolean
                enableWritePageIndex:
                    default: true
                    description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
                    title: Write page indexes
                    type: boolean
                endpointSuffix:
                    description: Endpoint suffix for the service URL. Takes precedence over the Azure Cloud setting. Defaults to core.windows.net.
                    title: Endpoint suffix
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileNameSuffix:
                    default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
                    description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
                    title: File name suffix expression
                    type: string
                format:
                    default: json
                    description: Format of the output data
                    enum:
                        - json
                        - raw
                        - parquet
                    title: Data format
                    type: string
                headerLine:
                    default: ""
                    description: If set, this line will be written to the beginning of each output file
                    title: Header line
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keyValueMetadata:
                    description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata (optional)
                    type: array
                maxConcurrentFileParts:
                    default: 1
                    description: Maximum number of parts to upload in parallel per file
                    maximum: 10
                    minimum: 1
                    title: Concurrent file parts limit
                    type: number
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                parquetDataPageVersion:
                    default: DATA_PAGE_V2
                    description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
                    enum:
                        - DATA_PAGE_V1
                        - DATA_PAGE_V2
                    title: Data page version
                    type: string
                parquetPageSize:
                    default: 1MB
                    description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
                    pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
                    title: Page size
                    type: string
                parquetRowGroupLength:
                    default: 10000
                    description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
                    maximum: 67108864
                    minimum: 1
                    title: Group row limit
                    type: number
                parquetVersion:
                    default: PARQUET_2_6
                    description: Determines which data types are supported and how they are represented
                    enum:
                        - PARQUET_1_0
                        - PARQUET_2_4
                        - PARQUET_2_6
                    title: Parquet version
                    type: string
                partitionExpr:
                    default: 'C.Time.strftime(_time ? _time : Date.now()/1000, ''%Y/%m/%d'')'
                    description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
                    title: Partitioning expression
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                shouldLogInvalidRows:
                    description: Log up to 3 rows that @{product} skips due to data mismatch
                    title: Log invalid rows
                    type: boolean
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant and stable storage.
                    title: Staging location
                    type: string
                storageAccountName:
                    description: The name of your Azure storage account
                    title: Storage account name
                    type: string
                storageClass:
                    default: Inferred
                    enum:
                        - Inferred
                        - Hot
                        - Cool
                        - Cold
                        - Archive
                    title: Blob access tier
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                tenantId:
                    description: The service principal's tenant ID
                    title: Tenant ID
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: Connection string (text secret)
                    type: string
                type:
                    enum:
                        - azure_blob
                    type: string
                writeHighWaterMark:
                    default: 64
                    description: Buffer size used to write to a file
                    maximum: 4096
                    minimum: 16
                    title: Writing high watermark (KB)
                    type: number
            required:
                - containerName
                - stagePath
            type: object
        OutputAzureDataExplorer:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                additionalProperties:
                    description: Optionally, enter additional configuration properties to send to the ingestion service
                    items:
                        properties:
                            key:
                                pattern: ^[\w\-\.]+$
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    title: Additional fields
                    type: array
                certificate:
                    properties:
                        certificateName:
                            description: The certificate you registered as credentials for your app in the Azure portal
                            title: Certificate
                            type: string
                    type: object
                clientId:
                    description: client_id to pass in the OAuth request parameter
                    title: Client ID
                    type: string
                clientSecret:
                    description: The client secret that you generated for your app in the Azure portal
                    title: Client secret
                    type: string
                clusterUrl:
                    description: The base URI for your cluster. Typically, `https://<cluster>.<region>.kusto.windows.net`.
                    pattern: ^https://[a-zA-Z0-9\-]+.(\w+).(kusto.fabric.microsoft.com|kusto.(windows|usgovcloudapi).net)$
                    title: Cluster base URI
                    type: string
                compress:
                    default: gzip
                    description: Data compression format to apply to HTTP content before it is delivered
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                database:
                    description: Name of the database containing the table where data will be ingested
                    maxLength: 260
                    pattern: ^[\w\s\-\.]+$
                    title: Database name
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extentTags:
                    description: Strings or tags associated with the extent (ingested data shard)
                    items:
                        properties:
                            prefix:
                                enum:
                                    - dropBy
                                    - ingestBy
                                title: Prefix (optional)
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extent tags
                    type: array
                fileNameSuffix:
                    default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
                    description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
                    title: File name suffix expression
                    type: string
                flushImmediately:
                    default: false
                    description: Bypass the data management service's aggregation mechanism
                    title: Flush immediately
                    type: boolean
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                format:
                    default: json
                    description: Format of the output data
                    enum:
                        - json
                        - raw
                        - parquet
                    title: Data format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                ingestIfNotExists:
                    description: Prevents duplicate ingestion by verifying whether an extent with the specified ingest-by tag already exists
                    items:
                        properties:
                            value:
                                title: Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Enforce uniqueness via tag values
                    type: array
                ingestMode:
                    default: batching
                    enum:
                        - batching
                        - streaming
                    title: Ingestion mode
                    type: string
                ingestUrl:
                    description: The ingestion service URI for your cluster. Typically, `https://ingest-<cluster>.<region>.kusto.windows.net`.
                    pattern: ^https://[a-zA-Z0-9\-]+.(\w+).(kusto.fabric.microsoft.com|kusto.(windows|usgovcloudapi).net)$
                    title: Ingestion service URI
                    type: string
                isMappingObj:
                    default: false
                    description: Send a JSON mapping object instead of specifying an existing named data mapping
                    title: Add mapping object
                    type: boolean
                keepAlive:
                    default: true
                    description: Disable to close the connection immediately after sending the outgoing request
                    title: Keep alive
                    type: boolean
                mappingRef:
                    description: Enter the name of a data mapping associated with your target table. Or, if incoming event and target table fields match exactly, you can leave the field empty.
                    pattern: ^[\w\-\.]+$
                    title: Data mapping
                    type: string
                maxConcurrentFileParts:
                    default: 1
                    description: Maximum number of parts to upload in parallel per file
                    maximum: 10
                    minimum: 1
                    title: Concurrent file parts limit
                    type: number
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 4096
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                oauthEndpoint:
                    default: https://login.microsoftonline.com
                    description: Endpoint used to acquire authentication tokens from Azure
                    enum:
                        - https://login.microsoftonline.com
                        - https://login.microsoftonline.us
                        - https://login.partner.microsoftonline.cn
                    title: Microsoft Entra ID authentication endpoint
                    type: string
                oauthType:
                    default: clientSecret
                    description: The type of OAuth 2.0 client credentials grant flow to use
                    enum:
                        - clientSecret
                        - clientTextSecret
                        - certificate
                    title: Authentication method
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                reportLevel:
                    default: failuresOnly
                    description: Level of ingestion status reporting. Defaults to FailuresOnly.
                    enum:
                        - failuresOnly
                        - doNotReport
                        - failuresAndSuccesses
                    title: Report level
                    type: string
                reportMethod:
                    default: queue
                    description: Target of the ingestion status reporting. Defaults to Queue.
                    enum:
                        - queue
                        - table
                        - queueAndTable
                    title: Report method
                    type: string
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default:
                        - backoffRate: 2
                          httpStatus: 429
                          initialBackoff: 1000
                          maxBackoff: 10000
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                retainBlobOnSuccess:
                    default: false
                    description: Prevent blob deletion after ingestion is complete
                    title: Retain blob on success
                    type: boolean
                scope:
                    description: Scope to pass in the OAuth request parameter
                    title: Scope
                    type: string
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant and stable storage.
                    title: Staging location
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                table:
                    description: Name of the table to ingest data into
                    maxLength: 1024
                    pattern: ^[\w\-\.]+$
                    title: Table name
                    type: string
                tenantId:
                    description: Directory ID (tenant identifier) in Azure Active Directory
                    title: Tenant ID
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: Client secret (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                type:
                    enum:
                        - azure_data_explorer
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                validateDatabaseSettings:
                    default: true
                    description: When saving or starting the Destination, validate the database name and credentials; also validate table name, except when creating a new table. Disable if your Azure app does not have both the Database Viewer and the Table Viewer role.
                    title: Validate database settings
                    type: boolean
            required:
                - clusterUrl
                - database
                - table
                - compress
                - oauthEndpoint
                - tenantId
                - clientId
                - scope
                - oauthType
            type: object
        OutputAzureEventhub:
            properties:
                ack:
                    default: 1
                    description: Control the number of required acknowledgments
                    enum:
                        - 1
                        - 0
                        - -1
                    title: Acknowledgments
                    type: integer
                authenticationTimeout:
                    default: 10000
                    description: Maximum time to wait for Kafka to respond to an authentication request
                    maximum: 3600000
                    minimum: 1000
                    title: Authentication timeout (ms)
                    type: number
                backoffRate:
                    default: 2
                    description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
                    maximum: 20
                    minimum: 2
                    title: Backoff multiplier
                    type: number
                brokers:
                    description: List of Event Hubs Kafka brokers to connect to, eg. yourdomain.servicebus.windows.net:9093. The hostname can be found in the host portion of the primary or secondary connection string in Shared Access Policies.
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Brokers
                    type: array
                connectionTimeout:
                    default: 10000
                    description: Maximum time to wait for a connection to complete successfully
                    maximum: 3600000
                    minimum: 1000
                    title: Connection timeout (ms)
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushEventCount:
                    default: 1000
                    description: Maximum number of events in a batch before forcing a flush
                    maximum: 10000
                    minimum: 1
                    title: Events-per-batch limit
                    type: number
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
                    title: Flush period (sec)
                    type: number
                format:
                    default: json
                    description: Format to use to serialize events before writing to the Event Hubs Kafka brokers
                    enum:
                        - json
                        - raw
                    title: Record data format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                initialBackoff:
                    default: 300
                    description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
                    maximum: 600000
                    minimum: 300
                    title: Initial retry interval (ms)
                    type: number
                maxBackOff:
                    default: 30000
                    description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
                    maximum: 180000
                    minimum: 30000
                    title: Backoff limit (ms)
                    type: number
                maxRecordSizeKB:
                    default: 768
                    description: Maximum size of each record batch before compression. Setting should be < message.max.bytes settings in Event Hubs brokers.
                    minimum: 1
                    title: Record size limit (KB, uncompressed)
                    type: number
                maxRetries:
                    default: 5
                    description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
                    maximum: 100
                    minimum: 0
                    title: Retry limit
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                reauthenticationThreshold:
                    default: 10000
                    description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
                    maximum: 1800000
                    minimum: 1000
                    title: Reauthentication threshold (ms)
                    type: number
                requestTimeout:
                    default: 60000
                    description: Maximum time to wait for Kafka to respond to a request
                    maximum: 3600000
                    minimum: 1000
                    title: Request timeout (ms)
                    type: number
                sasl:
                    description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
                    properties:
                        disabled:
                            default: false
                            title: Disabled
                            type: boolean
                        mechanism:
                            default: plain
                            enum:
                                - plain
                                - oauthbearer
                            title: SASL mechanism
                            type: string
                    required:
                        - disabled
                    title: Authentication
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                tls:
                    properties:
                        disabled:
                            default: false
                            title: Disabled
                            type: boolean
                        rejectUnauthorized:
                            default: true
                            description: Reject certificates that are not authorized by a CA in the CA certificate path, or by another trusted CA (such as the system's)
                            title: Validate server certs
                            type: boolean
                    required:
                        - disabled
                    title: TLS settings (client side)
                    type: object
                topic:
                    description: The name of the Event Hub (Kafka Topic) to publish events. Can be overwritten using field __topicOut.
                    title: Event Hub name
                    type: string
                type:
                    enum:
                        - azure_eventhub
                    type: string
            required:
                - brokers
                - topic
            type: object
        OutputAzureLogs:
            properties:
                apiUrl:
                    default: .ods.opinsights.azure.com
                    description: 'The DNS name of the Log API endpoint that sends log data to a Log Analytics workspace in Azure Monitor. Defaults to .ods.opinsights.azure.com. @{product} will add a prefix and suffix to construct a URI in this format: <https://<Workspace_ID><your_DNS_name>/api/logs?api-version=<API version>.'
                    pattern: ^\.[^\/]+$
                    title: DNS name of API endpoint
                    type: string
                authType:
                    default: manual
                    description: Enter workspace ID and workspace key directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keypairSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                logType:
                    default: Cribl
                    description: The Log Type of events sent to this LogAnalytics workspace. Defaults to `Cribl`. Use only letters, numbers, and `_` characters, and can't exceed 100 characters. Can be overwritten by event field __logType.
                    maxLength: 100
                    title: Log Type
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 1024
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                resourceId:
                    description: Optional Resource ID of the Azure resource to associate the data with. Can be overridden by the __resourceId event field. This ID populates the _ResourceId property, allowing the data to be included in resource-centric queries. If the ID is neither specified nor overridden, resource-centric queries will omit the data.
                    title: Resource ID
                    type: string
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                type:
                    enum:
                        - azure_logs
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                workspaceId:
                    description: Azure Log Analytics Workspace ID. See Azure Dashboard Workspace > Advanced settings.
                    title: Workspace ID
                    type: string
                workspaceKey:
                    description: Azure Log Analytics Workspace Primary or Secondary Shared Key. See Azure Dashboard Workspace > Advanced settings.
                    title: Workspace key
                    type: string
            required:
                - logType
                - type
            type: object
        OutputClickHouse:
            properties:
                asyncInserts:
                    default: false
                    description: Collect data into batches for later processing. Disable to write to a ClickHouse table immediately.
                    title: Async inserts
                    type: boolean
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: none
                    description: ""
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - sslUserCertificate
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                columnMappings:
                    description: ""
                    items:
                        properties:
                            columnName:
                                description: Name of the column in ClickHouse that will store field value
                                title: Column name
                                type: string
                            columnType:
                                description: Type of the column in the ClickHouse database
                                title: Column type
                                type: string
                            columnValueExpression:
                                description: JavaScript expression to compute value to be inserted into ClickHouse table
                                title: Column value
                                type: string
                        required:
                            - columnName
                            - columnValueExpression
                        type: object
                    title: Column Mapping
                    type: array
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                database:
                    title: ClickHouse database
                    type: string
                describeTable:
                    description: Retrieves the table schema from ClickHouse and populates the Column Mapping table
                    title: Retrieve table columns
                    type: string
                description:
                    title: Description
                    type: string
                dumpFormatErrorsToDisk:
                    default: false
                    description: Log the most recent event that fails to match the table schema
                    title: Log last schema mismatch
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeMappingFields:
                    default: []
                    description: Fields to exclude from sending to ClickHouse
                    items:
                        minLength: 0
                        type: string
                    minItems: 0
                    title: Exclude fields
                    type: array
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                format:
                    default: json-compact-each-row-with-names
                    description: Data format to use when sending data to ClickHouse. Defaults to JSON Compact.
                    enum:
                        - json-compact-each-row-with-names
                        - json-each-row
                    title: Format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                mappingType:
                    default: automatic
                    description: How event fields are mapped to ClickHouse columns.
                    enum:
                        - automatic
                        - custom
                    title: Mapping type
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                sqlUsername:
                    description: Username for certificate authentication
                    title: Username
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                tableName:
                    description: Name of the ClickHouse table where data will be inserted. Name can contain letters (A-Z, a-z), numbers (0-9), and the character "_", and must start with either a letter or the character "_".
                    pattern: ^[a-zA-Z_][0-9a-zA-Z_]*$
                    title: ClickHouse table
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                type:
                    enum:
                        - click_house
                    type: string
                url:
                    description: 'URL of the ClickHouse instance. Example: http://localhost:8123/'
                    title: URL
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                username:
                    title: Username
                    type: string
                waitForAsyncInserts:
                    default: true
                    description: Cribl will wait for confirmation that data has been fully inserted into the ClickHouse database before proceeding. Disabling this option can increase throughput, but Cribl won’t be able to verify data has been completely inserted.
                    title: Wait for async inserts
                    type: boolean
            required:
                - database
                - tableName
                - url
            type: object
        OutputCloudwatch:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                description:
                    title: Description
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access CloudWatchLogs
                    title: Enable for CloudWatchLogs
                    type: boolean
                endpoint:
                    description: CloudWatchLogs service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to CloudWatchLogs-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                logGroupName:
                    description: CloudWatch log group to associate events with
                    title: Log group name
                    type: string
                logStreamName:
                    description: 'Prefix for CloudWatch log stream name. This prefix will be used to generate a unique log stream name per cribl instance, for example: myStream_myHost_myOutputId'
                    title: Log stream prefix
                    type: string
                maxQueueSize:
                    default: 5
                    description: Maximum number of queued batches before blocking
                    maximum: 32
                    minimum: 1
                    title: Queue size limit
                    type: number
                maxRecordSizeKB:
                    default: 1024
                    description: Maximum size (KB) of each individual record before compression. For non compressible data 1MB is the max recommended size
                    maximum: 10240
                    minimum: 1
                    title: Record size limit (KB, uncompressed)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                region:
                    description: Region where the CloudWatchLogs is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - cloudwatch
                    type: string
            required:
                - logGroupName
                - logStreamName
                - region
            type: object
        OutputConfluentCloud:
            properties:
                ack:
                    default: 1
                    description: Control the number of required acknowledgments.
                    enum:
                        - 1
                        - 0
                        - -1
                    title: Acknowledgments
                    type: integer
                authenticationTimeout:
                    default: 10000
                    description: Maximum time to wait for Kafka to respond to an authentication request
                    maximum: 3600000
                    minimum: 1000
                    title: Authentication timeout (ms)
                    type: number
                backoffRate:
                    default: 2
                    description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
                    maximum: 20
                    minimum: 2
                    title: Backoff multiplier
                    type: number
                brokers:
                    description: List of Confluent Cloud bootstrap servers to use, such as yourAccount.confluent.cloud:9092.
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Bootstrap servers
                    type: array
                compression:
                    default: gzip
                    description: Codec to use to compress the data before sending to Kafka
                    enum:
                        - none
                        - gzip
                        - snappy
                        - lz4
                    title: Compression
                    type: string
                connectionTimeout:
                    default: 10000
                    description: Maximum time to wait for a connection to complete successfully
                    maximum: 3600000
                    minimum: 1000
                    title: Connection timeout (ms)
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushEventCount:
                    default: 1000
                    description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
                    maximum: 10000
                    minimum: 1
                    title: Events-per-batch limit
                    type: number
                flushPeriodSec:
                    default: 1
                    description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
                    title: Flush period (sec)
                    type: number
                format:
                    default: json
                    description: Format to use to serialize events before writing to Kafka.
                    enum:
                        - json
                        - raw
                        - protobuf
                    title: Record data format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                initialBackoff:
                    default: 300
                    description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
                    maximum: 600000
                    minimum: 300
                    title: Initial retry interval (ms)
                    type: number
                kafkaSchemaRegistry:
                    properties:
                        auth:
                            description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
                            properties:
                                credentialsSecret:
                                    description: Select or create a secret that references your credentials
                                    title: Credentials secret
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                            required:
                                - disabled
                            type: object
                        connectionTimeout:
                            default: 30000
                            description: Maximum time to wait for a Schema Registry connection to complete successfully
                            maximum: 60000
                            minimum: 1000
                            title: Connection timeout (ms)
                            type: number
                        defaultKeySchemaId:
                            description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
                            title: Default key schema ID
                            type: number
                        defaultValueSchemaId:
                            description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
                            title: Default value schema ID
                            type: number
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxRetries:
                            default: 1
                            description: Maximum number of times to try fetching schemas from the Schema Registry
                            maximum: 100
                            minimum: 0
                            title: Retry limit
                            type: number
                        requestTimeout:
                            default: 30000
                            description: Maximum time to wait for the Schema Registry to respond to a request
                            maximum: 60000
                            minimum: 1000
                            title: Request timeout (ms)
                            type: number
                        schemaRegistryURL:
                            default: http://localhost:8081
                            description: 'URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http.'
                            title: Schema Registry URL
                            type: string
                        tls:
                            properties:
                                caPath:
                                    description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                                    title: CA certificate path
                                    type: string
                                certPath:
                                    description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                                    title: Certificate path (mutual auth)
                                    type: string
                                certificateName:
                                    description: The name of the predefined certificate
                                    title: Certificate
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                                maxVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Maximum TLS version
                                    type: string
                                minVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Minimum TLS version
                                    type: string
                                passphrase:
                                    description: Passphrase to use to decrypt private key
                                    title: Passphrase
                                    type: string
                                privKeyPath:
                                    description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                                    title: Private key path (mutual auth)
                                    type: string
                                rejectUnauthorized:
                                    default: true
                                    description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                                    title: Validate server certs
                                    type: boolean
                                servername:
                                    description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                                    title: Server name (SNI)
                                    type: string
                            title: TLS settings (client side)
                            type: object
                    required:
                        - disabled
                    title: Kafka Schema Registry Authentication
                    type: object
                maxBackOff:
                    default: 30000
                    description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
                    maximum: 180000
                    minimum: 30000
                    title: Backoff limit (ms)
                    type: number
                maxRecordSizeKB:
                    default: 768
                    description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
                    minimum: 1
                    title: Record size limit (KB, uncompressed)
                    type: number
                maxRetries:
                    default: 5
                    description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
                    maximum: 100
                    minimum: 0
                    title: Retry limit
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protobufLibraryId:
                    description: Select a set of Protobuf definitions for the events you want to send
                    title: Definition set
                    type: string
                reauthenticationThreshold:
                    default: 10000
                    description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
                    maximum: 1800000
                    minimum: 1000
                    title: Reauthentication threshold (ms)
                    type: number
                requestTimeout:
                    default: 60000
                    description: Maximum time to wait for Kafka to respond to a request
                    maximum: 3600000
                    minimum: 1000
                    title: Request timeout (ms)
                    type: number
                sasl:
                    description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
                    properties:
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        mechanism:
                            default: plain
                            enum:
                                - plain
                                - scram-sha-256
                                - scram-sha-512
                                - kerberos
                            title: SASL mechanism
                            type: string
                    required:
                        - disabled
                    title: Authentication
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: false
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                topic:
                    description: The topic to publish events to. Can be overridden using the __topicOut field.
                    title: Topic
                    type: string
                type:
                    enum:
                        - confluent_cloud
                    type: string
            required:
                - brokers
                - topic
            type: object
        OutputCriblHttp:
            properties:
                compression:
                    default: gzip
                    description: Codec to use to compress the data before sending
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 600
                    description: The interval in which to re-resolve any hostnames and pick up destinations from A records
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (seconds)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeFields:
                    default:
                        - __kube_*
                        - __metadata
                        - __winEvent
                    description: 'Fields to exclude from the event. By default, all internal fields except `__output` are sent. Example: `cribl_pipe`, `c*`. Wildcards supported.'
                    items:
                        type: string
                    title: Exclude fields
                    type: array
                excludeSelf:
                    default: false
                    description: Exclude all IPs of the current host from the list of any resolved hostnames
                    title: Exclude current host IPs
                    type: boolean
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loadBalanceStatsPeriodSec:
                    default: 300
                    description: How far back in time to keep traffic stats for load balancing purposes
                    minimum: 10
                    title: Load balance stats period (seconds)
                    type: number
                loadBalanced:
                    default: true
                    description: For optimal performance, enable load balancing even if you have one hostname, as it can expand to multiple IPs. If this setting is disabled, consider enabling round-robin DNS.
                    title: Load balancing
                    type: boolean
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                tokenTTLMinutes:
                    default: 60
                    description: The number of minutes before the internally generated authentication token expires. Valid values are between 1 and 60.
                    maximum: 60
                    minimum: 1
                    title: Auth Token TTL minutes
                    type: number
                type:
                    enum:
                        - cribl_http
                    type: string
                url:
                    description: URL of a Cribl Worker to send events to, such as http://localhost:10200
                    pattern: ^https?://.*
                    title: Cribl endpoint
                    type: string
                urls:
                    description: ""
                    items:
                        properties:
                            url:
                                description: URL of a Cribl Worker to send events to, such as http://localhost:10200
                                pattern: ^https?://.*
                                title: Cribl Endpoint
                                type: string
                            weight:
                                default: 1
                                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                                minimum: 0
                                title: Load Weight
                                type: number
                        required:
                            - url
                        type: object
                    minItems: 1
                    title: Cribl Worker endpoints
                    type: array
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - id
                - type
            type: object
        OutputCriblLake:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    enum:
                        - auto
                        - auto_rpc
                        - manual
                    type: string
                awsSecretKey:
                    description: 'Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)'
                    title: Secret key
                    type: string
                baseFileName:
                    default: '`CriblOut`'
                    description: JavaScript expression to define the output filename prefix (can be constant)
                    title: File name prefix expression
                    type: string
                bucket:
                    description: 'Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`'
                    title: S3 bucket name
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                destPath:
                    description: Lake dataset to send the data to.
                    title: Lake dataset
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access S3
                    title: Enable for S3
                    type: boolean
                endpoint:
                    description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileNameSuffix:
                    default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
                    description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
                    title: File name suffix expression
                    type: string
                format:
                    enum:
                        - json
                        - parquet
                        - ddss
                    type: string
                headerLine:
                    default: ""
                    description: If set, this line will be written to the beginning of each output file
                    title: Header line
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                kmsKeyId:
                    description: ID or ARN of the KMS customer-managed key to use for encryption
                    title: KMS key ID
                    type: string
                maxClosingFilesToBackpressure:
                    default: 100
                    description: Maximum number of files that can be waiting for upload before backpressure is applied
                    maximum: 4200
                    minimum: 10
                    title: Staging file limit
                    type: number
                maxConcurrentFileParts:
                    default: 1
                    description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
                    maximum: 10
                    minimum: 1
                    title: Concurrent file parts limit
                    type: number
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                objectACL:
                    default: private
                    description: Object ACL to assign to uploaded objects
                    enum:
                        - private
                        - public-read
                        - public-read-write
                        - authenticated-read
                        - aws-exec-read
                        - bucket-owner-read
                        - bucket-owner-full-control
                    title: Object ACL
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                region:
                    description: Region where the S3 bucket is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                serverSideEncryption:
                    enum:
                        - AES256
                        - aws:kms
                    title: Server-side encryption for uploaded objects
                    type: string
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing S3 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
                    title: Staging location
                    type: string
                storageClass:
                    description: Storage class to select for uploaded objects
                    enum:
                        - STANDARD
                        - REDUCED_REDUNDANCY
                        - STANDARD_IA
                        - ONEZONE_IA
                        - INTELLIGENT_TIERING
                        - GLACIER
                        - GLACIER_IR
                        - DEEP_ARCHIVE
                    title: Storage class
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - cribl_lake
                    type: string
                verifyPermissions:
                    default: true
                    description: Disable if you can access files within the bucket but not the bucket itself
                    title: Verify if bucket exists
                    type: boolean
                writeHighWaterMark:
                    default: 64
                    description: Buffer size used to write to a file
                    maximum: 4096
                    minimum: 16
                    title: Writing high watermark (KB)
                    type: number
            required:
                - id
                - type
            type: object
        OutputCriblTcp:
            properties:
                compression:
                    default: gzip
                    description: Codec to use to compress the data before sending
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 600
                    description: The interval in which to re-resolve any hostnames and pick up destinations from A records
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (seconds)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeFields:
                    default:
                        - __kube_*
                        - __metadata
                        - __winEvent
                    description: 'Fields to exclude from the event. By default, all internal fields except `__output` are sent. Example: `cribl_pipe`, `c*`. Wildcards supported.'
                    items:
                        type: string
                    title: Exclude fields
                    type: array
                excludeSelf:
                    default: false
                    description: Exclude all IPs of the current host from the list of any resolved hostnames
                    title: Exclude current host IPs
                    type: boolean
                host:
                    description: The hostname of the receiver
                    title: Address
                    type: string
                hosts:
                    description: Set of hosts to load-balance data to
                    items:
                        properties:
                            host:
                                description: The hostname of the receiver
                                title: Address
                                type: string
                            port:
                                default: 10300
                                description: The port to connect to on the provided host
                                maximum: 65535
                                title: Port
                                type: number
                            servername:
                                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
                                title: TLS Servername
                                type: string
                            tls:
                                default: inherit
                                description: Whether to inherit TLS configs from group setting or disable TLS
                                enum:
                                    - inherit
                                    - "off"
                                title: TLS
                                type: string
                            weight:
                                default: 1
                                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                                minimum: 0
                                title: Load Weight
                                type: number
                        required:
                            - host
                            - port
                        type: object
                    minItems: 1
                    title: Destinations
                    type: array
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loadBalanceStatsPeriodSec:
                    default: 300
                    description: How far back in time to keep traffic stats for load balancing purposes
                    minimum: 10
                    title: Load balance stats period (seconds)
                    type: number
                loadBalanced:
                    default: true
                    description: Use load-balanced destinations
                    title: Load balancing
                    type: boolean
                logFailedRequests:
                    default: false
                    description: Use to troubleshoot issues with sending data
                    title: Log failed requests to disk
                    type: boolean
                maxConcurrentSenders:
                    default: 0
                    description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
                    minimum: 0
                    title: Connection limit
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                port:
                    default: 10300
                    description: The port to connect to on the provided host
                    maximum: 65535
                    title: Port
                    type: number
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                tokenTTLMinutes:
                    default: 60
                    description: The number of minutes before the internally generated authentication token expires, valid values between 1 and 60
                    maximum: 60
                    minimum: 1
                    title: Auth Token TTL minutes
                    type: number
                type:
                    enum:
                        - cribl_tcp
                    type: string
                writeTimeout:
                    default: 60000
                    description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
                    title: Write timeout
                    type: number
            required:
                - id
                - type
            type: object
        OutputCrowdstrikeNextGenSiem:
            properties:
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                format:
                    default: raw
                    description: When set to JSON, the event is automatically formatted with required fields before sending. When set to Raw, only the event's `_raw` value is sent.
                    enum:
                        - JSON
                        - raw
                    title: Request format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 32768
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Next-Gen SIEM authentication token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    title: Next-Gen SIEM authentication token
                    type: string
                type:
                    enum:
                        - crowdstrike_next_gen_siem
                    type: string
                url:
                    description: "URL provided from a CrowdStrike data connector. \nExample: https://ingest.<region>.crowdstrike.com/api/ingest/hec/<connection-id>/v1/services/collector"
                    pattern: ^https?://.*
                    title: Next-Gen SIEM endpoint
                    type: string
                useRoundRobinDns:
                    default: true
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - format
                - url
            type: object
        OutputDatadog:
            properties:
                allowApiKeyFromEvents:
                    default: false
                    description: Allow API key to be set from the event's '__agent_api_key' field
                    title: Allow API key from events
                    type: boolean
                apiKey:
                    description: Organization's API key in Datadog
                    title: API key
                    type: string
                authType:
                    default: manual
                    description: Enter API key directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                batchByTags:
                    default: true
                    description: Batch events by API key and the ddtags field on the event. When disabled, batches events only by API key. If incoming events have high cardinality in the ddtags field, disabling this setting may improve Destination performance.
                    title: Batch by tags
                    type: boolean
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                contentType:
                    default: json
                    description: The content type to use when sending logs
                    enum:
                        - text
                        - json
                    title: Send logs as
                    type: string
                customUrl:
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                host:
                    description: Name of the host to send with logs. When you send logs as JSON objects, the event's 'host' field (if set) will override this value.
                    title: Host
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                message:
                    description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
                    title: Message field
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                sendCountersAsCount:
                    default: false
                    description: If not enabled, Datadog will transform 'counter' metrics to 'gauge'. [Learn more about Datadog metrics types.](https://docs.datadoghq.com/metrics/types/?tab=count)
                    title: Send counter metrics as 'count'
                    type: boolean
                service:
                    description: Name of the service to send with logs. When you send logs as JSON objects, the event's '__service' field (if set) will override this value.
                    title: Service
                    type: string
                severity:
                    description: Default value for message severity. When you send logs as JSON objects, the event's '__severity' field (if set) will override this value.
                    enum:
                        - emergency
                        - alert
                        - critical
                        - error
                        - warning
                        - notice
                        - info
                        - debug
                    title: Severity
                    type: string
                site:
                    default: us
                    description: Datadog site to which events should be sent
                    enum:
                        - us
                        - us3
                        - us5
                        - eu
                        - fed1
                        - ap1
                        - custom
                    title: Datadog site
                    type: string
                source:
                    description: Name of the source to send with logs. When you send logs as JSON objects, the event's 'source' field (if set) will override this value.
                    title: Source
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                tags:
                    default: []
                    description: List of tags to send with logs, such as 'env:prod' and 'env_staging:east'
                    items:
                        type: string
                    title: Datadog tags
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: API key (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - datadog
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - id
                - type
            type: object
        OutputDataset:
            properties:
                apiKey:
                    description: A 'Log Write Access' API key for the DataSet account
                    title: API key
                    type: string
                authType:
                    default: manual
                    description: Enter API key directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                customUrl:
                    pattern: ^https?://.*
                    type: string
                defaultSeverity:
                    default: info
                    description: Default value for event severity. If the `sev` or `__severity` fields are set on an event, the first one matching will override this value.
                    enum:
                        - finest
                        - finer
                        - fine
                        - info
                        - warning
                        - error
                        - fatal
                    title: Severity
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeFields:
                    default:
                        - sev
                        - _time
                        - ts
                        - thread
                    description: Fields to exclude from the event if the Message field is either unspecified or refers to an object. Ignored if the Message field is a string. If empty, we send all non-internal fields.
                    items:
                        type: string
                    title: Exclude fields
                    type: array
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 6144
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                messageField:
                    description: Name of the event field that contains the message or attributes to send. If not specified, all of the event's non-internal fields will be sent as attributes.
                    title: Message field
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default:
                        - backoffRate: 2
                          httpStatus: 429
                          initialBackoff: 1000
                          maxBackoff: 10000
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                serverHostField:
                    description: Name of the event field that contains the `serverHost` identifier. If not specified, defaults to `cribl_<outputId>`.
                    title: Server/host field
                    type: string
                site:
                    default: us
                    description: DataSet site to which events should be sent
                    enum:
                        - us
                        - eu
                        - custom
                    title: DataSet site
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: API key (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                timestampField:
                    description: Name of the event field that contains the timestamp. If not specified, defaults to `ts`, `_time`, or `Date.now()`, in that order.
                    title: Timestamp field
                    type: string
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - dataset
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - id
                - type
            type: object
        OutputDefault:
            properties:
                defaultId:
                    description: ID of the default output. This will be used whenever a nonexistent/deleted output is referenced.
                    title: Default Output ID
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - default
                    type: string
            required:
                - defaultId
                - type
            type: object
        OutputDevnull:
            properties:
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - devnull
                    type: string
            required:
                - id
                - type
            type: object
        OutputDiskSpool:
            properties:
                compress:
                    default: gzip
                    description: Data compression format. Default is gzip.
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxDataSize:
                    default: 1GB
                    description: 'Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB.'
                    pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
                    title: Data size limit
                    type: string
                maxDataTime:
                    default: 24h
                    description: 'Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h.'
                    pattern: \d+[smhd]$
                    title: Data age limit
                    type: string
                partitionExpr:
                    description: JavaScript expression defining how files are partitioned and organized within the time-buckets. If blank, the event's __partition property is used and otherwise, events go directly into the time-bucket directory.
                    title: Partitioning expression
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeWindow:
                    default: 10m
                    description: Time period for grouping spooled events. Default is 10m.
                    title: Bucket time span
                    type: string
                type:
                    enum:
                        - disk_spool
                    type: string
            required:
                - id
                - type
            type: object
        OutputDlS3:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                automaticSchema:
                    default: false
                    description: Automatically calculate the schema based on the events of each Parquet file generated
                    title: Automatic schema
                    type: boolean
                awsApiKey:
                    description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    description: 'Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)'
                    title: Secret key
                    type: string
                baseFileName:
                    default: '`CriblOut`'
                    description: JavaScript expression to define the output filename prefix (can be constant)
                    title: File name prefix expression
                    type: string
                bucket:
                    description: 'Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`'
                    title: S3 bucket name
                    type: string
                compress:
                    default: gzip
                    description: Data compression format to apply to HTTP content before it is delivered
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                compressionLevel:
                    default: best_speed
                    description: Compression level to apply before moving files to final destination
                    enum:
                        - best_speed
                        - normal
                        - best_compression
                    title: Compression level
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                destPath:
                    default: ""
                    description: 'Prefix to append to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`'
                    title: Key prefix
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access S3
                    title: Enable for S3
                    type: boolean
                enablePageChecksum:
                    default: false
                    description: Parquet tools can use the checksum of a Parquet page to verify data integrity
                    title: Write page checksum
                    type: boolean
                enableStatistics:
                    default: true
                    description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
                    title: Write statistics
                    type: boolean
                enableWritePageIndex:
                    default: true
                    description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
                    title: Write page indexes
                    type: boolean
                endpoint:
                    description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileNameSuffix:
                    default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
                    description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
                    title: File name suffix expression
                    type: string
                format:
                    default: json
                    description: Format of the output data
                    enum:
                        - json
                        - raw
                        - parquet
                    title: Data format
                    type: string
                headerLine:
                    default: ""
                    description: If set, this line will be written to the beginning of each output file
                    title: Header line
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keyValueMetadata:
                    description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata (optional)
                    type: array
                kmsKeyId:
                    description: ID or ARN of the KMS customer-managed key to use for encryption
                    title: KMS key ID
                    type: string
                maxClosingFilesToBackpressure:
                    default: 100
                    description: Maximum number of files that can be waiting for upload before backpressure is applied
                    maximum: 4200
                    minimum: 10
                    title: Staging file limit
                    type: number
                maxConcurrentFileParts:
                    default: 4
                    description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
                    maximum: 10
                    minimum: 1
                    title: Concurrent file parts upload limit
                    type: number
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                objectACL:
                    default: private
                    description: Object ACL to assign to uploaded objects
                    enum:
                        - private
                        - public-read
                        - public-read-write
                        - authenticated-read
                        - aws-exec-read
                        - bucket-owner-read
                        - bucket-owner-full-control
                    title: Object ACL
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                parquetDataPageVersion:
                    default: DATA_PAGE_V2
                    description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
                    enum:
                        - DATA_PAGE_V1
                        - DATA_PAGE_V2
                    title: Data page version
                    type: string
                parquetPageSize:
                    default: 1MB
                    description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
                    pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
                    title: Page size
                    type: string
                parquetRowGroupLength:
                    default: 10000
                    description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
                    maximum: 67108864
                    minimum: 1
                    title: Group row limit
                    type: number
                parquetVersion:
                    default: PARQUET_2_6
                    description: Determines which data types are supported and how they are represented
                    enum:
                        - PARQUET_1_0
                        - PARQUET_2_4
                        - PARQUET_2_6
                    title: Parquet version
                    type: string
                partitioningFields:
                    default: []
                    description: List of fields to partition the path by, in addition to time, which is included automatically. The effective partition will be YYYY/MM/DD/HH/<list/of/fields>.
                    items:
                        type: string
                    title: Partition by fields
                    type: array
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                region:
                    description: Region where the S3 bucket is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                serverSideEncryption:
                    enum:
                        - AES256
                        - aws:kms
                    title: Server-side encryption for uploaded objects
                    type: string
                shouldLogInvalidRows:
                    description: Log up to 3 rows that @{product} skips due to data mismatch
                    title: Log invalid rows
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing S3 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
                    title: Staging location
                    type: string
                storageClass:
                    description: Storage class to select for uploaded objects
                    enum:
                        - STANDARD
                        - REDUCED_REDUNDANCY
                        - STANDARD_IA
                        - ONEZONE_IA
                        - INTELLIGENT_TIERING
                        - GLACIER
                        - GLACIER_IR
                        - DEEP_ARCHIVE
                    title: Storage class
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - dl_s3
                    type: string
                verifyPermissions:
                    default: true
                    description: Disable if you can access files within the bucket but not the bucket itself
                    title: Verify if bucket exists
                    type: boolean
                writeHighWaterMark:
                    default: 64
                    description: Buffer size used to write to a file
                    maximum: 4096
                    minimum: 16
                    title: Writing high watermark (KB)
                    type: number
            required:
                - bucket
                - stagePath
            type: object
        OutputDynatraceHttp:
            properties:
                activeGateDomain:
                    description: ActiveGate domain with Log analytics collector module enabled. For example https://{activeGate-domain}:9999/e/{environment-id}/api/v2/logs/ingest.
                    title: ActiveGate domain
                    type: string
                authType:
                    default: token
                    enum:
                        - token
                        - textSecret
                    title: Authentication type
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                endpoint:
                    default: cloud
                    enum:
                        - cloud
                        - activeGate
                        - manual
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                environmentId:
                    description: ID of the environment to send to
                    title: Environment ID
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                format:
                    default: json_array
                    description: How to format events before sending. Defaults to JSON. Plaintext is not currently supported.
                    enum:
                        - json_array
                        - plaintext
                    title: Format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keepAlive:
                    default: true
                    description: Disable to close the connection immediately after sending the outgoing request
                    title: Keep alive
                    type: boolean
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    maximum: 50000
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 5000
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                method:
                    default: POST
                    description: The method to use when sending events
                    enum:
                        - POST
                        - PUT
                        - PATCH
                    title: Method
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                telemetryType:
                    default: logs
                    enum:
                        - logs
                        - metrics
                    title: Telemetry type
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - dynatrace_http
                    type: string
                url:
                    description: URL to send events to. Can be overwritten by an event's __url field.
                    pattern: ^https?://.*
                    title: URL
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - format
                - endpoint
                - telemetryType
            type: object
        OutputDynatraceOtlp:
            properties:
                authTokenName:
                    default: Authorization
                    title: Api-Token name
                    type: string
                compress:
                    default: gzip
                    description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
                    enum:
                        - none
                        - deflate
                        - gzip
                    title: Compression
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                endpoint:
                    default: https://{your-environment-id}.live.dynatrace.com/api/v2/otlp
                    description: The endpoint where Dynatrace events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets)
                    title: Endpoint
                    type: string
                endpointType:
                    default: saas
                    description: Select the type of Dynatrace endpoint configured
                    enum:
                        - saas
                        - ag
                    title: Endpoint type
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                httpCompress:
                    default: gzip
                    description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                httpLogsEndpointOverride:
                    description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Logs endpoint override
                    type: string
                httpMetricsEndpointOverride:
                    description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Metrics endpoint override
                    type: string
                httpTracesEndpointOverride:
                    description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Traces endpoint override
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keepAlive:
                    default: true
                    description: Disable to close the connection immediately after sending the outgoing request
                    title: Keep alive
                    type: boolean
                keepAliveTime:
                    default: 30
                    description: How often the sender should ping the peer to keep the connection open
                    minimum: 1
                    title: Keep alive time (seconds)
                    type: number
                maxPayloadSizeKB:
                    default: 2048
                    description: Maximum size (in KB) of the request body. The maximum payload size is 4 MB. If this limit is exceeded, the entire OTLP message is dropped
                    maximum: 4096
                    minimum: 1024
                    title: Body size limit
                    type: number
                metadata:
                    description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata
                    type: array
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                otlpVersion:
                    default: 1.3.1
                    description: The version of OTLP Protobuf definitions to use when structuring data to send
                    enum:
                        - 1.3.1
                    title: OTLP version
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protocol:
                    default: http
                    description: Select a transport option for Dynatrace
                    enum:
                        - http
                    title: Protocol
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                tokenSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                type:
                    enum:
                        - dynatrace_otlp
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - endpoint
                - endpointType
                - protocol
                - otlpVersion
                - tokenSecret
            type: object
        OutputElastic:
            properties:
                auth:
                    properties:
                        authType:
                            default: manual
                            description: Enter credentials directly, or select a stored secret
                            enum:
                                - manual
                                - secret
                                - manualAPIKey
                                - textSecret
                            title: Authentication method
                            type: string
                        disabled:
                            default: true
                            title: Authentication Disabled
                            type: boolean
                    required:
                        - disabled
                    type: object
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 600
                    description: The interval in which to re-resolve any hostnames and pick up destinations from A records
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (seconds)
                    type: number
                docType:
                    description: Document type to use for events. Can be overwritten by an event's __type field.
                    title: Type
                    type: string
                elasticPipeline:
                    description: Optional Elasticsearch destination pipeline
                    title: Elastic pipeline
                    type: string
                elasticVersion:
                    default: auto
                    description: Optional Elasticsearch version, used to format events. If not specified, will auto-discover version.
                    enum:
                        - auto
                        - "6"
                        - "7"
                    title: Elastic version
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeSelf:
                    default: false
                    description: Exclude all IPs of the current host from the list of any resolved hostnames
                    title: Exclude current host IPs
                    type: boolean
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                extraParams:
                    default:
                        - name: filter_path
                          value: errors,items.*.error,items.*._index,items.*.status
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Extra parameters
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                includeDocId:
                    default: false
                    description: Include the `document_id` field when sending events to an Elastic TSDS (time series data stream)
                    title: Include document _id
                    type: boolean
                index:
                    description: Index or data stream to send events to. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be overwritten by an event's __index field.
                    title: Index or data stream
                    type: string
                loadBalanceStatsPeriodSec:
                    default: 300
                    description: How far back in time to keep traffic stats for load balancing purposes
                    minimum: 10
                    title: Load balance stats period (seconds)
                    type: number
                loadBalanced:
                    default: true
                    description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
                    title: Load balancing
                    type: boolean
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 102400
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                retryPartialErrors:
                    default: false
                    description: Retry failed events when a bulk request to Elastic is successful, but the response body returns an error for one or more events in the batch
                    title: Retry partial errors
                    type: boolean
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                type:
                    enum:
                        - elastic
                    type: string
                url:
                    description: 'The Cloud ID or URL to an Elastic cluster to send events to. Example: http://elastic:9200/_bulk'
                    title: Bulk API URL or Cloud ID
                    type: string
                urls:
                    description: ""
                    items:
                        properties:
                            url:
                                description: 'The URL to an Elastic node to send events to. Example: http://elastic:9200/_bulk'
                                title: URL
                                type: string
                            weight:
                                default: 1
                                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                                minimum: 0
                                title: Load Weight
                                type: number
                        required:
                            - url
                        type: object
                    minItems: 1
                    title: Bulk API URLs
                    type: array
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                writeAction:
                    default: create
                    description: Action to use when writing events. Must be set to `Create` when writing to a data stream.
                    enum:
                        - index
                        - create
                    title: Write action
                    type: string
            required:
                - index
                - type
            type: object
        OutputElasticCloud:
            properties:
                auth:
                    properties:
                        authType:
                            default: manual
                            description: Enter credentials directly, or select a stored secret
                            enum:
                                - manual
                                - secret
                                - manualAPIKey
                                - textSecret
                            title: Authentication method
                            type: string
                        disabled:
                            default: false
                            title: Authentication Disabled
                            type: boolean
                    required:
                        - disabled
                    type: object
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                elasticPipeline:
                    description: Optional Elastic Cloud Destination pipeline
                    title: Elastic pipeline
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                extraParams:
                    default:
                        - name: filter_path
                          value: errors,items.*.error,items.*._index,items.*.status
                    description: Extra parameters to use in HTTP requests
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: Extra parameters
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                includeDocId:
                    default: true
                    description: Include the `document_id` field when sending events to an Elastic TSDS (time series data stream)
                    title: Include document _id
                    type: boolean
                index:
                    description: Data stream or index to send events to. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be overwritten by an event's __index field.
                    title: Data stream or index
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 102400
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                type:
                    enum:
                        - elastic_cloud
                    type: string
                url:
                    description: Enter Cloud ID of the Elastic Cloud environment to send events to
                    title: Cloud ID
                    type: string
            required:
                - url
                - index
            type: object
        OutputExabeam:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                awsApiKey:
                    description: HMAC access key. Can be a constant or a JavaScript expression, such as `${C.env.GCS_ACCESS_KEY}`.
                    title: Access key
                    type: string
                awsSecretKey:
                    description: HMAC secret. Can be a constant or a JavaScript expression, such as `${C.env.GCS_SECRET}`.
                    title: Secret
                    type: string
                bucket:
                    description: 'Name of the destination bucket. A constant or a JavaScript expression that can only be evaluated at init time. Example of referencing a JavaScript Global Variable: `myBucket-${C.vars.myVar}`.'
                    title: Bucket name
                    type: string
                collectorInstanceId:
                    description: |
                        ID of the Exabeam Collector where data should be sent. Example: 11112222-3333-4444-5555-666677778888
                    title: Collector instance ID
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                encodedConfiguration:
                    description: Enter an encoded string containing Exabeam configurations
                    title: Exabeam connection string
                    type: string
                endpoint:
                    default: https://storage.googleapis.com
                    description: Google Cloud Storage service endpoint
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 10
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                objectACL:
                    default: private
                    description: Object ACL to assign to uploaded objects
                    enum:
                        - private
                        - bucket-owner-read
                        - bucket-owner-full-control
                        - project-private
                        - authenticated-read
                        - public-read
                    title: Object ACL
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                region:
                    description: Region where the bucket is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing Google Cloud Storage requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                siteId:
                    description: Exabeam site ID. If left blank, @{product} will use the value of the Exabeam site name.
                    title: Site ID
                    type: string
                siteName:
                    description: Constant or JavaScript expression to create an Exabeam site name. Values that aren't successfully evaluated will be treated as string constants.
                    title: Site name
                    type: string
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
                    title: Staging location
                    type: string
                storageClass:
                    description: Storage class to select for uploaded objects
                    enum:
                        - STANDARD
                        - NEARLINE
                        - COLDLINE
                        - ARCHIVE
                    title: Storage class
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timezoneOffset:
                    title: Timezone offset
                    type: string
                type:
                    enum:
                        - exabeam
                    type: string
            required:
                - bucket
                - region
                - endpoint
                - stagePath
                - collectorInstanceId
            type: object
        OutputFilesystem:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                automaticSchema:
                    default: false
                    description: Automatically calculate the schema based on the events of each Parquet file generated
                    title: Automatic schema
                    type: boolean
                baseFileName:
                    default: '`CriblOut`'
                    description: JavaScript expression to define the output filename prefix (can be constant)
                    title: File name prefix expression
                    type: string
                compress:
                    default: gzip
                    description: Data compression format to apply to HTTP content before it is delivered
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                compressionLevel:
                    default: best_speed
                    description: Compression level to apply before moving files to final destination
                    enum:
                        - best_speed
                        - normal
                        - best_compression
                    title: Compression level
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                destPath:
                    description: Final destination for the output files
                    title: Output location
                    type: string
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                enablePageChecksum:
                    default: false
                    description: Parquet tools can use the checksum of a Parquet page to verify data integrity
                    title: Write page checksum
                    type: boolean
                enableStatistics:
                    default: true
                    description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
                    title: Write statistics
                    type: boolean
                enableWritePageIndex:
                    default: true
                    description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
                    title: Write page indexes
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileNameSuffix:
                    default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
                    description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
                    title: File name suffix expression
                    type: string
                format:
                    default: json
                    description: Format of the output data
                    enum:
                        - json
                        - raw
                        - parquet
                    title: Data format
                    type: string
                headerLine:
                    default: ""
                    description: If set, this line will be written to the beginning of each output file
                    title: Header line
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keyValueMetadata:
                    description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata (optional)
                    type: array
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                parquetDataPageVersion:
                    default: DATA_PAGE_V2
                    description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
                    enum:
                        - DATA_PAGE_V1
                        - DATA_PAGE_V2
                    title: Data page version
                    type: string
                parquetPageSize:
                    default: 1MB
                    description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
                    pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
                    title: Page size
                    type: string
                parquetRowGroupLength:
                    default: 10000
                    description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
                    maximum: 67108864
                    minimum: 1
                    title: Group row limit
                    type: number
                parquetVersion:
                    default: PARQUET_2_6
                    description: Determines which data types are supported and how they are represented
                    enum:
                        - PARQUET_1_0
                        - PARQUET_2_4
                        - PARQUET_2_6
                    title: Parquet version
                    type: string
                partitionExpr:
                    default: 'C.Time.strftime(_time ? _time : Date.now()/1000, ''%Y/%m/%d'')'
                    description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
                    title: Partitioning expression
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                shouldLogInvalidRows:
                    description: Log up to 3 rows that @{product} skips due to data mismatch
                    title: Log invalid rows
                    type: boolean
                stagePath:
                    description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant, stable storage.
                    title: Staging location
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - filesystem
                    type: string
                writeHighWaterMark:
                    default: 64
                    description: Buffer size used to write to a file
                    maximum: 4096
                    minimum: 16
                    title: Writing high watermark (KB)
                    type: number
            required:
                - destPath
                - type
            type: object
        OutputGoogleChronicle:
            properties:
                apiKey:
                    description: Organization's API key in Google SecOps
                    title: API key
                    type: string
                apiKeySecret:
                    description: Select or create a stored text secret
                    title: API key (text secret)
                    type: string
                apiVersion:
                    default: v1
                    enum:
                        - v1
                        - v2
                    title: API version
                    type: string
                authenticationMethod:
                    default: serviceAccount
                    enum:
                        - manual
                        - secret
                        - serviceAccount
                        - serviceAccountSecret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                customLabels:
                    description: 'Custom labels to be added to every batch '
                    items:
                        properties:
                            key:
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    title: Custom labels
                    type: array
                customerId:
                    description: Unique identifier (UUID) corresponding to a particular SecOps instance. Provided by your SecOps representative.
                    title: Customer ID
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                extraLogTypes:
                    description: Custom log types. If the value "Custom" is selected in the setting "Default log type" above, the first custom log type in this table will be automatically selected as default log type.
                    items:
                        properties:
                            description:
                                title: Description
                                type: string
                            logType:
                                pattern: ^[A-Z0-9_]+$
                                title: Log Type
                                type: string
                        required:
                            - logType
                        type: object
                    title: Custom log types
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                logFormatType:
                    default: unstructured
                    description: ""
                    enum:
                        - unstructured
                        - udm
                    title: Send events as
                    type: string
                logTextField:
                    description: Name of the event field that contains the log text to send. If not specified, Stream sends a JSON representation of the whole event.
                    title: Log text field
                    type: string
                logType:
                    description: Default log type value to send to SecOps. Can be overwritten by event field __logType.
                    title: Default log type
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 1024
                    description: Maximum size, in KB, of the request body
                    maximum: 1024
                    minimum: 1
                    title: Body size limit (KB)
                    type: number
                namespace:
                    description: User-configured environment namespace to identify the data domain the logs originated from. Use namespace as a tag to identify the appropriate data domain for indexing and enrichment functionality. Can be overwritten by event field __namespace.
                    title: Namespace
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                region:
                    description: Regional endpoint to send events to
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default:
                        - backoffRate: 1
                          httpStatus: 429
                          initialBackoff: 30000
                          maxBackoff: 30000
                        - backoffRate: 1
                          httpStatus: 503
                          initialBackoff: 30000
                          maxBackoff: 30000
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                serviceAccountCredentials:
                    description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
                    title: Service account credentials
                    type: string
                serviceAccountCredentialsSecret:
                    description: Select or create a stored text secret
                    title: Service account credentials (text secret)
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 90
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - google_chronicle
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned.
                    title: Round-robin DNS
                    type: boolean
            required:
                - logFormatType
                - type
            type: object
        OutputGoogleCloudLogging:
            properties:
                cacheFillBytesExpression:
                    description: A JavaScript expression that evaluates to the HTTP request cache fill bytes as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Cache fill bytes expression
                    type: string
                cacheHitExpression:
                    description: A JavaScript expression that evaluates to the HTTP request cache hit as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Cache hit expression
                    type: string
                cacheLookupExpression:
                    description: A JavaScript expression that evaluates to the HTTP request cache lookup as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Cache lookup expression
                    type: string
                cacheValidatedExpression:
                    description: A JavaScript expression that evaluates to the HTTP request cache validated with origin server as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Cache validated with origin server expression
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking.
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileExpression:
                    description: A JavaScript expression that evaluates to the log entry source location file as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
                    title: File expression
                    type: string
                firstExpression:
                    description: A JavaScript expression that evaluates to the log entry operation first flag as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
                    title: First expression
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
                    title: Flush period (sec)
                    type: number
                functionExpression:
                    description: A JavaScript expression that evaluates to the log entry source location function as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
                    title: Function expression
                    type: string
                googleAuthMethod:
                    default: manual
                    description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Google authentication method
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                idExpression:
                    description: A JavaScript expression that evaluates to the log entry operation ID as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
                    title: ID expression
                    type: string
                indexExpression:
                    description: A JavaScript expression that evaluates to the log entry log split index as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
                    title: Index expression
                    type: string
                insertIdExpression:
                    description: JavaScript expression to compute the value of the insert ID field.
                    title: Insert ID expression
                    type: string
                lastExpression:
                    description: A JavaScript expression that evaluates to the log entry operation last flag as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
                    title: Last expression
                    type: string
                latencyExpression:
                    description: A JavaScript expression that evaluates to the HTTP request latency, formatted as <seconds>.<nanoseconds>s (for example, 1.23s). See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Latency expression
                    type: string
                lineExpression:
                    description: A JavaScript expression that evaluates to the log entry source location line as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
                    title: Line expression
                    type: string
                logLabels:
                    description: Labels to apply to the log entry
                    items:
                        properties:
                            label:
                                description: Label name
                                title: Label
                                type: string
                            valueExpression:
                                description: JavaScript expression to compute the label's value.
                                title: Value
                                type: string
                        required:
                            - label
                            - valueExpression
                        type: object
                    title: Log labels
                    type: array
                logLocationExpression:
                    description: JavaScript expression to compute the value of the folder ID with which log entries should be associated.
                    title: Folder ID expression
                    type: string
                logLocationType:
                    enum:
                        - project
                        - organization
                        - billingAccount
                        - folder
                    title: Log location type
                    type: string
                logNameExpression:
                    description: JavaScript expression to compute the value of the log name.
                    title: Log name expression
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Max number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body.
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                payloadExpression:
                    description: JavaScript expression to compute the value of the payload. Must evaluate to a JavaScript object value. If an invalid value is encountered it will result in the default value instead. Defaults to the entire event.
                    title: Payload object expression
                    type: string
                payloadFormat:
                    default: text
                    description: Format to use when sending payload. Defaults to Text.
                    enum:
                        - text
                        - json
                    title: Payload format
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                producerExpression:
                    description: A JavaScript expression that evaluates to the log entry operation producer as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
                    title: Producer expression
                    type: string
                protocolExpression:
                    description: A JavaScript expression that evaluates to the HTTP request protocol as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Protocol expression
                    type: string
                refererExpression:
                    description: A JavaScript expression that evaluates to the HTTP request referer as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Referer expression
                    type: string
                remoteIpExpression:
                    description: A JavaScript expression that evaluates to the HTTP request remote IP as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Remote IP expression
                    type: string
                requestMethodExpression:
                    description: A JavaScript expression that evaluates to the HTTP request method as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Request method expression
                    type: string
                requestSizeExpression:
                    description: A JavaScript expression that evaluates to the HTTP request size as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Request size expression
                    type: string
                requestUrlExpression:
                    description: A JavaScript expression that evaluates to the HTTP request URL as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Request URL expression
                    type: string
                resourceTypeExpression:
                    description: JavaScript expression to compute the value of the managed resource type field. Must evaluate to one of the valid values [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types). Defaults to "global".
                    title: Resource type expression
                    type: string
                resourceTypeLabels:
                    description: Labels to apply to the managed resource. These must correspond to the valid labels for the specified resource type (see [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types)). Otherwise, they will be dropped by Google Cloud Logging.
                    items:
                        properties:
                            label:
                                description: Label name
                                title: Label
                                type: string
                            valueExpression:
                                description: JavaScript expression to compute the label's value.
                                title: Value
                                type: string
                        required:
                            - label
                            - valueExpression
                        type: object
                    title: Resource labels
                    type: array
                responseSizeExpression:
                    description: A JavaScript expression that evaluates to the HTTP response size as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Response size expression
                    type: string
                secret:
                    description: Select or create a stored text secret
                    title: Service account credentials (text secret)
                    type: string
                serverIpExpression:
                    description: A JavaScript expression that evaluates to the HTTP request server IP as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Server IP expression
                    type: string
                serviceAccountCredentials:
                    description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
                    title: Service account credentials
                    type: string
                severityExpression:
                    description: JavaScript expression to compute the value of the severity field. Must evaluate to one of the severity values supported by Google Cloud Logging [here](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logseverity) (case insensitive). Defaults to "DEFAULT".
                    title: Severity expression
                    type: string
                spanIdExpression:
                    description: A JavaScript expression that evaluates to the ID of the cloud trace span associated with the current operation in which the log is being written as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
                    title: Span ID expression
                    type: string
                statusExpression:
                    description: A JavaScript expression that evaluates to the HTTP request method as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Request status expression
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                throttleRateReqPerSec:
                    description: Maximum number of requests to limit to per second.
                    maximum: 2000
                    title: Throttle request rate
                    type: integer
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it.
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                totalSplitsExpression:
                    description: A JavaScript expression that evaluates to the log entry log split total splits as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
                    title: Total splits expression
                    type: string
                traceExpression:
                    description: A JavaScript expression that evaluates to the REST resource name of the trace being written as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
                    title: Trace expression
                    type: string
                traceSampledExpression:
                    description: A JavaScript expression that evaluates to the the sampling decision of the span associated with the log entry. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
                    title: Trace sampled expression
                    type: string
                type:
                    enum:
                        - google_cloud_logging
                    type: string
                uidExpression:
                    description: A JavaScript expression that evaluates to the log entry log split UID as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
                    title: UID expression
                    type: string
                userAgentExpression:
                    description: A JavaScript expression that evaluates to the HTTP request user agent as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
                    title: Request user agent expression
                    type: string
            required:
                - logLocationType
                - logLocationExpression
                - logNameExpression
            type: object
        OutputGoogleCloudStorage:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                automaticSchema:
                    default: false
                    description: Automatically calculate the schema based on the events of each Parquet file generated
                    title: Automatic schema
                    type: boolean
                awsApiKey:
                    description: HMAC access key. This value can be a constant or a JavaScript expression, such as `${C.env.GCS_ACCESS_KEY}`.
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: manual
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    description: HMAC secret. This value can be a constant or a JavaScript expression, such as `${C.env.GCS_SECRET}`.
                    title: Secret
                    type: string
                baseFileName:
                    default: '`CriblOut`'
                    description: JavaScript expression to define the output filename prefix (can be constant)
                    title: File name prefix expression
                    type: string
                bucket:
                    description: 'Name of the destination bucket. This value can be a constant or a JavaScript expression that can only be evaluated at init time. Example of referencing a Global Variable: `myBucket-${C.vars.myVar}`.'
                    title: Bucket name
                    type: string
                compress:
                    default: gzip
                    description: Data compression format to apply to HTTP content before it is delivered
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                compressionLevel:
                    default: best_speed
                    description: Compression level to apply before moving files to final destination
                    enum:
                        - best_speed
                        - normal
                        - best_compression
                    title: Compression level
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                destPath:
                    default: ""
                    description: 'Prefix to append to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`'
                    title: Key prefix
                    type: string
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                enablePageChecksum:
                    default: false
                    description: Parquet tools can use the checksum of a Parquet page to verify data integrity
                    title: Write page checksum
                    type: boolean
                enableStatistics:
                    default: true
                    description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
                    title: Write statistics
                    type: boolean
                enableWritePageIndex:
                    default: true
                    description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
                    title: Write page indexes
                    type: boolean
                endpoint:
                    default: https://storage.googleapis.com
                    description: Google Cloud Storage service endpoint
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileNameSuffix:
                    default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
                    description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
                    title: File name suffix expression
                    type: string
                format:
                    default: json
                    description: Format of the output data
                    enum:
                        - json
                        - raw
                        - parquet
                    title: Data format
                    type: string
                headerLine:
                    default: ""
                    description: If set, this line will be written to the beginning of each output file
                    title: Header line
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keyValueMetadata:
                    description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata (optional)
                    type: array
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 1800
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                objectACL:
                    default: private
                    description: Object ACL to assign to uploaded objects
                    enum:
                        - private
                        - bucket-owner-read
                        - bucket-owner-full-control
                        - project-private
                        - authenticated-read
                        - public-read
                    title: Object ACL
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                parquetDataPageVersion:
                    default: DATA_PAGE_V2
                    description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
                    enum:
                        - DATA_PAGE_V1
                        - DATA_PAGE_V2
                    title: Data page version
                    type: string
                parquetPageSize:
                    default: 1MB
                    description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
                    pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
                    title: Page size
                    type: string
                parquetRowGroupLength:
                    default: 10000
                    description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
                    maximum: 67108864
                    minimum: 1
                    title: Group row limit
                    type: number
                parquetVersion:
                    default: PARQUET_2_6
                    description: Determines which data types are supported and how they are represented
                    enum:
                        - PARQUET_1_0
                        - PARQUET_2_4
                        - PARQUET_2_6
                    title: Parquet version
                    type: string
                partitionExpr:
                    default: 'C.Time.strftime(_time ? _time : Date.now()/1000, ''%Y/%m/%d'')'
                    description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
                    title: Partitioning expression
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                region:
                    description: Region where the bucket is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                shouldLogInvalidRows:
                    description: Log up to 3 rows that @{product} skips due to data mismatch
                    title: Log invalid rows
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing Google Cloud Storage requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
                    title: Staging location
                    type: string
                storageClass:
                    description: Storage class to select for uploaded objects
                    enum:
                        - STANDARD
                        - NEARLINE
                        - COLDLINE
                        - ARCHIVE
                    title: Storage class
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - google_cloud_storage
                    type: string
                verifyPermissions:
                    default: true
                    description: Disable if you can access files within the bucket but not the bucket itself
                    title: Verify if bucket exists
                    type: boolean
                writeHighWaterMark:
                    default: 64
                    description: Buffer size used to write to a file
                    maximum: 4096
                    minimum: 16
                    title: Writing high watermark (KB)
                    type: number
            required:
                - bucket
                - endpoint
                - region
                - stagePath
            type: object
        OutputGooglePubsub:
            properties:
                batchSize:
                    default: 1000
                    description: The maximum number of items the Google API should batch before it sends them to the topic.
                    maximum: 10000
                    minimum: 1
                    title: Batch size
                    type: number
                batchTimeout:
                    default: 100
                    description: The maximum amount of time, in milliseconds, that the Google API should wait to send a batch (if the Batch size is not reached).
                    maximum: 100000
                    minimum: 1
                    title: Batch timeout (ms)
                    type: number
                createTopic:
                    default: false
                    description: If enabled, create topic if it does not exist.
                    title: Create topic
                    type: boolean
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushPeriodSec:
                    default:
                        default: 1
                        type: number
                    description: Maximum time to wait before sending a batch (when batch size limit is not reached).
                    title: Flush period (sec)
                googleAuthMethod:
                    default: manual
                    description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Google authentication method
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxInProgress:
                    default: 10
                    description: The maximum number of in-progress API requests before backpressure is applied.
                    maximum: 100
                    minimum: 1
                    title: Concurrent request limit
                    type: number
                maxQueueSize:
                    default: 100
                    description: Maximum number of queued batches before blocking.
                    minimum: 1
                    title: Queue size limit
                    type: number
                maxRecordSizeKB:
                    default: 256
                    description: Maximum size (KB) of batches to send.
                    maximum: 256
                    minimum: 1
                    title: Batch size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                orderedDelivery:
                    default: false
                    description: If enabled, send events in the order they were added to the queue. For this to work correctly, the process receiving events must have ordering enabled.
                    title: Ordered delivery
                    type: boolean
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                region:
                    description: Region to publish messages to. Select 'default' to allow Google to auto-select the nearest region. When using ordered delivery, the selected region must be allowed by message storage policy.
                    title: Region
                    type: string
                secret:
                    description: Select or create a stored text secret
                    title: Service account credentials (text secret)
                    type: string
                serviceAccountCredentials:
                    description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
                    title: Service account credentials
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                topicName:
                    description: ID of the topic to send events to.
                    title: Topic ID
                    type: string
                type:
                    enum:
                        - google_pubsub
                    type: string
            required:
                - topicName
                - type
            type: object
        OutputGrafanaCloud:
            anyOf:
                - required:
                    - lokiUrl
                - required:
                    - prometheusUrl
            properties:
                compress:
                    default: true
                    description: Compress the payload body before sending. Applies only to JSON payloads; the Protobuf variant for both Prometheus and Loki are snappy-compressed by default.
                    title: Compress
                    type: boolean
                concurrency:
                    default: 1
                    description: 'Maximum number of ongoing requests before blocking. Warning: Setting this value > 1 can cause Loki and Prometheus to complain about entries being delivered out of order.'
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 15
                    description: 'Maximum time between requests. Small values could cause the payload size to be smaller than the configured Maximum time between requests. Small values can reduce the payload size below the configured ''Max record size'' and ''Max events per request''. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of ''Request concurrency''); this can cause Loki and Prometheus to complain about entries being delivered out of order.'
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                labels:
                    description: 'List of labels to send with logs. Labels define Loki streams, so use static labels to avoid proliferating label value combinations and streams. Can be merged and/or overridden by the event''s __labels field. Example: ''__labels: {host: "cribl.io", level: "error"}'''
                    items:
                        properties:
                            name:
                                default: ""
                                title: Name
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    minItems: 0
                    title: Logs labels
                    type: array
                lokiAuth:
                    properties:
                        authType:
                            default: basic
                            enum:
                                - none
                                - token
                                - textSecret
                                - basic
                                - credentialsSecret
                            title: Authentication type
                            type: string
                        credentialsSecret:
                            description: Select or create a secret that references your credentials
                            title: Credentials secret
                            type: string
                        password:
                            description: Password (API key in Grafana Cloud domain) for authentication
                            title: Password
                            type: string
                        textSecret:
                            description: Select or create a stored text secret
                            title: Auth token (text secret)
                            type: string
                        token:
                            description: 'Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>'
                            title: Auth token
                            type: string
                        username:
                            description: Username for authentication
                            title: Username
                            type: string
                    type: object
                lokiUrl:
                    description: The endpoint to send logs to, such as https://logs-prod-us-central1.grafana.net
                    pattern: ^https?://
                    title: Loki URL
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: 'Maximum number of events to include in the request body. Default is 0 (unlimited). Warning: Setting this too low can increase the number of ongoing requests (depending on the value of ''Request concurrency''); this can cause Loki and Prometheus to complain about entries being delivered out of order.'
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: 'Maximum size, in KB, of the request body. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of ''Request concurrency''); this can cause Loki and Prometheus to complain about entries being delivered out of order.'
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                message:
                    description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
                    title: Logs message field
                    type: string
                messageFormat:
                    default: protobuf
                    description: Format to use when sending logs to Loki (Protobuf or JSON)
                    enum:
                        - protobuf
                        - json
                    title: Message format
                    type: string
                metricRenameExpr:
                    default: name.replace(/[^a-zA-Z0-9_]/g, '_')
                    description: JavaScript expression that can be used to rename metrics. For example, name.replace(/\./g, '_') will replace all '.' characters in a metric's name with the supported '_' character. Use the 'name' global variable to access the metric's name. You can access event fields' values via __e.<fieldName>.
                    title: Metrics renaming expression
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                prometheusAuth:
                    properties:
                        authType:
                            default: basic
                            enum:
                                - none
                                - token
                                - textSecret
                                - basic
                                - credentialsSecret
                            title: Authentication type
                            type: string
                        credentialsSecret:
                            description: Select or create a secret that references your credentials
                            title: Credentials secret
                            type: string
                        password:
                            description: Password (API key in Grafana Cloud domain) for authentication
                            title: Password
                            type: string
                        textSecret:
                            description: Select or create a stored text secret
                            title: Auth token (text secret)
                            type: string
                        token:
                            description: 'Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>'
                            title: Auth token
                            type: string
                        username:
                            description: Username for authentication
                            title: Username
                            type: string
                    type: object
                prometheusUrl:
                    description: The remote_write endpoint to send Prometheus metrics to, such as https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/push
                    pattern: ^https?://
                    title: Prometheus URL
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_host
                        - cribl_wp
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions and labels to generated metrics and logs, respectively.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                type:
                    enum:
                        - grafana_cloud
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - id
                - type
            type: object
        OutputGraphite:
            properties:
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 0
                    description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (sec)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushPeriodSec:
                    default: 1
                    description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
                    title: Flush period (sec)
                    type: number
                host:
                    description: The hostname of the destination.
                    title: Host
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                mtu:
                    default: 512
                    description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
                    maximum: 65535
                    minimum: 1
                    title: Record size limit (bytes)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                port:
                    default: 8125
                    description: Destination port.
                    maximum: 65535
                    minimum: 1
                    title: Port
                    type: number
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protocol:
                    default: udp
                    description: Protocol to use when communicating with the destination.
                    enum:
                        - udp
                        - tcp
                    title: Destination protocol
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                type:
                    enum:
                        - graphite
                    type: string
                writeTimeout:
                    default: 60000
                    description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
                    title: Write timeout
                    type: number
            required:
                - protocol
                - host
                - port
            type: object
        OutputHoneycomb:
            properties:
                authType:
                    default: manual
                    description: Enter API key directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                dataset:
                    description: Name of the dataset to send events to – e.g., observability
                    title: Dataset name
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                team:
                    description: Team API key where the dataset belongs
                    title: API key
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: API key (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                type:
                    enum:
                        - honeycomb
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - dataset
                - type
            type: object
        OutputHumioHec:
            properties:
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                format:
                    default: JSON
                    description: When set to JSON, the event is automatically formatted with required fields before sending. When set to Raw, only the event's `_raw` value is sent.
                    enum:
                        - JSON
                        - raw
                    title: Request format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 32768
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: LogScale auth token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    description: CrowdStrike Falcon LogScale authentication token
                    title: LogScale auth token
                    type: string
                type:
                    enum:
                        - humio_hec
                    type: string
                url:
                    default: https://cloud.us.humio.com/api/v1/ingest/hec
                    description: 'URL to a CrowdStrike Falcon LogScale endpoint to send events to. Examples: https://cloud.us.humio.com/api/v1/ingest/hec for JSON and https://cloud.us.humio.com/api/v1/ingest/hec/raw for raw'
                    pattern: ^https?://.*
                    title: LogScale endpoint
                    type: string
                useRoundRobinDns:
                    default: true
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - format
                - url
            type: object
        OutputInfluxdb:
            properties:
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: none
                    description: InfluxDB authentication type
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                bucket:
                    description: Bucket to write to.
                    title: Bucket
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                database:
                    description: Database to write to.
                    title: Database
                    type: string
                description:
                    title: Description
                    type: string
                dynamicValueFieldName:
                    default: true
                    description: Enabling this will pull the value field from the metric name. E,g, 'db.query.user' will use 'db.query' as the measurement and 'user' as the value field.
                    title: Dynamic value fields
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 51200
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                org:
                    description: Organization ID for this bucket.
                    title: Organization
                    type: string
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                timestampPrecision:
                    default: ms
                    description: Sets the precision for the supplied Unix time values. Defaults to milliseconds.
                    enum:
                        - ns
                        - u
                        - ms
                        - s
                        - m
                        - h
                    title: Timestamp precision
                    type: string
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                type:
                    enum:
                        - influxdb
                    type: string
                url:
                    description: URL of an InfluxDB cluster to send events to, e.g., http://localhost:8086/write
                    pattern: ^https?://.*
                    title: Write API URL
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                useV2API:
                    default: false
                    description: The v2 API can be enabled with InfluxDB versions 1.8 and later.
                    title: Use v2 API
                    type: boolean
                username:
                    title: Username
                    type: string
                valueFieldName:
                    default: value
                    description: Name of the field in which to store the metric when sending to InfluxDB. If dynamic generation is enabled and fails, this will be used as a fallback.
                    title: Value field name
                    type: string
            required:
                - url
                - type
            type: object
        OutputKafka:
            properties:
                ack:
                    default: 1
                    description: Control the number of required acknowledgments.
                    enum:
                        - 1
                        - 0
                        - -1
                    title: Acknowledgments
                    type: integer
                authenticationTimeout:
                    default: 10000
                    description: Maximum time to wait for Kafka to respond to an authentication request
                    maximum: 3600000
                    minimum: 1000
                    title: Authentication timeout (ms)
                    type: number
                backoffRate:
                    default: 2
                    description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
                    maximum: 20
                    minimum: 2
                    title: Backoff multiplier
                    type: number
                brokers:
                    description: Enter each Kafka bootstrap server you want to use. Specify hostname and port, e.g., mykafkabroker:9092, or just hostname, in which case @{product} will assign port 9092.
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Bootstrap servers
                    type: array
                compression:
                    default: gzip
                    description: Codec to use to compress the data before sending to Kafka
                    enum:
                        - none
                        - gzip
                        - snappy
                        - lz4
                    title: Compression
                    type: string
                connectionTimeout:
                    default: 10000
                    description: Maximum time to wait for a connection to complete successfully
                    maximum: 3600000
                    minimum: 1000
                    title: Connection timeout (ms)
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushEventCount:
                    default: 1000
                    description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
                    maximum: 10000
                    minimum: 1
                    title: Events-per-batch limit
                    type: number
                flushPeriodSec:
                    default: 1
                    description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
                    title: Flush period (sec)
                    type: number
                format:
                    default: json
                    description: Format to use to serialize events before writing to Kafka.
                    enum:
                        - json
                        - raw
                        - protobuf
                    title: Record data format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                initialBackoff:
                    default: 300
                    description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
                    maximum: 600000
                    minimum: 300
                    title: Initial retry interval (ms)
                    type: number
                kafkaSchemaRegistry:
                    properties:
                        auth:
                            description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
                            properties:
                                credentialsSecret:
                                    description: Select or create a secret that references your credentials
                                    title: Credentials secret
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                            required:
                                - disabled
                            type: object
                        connectionTimeout:
                            default: 30000
                            description: Maximum time to wait for a Schema Registry connection to complete successfully
                            maximum: 60000
                            minimum: 1000
                            title: Connection timeout (ms)
                            type: number
                        defaultKeySchemaId:
                            description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
                            title: Default key schema ID
                            type: number
                        defaultValueSchemaId:
                            description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
                            title: Default value schema ID
                            type: number
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxRetries:
                            default: 1
                            description: Maximum number of times to try fetching schemas from the Schema Registry
                            maximum: 100
                            minimum: 0
                            title: Retry limit
                            type: number
                        requestTimeout:
                            default: 30000
                            description: Maximum time to wait for the Schema Registry to respond to a request
                            maximum: 60000
                            minimum: 1000
                            title: Request timeout (ms)
                            type: number
                        schemaRegistryURL:
                            default: http://localhost:8081
                            description: 'URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http.'
                            title: Schema Registry URL
                            type: string
                        tls:
                            properties:
                                caPath:
                                    description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                                    title: CA certificate path
                                    type: string
                                certPath:
                                    description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                                    title: Certificate path (mutual auth)
                                    type: string
                                certificateName:
                                    description: The name of the predefined certificate
                                    title: Certificate
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                                maxVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Maximum TLS version
                                    type: string
                                minVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Minimum TLS version
                                    type: string
                                passphrase:
                                    description: Passphrase to use to decrypt private key
                                    title: Passphrase
                                    type: string
                                privKeyPath:
                                    description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                                    title: Private key path (mutual auth)
                                    type: string
                                rejectUnauthorized:
                                    default: true
                                    description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                                    title: Validate server certs
                                    type: boolean
                                servername:
                                    description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                                    title: Server name (SNI)
                                    type: string
                            title: TLS settings (client side)
                            type: object
                    required:
                        - disabled
                    title: Kafka Schema Registry Authentication
                    type: object
                maxBackOff:
                    default: 30000
                    description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
                    maximum: 180000
                    minimum: 30000
                    title: Backoff limit (ms)
                    type: number
                maxRecordSizeKB:
                    default: 768
                    description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
                    minimum: 1
                    title: Record size limit (KB, uncompressed)
                    type: number
                maxRetries:
                    default: 5
                    description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
                    maximum: 100
                    minimum: 0
                    title: Retry limit
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protobufLibraryId:
                    description: Select a set of Protobuf definitions for the events you want to send
                    title: Definition set
                    type: string
                reauthenticationThreshold:
                    default: 10000
                    description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
                    maximum: 1800000
                    minimum: 1000
                    title: Reauthentication threshold (ms)
                    type: number
                requestTimeout:
                    default: 60000
                    description: Maximum time to wait for Kafka to respond to a request
                    maximum: 3600000
                    minimum: 1000
                    title: Request timeout (ms)
                    type: number
                sasl:
                    description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
                    properties:
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        mechanism:
                            default: plain
                            enum:
                                - plain
                                - scram-sha-256
                                - scram-sha-512
                                - kerberos
                            title: SASL mechanism
                            type: string
                    required:
                        - disabled
                    title: Authentication
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                topic:
                    description: The topic to publish events to. Can be overridden using the __topicOut field.
                    title: Topic
                    type: string
                type:
                    enum:
                        - kafka
                    type: string
            required:
                - brokers
                - topic
            type: object
        OutputKinesis:
            properties:
                asNdjson:
                    default: true
                    description: Batch events into a single record as NDJSON
                    title: Send batched
                    type: boolean
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                compression:
                    default: gzip
                    description: Compression type to use for records
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing put requests before blocking.
                    maximum: 32
                    minimum: 1
                    title: Put request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access Kinesis stream
                    title: Enable for Kinesis stream
                    type: boolean
                endpoint:
                    description: Kinesis stream service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Kinesis stream-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxRecordSizeKB:
                    default: 1024
                    description: Maximum size (KB) of each individual record before compression. For uncompressed or non-compressible data 1MB is the max recommended size
                    maximum: 10240
                    minimum: 1
                    title: Record size limit (KB, uncompressed)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                region:
                    description: Region where the Kinesis stream is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing Kinesis stream requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamName:
                    description: Kinesis stream name to send events to.
                    title: Stream Name
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - kinesis
                    type: string
                useListShards:
                    default: false
                    description: Provides higher stream rate limits, improving delivery speed and reliability by minimizing throttling. See the [ListShards API](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListShards.html) documentation for details.
                    title: ListShards API
                    type: boolean
            required:
                - streamName
                - region
            type: object
        OutputLoki:
            properties:
                authType:
                    default: none
                    enum:
                        - none
                        - token
                        - textSecret
                        - basic
                        - credentialsSecret
                    title: Authentication type
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 1
                    description: 'Maximum number of ongoing requests before blocking. Warning: Setting this value > 1 can cause Loki to complain about entries being delivered out of order.'
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 15
                    description: 'Maximum time between requests. Small values could cause the payload size to be smaller than the configured Maximum time between requests. Small values can reduce the payload size below the configured ''Max record size'' and ''Max events per request''. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of ''Request concurrency''); this can cause Loki to complain about entries being delivered out of order.'
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                labels:
                    description: 'List of labels to send with logs. Labels define Loki streams, so use static labels to avoid proliferating label value combinations and streams. Can be merged and/or overridden by the event''s __labels field. Example: ''__labels: {host: "cribl.io", level: "error"}'''
                    items:
                        properties:
                            name:
                                default: ""
                                title: Name
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    minItems: 0
                    title: Logs labels
                    type: array
                maxPayloadEvents:
                    default: 0
                    description: 'Maximum number of events to include in the request body. Defaults to 0 (unlimited). Warning: Setting this too low can increase the number of ongoing requests (depending on the value of ''Request concurrency''); this can cause Loki to complain about entries being delivered out of order.'
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: 'Maximum size, in KB, of the request body. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of ''Request concurrency''); this can cause Loki to complain about entries being delivered out of order.'
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                message:
                    description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
                    title: Logs message field
                    type: string
                messageFormat:
                    default: protobuf
                    description: Format to use when sending logs to Loki (Protobuf or JSON)
                    enum:
                        - protobuf
                        - json
                    title: Message format
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                password:
                    description: Password (API key in Grafana Cloud domain) for authentication
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_host
                        - cribl_wp
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as labels to generated logs.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    description: 'Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>'
                    title: Auth token
                    type: string
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - loki
                    type: string
                url:
                    description: The endpoint to send logs to
                    pattern: ^https?://.*
                    title: Loki URL
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                username:
                    description: Username for authentication
                    title: Username
                    type: string
            required:
                - url
                - type
            type: object
        OutputMinio:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                automaticSchema:
                    default: false
                    description: Automatically calculate the schema based on the events of each Parquet file generated
                    title: Automatic schema
                    type: boolean
                awsApiKey:
                    description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    description: Secret key. This value can be a constant or a JavaScript expression, such as `${C.env.SOME_SECRET}`).
                    title: Secret key
                    type: string
                baseFileName:
                    default: '`CriblOut`'
                    description: JavaScript expression to define the output filename prefix (can be constant)
                    title: File name prefix expression
                    type: string
                bucket:
                    description: 'Name of the destination MinIO bucket. This value can be a constant or a JavaScript expression that can only be evaluated at init time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`'
                    title: MinIO bucket name
                    type: string
                compress:
                    default: gzip
                    description: Data compression format to apply to HTTP content before it is delivered
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                compressionLevel:
                    default: best_speed
                    description: Compression level to apply before moving files to final destination
                    enum:
                        - best_speed
                        - normal
                        - best_compression
                    title: Compression level
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                destPath:
                    description: Root directory to prepend to path before uploading. Enter a constant, or a JavaScript expression enclosed in quotes or backticks.
                    title: Key prefix
                    type: string
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                enablePageChecksum:
                    default: false
                    description: Parquet tools can use the checksum of a Parquet page to verify data integrity
                    title: Write page checksum
                    type: boolean
                enableStatistics:
                    default: true
                    description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
                    title: Write statistics
                    type: boolean
                enableWritePageIndex:
                    default: true
                    description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
                    title: Write page indexes
                    type: boolean
                endpoint:
                    description: MinIO service url (e.g. http://minioHost:9000)
                    pattern: ^https?://.*
                    title: MinIO endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileNameSuffix:
                    default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
                    description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
                    title: File name suffix expression
                    type: string
                format:
                    default: json
                    description: Format of the output data
                    enum:
                        - json
                        - raw
                        - parquet
                    title: Data format
                    type: string
                headerLine:
                    default: ""
                    description: If set, this line will be written to the beginning of each output file
                    title: Header line
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keyValueMetadata:
                    description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata (optional)
                    type: array
                maxConcurrentFileParts:
                    default: 4
                    description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
                    maximum: 10
                    minimum: 1
                    title: Concurrent file parts limit
                    type: number
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                objectACL:
                    default: private
                    description: Object ACL to assign to uploaded objects
                    enum:
                        - private
                        - public-read
                        - public-read-write
                        - authenticated-read
                        - aws-exec-read
                        - bucket-owner-read
                        - bucket-owner-full-control
                    title: Object ACL
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                parquetDataPageVersion:
                    default: DATA_PAGE_V2
                    description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
                    enum:
                        - DATA_PAGE_V1
                        - DATA_PAGE_V2
                    title: Data page version
                    type: string
                parquetPageSize:
                    default: 1MB
                    description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
                    pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
                    title: Page size
                    type: string
                parquetRowGroupLength:
                    default: 10000
                    description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
                    maximum: 67108864
                    minimum: 1
                    title: Group row limit
                    type: number
                parquetVersion:
                    default: PARQUET_2_6
                    description: Determines which data types are supported and how they are represented
                    enum:
                        - PARQUET_1_0
                        - PARQUET_2_4
                        - PARQUET_2_6
                    title: Parquet version
                    type: string
                partitionExpr:
                    default: 'C.Time.strftime(_time ? _time : Date.now()/1000, ''%Y/%m/%d'')'
                    description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
                    title: Partitioning expression
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                region:
                    description: Region where the MinIO service/cluster is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates)
                    title: Reject unauthorized certificates
                    type: boolean
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                serverSideEncryption:
                    description: Server-side encryption for uploaded objects
                    enum:
                        - AES256
                    title: Server-side encryption
                    type: string
                shouldLogInvalidRows:
                    description: Log up to 3 rows that @{product} skips due to data mismatch
                    title: Log invalid rows
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing MinIO requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant stable storage.
                    title: Staging location
                    type: string
                storageClass:
                    description: Storage class to select for uploaded objects
                    enum:
                        - STANDARD
                        - REDUCED_REDUNDANCY
                    title: Storage class
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - minio
                    type: string
                verifyPermissions:
                    default: true
                    description: Disable if you can access files within the bucket but not the bucket itself
                    title: Verify if bucket exists
                    type: boolean
                writeHighWaterMark:
                    default: 64
                    description: Buffer size used to write to a file
                    maximum: 4096
                    minimum: 16
                    title: Writing high watermark (KB)
                    type: number
            required:
                - bucket
                - stagePath
                - endpoint
            type: object
        OutputMsk:
            properties:
                ack:
                    default: 1
                    description: Control the number of required acknowledgments.
                    enum:
                        - 1
                        - 0
                        - -1
                    title: Acknowledgments
                    type: integer
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                authenticationTimeout:
                    default: 10000
                    description: Maximum time to wait for Kafka to respond to an authentication request
                    maximum: 3600000
                    minimum: 1000
                    title: Authentication timeout (ms)
                    type: number
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                backoffRate:
                    default: 2
                    description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
                    maximum: 20
                    minimum: 2
                    title: Backoff multiplier
                    type: number
                brokers:
                    description: Enter each Kafka bootstrap server you want to use. Specify hostname and port, e.g., mykafkabroker:9092, or just hostname, in which case @{product} will assign port 9092.
                    items:
                        minLength: 1
                        type: string
                    minItems: 1
                    title: Bootstrap servers
                    type: array
                compression:
                    default: gzip
                    description: Codec to use to compress the data before sending to Kafka
                    enum:
                        - none
                        - gzip
                        - snappy
                        - lz4
                    title: Compression
                    type: string
                connectionTimeout:
                    default: 10000
                    description: Maximum time to wait for a connection to complete successfully
                    maximum: 3600000
                    minimum: 1000
                    title: Connection timeout (ms)
                    type: number
                description:
                    title: Description
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access MSK
                    title: Enable for MSK
                    type: boolean
                endpoint:
                    description: MSK cluster service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to MSK cluster-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushEventCount:
                    default: 1000
                    description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
                    maximum: 10000
                    minimum: 1
                    title: Events-per-batch limit
                    type: number
                flushPeriodSec:
                    default: 1
                    description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
                    title: Flush period (sec)
                    type: number
                format:
                    default: json
                    description: Format to use to serialize events before writing to Kafka.
                    enum:
                        - json
                        - raw
                        - protobuf
                    title: Record data format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                initialBackoff:
                    default: 300
                    description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
                    maximum: 600000
                    minimum: 300
                    title: Initial retry interval (ms)
                    type: number
                kafkaSchemaRegistry:
                    properties:
                        auth:
                            description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
                            properties:
                                credentialsSecret:
                                    description: Select or create a secret that references your credentials
                                    title: Credentials secret
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                            required:
                                - disabled
                            type: object
                        connectionTimeout:
                            default: 30000
                            description: Maximum time to wait for a Schema Registry connection to complete successfully
                            maximum: 60000
                            minimum: 1000
                            title: Connection timeout (ms)
                            type: number
                        defaultKeySchemaId:
                            description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
                            title: Default key schema ID
                            type: number
                        defaultValueSchemaId:
                            description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
                            title: Default value schema ID
                            type: number
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxRetries:
                            default: 1
                            description: Maximum number of times to try fetching schemas from the Schema Registry
                            maximum: 100
                            minimum: 0
                            title: Retry limit
                            type: number
                        requestTimeout:
                            default: 30000
                            description: Maximum time to wait for the Schema Registry to respond to a request
                            maximum: 60000
                            minimum: 1000
                            title: Request timeout (ms)
                            type: number
                        schemaRegistryURL:
                            default: http://localhost:8081
                            description: 'URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http.'
                            title: Schema Registry URL
                            type: string
                        tls:
                            properties:
                                caPath:
                                    description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                                    title: CA certificate path
                                    type: string
                                certPath:
                                    description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                                    title: Certificate path (mutual auth)
                                    type: string
                                certificateName:
                                    description: The name of the predefined certificate
                                    title: Certificate
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                                maxVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Maximum TLS version
                                    type: string
                                minVersion:
                                    enum:
                                        - TLSv1
                                        - TLSv1.1
                                        - TLSv1.2
                                        - TLSv1.3
                                    title: Minimum TLS version
                                    type: string
                                passphrase:
                                    description: Passphrase to use to decrypt private key
                                    title: Passphrase
                                    type: string
                                privKeyPath:
                                    description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                                    title: Private key path (mutual auth)
                                    type: string
                                rejectUnauthorized:
                                    default: true
                                    description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                                    title: Validate server certs
                                    type: boolean
                                servername:
                                    description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                                    title: Server name (SNI)
                                    type: string
                            title: TLS settings (client side)
                            type: object
                    required:
                        - disabled
                    title: Kafka Schema Registry Authentication
                    type: object
                maxBackOff:
                    default: 30000
                    description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
                    maximum: 180000
                    minimum: 30000
                    title: Backoff limit (ms)
                    type: number
                maxRecordSizeKB:
                    default: 768
                    description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
                    minimum: 1
                    title: Record size limit (KB, uncompressed)
                    type: number
                maxRetries:
                    default: 5
                    description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
                    maximum: 100
                    minimum: 0
                    title: Retry limit
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protobufLibraryId:
                    description: Select a set of Protobuf definitions for the events you want to send
                    title: Definition set
                    type: string
                reauthenticationThreshold:
                    default: 10000
                    description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
                    maximum: 1800000
                    minimum: 1000
                    title: Reauthentication threshold (ms)
                    type: number
                region:
                    description: Region where the MSK cluster is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                requestTimeout:
                    default: 60000
                    description: Maximum time to wait for Kafka to respond to a request
                    maximum: 3600000
                    minimum: 1000
                    title: Request timeout (ms)
                    type: number
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing MSK cluster requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: false
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                topic:
                    description: The topic to publish events to. Can be overridden using the __topicOut field.
                    title: Topic
                    type: string
                type:
                    enum:
                        - msk
                    type: string
            required:
                - brokers
                - topic
                - region
                - awsAuthenticationMethod
            type: object
        OutputNetflow:
            properties:
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 0
                    description: How often to resolve the destination hostname to an IP address. Ignored if all destinations are IP addresses. A value of 0 means every datagram sent will incur a DNS lookup.
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (sec)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                hosts:
                    description: One or more NetFlow destinations to forward events to
                    items:
                        properties:
                            host:
                                description: Destination host
                                title: Address
                                type: string
                            port:
                                default: 2055
                                description: Destination port, default is 2055
                                maximum: 65535
                                title: Port
                                type: number
                        required:
                            - host
                            - port
                        type: object
                    minItems: 1
                    title: NetFlow Destinations
                    type: array
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - netflow
                    type: string
            required:
                - hosts
                - type
            type: object
        OutputNewrelic:
            properties:
                apiKey:
                    description: New Relic API key. Can be overridden using __newRelic_apiKey field.
                    title: API key
                    type: string
                authType:
                    default: manual
                    description: Enter API key directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                customUrl:
                    pattern: ^https?://.*
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                logType:
                    default: ""
                    description: 'Name of the logtype to send with events, e.g.: observability, access_log. The event''s ''sourcetype'' field (if set) will override this value.'
                    title: Log type
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 1024
                    description: Maximum size, in KB, of the request body
                    maximum: 1024
                    minimum: 1
                    title: Body size limit (KB)
                    type: number
                messageField:
                    default: ""
                    description: Name of field to send as log message value. If not present, event will be serialized and sent as JSON.
                    title: Log message field
                    type: string
                metadata:
                    description: Fields to add to events from this input
                    items:
                        properties:
                            name:
                                enum:
                                    - service
                                    - hostname
                                    - timestamp
                                    - auditId
                                title: Field Name
                                type: string
                            value:
                                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    maxItems: 4
                    title: Fields
                    type: array
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                region:
                    default: US
                    description: Which New Relic region endpoint to use.
                    enum:
                        - US
                        - EU
                        - Custom
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: API key (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - newrelic
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - id
                - type
            type: object
        OutputNewrelicEvents:
            properties:
                accountId:
                    description: New Relic account ID
                    title: Account ID
                    type: string
                apiKey:
                    description: New Relic API key. Can be overridden using __newRelic_apiKey field.
                    title: API key
                    type: string
                authType:
                    default: manual
                    description: Enter API key directly, or select a stored secret
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                customUrl:
                    pattern: ^https?://.*
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                eventType:
                    description: Default eventType to use when not present in an event. For more information, see [here](https://docs.newrelic.com/docs/telemetry-data-platform/custom-data/custom-events/data-requirements-limits-custom-event-data/#reserved-words).
                    title: Event type
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 1024
                    description: Maximum size, in KB, of the request body
                    maximum: 1024
                    minimum: 1
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                region:
                    default: US
                    description: Which New Relic region endpoint to use.
                    enum:
                        - US
                        - EU
                        - Custom
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: API key (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                type:
                    enum:
                        - newrelic_events
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - accountId
                - eventType
            type: object
        OutputOpenTelemetry:
            properties:
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: none
                    description: OpenTelemetry authentication type
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                compress:
                    default: gzip
                    description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
                    enum:
                        - none
                        - deflate
                        - gzip
                    title: Compression
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                endpoint:
                    description: The endpoint where OTel events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets). Unspecified ports will default to 4317, unless the endpoint is an HTTPS-based URL or TLS is enabled, in which case 443 will be used.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                httpCompress:
                    default: gzip
                    description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                httpLogsEndpointOverride:
                    description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Logs endpoint override
                    type: string
                httpMetricsEndpointOverride:
                    description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Metrics endpoint override
                    type: string
                httpTracesEndpointOverride:
                    description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Traces endpoint override
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keepAlive:
                    default: true
                    description: Disable to close the connection immediately after sending the outgoing request
                    title: Keep alive
                    type: boolean
                keepAliveTime:
                    default: 30
                    description: How often the sender should ping the peer to keep the connection open
                    minimum: 1
                    title: Keep alive time (seconds)
                    type: number
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                metadata:
                    description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata
                    type: array
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                otlpVersion:
                    default: 0.10.0
                    description: The version of OTLP Protobuf definitions to use when structuring data to send
                    enum:
                        - 0.10.0
                        - 1.3.1
                    title: OTLP version
                    type: string
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protocol:
                    default: grpc
                    description: Select a transport option for OpenTelemetry
                    enum:
                        - grpc
                        - http
                    title: Protocol
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                    title: TLS settings (client side)
                    type: object
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                type:
                    enum:
                        - open_telemetry
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                username:
                    title: Username
                    type: string
            required:
                - endpoint
                - type
            type: object
        OutputPrometheus:
            properties:
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: none
                    description: Remote Write authentication type
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                metricRenameExpr:
                    default: name.replace(/[^a-zA-Z0-9_]/g, '_')
                    description: JavaScript expression that can be used to rename metrics. For example, name.replace(/\./g, '_') will replace all '.' characters in a metric's name with the supported '_' character. Use the 'name' global variable to access the metric's name. You can access event fields' values via __e.<fieldName>.
                    title: Metric renaming expression
                    type: string
                metricsFlushPeriodSec:
                    default: 60
                    description: How frequently metrics metadata is sent out. Value cannot be smaller than the base Flush period set above.
                    title: Metadata flush period (sec)
                    type: number
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                sendMetadata:
                    default: true
                    description: Generate and send metadata (`type` and `metricFamilyName`) requests
                    title: Send metadata
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_host
                        - cribl_wp
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions to generated metrics.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                type:
                    enum:
                        - prometheus
                    type: string
                url:
                    description: The endpoint to send metrics to
                    pattern: ^https?://.*
                    title: Remote Write URL
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                username:
                    title: Username
                    type: string
            required:
                - url
                - type
            type: object
        OutputRing:
            properties:
                compress:
                    default: gzip
                    enum:
                        - none
                        - gzip
                    title: Data compression format
                    type: string
                description:
                    title: Description
                    type: string
                destPath:
                    description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
                    title: Path location
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                format:
                    default: json
                    description: Format of the output data.
                    enum:
                        - json
                        - raw
                    title: Data format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxDataSize:
                    default: 1GB
                    description: 'Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted.'
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Data size limit
                    type: string
                maxDataTime:
                    default: 24h
                    description: 'Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted.'
                    pattern: \d+[smhd]$
                    title: Data age limit
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                partitionExpr:
                    description: JS expression to define how files are partitioned and organized. If left blank, Cribl Stream will fallback on event.__partition.
                    title: Partitioning expression
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - ring
                    type: string
            required:
                - id
                - type
            type: object
        OutputRouter:
            properties:
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                rules:
                    description: Event routing rules
                    items:
                        properties:
                            description:
                                description: Description of this rule's purpose
                                title: Description
                                type: string
                            filter:
                                description: JavaScript expression to select events to send to output
                                title: Filter Expression
                                type: string
                            final:
                                default: true
                                description: Flag to control whether to stop the event from being checked against other rules
                                title: Final
                                type: boolean
                            output:
                                description: Output to send matching events to
                                title: Output
                                type: string
                        required:
                            - filter
                            - output
                        type: object
                    minItems: 1
                    title: Rules
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - router
                    type: string
            required:
                - rules
                - type
            type: object
        OutputS3:
            properties:
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                automaticSchema:
                    default: false
                    description: Automatically calculate the schema based on the events of each Parquet file generated
                    title: Automatic schema
                    type: boolean
                awsApiKey:
                    description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    description: 'Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)'
                    title: Secret key
                    type: string
                baseFileName:
                    default: '`CriblOut`'
                    description: JavaScript expression to define the output filename prefix (can be constant)
                    title: File name prefix expression
                    type: string
                bucket:
                    description: 'Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`'
                    title: S3 bucket name
                    type: string
                compress:
                    default: gzip
                    description: Data compression format to apply to HTTP content before it is delivered
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                compressionLevel:
                    default: best_speed
                    description: Compression level to apply before moving files to final destination
                    enum:
                        - best_speed
                        - normal
                        - best_compression
                    title: Compression level
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                destPath:
                    default: ""
                    description: 'Prefix to append to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`'
                    title: Key prefix
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access S3
                    title: Enable for S3
                    type: boolean
                enablePageChecksum:
                    default: false
                    description: Parquet tools can use the checksum of a Parquet page to verify data integrity
                    title: Write page checksum
                    type: boolean
                enableStatistics:
                    default: true
                    description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
                    title: Write statistics
                    type: boolean
                enableWritePageIndex:
                    default: true
                    description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
                    title: Write page indexes
                    type: boolean
                endpoint:
                    description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                fileNameSuffix:
                    default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
                    description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
                    title: File name suffix expression
                    type: string
                format:
                    default: json
                    description: Format of the output data
                    enum:
                        - json
                        - raw
                        - parquet
                    title: Data format
                    type: string
                headerLine:
                    default: ""
                    description: If set, this line will be written to the beginning of each output file
                    title: Header line
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keyValueMetadata:
                    description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata (optional)
                    type: array
                kmsKeyId:
                    description: ID or ARN of the KMS customer-managed key to use for encryption
                    title: KMS key ID
                    type: string
                maxClosingFilesToBackpressure:
                    default: 100
                    description: Maximum number of files that can be waiting for upload before backpressure is applied
                    maximum: 4200
                    minimum: 10
                    title: Staging file limit
                    type: number
                maxConcurrentFileParts:
                    default: 4
                    description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
                    maximum: 10
                    minimum: 1
                    title: Concurrent file parts upload limit
                    type: number
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                objectACL:
                    default: private
                    description: Object ACL to assign to uploaded objects
                    enum:
                        - private
                        - public-read
                        - public-read-write
                        - authenticated-read
                        - aws-exec-read
                        - bucket-owner-read
                        - bucket-owner-full-control
                    title: Object ACL
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                parquetDataPageVersion:
                    default: DATA_PAGE_V2
                    description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
                    enum:
                        - DATA_PAGE_V1
                        - DATA_PAGE_V2
                    title: Data page version
                    type: string
                parquetPageSize:
                    default: 1MB
                    description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
                    pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
                    title: Page size
                    type: string
                parquetRowGroupLength:
                    default: 10000
                    description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
                    maximum: 67108864
                    minimum: 1
                    title: Group row limit
                    type: number
                parquetVersion:
                    default: PARQUET_2_6
                    description: Determines which data types are supported and how they are represented
                    enum:
                        - PARQUET_1_0
                        - PARQUET_2_4
                        - PARQUET_2_6
                    title: Parquet version
                    type: string
                partitionExpr:
                    default: 'C.Time.strftime(_time ? _time : Date.now()/1000, ''%Y/%m/%d'')'
                    description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
                    title: Partitioning expression
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                region:
                    description: Region where the S3 bucket is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                serverSideEncryption:
                    enum:
                        - AES256
                        - aws:kms
                    title: Server-side encryption for uploaded objects
                    type: string
                shouldLogInvalidRows:
                    description: Log up to 3 rows that @{product} skips due to data mismatch
                    title: Log invalid rows
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing S3 requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
                    title: Staging location
                    type: string
                storageClass:
                    description: Storage class to select for uploaded objects
                    enum:
                        - STANDARD
                        - REDUCED_REDUNDANCY
                        - STANDARD_IA
                        - ONEZONE_IA
                        - INTELLIGENT_TIERING
                        - GLACIER
                        - GLACIER_IR
                        - DEEP_ARCHIVE
                    title: Storage class
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - s3
                    type: string
                verifyPermissions:
                    default: true
                    description: Disable if you can access files within the bucket but not the bucket itself
                    title: Verify if bucket exists
                    type: boolean
                writeHighWaterMark:
                    default: 64
                    description: Buffer size used to write to a file
                    maximum: 4096
                    minimum: 16
                    title: Writing high watermark (KB)
                    type: number
            required:
                - bucket
                - stagePath
            type: object
        OutputSamplesResponse:
            properties:
                events:
                    items:
                        additionalProperties: true
                        type: object
                    type: array
            required:
                - events
            type: object
        OutputSecurityLake:
            properties:
                accountId:
                    description: ID of the AWS account whose data the Destination will write to Security Lake. This should have been configured when creating the Amazon Security Lake custom source.
                    title: Account ID
                    type: string
                addIdToStagePath:
                    default: true
                    description: Add the Output ID value to staging location
                    title: Add output ID
                    type: boolean
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                automaticSchema:
                    default: false
                    description: Automatically calculate the schema based on the events of each Parquet file generated
                    title: Automatic schema
                    type: boolean
                awsApiKey:
                    description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                baseFileName:
                    default: '`CriblOut`'
                    description: JavaScript expression to define the output filename prefix (can be constant)
                    title: File name prefix expression
                    type: string
                bucket:
                    description: 'Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`'
                    title: S3 bucket name
                    type: string
                customSource:
                    description: Name of the custom source configured in Amazon Security Lake
                    title: Custom source name
                    type: string
                deadletterEnabled:
                    default: false
                    description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
                    title: Enable dead-lettering
                    type: boolean
                deadletterPath:
                    default: $CRIBL_HOME/state/outputs/dead-letter
                    description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
                    title: Dead-letter location
                    type: string
                description:
                    title: Description
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                emptyDirCleanupSec:
                    default: 300
                    description: How frequently, in seconds, to clean up empty directories
                    maximum: 86400
                    minimum: 10
                    title: Staging cleanup period
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access S3
                    title: Enable for S3
                    type: boolean
                enablePageChecksum:
                    default: false
                    description: Parquet tools can use the checksum of a Parquet page to verify data integrity
                    title: Write page checksum
                    type: boolean
                enableStatistics:
                    default: true
                    description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
                    title: Write statistics
                    type: boolean
                enableWritePageIndex:
                    default: true
                    description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
                    title: Write page indexes
                    type: boolean
                endpoint:
                    description: Amazon Security Lake service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Amazon Security Lake-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                headerLine:
                    default: ""
                    description: If set, this line will be written to the beginning of each output file
                    title: Header line
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keyValueMetadata:
                    description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata (optional)
                    type: array
                kmsKeyId:
                    description: ID or ARN of the KMS customer-managed key to use for encryption
                    title: KMS key ID
                    type: string
                maxClosingFilesToBackpressure:
                    default: 100
                    description: Maximum number of files that can be waiting for upload before backpressure is applied
                    maximum: 4200
                    minimum: 10
                    title: Staging file limit
                    type: number
                maxConcurrentFileParts:
                    default: 4
                    description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
                    maximum: 10
                    minimum: 1
                    title: Concurrent file parts upload limit
                    type: number
                maxFileIdleTimeSec:
                    default: 30
                    description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 5
                    title: Idle time limit (sec)
                    type: number
                maxFileOpenTimeSec:
                    default: 300
                    description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
                    maximum: 86400
                    minimum: 10
                    title: File open time limit (sec)
                    type: number
                maxFileSizeMB:
                    default: 32
                    description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
                    maximum: 1024
                    minimum: 5
                    title: File size limit (MB)
                    type: number
                maxOpenFiles:
                    default: 100
                    description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
                    maximum: 2000
                    minimum: 10
                    title: Open file limit
                    type: number
                maxRetryNum:
                    default: 20
                    description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
                    minimum: 1
                    title: Retry limit
                    type: number
                objectACL:
                    default: private
                    description: Object ACL to assign to uploaded objects
                    enum:
                        - private
                        - public-read
                        - public-read-write
                        - authenticated-read
                        - aws-exec-read
                        - bucket-owner-read
                        - bucket-owner-full-control
                    title: Object ACL
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                    title: Backpressure behavior
                    type: string
                onDiskFullBackpressure:
                    default: block
                    description: How to handle events when disk space is below the global 'Min free disk space' limit
                    enum:
                        - block
                        - drop
                    title: Disk space protection
                    type: string
                parquetDataPageVersion:
                    default: DATA_PAGE_V2
                    description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
                    enum:
                        - DATA_PAGE_V1
                        - DATA_PAGE_V2
                    title: Data page version
                    type: string
                parquetPageSize:
                    default: 1MB
                    description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
                    pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
                    title: Page size
                    type: string
                parquetRowGroupLength:
                    default: 10000
                    description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
                    maximum: 67108864
                    minimum: 1
                    title: Group row limit
                    type: number
                parquetSchema:
                    description: To add a new schema, navigate to Processing > Knowledge > Parquet Schemas
                    minLength: 1
                    title: Parquet schema
                    type: string
                parquetVersion:
                    default: PARQUET_2_6
                    description: Determines which data types are supported and how they are represented
                    enum:
                        - PARQUET_1_0
                        - PARQUET_2_4
                        - PARQUET_2_6
                    title: Parquet version
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                region:
                    description: Region where the Amazon Security Lake is located.
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                removeEmptyDirs:
                    default: true
                    description: Remove empty staging directories after moving files
                    title: Remove empty staging directories
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                serverSideEncryption:
                    enum:
                        - AES256
                        - aws:kms
                    title: Server-side encryption for uploaded objects
                    type: string
                shouldLogInvalidRows:
                    description: Log up to 3 rows that @{product} skips due to data mismatch
                    title: Log invalid rows
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing Amazon Security Lake requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                stagePath:
                    default: $CRIBL_HOME/state/outputs/staging
                    description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
                    title: Staging location
                    type: string
                storageClass:
                    description: Storage class to select for uploaded objects
                    enum:
                        - STANDARD
                        - REDUCED_REDUNDANCY
                        - STANDARD_IA
                        - ONEZONE_IA
                        - INTELLIGENT_TIERING
                        - GLACIER
                        - GLACIER_IR
                        - DEEP_ARCHIVE
                    title: Storage class
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions and labels to generated metrics and logs, respectively.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - security_lake
                    type: string
                verifyPermissions:
                    default: true
                    description: Disable if you can access files within the bucket but not the bucket itself
                    title: Verify if bucket exists
                    type: boolean
                writeHighWaterMark:
                    default: 64
                    description: Buffer size used to write to a file
                    maximum: 4096
                    minimum: 16
                    title: Writing high watermark (KB)
                    type: number
            required:
                - bucket
                - stagePath
                - region
                - accountId
                - customSource
                - assumeRoleArn
            type: object
        OutputSentinel:
            properties:
                advancedContentType:
                    default: application/json
                    description: HTTP content-type header value
                    title: Content type
                    type: string
                authType:
                    enum:
                        - oauth
                client_id:
                    description: JavaScript expression to compute the Client ID for the Azure application. Can be a constant.
                    title: Client ID
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                customContentType:
                    default: application/x-ndjson
                    description: Content type to use for request. Defaults to application/x-ndjson. Any content types set in Advanced Settings > Extra HTTP headers will override this entry.
                    title: Content type
                    type: string
                customDropWhenNull:
                    default: false
                    description: Whether to drop events when the source expression evaluates to null
                    title: Drop when null
                    type: boolean
                customEventDelimiter:
                    default: \n
                    description: Delimiter string to insert between individual events. Defaults to newline character.
                    title: Event delimiter
                    type: string
                customPayloadExpression:
                    default: '`${events}`'
                    description: 'Expression specifying how to format the payload for each batch. To reference the events to send, use the `${events}` variable. Example expression: `{ "items" : [${events}] }` would send the batch inside a JSON object.'
                    title: Batch expression
                    type: string
                customSourceExpression:
                    default: __httpOut
                    description: 'Expression to evaluate on events to generate output. Example: `raw=${_raw}`. See [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook#custom-format) for other examples. If empty, the full event is sent as stringified JSON.'
                    title: Source expression
                    type: string
                dceEndpoint:
                    description: 'Data collection endpoint (DCE) URL. In the format: `https://<Endpoint-Name>-<Identifier>.<Region>.ingest.monitor.azure.com`'
                    pattern: ^https:\/\/\w+(-\w+)*-\w+\.\w+(-\w)?\.ingest\.monitor\.azure\.com(\/?)$
                    title: Data collection endpoint
                    type: string
                dcrID:
                    description: Immutable ID for the Data Collection Rule (DCR)
                    title: Data collection rule ID
                    type: string
                description:
                    title: Description
                    type: string
                endpointURLConfiguration:
                    default: url
                    description: Enter the data collection endpoint URL or the individual ID
                    enum:
                        - url
                        - ID
                    title: Endpoint configuration
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                format:
                    enum:
                        - ndjson
                        - json_array
                        - custom
                        - advanced
                formatEventCode:
                    description: 'Custom JavaScript code to format incoming event data accessible through the __e variable. The formatted content is added to (__e[''__eventOut'']) if available. Otherwise, the original event is serialized as JSON. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code.'
                    title: Format inbound event
                    type: string
                formatPayloadCode:
                    description: 'Optional JavaScript code to format the payload sent to the Destination. The payload, containing a batch of formatted events, is accessible through the __e[''payload''] variable. The formatted payload is returned in the __e[''__payloadOut''] variable. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code.'
                    title: Format outbound payload
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keepAlive:
                    default: true
                    description: Disable to close the connection immediately after sending the outgoing request
                    title: Keep alive
                    type: boolean
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 1000
                    description: Maximum size (KB) of the request body (defaults to the API's maximum limit of 1000 KB)
                    maximum: 1000
                    minimum: 100
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                scope:
                    default: https://monitor.azure.com/.default
                    description: Scope to pass in the OAuth request
                    title: Scope
                    type: string
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                streamName:
                    description: The name of the stream (Sentinel table) in which to store the events
                    title: Stream name
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - sentinel
                    type: string
                url:
                    description: URL to send events to. Can be overwritten by an event's __url field.
                    pattern: ^https?://.*
                    title: URL
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - endpointURLConfiguration
                - loginUrl
                - secret
                - client_id
            type: object
        OutputServiceNow:
            properties:
                authTokenName:
                    default: lightstep-access-token
                    title: Auth token name
                    type: string
                compress:
                    default: gzip
                    description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
                    enum:
                        - none
                        - deflate
                        - gzip
                    title: Compression
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                endpoint:
                    default: ingest.lightstep.com:443
                    description: The endpoint where ServiceNow events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets)
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                httpCompress:
                    default: gzip
                    description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                httpLogsEndpointOverride:
                    description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Logs endpoint override
                    type: string
                httpMetricsEndpointOverride:
                    description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Metrics endpoint override
                    type: string
                httpTracesEndpointOverride:
                    description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
                    title: Traces endpoint override
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keepAlive:
                    default: true
                    description: Disable to close the connection immediately after sending the outgoing request
                    title: Keep alive
                    type: boolean
                keepAliveTime:
                    default: 30
                    description: How often the sender should ping the peer to keep the connection open
                    minimum: 1
                    title: Keep alive time (seconds)
                    type: number
                maxPayloadSizeKB:
                    default: 2048
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                metadata:
                    description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
                    items:
                        properties:
                            key:
                                default: ""
                                title: Key
                                type: string
                            value:
                                title: Value
                                type: string
                        required:
                            - key
                            - value
                        type: object
                    minItems: 0
                    title: Metadata
                    type: array
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                otlpVersion:
                    default: 1.3.1
                    description: The version of OTLP Protobuf definitions to use when structuring data to send
                    enum:
                        - 1.3.1
                    title: OTLP version
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protocol:
                    default: grpc
                    description: Select a transport option for OpenTelemetry
                    enum:
                        - grpc
                        - http
                    title: Protocol
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                    title: TLS settings (client side)
                    type: object
                tokenSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                type:
                    enum:
                        - service_now
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - endpoint
                - protocol
                - otlpVersion
                - tokenSecret
            type: object
        OutputSignalfx:
            properties:
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                realm:
                    default: us0
                    description: SignalFx realm name, e.g. "us0". For a complete list of available SignalFx realm names, please check [here](https://docs.splunk.com/observability/en/get-started/service-description.html#sd-regions).
                    title: Realm
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    description: SignalFx API access token (see [here](https://docs.signalfx.com/en/latest/admin-guide/tokens.html#working-with-access-tokens))
                    title: Auth token
                    type: string
                type:
                    enum:
                        - signalfx
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - realm
                - type
            type: object
        OutputSnmp:
            properties:
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 0
                    description: How often to resolve the destination hostname to an IP address. Ignored if all destinations are IP addresses. A value of 0 means every trap sent will incur a DNS lookup.
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (sec)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                hosts:
                    description: One or more SNMP destinations to forward traps to
                    items:
                        properties:
                            host:
                                description: Destination host
                                title: Address
                                type: string
                            port:
                                default: 162
                                description: Destination port, default is 162
                                maximum: 65535
                                title: Port
                                type: number
                        required:
                            - host
                            - port
                        type: object
                    minItems: 1
                    title: SNMP Trap Destinations
                    type: array
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - snmp
                    type: string
            required:
                - hosts
                - type
            type: object
        OutputSns:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                description:
                    title: Description
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access SNS
                    title: Enable for SNS
                    type: boolean
                endpoint:
                    description: SNS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SNS-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxRetries:
                    description: Maximum number of retries before the output returns an error. Note that not all errors are retryable. The retries use an exponential backoff policy.
                    title: Maximum number of retries
                    type: number
                messageGroupId:
                    description: 'Messages in the same group are processed in a FIFO manner. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`.'
                    title: Message Group ID
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                region:
                    description: Region where the SNS is located
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing SNS requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                topicArn:
                    description: 'The ARN of the SNS topic to send events to. When a non-AWS URL is specified, format must be: ''{url}/myQueueName''. E.g., ''https://host:port/myQueueName''. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`'
                    title: Topic ARN
                    type: string
                type:
                    enum:
                        - sns
                    type: string
            required:
                - topicArn
                - messageGroupId
            type: object
        OutputSplunk:
            properties:
                authToken:
                    default: ""
                    description: Shared secret token to use when establishing a connection to a Splunk indexer.
                    title: Auth token
                    type: string
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: disabled
                    description: Controls whether the sender should send compressed data to the server. Select 'Disabled' to reject compressed connections or 'Always' to ignore server's configuration and send compressed data.
                    enum:
                        - disabled
                        - auto
                        - always
                    title: Compression
                    type: string
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                enableACK:
                    default: true
                    description: Check if indexer is shutting down and stop sending data. This helps minimize data loss during shutdown.
                    title: Minimize in-flight data loss
                    type: boolean
                enableMultiMetrics:
                    default: false
                    description: Output metrics in multiple-metric format in a single event. Supported in Splunk 8.0 and above.
                    title: Output multiple metrics
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                host:
                    description: The hostname of the receiver
                    title: Address
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                logFailedRequests:
                    default: false
                    description: Use to troubleshoot issues with sending data
                    title: Log failed requests to disk
                    type: boolean
                maxFailedHealthChecks:
                    default: 1
                    description: Maximum number of times healthcheck can fail before we close connection. If set to 0 (disabled), and the connection to Splunk is forcibly closed, some data loss might occur.
                    minimum: 0
                    title: Failed health check limit
                    type: number
                maxS2Sversion:
                    default: v3
                    description: The highest S2S protocol version to advertise during handshake
                    enum:
                        - v3
                        - v4
                    title: Max S2S version
                    type: string
                nestedFields:
                    default: none
                    description: How to serialize nested fields into index-time fields
                    enum:
                        - json
                        - none
                    title: Nested field serialization
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                port:
                    default: 9997
                    description: The port to connect to on the provided host
                    maximum: 65535
                    title: Port
                    type: number
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                type:
                    enum:
                        - splunk
                    type: string
                writeTimeout:
                    default: 60000
                    description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
                    title: Write timeout
                    type: number
            required:
                - host
                - port
            type: object
        OutputSplunkHec:
            properties:
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 600
                    description: The interval in which to re-resolve any hostnames and pick up destinations from A records
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (seconds)
                    type: number
                enableMultiMetrics:
                    default: false
                    description: Output metrics in multiple-metric format, supported in Splunk 8.0 and above to allow multiple metrics in a single event.
                    title: Output multi-metrics
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeSelf:
                    default: false
                    description: Exclude all IPs of the current host from the list of any resolved hostnames
                    title: Exclude current host IPs
                    type: boolean
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loadBalanceStatsPeriodSec:
                    default: 300
                    description: How far back in time to keep traffic stats for load balancing purposes
                    minimum: 10
                    title: Load balance stats period (seconds)
                    type: number
                loadBalanced:
                    default: true
                    description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
                    title: Load balancing
                    type: boolean
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 2097152
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                nextQueue:
                    default: indexQueue
                    description: In the Splunk app, define which Splunk processing queue to send the events after HEC processing.
                    title: Next Processing Queue
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                tcpRouting:
                    default: nowhere
                    description: In the Splunk app, set the value of _TCP_ROUTING for events that do not have _ctrl._TCP_ROUTING set.
                    title: Default _TCP_ROUTING
                    type: string
                textSecret:
                    description: Select or create a stored text secret
                    title: HEC Auth token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    description: Splunk HEC authentication token
                    title: HEC Auth token
                    type: string
                type:
                    enum:
                        - splunk_hec
                    type: string
                url:
                    default: http://localhost:8088/services/collector/event
                    description: URL to a Splunk HEC endpoint to send events to, e.g., http://localhost:8088/services/collector/event
                    pattern: ^https?://.*
                    title: Splunk HEC Endpoint
                    type: string
                urls:
                    description: ""
                    items:
                        properties:
                            url:
                                default: http://localhost:8088/services/collector/event
                                description: URL to a Splunk HEC endpoint to send events to, e.g., http://localhost:8088/services/collector/event
                                pattern: ^https?://.*
                                title: HEC Endpoint
                                type: string
                            weight:
                                default: 1
                                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                                minimum: 0
                                title: Load Weight
                                type: number
                        required:
                            - url
                        type: object
                    minItems: 1
                    title: Splunk HEC Endpoints
                    type: array
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - id
                - type
            type: object
        OutputSplunkLb:
            properties:
                authToken:
                    default: ""
                    description: Shared secret token to use when establishing a connection to a Splunk indexer.
                    title: Auth token
                    type: string
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: disabled
                    description: Controls whether the sender should send compressed data to the server. Select 'Disabled' to reject compressed connections or 'Always' to ignore server's configuration and send compressed data.
                    enum:
                        - disabled
                        - auto
                        - always
                    title: Compression
                    type: string
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 600
                    description: The interval in which to re-resolve any hostnames and pick up destinations from A records
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (seconds)
                    type: number
                enableACK:
                    default: true
                    description: Check if indexer is shutting down and stop sending data. This helps minimize data loss during shutdown.
                    title: Minimize in-flight data loss
                    type: boolean
                enableMultiMetrics:
                    default: false
                    description: Output metrics in multiple-metric format in a single event. Supported in Splunk 8.0 and above.
                    title: Output multiple metrics
                    type: boolean
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeSelf:
                    default: false
                    description: Exclude all IPs of the current host from the list of any resolved hostnames
                    title: Exclude current host IPs
                    type: boolean
                hosts:
                    description: Set of Splunk indexers to load-balance data to.
                    items:
                        properties:
                            host:
                                description: The hostname of the receiver
                                title: Address
                                type: string
                            port:
                                default: 9997
                                description: The port to connect to on the provided host
                                maximum: 65535
                                title: Port
                                type: number
                            servername:
                                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
                                title: TLS Servername
                                type: string
                            tls:
                                default: inherit
                                description: Whether to inherit TLS configs from group setting or disable TLS
                                enum:
                                    - inherit
                                    - "off"
                                title: TLS
                                type: string
                            weight:
                                default: 1
                                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                                minimum: 0
                                title: Load Weight
                                type: number
                        required:
                            - host
                            - port
                        type: object
                    minItems: 1
                    title: Destinations
                    type: array
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                indexerDiscovery:
                    default: false
                    description: Automatically discover indexers in indexer clustering environment.
                    title: Indexer Discovery
                    type: boolean
                indexerDiscoveryConfigs:
                    description: List of configurations to set up indexer discovery in Splunk Indexer clustering environment.
                    properties:
                        authToken:
                            default: ""
                            description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
                            title: Auth token
                            type: string
                        authTokens:
                            description: Tokens required to authenticate to cluster manager for indexer discovery
                            items:
                                properties:
                                    authType:
                                        default: manual
                                        description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                                        enum:
                                            - manual
                                            - secret
                                        title: Authentication method
                                        type: string
                                type: object
                            title: Authentication tokens
                            type: array
                        authType:
                            default: manual
                            description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                            enum:
                                - manual
                                - secret
                            title: Authentication method
                            type: string
                        masterUri:
                            description: 'Full URI of Splunk cluster manager (scheme://host:port). Example: https://managerAddress:8089'
                            pattern: ^https?://[a-zA-Z0-9-._]+:[0-9]+$
                            title: Cluster manager URI
                            type: string
                        refreshIntervalSec:
                            default: 300
                            description: Time interval, in seconds, between two consecutive indexer list fetches from cluster manager
                            maximum: 86400
                            minimum: 60
                            title: Refresh period
                            type: number
                        rejectUnauthorized:
                            default: false
                            description: During indexer discovery, reject cluster manager certificates that are not authorized by the system's CA. Disable to allow untrusted (for example, self-signed) certificates.
                            title: Validate cluster manager certificates
                            type: boolean
                        site:
                            default: default
                            description: Clustering site of the indexers from where indexers need to be discovered. In case of single site cluster, it defaults to 'default' site.
                            pattern: '[0-9A-Za-z-._]+'
                            title: Site
                            type: string
                        textSecret:
                            description: Select or create a stored text secret
                            title: Auth token (text secret)
                            type: string
                    required:
                        - masterUri
                        - site
                        - refreshIntervalSec
                    type: object
                loadBalanceStatsPeriodSec:
                    default: 300
                    description: How far back in time to keep traffic stats for load balancing purposes
                    minimum: 10
                    title: Load balance stats period (seconds)
                    type: number
                logFailedRequests:
                    default: false
                    description: Use to troubleshoot issues with sending data
                    title: Log failed requests to disk
                    type: boolean
                maxConcurrentSenders:
                    default: 0
                    description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
                    minimum: 0
                    title: Connection limit
                    type: number
                maxFailedHealthChecks:
                    default: 1
                    description: Maximum number of times healthcheck can fail before we close connection. If set to 0 (disabled), and the connection to Splunk is forcibly closed, some data loss might occur.
                    minimum: 0
                    title: Failed health check limit
                    type: number
                maxS2Sversion:
                    default: v3
                    description: The highest S2S protocol version to advertise during handshake
                    enum:
                        - v3
                        - v4
                    title: Max S2S version
                    type: string
                nestedFields:
                    default: none
                    description: How to serialize nested fields into index-time fields
                    enum:
                        - json
                        - none
                    title: Nested field serialization
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                senderUnhealthyTimeAllowance:
                    default: 100
                    description: How long (in milliseconds) each LB endpoint can report blocked before the Destination reports unhealthy, blocking the sender. (Grace period for fluctuations.) Use 0 to disable; max 1 minute.
                    maximum: 60000
                    minimum: 0
                    title: Endpoint health fluctuation time allowance (ms)
                    type: number
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                type:
                    enum:
                        - splunk_lb
                    type: string
                writeTimeout:
                    default: 60000
                    description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
                    title: Write timeout
                    type: number
            required:
                - hosts
                - type
            type: object
        OutputSqs:
            properties:
                assumeRoleArn:
                    description: Amazon Resource Name (ARN) of the role to assume
                    minLength: 20
                    pattern: '^arn:'
                    title: AssumeRole ARN
                    type: string
                assumeRoleExternalId:
                    description: External ID to use when assuming role
                    title: External ID
                    type: string
                awsAccountId:
                    description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
                    title: AWS account ID
                    type: string
                awsApiKey:
                    description: ""
                    title: Access key
                    type: string
                awsAuthenticationMethod:
                    default: auto
                    description: AWS authentication method. Choose Auto to use IAM roles.
                    enum:
                        - auto
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                awsSecret:
                    description: Select or create a stored secret that references your access key and secret key
                    title: Secret key pair
                    type: string
                awsSecretKey:
                    title: Secret key
                    type: string
                createQueue:
                    default: true
                    description: Create queue if it does not exist.
                    title: Create Queue
                    type: boolean
                description:
                    title: Description
                    type: string
                durationSeconds:
                    default: 3600
                    description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
                    maximum: 43200
                    minimum: 900
                    title: Duration (seconds)
                    type: number
                enableAssumeRole:
                    default: false
                    description: Use Assume Role credentials to access SQS
                    title: Enable for SQS
                    type: boolean
                endpoint:
                    description: SQS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SQS-compatible endpoint.
                    title: Endpoint
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxInProgress:
                    default: 10
                    description: The maximum number of in-progress API requests before backpressure is applied.
                    maximum: 100
                    minimum: 1
                    title: Concurrent request limit
                    type: number
                maxQueueSize:
                    default: 100
                    description: Maximum number of queued batches before blocking.
                    minimum: 1
                    title: Queue size limit
                    type: number
                maxRecordSizeKB:
                    default: 256
                    description: Maximum size (KB) of batches to send. Per the SQS spec, the max allowed value is 256 KB.
                    maximum: 256
                    minimum: 1
                    title: Record size limit (KB)
                    type: number
                messageGroupId:
                    default: cribl
                    description: This parameter applies only to FIFO queues. The tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner. Use event field __messageGroupId to override this value.
                    title: Message Group ID
                    type: string
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                queueName:
                    description: 'The name, URL, or ARN of the SQS queue to send events to. When a non-AWS URL is specified, format must be: ''{url}/myQueueName''. Example: ''https://host:port/myQueueName''. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`.'
                    title: Queue Name
                    type: string
                queueType:
                    default: standard
                    description: The queue type used (or created). Defaults to Standard.
                    enum:
                        - standard
                        - fifo
                    title: Queue Type
                    type: string
                region:
                    description: AWS Region where the SQS queue is located. Required, unless the Queue entry is a URL or ARN that includes a Region.
                    title: Region
                    type: string
                rejectUnauthorized:
                    default: true
                    description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
                    title: Reject unauthorized certificates
                    type: boolean
                reuseConnections:
                    default: true
                    description: Reuse connections between requests, which can improve performance
                    title: Reuse connections
                    type: boolean
                signatureVersion:
                    default: v4
                    description: Signature version to use for signing SQS requests
                    enum:
                        - v2
                        - v4
                    title: Signature version
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                type:
                    enum:
                        - sqs
                    type: string
            required:
                - queueName
                - queueType
            type: object
        OutputStatsd:
            properties:
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 0
                    description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (sec)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushPeriodSec:
                    default: 1
                    description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
                    title: Flush period (sec)
                    type: number
                host:
                    description: The hostname of the destination.
                    title: Host
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                mtu:
                    default: 512
                    description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
                    maximum: 65535
                    minimum: 1
                    title: Record size limit (bytes)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                port:
                    default: 8125
                    description: Destination port.
                    maximum: 65535
                    minimum: 1
                    title: Port
                    type: number
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protocol:
                    default: udp
                    description: Protocol to use when communicating with the destination.
                    enum:
                        - udp
                        - tcp
                    title: Destination protocol
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                type:
                    enum:
                        - statsd
                    type: string
                writeTimeout:
                    default: 60000
                    description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
                    title: Write timeout
                    type: number
            required:
                - protocol
                - host
                - port
            type: object
        OutputStatsdExt:
            properties:
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 0
                    description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (sec)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                flushPeriodSec:
                    default: 1
                    description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
                    title: Flush period (sec)
                    type: number
                host:
                    description: The hostname of the destination.
                    title: Host
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                mtu:
                    default: 512
                    description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
                    maximum: 65535
                    minimum: 1
                    title: Record size limit (bytes)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                port:
                    default: 8125
                    description: Destination port.
                    maximum: 65535
                    minimum: 1
                    title: Port
                    type: number
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protocol:
                    default: udp
                    description: Protocol to use when communicating with the destination.
                    enum:
                        - udp
                        - tcp
                    title: Destination protocol
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                type:
                    enum:
                        - statsd_ext
                    type: string
                writeTimeout:
                    default: 60000
                    description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
                    title: Write timeout
                    type: number
            required:
                - protocol
                - host
                - port
            type: object
        OutputStatus:
            properties:
                id:
                    type: string
                status:
                    properties:
                        health:
                            enum:
                                - Green
                                - Yellow
                                - Red
                            type: string
                        metrics:
                            additionalProperties: true
                            type: object
                        timestamp:
                            type: number
                        useStatusFromLB:
                            type: boolean
                    required:
                        - health
                        - metrics
                        - timestamp
                    type: object
            required:
                - id
                - status
            type: object
        OutputSumoLogic:
            properties:
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                customCategory:
                    description: Override the source category configured on the Sumo Logic HTTP collector. This can also be overridden at the event level with the __sourceCategory field.
                    title: Custom source category
                    type: string
                customSource:
                    description: Override the source name configured on the Sumo Logic HTTP collector. This can also be overridden at the event level with the __sourceName field.
                    title: Custom source name
                    type: string
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                format:
                    default: json
                    description: Preserve the raw event format instead of JSONifying it
                    enum:
                        - json
                        - raw
                    title: Data format
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 1024
                    description: Maximum size, in KB, of the request body
                    maximum: 1024
                    minimum: 1
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - sumo_logic
                    type: string
                url:
                    description: Sumo Logic HTTP collector URL to which events should be sent
                    pattern: ^https?://.*
                    title: API URL
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - url
                - type
            type: object
        OutputSyslog:
            properties:
                appName:
                    default: Cribl
                    description: Default name for device or application that originated the message. Defaults to Cribl, but will be overwritten by value of __appname if set.
                    title: App name
                    type: string
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                facility:
                    default: 1
                    description: Default value for message facility. Will be overwritten by value of __facility if set. Defaults to user.
                    enum:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                        - 8
                        - 9
                        - 10
                        - 11
                        - 12
                        - 13
                        - 14
                        - 15
                        - 16
                        - 17
                        - 18
                        - 19
                        - 20
                        - 21
                    title: Facility
                    type: integer
                host:
                    description: The hostname of the receiver
                    title: Address
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loadBalanced:
                    default: true
                    description: For optimal performance, enable load balancing even if you have one hostname, as it can expand to multiple IPs.  If this setting is disabled, consider enabling round-robin DNS.
                    title: Load balancing
                    type: boolean
                logFailedRequests:
                    default: false
                    description: Use to troubleshoot issues with sending data
                    title: Log failed requests to disk
                    type: boolean
                maxRecordSize:
                    default: 1500
                    description: Maximum size of syslog messages. Make sure this value is less than or equal to the MTU to avoid UDP packet fragmentation.
                    maximum: 65535
                    minimum: 1
                    title: Record size limit
                    type: number
                messageFormat:
                    default: rfc3164
                    description: The syslog message format depending on the receiver's support
                    enum:
                        - rfc3164
                        - rfc5424
                    title: Message format
                    type: string
                octetCountFraming:
                    description: Prefix messages with the byte count of the message. If disabled, no prefix will be set, and the message will be appended with a \n.
                    title: Octet count framing
                    type: boolean
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                port:
                    description: The port to connect to on the provided host
                    maximum: 65535
                    title: Port
                    type: number
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                protocol:
                    default: tcp
                    description: The network protocol to use for sending out syslog messages
                    enum:
                        - tcp
                        - udp
                    title: Protocol
                    type: string
                severity:
                    default: 5
                    description: Default value for message severity. Will be overwritten by value of __severity if set. Defaults to notice.
                    enum:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                    title: Severity
                    type: integer
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                timestampFormat:
                    default: syslog
                    description: Timestamp format to use when serializing event's time field
                    enum:
                        - syslog
                        - iso8601
                    title: Timestamp format
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                type:
                    enum:
                        - syslog
                    type: string
                udpDnsResolvePeriodSec:
                    default: 0
                    description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every message sent will incur a DNS lookup.
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (sec)
                    type: number
                writeTimeout:
                    default: 60000
                    description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
                    title: Write timeout
                    type: number
            required:
                - id
                - type
            type: object
        OutputTcpjson:
            properties:
                authToken:
                    default: ""
                    description: Optional authentication token to include as part of the connection header
                    title: Auth token
                    type: string
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compression:
                    default: gzip
                    description: Codec to use to compress the data before sending
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                connectionTimeout:
                    default: 10000
                    description: Amount of time (milliseconds) to wait for the connection to establish before retrying
                    title: Connection timeout
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 600
                    description: The interval in which to re-resolve any hostnames and pick up destinations from A records
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (seconds)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeSelf:
                    default: false
                    description: Exclude all IPs of the current host from the list of any resolved hostnames
                    title: Exclude current host IPs
                    type: boolean
                host:
                    description: The hostname of the receiver
                    title: Address
                    type: string
                hosts:
                    description: Set of hosts to load-balance data to
                    items:
                        properties:
                            host:
                                description: The hostname of the receiver
                                title: Address
                                type: string
                            port:
                                description: The port to connect to on the provided host
                                maximum: 65535
                                title: Port
                                type: number
                            servername:
                                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
                                title: TLS Servername
                                type: string
                            tls:
                                default: inherit
                                description: Whether to inherit TLS configs from group setting or disable TLS
                                enum:
                                    - inherit
                                    - "off"
                                title: TLS
                                type: string
                            weight:
                                default: 1
                                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                                minimum: 0
                                title: Load Weight
                                type: number
                        required:
                            - host
                            - port
                        type: object
                    minItems: 1
                    title: Destinations
                    type: array
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loadBalanceStatsPeriodSec:
                    default: 300
                    description: How far back in time to keep traffic stats for load balancing purposes
                    minimum: 10
                    title: Load balance stats period (seconds)
                    type: number
                loadBalanced:
                    default: true
                    description: Use load-balanced destinations
                    title: Load balancing
                    type: boolean
                logFailedRequests:
                    default: false
                    description: Use to troubleshoot issues with sending data
                    title: Log failed requests to disk
                    type: boolean
                maxConcurrentSenders:
                    default: 0
                    description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
                    minimum: 0
                    title: Connection limit
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                port:
                    description: The port to connect to on the provided host
                    maximum: 65535
                    title: Port
                    type: number
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                sendHeader:
                    default: true
                    description: Upon connection, send a header-like record containing the auth token and other metadata.This record will not contain an actual event – only subsequent records will.
                    title: Send auth token in initial record
                    type: boolean
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                throttleRatePerSec:
                    default: "0"
                    description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                    pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                    title: Throttling
                    type: string
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        rejectUnauthorized:
                            default: true
                            description: "Reject certificates that are not authorized by a CA in the CA certificate path, or by another \n                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present."
                            title: Validate server certs
                            type: boolean
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                tokenTTLMinutes:
                    default: 60
                    description: The number of minutes before the internally generated authentication token expires, valid values between 1 and 60
                    maximum: 60
                    minimum: 1
                    title: Auth Token TTL minutes
                    type: number
                type:
                    enum:
                        - tcpjson
                    type: string
                writeTimeout:
                    default: 60000
                    description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
                    title: Write timeout
                    type: number
            required:
                - id
                - type
            type: object
        OutputTestRequest:
            properties:
                events:
                    items:
                        $ref: '#/components/schemas/CriblEvent'
                    type: array
            required:
                - events
            type: object
        OutputTestResponse:
            properties:
                details:
                    additionalProperties: true
                    type: object
                error:
                    type: string
                outputId:
                    type: string
                success:
                    type: boolean
                successDetail:
                    type: string
            required:
                - outputId
                - success
            type: object
        OutputWavefront:
            properties:
                authType:
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    enum:
                        - manual
                        - secret
                    title: Authentication method
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                domain:
                    default: longboard
                    description: WaveFront domain name, e.g. "longboard"
                    title: Domain name
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 10240
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    description: WaveFront API authentication token (see [here](https://docs.wavefront.com/wavefront_api.html#generating-an-api-token))
                    title: Auth token
                    type: string
                type:
                    enum:
                        - wavefront
                    type: string
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - domain
                - type
            type: object
        OutputWebhook:
            properties:
                advancedContentType:
                    default: application/json
                    description: HTTP content-type header value
                    title: Content type
                    type: string
                authHeaderExpr:
                    default: '`Bearer ${token}`'
                    description: 'JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`.'
                    title: Authorize expression
                    type: string
                authType:
                    default: none
                    description: Authentication method to use for the HTTP request
                    enum:
                        - none
                        - basic
                        - credentialsSecret
                        - token
                        - textSecret
                        - oauth
                    title: Authentication type
                    type: string
                compress:
                    default: true
                    description: Compress the payload body before sending
                    title: Compress
                    type: boolean
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                credentialsSecret:
                    description: Select or create a secret that references your credentials
                    title: Credentials secret
                    type: string
                customContentType:
                    default: application/x-ndjson
                    description: Content type to use for request. Defaults to application/x-ndjson. Any content types set in Advanced Settings > Extra HTTP headers will override this entry.
                    title: Content type
                    type: string
                customDropWhenNull:
                    default: false
                    description: Whether to drop events when the source expression evaluates to null
                    title: Drop when null
                    type: boolean
                customEventDelimiter:
                    default: \n
                    description: Delimiter string to insert between individual events. Defaults to newline character.
                    title: Event delimiter
                    type: string
                customPayloadExpression:
                    default: '`${events}`'
                    description: 'Expression specifying how to format the payload for each batch. To reference the events to send, use the `${events}` variable. Example expression: `{ "items" : [${events}] }` would send the batch inside a JSON object.'
                    title: Batch expression
                    type: string
                customSourceExpression:
                    default: __httpOut
                    description: 'Expression to evaluate on events to generate output. Example: `raw=${_raw}`. See [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook#custom-format) for other examples. If empty, the full event is sent as stringified JSON.'
                    title: Source expression
                    type: string
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 600
                    description: The interval in which to re-resolve any hostnames and pick up destinations from A records
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (seconds)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeSelf:
                    default: false
                    description: Exclude all IPs of the current host from the list of any resolved hostnames
                    title: Exclude current host IPs
                    type: boolean
                extraHttpHeaders:
                    description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                format:
                    default: ndjson
                    description: How to format events before sending out
                    enum:
                        - ndjson
                        - json_array
                        - custom
                        - advanced
                    title: Format
                    type: string
                formatEventCode:
                    description: 'Custom JavaScript code to format incoming event data accessible through the __e variable. The formatted content is added to (__e[''__eventOut'']) if available. Otherwise, the original event is serialized as JSON. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code.'
                    title: Format inbound event
                    type: string
                formatPayloadCode:
                    description: 'Optional JavaScript code to format the payload sent to the Destination. The payload, containing a batch of formatted events, is accessible through the __e[''payload''] variable. The formatted payload is returned in the __e[''__payloadOut''] variable. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code.'
                    title: Format outbound payload
                    type: string
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                keepAlive:
                    default: true
                    description: Disable to close the connection immediately after sending the outgoing request
                    title: Keep alive
                    type: boolean
                loadBalanceStatsPeriodSec:
                    default: 300
                    description: How far back in time to keep traffic stats for load balancing purposes
                    minimum: 10
                    title: Load balance stats period (seconds)
                    type: number
                loadBalanced:
                    default: false
                    description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
                    title: Load balancing
                    type: boolean
                loginUrl:
                    description: URL for OAuth
                    pattern: ^https?://.*
                    title: Login URL
                    type: string
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 4096
                    description: Maximum size, in KB, of the request body
                    maximum: 512000
                    minimum: 1024
                    title: Body size limit (KB)
                    type: number
                method:
                    default: POST
                    description: The method to use when sending events
                    enum:
                        - POST
                        - PUT
                        - PATCH
                    title: Method
                    type: string
                oauthHeaders:
                    description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth header name
                                title: Name
                                type: string
                            value:
                                description: OAuth header value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth headers
                    type: array
                oauthParams:
                    description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
                    items:
                        properties:
                            name:
                                description: OAuth parameter name
                                title: Name
                                type: string
                            value:
                                description: OAuth parameter value
                                title: Value
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    title: OAuth parameters
                    type: array
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                password:
                    title: Password
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                secret:
                    description: Secret parameter value to pass in request body
                    title: OAuth secret
                    type: string
                secretParamName:
                    description: Secret parameter name to pass in request body
                    title: OAuth Secret parameter name
                    type: string
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Token (text secret)
                    type: string
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                tls:
                    properties:
                        caPath:
                            description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                            title: CA certificate path
                            type: string
                        certPath:
                            description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                            title: Certificate path (mutual auth)
                            type: string
                        certificateName:
                            description: The name of the predefined certificate
                            title: Certificate
                            type: string
                        disabled:
                            default: true
                            title: Disabled
                            type: boolean
                        maxVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Maximum TLS version
                            type: string
                        minVersion:
                            enum:
                                - TLSv1
                                - TLSv1.1
                                - TLSv1.2
                                - TLSv1.3
                            title: Minimum TLS version
                            type: string
                        passphrase:
                            description: Passphrase to use to decrypt private key
                            title: Passphrase
                            type: string
                        privKeyPath:
                            description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                            title: Private key path (mutual auth)
                            type: string
                        servername:
                            description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                            title: Server name (SNI)
                            type: string
                    title: TLS settings (client side)
                    type: object
                token:
                    description: Bearer token to include in the authorization header
                    title: Token
                    type: string
                tokenAttributeName:
                    description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
                    title: Token attribute name
                    type: string
                tokenTimeoutSecs:
                    default: 3600
                    description: How often the OAuth token should be refreshed.
                    maximum: 300000
                    minimum: 1
                    title: Refresh interval (secs.)
                    type: number
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - webhook
                    type: string
                url:
                    description: URL of a webhook endpoint to send events to, such as http://localhost:10200
                    pattern: ^https?://.*
                    title: Webhook URL
                    type: string
                urls:
                    description: ""
                    items:
                        properties:
                            url:
                                description: URL of a webhook endpoint to send events to, such as http://localhost:10200
                                pattern: ^https?://.*
                                title: Webhook LB URL
                                type: string
                            weight:
                                default: 1
                                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                                minimum: 0
                                title: Load Weight
                                type: number
                        required:
                            - url
                        type: object
                    minItems: 1
                    title: Webhook URLs
                    type: array
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
                username:
                    title: Username
                    type: string
            required:
                - id
                - type
            type: object
        OutputXsiam:
            properties:
                authType:
                    default: token
                    description: Enter a token directly, or provide a secret referencing a token
                    enum:
                        - token
                        - secret
                    title: Authentication method
                    type: string
                concurrency:
                    default: 5
                    description: Maximum number of ongoing requests before blocking
                    maximum: 32
                    minimum: 1
                    title: Request concurrency
                    type: number
                description:
                    title: Description
                    type: string
                dnsResolvePeriodSec:
                    default: 600
                    description: The interval in which to re-resolve any hostnames and pick up destinations from A records
                    maximum: 86400
                    minimum: 0
                    title: DNS resolution period (seconds)
                    type: number
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                excludeSelf:
                    default: false
                    description: Exclude all IPs of the current host from the list of any resolved hostnames
                    title: Exclude current host IPs
                    type: boolean
                extraHttpHeaders:
                    description: Headers to add to all events
                    items:
                        properties:
                            name:
                                title: Field Name
                                type: string
                            value:
                                title: Field Value
                                type: string
                        required:
                            - value
                        type: object
                    title: Extra HTTP headers
                    type: array
                failedRequestLoggingMode:
                    default: none
                    description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
                    enum:
                        - payload
                        - payloadAndHeaders
                        - none
                    title: Failed request logging mode
                    type: string
                flushPeriodSec:
                    default: 1
                    description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
                    title: Flush period (sec)
                    type: number
                id:
                    description: Unique ID for this output
                    title: Output ID
                    type: string
                loadBalanceStatsPeriodSec:
                    default: 300
                    description: How far back in time to keep traffic stats for load balancing purposes
                    minimum: 10
                    title: Load balance stats period (seconds)
                    type: number
                loadBalanced:
                    default: false
                    description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
                    title: Load balancing
                    type: boolean
                maxPayloadEvents:
                    default: 0
                    description: Maximum number of events to include in the request body. Default is 0 (unlimited).
                    minimum: 0
                    title: Events-per-request limit
                    type: number
                maxPayloadSizeKB:
                    default: 10000
                    description: Maximum size, in KB, of the request body
                    maximum: 10000
                    minimum: 100
                    title: Body size limit (KB)
                    type: number
                onBackpressure:
                    default: block
                    description: How to handle events when all receivers are exerting backpressure
                    enum:
                        - block
                        - drop
                        - queue
                    title: Backpressure behavior
                    type: string
                pipeline:
                    description: Pipeline to process data before sending out to this output
                    title: Pipeline
                    type: string
                pqCompress:
                    default: none
                    description: Codec to use to compress the persisted data
                    enum:
                        - none
                        - gzip
                    title: Compression
                    type: string
                pqControls:
                    title: ""
                    type: object
                pqMaxFileSize:
                    default: 1 MB
                    description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: File size limit
                    type: string
                pqMaxSize:
                    default: 5GB
                    description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
                    pattern: ^\d+\s*(?:\w{2})?$
                    title: Queue size limit
                    type: string
                pqMode:
                    default: error
                    description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
                    enum:
                        - error
                        - backpressure
                        - always
                    title: Mode
                    type: string
                pqOnBackpressure:
                    default: block
                    description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
                    enum:
                        - block
                        - drop
                    title: Queue-full behavior
                    type: string
                pqPath:
                    default: $CRIBL_HOME/state/queues
                    description: 'The location for the persistent queue files. To this field''s value, the system will append: /<worker-id>/<output-id>.'
                    title: Queue file path
                    type: string
                rejectUnauthorized:
                    default: true
                    description: "Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's). \n        Enabled by default. When this setting is also present in TLS Settings (Client Side), \n        that value will take precedence."
                    title: Validate server certs
                    type: boolean
                responseHonorRetryAfterHeader:
                    default: false
                    description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
                    title: Honor Retry-After header
                    type: boolean
                responseRetrySettings:
                    default: []
                    description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
                    items:
                        properties:
                            backoffRate:
                                default: 2
                                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                                maximum: 20
                                minimum: 1
                                title: Backoff multiplier
                                type: number
                            httpStatus:
                                description: The HTTP response status code that will trigger retries
                                maximum: 599
                                minimum: 100
                                title: HTTP status code
                                type: number
                            initialBackoff:
                                default: 1000
                                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                                maximum: 600000
                                minimum: 0
                                title: Pre-backoff interval (ms)
                                type: number
                            maxBackoff:
                                default: 10000
                                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                                maximum: 180000
                                minimum: 10000
                                title: Backoff limit (ms)
                                type: number
                        required:
                            - httpStatus
                        type: object
                    minItems: 0
                    title: Settings for failed HTTP requests
                    type: array
                safeHeaders:
                    default: []
                    description: List of headers that are safe to log in plain text
                    items:
                        type: string
                    title: Safe headers
                    type: array
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                systemFields:
                    default:
                        - cribl_pipe
                    description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
                    items:
                        type: string
                    title: System fields
                    type: array
                textSecret:
                    description: Select or create a stored text secret
                    title: Auth token (text secret)
                    type: string
                throttleRateReqPerSec:
                    default: 400
                    description: Maximum number of requests to limit to per second
                    maximum: 2000
                    title: Throttle request rate limit
                    type: integer
                timeoutRetrySettings:
                    properties:
                        backoffRate:
                            default: 2
                            description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                            maximum: 20
                            minimum: 1
                            title: Backoff multiplier
                            type: number
                        initialBackoff:
                            default: 1000
                            description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                            maximum: 600000
                            minimum: 0
                            title: Pre-backoff interval (ms)
                            type: number
                        maxBackoff:
                            default: 10000
                            description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                            maximum: 180000
                            minimum: 10000
                            title: Backoff limit (ms)
                            type: number
                        timeoutRetry:
                            default: false
                            title: Retry timed-out HTTP requests
                            type: boolean
                    required:
                        - timeoutRetry
                    type: object
                timeoutSec:
                    default: 30
                    description: Amount of time, in seconds, to wait for a request to complete before canceling it
                    maximum: 9007199254740991
                    minimum: 1
                    title: Request timeout
                    type: number
                token:
                    description: XSIAM authentication token
                    title: Auth token
                    type: string
                totalMemoryLimitKB:
                    description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
                    minimum: 0
                    title: Buffer memory limit (KB)
                    type: number
                type:
                    enum:
                        - xsiam
                    type: string
                url:
                    default: http://localhost:8088/logs/v1/event
                    description: XSIAM endpoint URL to send events to, such as https://api-{tenant external URL}/logs/v1/event
                    pattern: ^https?://.*
                    title: XSIAM endpoint
                    type: string
                urls:
                    description: ""
                    items:
                        properties:
                            url: {}
                            weight:
                                default: 1
                                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                                minimum: 0
                                title: Load Weight
                                type: number
                        required:
                            - url
                        type: object
                    minItems: 1
                    title: XSIAM Endpoints
                    type: array
                useRoundRobinDns:
                    default: false
                    description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
                    title: Round-robin DNS
                    type: boolean
            required:
                - id
                - type
            type: object
        Pack: |-
            x-speakeasy-entity: Pack
            type: object
            properties:
              displayName:
                type: string
              id:
                type: string
              description:
                type: string
              version:
                type: string
              source:
                type: string
                x-speakeasy-xor-with:
                  - filename
              disabled:
                type: boolean
            required:
              - id
        PackClone:
            properties:
                dest:
                    type: string
                dstGroups:
                    items:
                        type: string
                    type: array
                force:
                    type: boolean
                packs:
                    items:
                        type: string
                    type: array
                srcGroup:
                    type: string
            required:
                - dstGroups
                - packs
                - srcGroup
            type: object
        PackInfo:
            properties:
                author:
                    type: string
                description:
                    type: string
                displayName:
                    type: string
                exports:
                    items:
                        type: string
                    type: array
                id:
                    type: string
                inputs:
                    type: number
                isDisabled:
                    type: boolean
                minLogStreamVersion:
                    type: string
                outputs:
                    type: number
                settings:
                    additionalProperties: true
                    type: object
                source:
                    type: string
                spec:
                    type: string
                tags:
                    properties:
                        dataType:
                            items:
                                type: string
                            type: array
                        domain:
                            items:
                                type: string
                            type: array
                        streamtags:
                            items:
                                type: string
                            type: array
                        technology:
                            items:
                                type: string
                            type: array
                    required:
                        - dataType
                        - domain
                        - streamtags
                        - technology
                    type: object
                version:
                    type: string
            required:
                - id
                - source
            type: object
        PackInstallInfo:
            properties:
                author:
                    type: string
                description:
                    type: string
                displayName:
                    type: string
                exports:
                    items:
                        type: string
                    type: array
                id:
                    type: string
                inputs:
                    type: number
                isDisabled:
                    type: boolean
                minLogStreamVersion:
                    type: string
                outputs:
                    type: number
                settings:
                    additionalProperties: true
                    type: object
                source:
                    type: string
                spec:
                    type: string
                tags:
                    properties:
                        dataType:
                            items:
                                type: string
                            type: array
                        domain:
                            items:
                                type: string
                            type: array
                        streamtags:
                            items:
                                type: string
                            type: array
                        technology:
                            items:
                                type: string
                            type: array
                    required:
                        - dataType
                        - domain
                        - streamtags
                        - technology
                    type: object
                version:
                    type: string
                warnings:
                    $ref: '#/components/schemas/InstallWarnings'
            required:
                - id
                - source
                - warnings
            type: object
        PackRequestBody:
            properties:
                allowCustomFunctions:
                    type: boolean
                author:
                    type: string
                description:
                    type: string
                displayName:
                    type: string
                exports:
                    items:
                        type: string
                    type: array
                force:
                    type: boolean
                id:
                    type: string
                inputs:
                    type: number
                minLogStreamVersion:
                    type: string
                outputs:
                    type: number
                source:
                    type: string
                spec:
                    type: string
                tags:
                    properties:
                        dataType:
                            items:
                                type: string
                            type: array
                        domain:
                            items:
                                type: string
                            type: array
                        streamtags:
                            items:
                                type: string
                            type: array
                        technology:
                            items:
                                type: string
                            type: array
                    required:
                        - dataType
                        - domain
                        - streamtags
                        - technology
                    type: object
                version:
                    type: string
            required:
                - id
                - source
            type: object
        ParserLibEntry:
            additionalProperties: true
            properties:
                description:
                    title: Description
                    type: string
                id:
                    title: ID
                    type: string
                lib:
                    title: Library
                    type: string
                tags:
                    description: Optionally, add tags that you can use for filtering
                    title: Tags
                    type: string
                type:
                    default: csv
                    description: Parser or formatter type to use
                    enum:
                        - csv
                        - elff
                        - clf
                        - kvp
                        - json
                        - delim
                        - regex
                        - grok
                    title: Type
                    type: string
            required:
                - id
                - type
            type: object
        ParserMode:
            enum:
                - extract
                - reserialize
            type: string
        Pipeline:
            properties:
                conf:
                    additionalProperties: false
                    properties:
                        asyncFuncTimeout:
                            description: Time (in ms) to wait for an async function to complete processing of a data item
                            maximum: 10000
                            minimum: 0
                            title: Async function timeout (ms)
                            type: integer
                        description:
                            title: Description
                            type: string
                        functions:
                            description: List of Functions to pass data through
                            items:
                                $ref: '#/components/schemas/PipelineFunctionConf'
                            title: Functions
                            type: array
                        groups:
                            additionalProperties:
                                properties:
                                    description:
                                        description: Short description of this group
                                        title: Description
                                        type: string
                                    disabled:
                                        description: Whether this group is disabled
                                        title: Disabled
                                        type: boolean
                                    name:
                                        title: Group Name
                                        type: string
                                required:
                                    - name
                                type: object
                            type: object
                        output:
                            default: default
                            description: The output destination for events processed by this Pipeline
                            title: Output event destination
                            type: string
                        streamtags:
                            default: []
                            description: Tags for filtering and grouping in @{product}
                            items:
                                type: string
                            title: Tags
                            type: array
                    type: object
                id:
                    title: ID
                    type: string
            required:
                - conf
                - id
            title: Pipeline Settings
            type: object
        PipelineFunctionConf:
            additionalProperties: false
            properties:
                conf:
                    properties: {}
                    title: Function-specific configs
                    type: object
                description:
                    description: Simple description of this step
                    title: Description
                    type: string
                disabled:
                    description: If true, data will not be pushed through this function
                    title: Disabled
                    type: boolean
                filter:
                    default: "true"
                    description: Filter that selects data to be fed through this Function
                    title: Filter
                    type: string
                final:
                    description: If enabled, stops the results of this Function from being passed to the downstream Functions
                    title: Final
                    type: boolean
                groupId:
                    description: Group ID
                    title: Group ID
                    type: string
                id:
                    description: Function ID
                    title: ID
                    type: string
            required:
                - id
                - conf
            type: object
        PolicyRule:
            properties:
                args:
                    items:
                        type: string
                    type: array
                description:
                    type: string
                id:
                    type: string
                template:
                    items:
                        type: string
                    type: array
                title:
                    type: string
            required:
                - id
                - template
            type: object
        PreviewDataParams:
            properties:
                cpuProfile:
                    type: boolean
                dropped:
                    type: boolean
                enhanceMetricsOutput:
                    type: boolean
                events:
                    items:
                        additionalProperties: true
                        type: object
                    type: array
                inputId:
                    type: string
                level:
                    type: number
                memory:
                    type: number
                mode:
                    enum:
                        - pipe
                        - route
                        - routeAndSend
                    type: string
                pipelineId:
                    type: string
                sampleId:
                    type: string
                samplePipelineId:
                    type: string
                timeout:
                    type: number
            required:
                - mode
                - pipelineId
                - sampleId
            type: object
        PreviewOptions:
            properties:
                earliest:
                    oneOf:
                        - type: string
                        - type: number
                latest:
                    oneOf:
                        - type: string
                        - type: number
            type: object
        PreviewRequestBody:
            properties:
                events:
                    items:
                        $ref: '#/components/schemas/SearchEvent'
                    type: array
                options:
                    $ref: '#/components/schemas/PreviewOptions'
                query:
                    type: string
            required:
                - events
                - query
            type: object
        PreviewResponseBody:
            properties:
                count:
                    type: number
                events:
                    items:
                        $ref: '#/components/schemas/SearchEvent'
                    type: array
                processingTimeMS:
                    type: number
                useFormattedVisualization:
                    type: boolean
            required:
                - count
                - events
                - processingTimeMS
                - useFormattedVisualization
            type: object
        Process:
            properties:
                id:
                    type: string
                pid:
                    type: number
                ppid:
                    type: number
            required:
                - id
                - pid
                - ppid
            type: object
        ProcessEntry:
            properties:
                env:
                    additionalProperties: true
                    type: object
                id:
                    type: string
                pid:
                    type: number
                restartOnExit:
                    type: boolean
                restarts:
                    type: number
                startTime:
                    type: number
                type:
                    type: string
            required:
                - id
                - restartOnExit
                - restarts
                - startTime
                - type
            type: object
        ProfilerItem:
            properties:
                createTime:
                    type: number
                id:
                    type: string
                size:
                    type: number
                workerId:
                    type: string
            required:
                - id
            type: object
        ProjectConfig:
            properties:
                consumers:
                    type: object
                description:
                    type: string
                destinations:
                    items:
                        type: string
                    type: array
                id:
                    type: string
                subscriptions:
                    items:
                        type: string
                    type: array
            required:
                - destinations
                - id
                - subscriptions
            type: object
        ProjectDestination:
            properties:
                id:
                    type: string
                type:
                    type: string
            required:
                - id
                - type
            type: object
        ProjectGitCommitParams:
            properties:
                effective:
                    type: boolean
                message:
                    type: string
            required:
                - message
            type: object
        ProtobufBytesConversion:
            enum:
                - buffer
                - array
                - string
            type: string
        ProtobufEncodingConfig:
            properties:
                eventModel:
                    type: string
                id:
                    type: string
                name:
                    type: string
                wrapping:
                    properties:
                        wrapperField:
                            type: string
                        wrapperFieldType:
                            enum:
                                - single
                                - array
                            type: string
                        wrapperModel:
                            type: string
                    required:
                        - wrapperField
                        - wrapperFieldType
                        - wrapperModel
                    type: object
            required:
                - eventModel
                - id
                - name
            type: object
        ProtobufEnumConversion:
            enum:
                - string
                - number
            type: string
        ProtobufLibraryConfig:
            properties:
                availableEncodings:
                    items:
                        $ref: '#/components/schemas/ProtobufEncodingConfig'
                    type: array
                conversion:
                    $ref: '#/components/schemas/ProtobufLibraryConversionConfig'
                dependsOn:
                    items:
                        type: string
                    type: array
                description:
                    type: string
                id:
                    type: string
                name:
                    type: string
                tags:
                    type: string
            required:
                - dependsOn
                - description
                - id
                - name
            type: object
        ProtobufLibraryConversionConfig:
            properties:
                arrays:
                    type: boolean
                bytes:
                    $ref: '#/components/schemas/ProtobufBytesConversion'
                defaults:
                    type: boolean
                enums:
                    $ref: '#/components/schemas/ProtobufEnumConversion'
                json:
                    type: boolean
                longs:
                    $ref: '#/components/schemas/ProtobufLongConversion'
                objects:
                    type: boolean
                oneofs:
                    type: boolean
            type: object
        ProtobufLongConversion:
            enum:
                - number
                - string
                - object
            type: string
        PublicSettings:
            properties:
                apiProtocol:
                    type: string
                intercom:
                    type: boolean
                isRegistered:
                    type: boolean
            required:
                - apiProtocol
                - intercom
                - isRegistered
            type: object
        PublishPackResponse:
            properties:
                git:
                    properties:
                        branch:
                            type: string
                        commitHash:
                            type: string
                        commitMessage:
                            type: string
                    required:
                        - branch
                        - commitHash
                        - commitMessage
                    type: object
                id:
                    type: string
                message:
                    type: string
                source:
                    type: string
                status:
                    $ref: '#/components/schemas/PublishPackToGitStatusType'
            required:
                - id
            type: object
        PublishPackToGitStatusType:
            enum:
                - error
                - success
                - noop
            type: string
        RbacResource:
            enum:
                - groups
                - datasets
                - dataset-providers
                - projects
                - dashboards
                - macros
            type: string
        RedirectInfo:
            properties:
                name:
                    type: string
                redirectUrl:
                    type: string
                token:
                    type: string
            required:
                - name
            type: object
        RedisCacheLimits:
            properties:
                clientTrackingMechanism:
                    type: string
                enableServerAssist:
                    type: boolean
                keyTTLSecs:
                    type: number
                maxCacheSize:
                    type: number
                maxNumKeys:
                    type: number
                servicePeriodSecs:
                    type: number
            type: object
        RedisConnectionLimits:
            properties:
                disabled:
                    type: boolean
                maxConnections:
                    type: number
            type: object
        RedisLimits:
            properties:
                connections:
                    $ref: '#/components/schemas/RedisConnectionLimits'
            required:
                - connections
            type: object
        ReferencedEntity:
            properties:
                id:
                    type: string
                type:
                    type: string
            required:
                - id
                - type
            type: object
        ReferencingEntity:
            properties:
                id:
                    type: string
                refs:
                    items:
                        $ref: '#/components/schemas/ReferencedEntity'
                    type: array
                type:
                    type: string
            required:
                - id
                - refs
                - type
            type: object
        RegexLibEntry:
            additionalProperties: false
            properties:
                description:
                    title: Description
                    type: string
                id:
                    title: ID
                    type: string
                lib:
                    title: Library
                    type: string
                regex:
                    title: Regex pattern
                    type: string
                sampleData:
                    description: Optionally, paste in sample data to match against this regex
                    maxLength: 4096
                    title: Sample data
                    type: string
                tags:
                    title: Tags
                    type: string
            required:
                - id
                - regex
            type: object
        ResourcePolicy:
            properties:
                gid:
                    type: string
                id:
                    type: string
                policy:
                    type: string
                type:
                    $ref: '#/components/schemas/RbacResource'
            required:
                - gid
                - policy
                - type
            type: object
        RestSecret:
            properties:
                apiKey:
                    type: string
                description:
                    type: string
                id:
                    type: string
                password:
                    type: string
                secretKey:
                    type: string
                secretType:
                    $ref: '#/components/schemas/SecretType'
                tags:
                    type: string
                username:
                    type: string
                value:
                    type: string
            required:
                - id
                - secretType
            type: object
        RestartResponse:
            properties:
                id:
                    type: string
                message:
                    type: string
                status:
                    enum:
                        - Error
                        - Restarting
                    type: string
            required:
                - id
                - status
            type: object
        RetryBackoffOptions:
            properties:
                backoffRate:
                    type: number
                initialBackoff:
                    type: number
                maxBackoff:
                    type: number
            type: object
        Role:
            properties:
                description:
                    type: string
                id:
                    type: string
                policy:
                    items:
                        type: string
                    type: array
                tags:
                    items:
                        type: string
                    type: array
                title:
                    type: string
            required:
                - id
                - policy
            type: object
        RouteCloneConf:
            type: object
        RouteConf:
            properties:
                clones:
                    items:
                        $ref: '#/components/schemas/RouteCloneConf'
                    type: array
                context:
                    type: string
                description:
                    type: string
                disabled:
                    type: boolean
                enableOutputExpression:
                    type: boolean
                filter:
                    type: string
                final:
                    type: boolean
                groupId:
                    type: string
                id:
                    type: string
                name:
                    type: string
                output:
                    type: string
                outputExpression:
                    type: string
                pipeline:
                    type: string
            required:
                - final
                - id
                - name
                - pipeline
            type: object
        RouteDefinitions:
            items:
                $ref: '#/components/schemas/RouteConf'
            type: array
        Routes:
            additionalProperties: false
            properties:
                comments:
                    description: Comments
                    items:
                        additionalProperties: true
                        properties:
                            comment:
                                description: Optional, short description of this Route's purpose
                                title: Comment
                                type: string
                        type: object
                    title: Comments
                    type: array
                groups:
                    additionalProperties:
                        properties:
                            description:
                                description: Short description of this group
                                title: Description
                                type: string
                            disabled:
                                description: Whether this group is disabled
                                title: Disabled
                                type: boolean
                            name:
                                title: Group Name
                                type: string
                        required:
                            - name
                        type: object
                    type: object
                id:
                    description: Routes ID
                    title: ID
                    type: string
                routes:
                    description: Pipeline routing rules
                    items:
                        $ref: '#/components/schemas/RoutesRoute'
                    title: Route
                    type: array
            required:
                - routes
            type: object
        RoutesRoute:
            additionalProperties: true
            properties:
                description:
                    title: Description
                    type: string
                disabled:
                    description: Disable this routing rule
                    title: Disabled
                    type: boolean
                enableOutputExpression:
                    default: false
                    description: Enable to use a JavaScript expression that evaluates to the name of the Description below
                    title: Enable expression
                    type: boolean
                filter:
                    default: "true"
                    description: JavaScript expression to select data to route
                    title: Filter
                    type: string
                final:
                    default: true
                    description: Flag to control whether the event gets consumed by this Route (Final), or cloned into it
                    title: Final
                    type: boolean
                id:
                    readOnly: true
                    title: Route ID
                    type: string
                name:
                    title: Route name
                    type: string
                output: {}
                outputExpression: {}
                pipeline:
                    description: Pipeline to send the matching data to
                    title: Pipeline
                    type: string
            required:
                - pipeline
                - name
            type: object
        RunnableJob:
            oneOf:
                - $ref: '#/components/schemas/RunnableJobCollection'
                - $ref: '#/components/schemas/RunnableJobExecutor'
                - $ref: '#/components/schemas/RunnableJobScheduledSearch'
        RunnableJobCollection:
            properties:
                collector:
                    properties:
                        conf:
                            properties: {}
                            title: Collector-specific settings
                            type: object
                        destructive:
                            default: false
                            description: Delete any files collected (where applicable)
                            title: Destructive
                            type: boolean
                        encoding:
                            description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
                            title: Encoding
                            type: string
                        type:
                            description: The type of collector to run
                            title: Collector type
                            type: string
                    required:
                        - type
                        - conf
                    type: object
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this Job
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: Job ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                input:
                    properties:
                        breakerRulesets:
                            description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                            items:
                                type: string
                            title: Event Breaker rulesets
                            type: array
                        metadata:
                            description: Fields to add to events from this input
                            items:
                                properties:
                                    name:
                                        title: Field Name
                                        type: string
                                    value:
                                        description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                        title: Value
                                        type: string
                                required:
                                    - name
                                    - value
                                type: object
                            title: Fields
                            type: array
                        output:
                            description: Destination to send results to
                            title: Destination
                            type: string
                        pipeline:
                            description: Pipeline to process results
                            title: Pipeline
                            type: string
                        preprocess:
                            properties:
                                args:
                                    description: Arguments to be added to the custom command
                                    items:
                                        type: string
                                    title: Arguments
                                    type: array
                                command:
                                    description: Command to feed the data through (via stdin) and process its output (stdout)
                                    title: Command
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                            required:
                                - disabled
                            type: object
                        sendToRoutes:
                            default: true
                            description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
                            title: Send to Routes
                            type: boolean
                        staleChannelFlushMs:
                            default: 10000
                            description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                            maximum: 43200000
                            minimum: 10
                            title: Event Breaker buffer timeout (ms)
                            type: number
                        throttleRatePerSec:
                            default: "0"
                            description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                            pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                            title: Throttling
                            type: string
                        type:
                            default: collection
                            enum:
                                - collection
                            type: string
                    type: object
                removeFields:
                    default: []
                    description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
                    items:
                        description: List of fields to remove from Discover results
                        title: Items
                        type: string
                    minItems: 0
                    title: Remove Discover fields
                    type: array
                resumeOnBoot:
                    default: false
                    description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
                    title: Resume job on boot
                    type: boolean
                run:
                    properties:
                        capture:
                            properties:
                                duration:
                                    default: 60
                                    description: Amount of time to keep capture open, in seconds
                                    title: Capture time (sec)
                                    type: number
                                level:
                                    default: "0"
                                    enum:
                                        - "0"
                                        - "1"
                                        - "2"
                                        - "3"
                                    title: Where to capture
                                    type: string
                                maxEvents:
                                    default: 100
                                    description: Maximum number of events to capture
                                    maximum: 10000
                                    minimum: 1
                                    title: Capture up to N events
                                    type: number
                            title: Capture Settings
                            type: object
                        discoverToRoutes:
                            default: false
                            description: Send discover results to Routes
                            title: Send to Routes
                            type: boolean
                        earliest:
                            description: Earliest time to collect data for the selected timezone
                            title: Earliest
                            type: number
                        expression:
                            default: "true"
                            description: A filter for tokens in the provided collect path and/or the events being collected
                            title: Filter
                            type: string
                        jobTimeout:
                            default: "0"
                            description: 'Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time.'
                            pattern: \d+[sm]?$
                            title: Job timeout
                            type: string
                        latest:
                            description: Latest time to collect data for the selected timezone
                            title: Latest
                            type: number
                        logLevel:
                            default: info
                            description: Level at which to set task logging
                            enum:
                                - error
                                - warn
                                - info
                                - debug
                                - silly
                            title: Log level
                            type: string
                        maxTaskReschedule:
                            default: 1
                            description: Maximum number of times a task can be rescheduled
                            minimum: 1
                            title: Task reschedule limit
                            type: number
                        maxTaskSize:
                            default: 10MB
                            description: |-
                                Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,
                                        you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                            pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                            title: Upper task bundle size
                            type: string
                        minTaskSize:
                            default: 1MB
                            description: |-
                                Limits the bundle size for small tasks. For example,
                                        if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                            pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                            title: Lower task bundle size
                            type: string
                        mode:
                            default: list
                            description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                            enum:
                                - list
                                - preview
                                - run
                            title: Mode
                            type: string
                        rescheduleDroppedTasks:
                            default: true
                            description: Reschedule tasks that failed with non-fatal errors
                            title: Reschedule tasks
                            type: boolean
                        timeRangeType:
                            default: relative
                            enum:
                                - absolute
                                - relative
                            title: Time range
                            type: string
                        timeWarning:
                            properties: {}
                            type: object
                        timestampTimezone:
                            default: UTC
                            description: Timezone to use for Earliest and Latest times
                            title: Range timezone
                            type: string
                    required:
                        - mode
                    type: object
                schedule:
                    description: Configuration for a scheduled job
                    properties:
                        cronSchedule:
                            default: '*/5 * * * *'
                            description: A cron schedule on which to run this job
                            title: Cron schedule
                            type: string
                        enabled:
                            description: Enable to configure scheduling for this Collector
                            title: Enabled
                            type: boolean
                        maxConcurrentRuns:
                            default: 1
                            description: The maximum number of instances of this scheduled job that may be running at any time
                            minimum: 1
                            title: Concurrent run limit
                            type: number
                        resumeMissed: {}
                        run:
                            else: false
                            if:
                                properties:
                                    type:
                                        enum:
                                            - collection
                            then:
                                properties:
                                    earliest:
                                        description: Earliest time to collect data for the selected timezone
                                        title: Earliest
                                        type: number
                                    expression:
                                        default: "true"
                                        description: A filter for tokens in the provided collect path and/or the events being collected
                                        title: Filter
                                        type: string
                                    jobTimeout:
                                        default: "0"
                                        description: 'Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time.'
                                        pattern: \d+[sm]?$
                                        title: Job timeout
                                        type: string
                                    latest:
                                        description: Latest time to collect data for the selected timezone
                                        title: Latest
                                        type: number
                                    logLevel:
                                        default: info
                                        description: Level at which to set task logging
                                        enum:
                                            - error
                                            - warn
                                            - info
                                            - debug
                                            - silly
                                        title: Log level
                                        type: string
                                    maxTaskReschedule:
                                        default: 1
                                        description: Maximum number of times a task can be rescheduled
                                        minimum: 1
                                        title: Task reschedule limit
                                        type: number
                                    maxTaskSize:
                                        default: 10MB
                                        description: |-
                                            Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,
                                                    you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Upper task bundle size
                                        type: string
                                    minTaskSize:
                                        default: 1MB
                                        description: |-
                                            Limits the bundle size for small tasks. For example,
                                                    if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Lower task bundle size
                                        type: string
                                    mode:
                                        default: list
                                        description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                                        title: Mode
                                        type: string
                                    rescheduleDroppedTasks:
                                        default: true
                                        description: Reschedule tasks that failed with non-fatal errors
                                        title: Reschedule tasks
                                        type: boolean
                                    timeRangeType:
                                        default: relative
                                        title: Time range
                                        type: string
                                    timeWarning:
                                        properties: {}
                                        type: object
                                    timestampTimezone: {}
                                required:
                                    - mode
                                type: object
                            title: Run settings
                            type: object
                        skippable:
                            default: true
                            description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
                            title: Skippable
                            type: boolean
                    title: Schedule
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - collection
                        - executor
                        - scheduledSearch
                    title: Job type
                    type: string
                workerAffinity:
                    default: false
                    description: If enabled, tasks are created and run by the same Worker Node
                    title: Worker affinity
                    type: boolean
            required:
                - collector
                - run
            type: object
        RunnableJobExecutor:
            properties:
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                executor:
                    properties:
                        conf:
                            properties: {}
                            title: Executor-specific settings
                            type: object
                        storeTaskResults:
                            default: true
                            description: Determines whether or not to write task results to disk
                            title: Store task results
                            type: boolean
                        type:
                            description: The type of executor to run
                            title: Executor type
                            type: string
                    required:
                        - type
                    type: object
                id:
                    description: Unique ID for this Job
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: Job ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                removeFields:
                    default: []
                    description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
                    items:
                        description: List of fields to remove from Discover results
                        title: Items
                        type: string
                    minItems: 0
                    title: Remove Discover fields
                    type: array
                resumeOnBoot:
                    default: false
                    description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
                    title: Resume job on boot
                    type: boolean
                run:
                    properties:
                        jobTimeout:
                            default: "0"
                            description: 'Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time.'
                            pattern: \d+[sm]?$
                            title: Job timeout
                            type: string
                        logLevel:
                            default: info
                            description: Level at which to set task logging
                            enum:
                                - error
                                - warn
                                - info
                                - debug
                                - silly
                            title: Log level
                            type: string
                        maxTaskReschedule:
                            default: 1
                            description: Maximum number of times a task can be rescheduled
                            minimum: 1
                            title: Task reschedule limit
                            type: number
                        rescheduleDroppedTasks:
                            default: true
                            description: Reschedule tasks that failed with non-fatal errors
                            title: Reschedule tasks
                            type: boolean
                    type: object
                schedule:
                    description: Configuration for a scheduled job
                    properties:
                        cronSchedule:
                            default: '*/5 * * * *'
                            description: A cron schedule on which to run this job
                            title: Cron schedule
                            type: string
                        enabled:
                            description: Enable to configure scheduling for this Collector
                            title: Enabled
                            type: boolean
                        maxConcurrentRuns:
                            default: 1
                            description: The maximum number of instances of this scheduled job that may be running at any time
                            minimum: 1
                            title: Concurrent run limit
                            type: number
                        resumeMissed: {}
                        run:
                            else: false
                            if:
                                properties:
                                    type:
                                        enum:
                                            - collection
                            then:
                                properties:
                                    earliest:
                                        description: Earliest time to collect data for the selected timezone
                                        title: Earliest
                                        type: number
                                    expression:
                                        default: "true"
                                        description: A filter for tokens in the provided collect path and/or the events being collected
                                        title: Filter
                                        type: string
                                    jobTimeout:
                                        default: "0"
                                        description: 'Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time.'
                                        pattern: \d+[sm]?$
                                        title: Job timeout
                                        type: string
                                    latest:
                                        description: Latest time to collect data for the selected timezone
                                        title: Latest
                                        type: number
                                    logLevel:
                                        default: info
                                        description: Level at which to set task logging
                                        enum:
                                            - error
                                            - warn
                                            - info
                                            - debug
                                            - silly
                                        title: Log level
                                        type: string
                                    maxTaskReschedule:
                                        default: 1
                                        description: Maximum number of times a task can be rescheduled
                                        minimum: 1
                                        title: Task reschedule limit
                                        type: number
                                    maxTaskSize:
                                        default: 10MB
                                        description: |-
                                            Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,
                                                    you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Upper task bundle size
                                        type: string
                                    minTaskSize:
                                        default: 1MB
                                        description: |-
                                            Limits the bundle size for small tasks. For example,
                                                    if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Lower task bundle size
                                        type: string
                                    mode:
                                        default: list
                                        description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                                        title: Mode
                                        type: string
                                    rescheduleDroppedTasks:
                                        default: true
                                        description: Reschedule tasks that failed with non-fatal errors
                                        title: Reschedule tasks
                                        type: boolean
                                    timeRangeType:
                                        default: relative
                                        title: Time range
                                        type: string
                                    timeWarning:
                                        properties: {}
                                        type: object
                                    timestampTimezone: {}
                                required:
                                    - mode
                                type: object
                            title: Run settings
                            type: object
                        skippable:
                            default: true
                            description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
                            title: Skippable
                            type: boolean
                    title: Schedule
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - collection
                        - executor
                        - scheduledSearch
                    title: Job type
                    type: string
            required:
                - executor
                - run
            type: object
        RunnableJobScheduledSearch:
            properties:
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this Job
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: Job ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                removeFields:
                    default: []
                    description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
                    items:
                        description: List of fields to remove from Discover results
                        title: Items
                        type: string
                    minItems: 0
                    title: Remove Discover fields
                    type: array
                resumeOnBoot:
                    default: false
                    description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
                    title: Resume job on boot
                    type: boolean
                savedQueryId:
                    description: Identifies which search query to run
                    title: ID of the SavedQuery
                    type: string
                schedule:
                    description: Configuration for a scheduled job
                    properties:
                        cronSchedule:
                            default: '*/5 * * * *'
                            description: A cron schedule on which to run this job
                            title: Cron schedule
                            type: string
                        enabled:
                            description: Enable to configure scheduling for this Collector
                            title: Enabled
                            type: boolean
                        maxConcurrentRuns:
                            default: 1
                            description: The maximum number of instances of this scheduled job that may be running at any time
                            minimum: 1
                            title: Concurrent run limit
                            type: number
                        resumeMissed: {}
                        run:
                            else: false
                            if:
                                properties:
                                    type:
                                        enum:
                                            - collection
                            then:
                                properties:
                                    earliest:
                                        description: Earliest time to collect data for the selected timezone
                                        title: Earliest
                                        type: number
                                    expression:
                                        default: "true"
                                        description: A filter for tokens in the provided collect path and/or the events being collected
                                        title: Filter
                                        type: string
                                    jobTimeout:
                                        default: "0"
                                        description: 'Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time.'
                                        pattern: \d+[sm]?$
                                        title: Job timeout
                                        type: string
                                    latest:
                                        description: Latest time to collect data for the selected timezone
                                        title: Latest
                                        type: number
                                    logLevel:
                                        default: info
                                        description: Level at which to set task logging
                                        enum:
                                            - error
                                            - warn
                                            - info
                                            - debug
                                            - silly
                                        title: Log level
                                        type: string
                                    maxTaskReschedule:
                                        default: 1
                                        description: Maximum number of times a task can be rescheduled
                                        minimum: 1
                                        title: Task reschedule limit
                                        type: number
                                    maxTaskSize:
                                        default: 10MB
                                        description: |-
                                            Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,
                                                    you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Upper task bundle size
                                        type: string
                                    minTaskSize:
                                        default: 1MB
                                        description: |-
                                            Limits the bundle size for small tasks. For example,
                                                    if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Lower task bundle size
                                        type: string
                                    mode:
                                        default: list
                                        description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                                        title: Mode
                                        type: string
                                    rescheduleDroppedTasks:
                                        default: true
                                        description: Reschedule tasks that failed with non-fatal errors
                                        title: Reschedule tasks
                                        type: boolean
                                    timeRangeType:
                                        default: relative
                                        title: Time range
                                        type: string
                                    timeWarning:
                                        properties: {}
                                        type: object
                                    timestampTimezone: {}
                                required:
                                    - mode
                                type: object
                            title: Run settings
                            type: object
                        skippable:
                            default: true
                            description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
                            title: Skippable
                            type: boolean
                    title: Schedule
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - collection
                        - executor
                        - scheduledSearch
                    title: Job type
                    type: string
            required:
                - savedQueryId
                - type
            type: object
        SECRET_PROVIDER:
            enum:
                - local
                - vault
                - aws-kms
            type: string
        SampleContent:
            items:
                additionalProperties: true
                type: object
            type: array
        SampleFile:
            properties:
                bytes:
                    type: string
                bytesRead:
                    type: number
                length:
                    type: number
            required:
                - bytes
                - bytesRead
                - length
            type: object
        SavedJob:
            oneOf:
                - $ref: '#/components/schemas/SavedJobCollection'
                - $ref: '#/components/schemas/SavedJobExecutor'
                - $ref: '#/components/schemas/SavedJobScheduledSearch'
        SavedJobCollection:
            properties:
                collector:
                    properties:
                        conf:
                            properties: {}
                            title: Collector-specific settings
                            type: object
                        destructive:
                            default: false
                            description: Delete any files collected (where applicable)
                            title: Destructive
                            type: boolean
                        encoding:
                            description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
                            title: Encoding
                            type: string
                        type:
                            description: The type of collector to run
                            title: Collector type
                            type: string
                    required:
                        - type
                        - conf
                    type: object
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this Job
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: Job ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                input:
                    properties:
                        breakerRulesets:
                            description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
                            items:
                                type: string
                            title: Event Breaker rulesets
                            type: array
                        metadata:
                            description: Fields to add to events from this input
                            items:
                                properties:
                                    name:
                                        title: Field Name
                                        type: string
                                    value:
                                        description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                                        title: Value
                                        type: string
                                required:
                                    - name
                                    - value
                                type: object
                            title: Fields
                            type: array
                        output:
                            description: Destination to send results to
                            title: Destination
                            type: string
                        pipeline:
                            description: Pipeline to process results
                            title: Pipeline
                            type: string
                        preprocess:
                            properties:
                                args:
                                    description: Arguments to be added to the custom command
                                    items:
                                        type: string
                                    title: Arguments
                                    type: array
                                command:
                                    description: Command to feed the data through (via stdin) and process its output (stdout)
                                    title: Command
                                    type: string
                                disabled:
                                    default: true
                                    title: Disabled
                                    type: boolean
                            required:
                                - disabled
                            type: object
                        sendToRoutes:
                            default: true
                            description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
                            title: Send to Routes
                            type: boolean
                        staleChannelFlushMs:
                            default: 10000
                            description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
                            maximum: 43200000
                            minimum: 10
                            title: Event Breaker buffer timeout (ms)
                            type: number
                        throttleRatePerSec:
                            default: "0"
                            description: 'Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling.'
                            pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
                            title: Throttling
                            type: string
                        type:
                            default: collection
                            enum:
                                - collection
                            type: string
                    type: object
                removeFields:
                    default: []
                    description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
                    items:
                        description: List of fields to remove from Discover results
                        title: Items
                        type: string
                    minItems: 0
                    title: Remove Discover fields
                    type: array
                resumeOnBoot:
                    default: false
                    description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
                    title: Resume job on boot
                    type: boolean
                schedule:
                    description: Configuration for a scheduled job
                    properties:
                        cronSchedule:
                            default: '*/5 * * * *'
                            description: A cron schedule on which to run this job
                            title: Cron schedule
                            type: string
                        enabled:
                            description: Enable to configure scheduling for this Collector
                            title: Enabled
                            type: boolean
                        maxConcurrentRuns:
                            default: 1
                            description: The maximum number of instances of this scheduled job that may be running at any time
                            minimum: 1
                            title: Concurrent run limit
                            type: number
                        resumeMissed: {}
                        run:
                            else: false
                            if:
                                properties:
                                    type:
                                        enum:
                                            - collection
                            then:
                                properties:
                                    earliest:
                                        description: Earliest time to collect data for the selected timezone
                                        title: Earliest
                                        type: number
                                    expression:
                                        default: "true"
                                        description: A filter for tokens in the provided collect path and/or the events being collected
                                        title: Filter
                                        type: string
                                    jobTimeout:
                                        default: "0"
                                        description: 'Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time.'
                                        pattern: \d+[sm]?$
                                        title: Job timeout
                                        type: string
                                    latest:
                                        description: Latest time to collect data for the selected timezone
                                        title: Latest
                                        type: number
                                    logLevel:
                                        default: info
                                        description: Level at which to set task logging
                                        enum:
                                            - error
                                            - warn
                                            - info
                                            - debug
                                            - silly
                                        title: Log level
                                        type: string
                                    maxTaskReschedule:
                                        default: 1
                                        description: Maximum number of times a task can be rescheduled
                                        minimum: 1
                                        title: Task reschedule limit
                                        type: number
                                    maxTaskSize:
                                        default: 10MB
                                        description: |-
                                            Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,
                                                    you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Upper task bundle size
                                        type: string
                                    minTaskSize:
                                        default: 1MB
                                        description: |-
                                            Limits the bundle size for small tasks. For example,
                                                    if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Lower task bundle size
                                        type: string
                                    mode:
                                        default: list
                                        description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                                        title: Mode
                                        type: string
                                    rescheduleDroppedTasks:
                                        default: true
                                        description: Reschedule tasks that failed with non-fatal errors
                                        title: Reschedule tasks
                                        type: boolean
                                    timeRangeType:
                                        default: relative
                                        title: Time range
                                        type: string
                                    timeWarning:
                                        properties: {}
                                        type: object
                                    timestampTimezone: {}
                                required:
                                    - mode
                                type: object
                            title: Run settings
                            type: object
                        skippable:
                            default: true
                            description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
                            title: Skippable
                            type: boolean
                    title: Schedule
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - collection
                        - executor
                        - scheduledSearch
                    title: Job type
                    type: string
                workerAffinity:
                    default: false
                    description: If enabled, tasks are created and run by the same Worker Node
                    title: Worker affinity
                    type: boolean
            required:
                - collector
                - type
            type: object
        SavedJobExecutor:
            properties:
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                executor:
                    properties:
                        conf:
                            properties: {}
                            title: Executor-specific settings
                            type: object
                        storeTaskResults:
                            default: true
                            description: Determines whether or not to write task results to disk
                            title: Store task results
                            type: boolean
                        type:
                            description: The type of executor to run
                            title: Executor type
                            type: string
                    required:
                        - type
                    type: object
                id:
                    description: Unique ID for this Job
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: Job ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                removeFields:
                    default: []
                    description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
                    items:
                        description: List of fields to remove from Discover results
                        title: Items
                        type: string
                    minItems: 0
                    title: Remove Discover fields
                    type: array
                resumeOnBoot:
                    default: false
                    description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
                    title: Resume job on boot
                    type: boolean
                schedule:
                    description: Configuration for a scheduled job
                    properties:
                        cronSchedule:
                            default: '*/5 * * * *'
                            description: A cron schedule on which to run this job
                            title: Cron schedule
                            type: string
                        enabled:
                            description: Enable to configure scheduling for this Collector
                            title: Enabled
                            type: boolean
                        maxConcurrentRuns:
                            default: 1
                            description: The maximum number of instances of this scheduled job that may be running at any time
                            minimum: 1
                            title: Concurrent run limit
                            type: number
                        resumeMissed: {}
                        run:
                            else: false
                            if:
                                properties:
                                    type:
                                        enum:
                                            - collection
                            then:
                                properties:
                                    earliest:
                                        description: Earliest time to collect data for the selected timezone
                                        title: Earliest
                                        type: number
                                    expression:
                                        default: "true"
                                        description: A filter for tokens in the provided collect path and/or the events being collected
                                        title: Filter
                                        type: string
                                    jobTimeout:
                                        default: "0"
                                        description: 'Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time.'
                                        pattern: \d+[sm]?$
                                        title: Job timeout
                                        type: string
                                    latest:
                                        description: Latest time to collect data for the selected timezone
                                        title: Latest
                                        type: number
                                    logLevel:
                                        default: info
                                        description: Level at which to set task logging
                                        enum:
                                            - error
                                            - warn
                                            - info
                                            - debug
                                            - silly
                                        title: Log level
                                        type: string
                                    maxTaskReschedule:
                                        default: 1
                                        description: Maximum number of times a task can be rescheduled
                                        minimum: 1
                                        title: Task reschedule limit
                                        type: number
                                    maxTaskSize:
                                        default: 10MB
                                        description: |-
                                            Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,
                                                    you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Upper task bundle size
                                        type: string
                                    minTaskSize:
                                        default: 1MB
                                        description: |-
                                            Limits the bundle size for small tasks. For example,
                                                    if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Lower task bundle size
                                        type: string
                                    mode:
                                        default: list
                                        description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                                        title: Mode
                                        type: string
                                    rescheduleDroppedTasks:
                                        default: true
                                        description: Reschedule tasks that failed with non-fatal errors
                                        title: Reschedule tasks
                                        type: boolean
                                    timeRangeType:
                                        default: relative
                                        title: Time range
                                        type: string
                                    timeWarning:
                                        properties: {}
                                        type: object
                                    timestampTimezone: {}
                                required:
                                    - mode
                                type: object
                            title: Run settings
                            type: object
                        skippable:
                            default: true
                            description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
                            title: Skippable
                            type: boolean
                    title: Schedule
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - collection
                        - executor
                        - scheduledSearch
                    title: Job type
                    type: string
            required:
                - executor
                - type
            type: object
        SavedJobScheduledSearch:
            properties:
                description:
                    title: Description
                    type: string
                environment:
                    description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
                    title: Environment
                    type: string
                id:
                    description: Unique ID for this Job
                    pattern: ^[a-zA-Z0-9_-]+$
                    title: Job ID
                    type: string
                ignoreGroupJobsLimit:
                    default: false
                    description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
                    title: Ignore Group job limits
                    type: boolean
                removeFields:
                    default: []
                    description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
                    items:
                        description: List of fields to remove from Discover results
                        title: Items
                        type: string
                    minItems: 0
                    title: Remove Discover fields
                    type: array
                resumeOnBoot:
                    default: false
                    description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
                    title: Resume job on boot
                    type: boolean
                savedQueryId:
                    description: Identifies which search query to run
                    title: ID of the SavedQuery
                    type: string
                schedule:
                    description: Configuration for a scheduled job
                    properties:
                        cronSchedule:
                            default: '*/5 * * * *'
                            description: A cron schedule on which to run this job
                            title: Cron schedule
                            type: string
                        enabled:
                            description: Enable to configure scheduling for this Collector
                            title: Enabled
                            type: boolean
                        maxConcurrentRuns:
                            default: 1
                            description: The maximum number of instances of this scheduled job that may be running at any time
                            minimum: 1
                            title: Concurrent run limit
                            type: number
                        resumeMissed: {}
                        run:
                            else: false
                            if:
                                properties:
                                    type:
                                        enum:
                                            - collection
                            then:
                                properties:
                                    earliest:
                                        description: Earliest time to collect data for the selected timezone
                                        title: Earliest
                                        type: number
                                    expression:
                                        default: "true"
                                        description: A filter for tokens in the provided collect path and/or the events being collected
                                        title: Filter
                                        type: string
                                    jobTimeout:
                                        default: "0"
                                        description: 'Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time.'
                                        pattern: \d+[sm]?$
                                        title: Job timeout
                                        type: string
                                    latest:
                                        description: Latest time to collect data for the selected timezone
                                        title: Latest
                                        type: number
                                    logLevel:
                                        default: info
                                        description: Level at which to set task logging
                                        enum:
                                            - error
                                            - warn
                                            - info
                                            - debug
                                            - silly
                                        title: Log level
                                        type: string
                                    maxTaskReschedule:
                                        default: 1
                                        description: Maximum number of times a task can be rescheduled
                                        minimum: 1
                                        title: Task reschedule limit
                                        type: number
                                    maxTaskSize:
                                        default: 10MB
                                        description: |-
                                            Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,
                                                    you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Upper task bundle size
                                        type: string
                                    minTaskSize:
                                        default: 1MB
                                        description: |-
                                            Limits the bundle size for small tasks. For example,
                                                    if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                                        pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                                        title: Lower task bundle size
                                        type: string
                                    mode:
                                        default: list
                                        description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                                        title: Mode
                                        type: string
                                    rescheduleDroppedTasks:
                                        default: true
                                        description: Reschedule tasks that failed with non-fatal errors
                                        title: Reschedule tasks
                                        type: boolean
                                    timeRangeType:
                                        default: relative
                                        title: Time range
                                        type: string
                                    timeWarning:
                                        properties: {}
                                        type: object
                                    timestampTimezone: {}
                                required:
                                    - mode
                                type: object
                            title: Run settings
                            type: object
                        skippable:
                            default: true
                            description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
                            title: Skippable
                            type: boolean
                    title: Schedule
                    type: object
                streamtags:
                    default: []
                    description: Tags for filtering and grouping in @{product}
                    items:
                        type: string
                    title: Tags
                    type: array
                ttl:
                    default: 4h
                    description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
                    pattern: \d+[smh]$
                    title: Time to live
                    type: string
                type:
                    enum:
                        - collection
                        - executor
                        - scheduledSearch
                    title: Job type
                    type: string
            required:
                - savedQueryId
                - type
            type: object
        SavedQuery:
            properties:
                chartConfig:
                    $ref: '#/components/schemas/ChartConfig'
                description:
                    type: string
                displayUsername:
                    type: string
                earliest:
                    type: string
                id:
                    type: string
                isPrivate:
                    type: boolean
                isSystem:
                    type: boolean
                latest:
                    type: string
                lib:
                    $ref: '#/components/schemas/CriblLib'
                name:
                    type: string
                query:
                    type: string
                resolvedDatasetIds:
                    items:
                        type: string
                    type: array
                sampleRate:
                    type: number
                schedule:
                    $ref: '#/components/schemas/SavedQuerySchedule'
                tableConfig:
                    $ref: '#/components/schemas/object'
                user:
                    type: string
            required:
                - id
                - name
                - query
            type: object
        SavedQuerySchedule:
            properties:
                cronSchedule:
                    type: string
                enabled:
                    type: boolean
                keepLastN:
                    type: number
                notifications:
                    properties:
                        disabled:
                            type: boolean
                        items:
                            items:
                                $ref: '#/components/schemas/Notification'
                            type: array
                    required:
                        - disabled
                    type: object
                resumeMissed:
                    type: boolean
                resumeOnBoot:
                    type: boolean
                tz:
                    type: string
            required:
                - cronSchedule
                - enabled
                - keepLastN
                - notifications
                - tz
            type: object
        SavesSearchRunMode:
            enum:
                - newSearch
                - lastRun
            type: string
        SchemaLibEntry:
            additionalProperties: true
            properties:
                description:
                    title: Description
                    type: string
                id:
                    title: ID
                    type: string
                schema:
                    description: JSON schema matching standards of draft version 2019-09
                    title: Schema
                    type: string
            required:
                - id
                - schema
            type: object
        ScriptLibEntry:
            additionalProperties: true
            properties:
                args:
                    description: Arguments to pass when executing this script
                    items:
                        type: string
                    title: Arguments
                    type: array
                command:
                    description: Command to execute for this script
                    title: Command
                    type: string
                description:
                    title: Description
                    type: string
                env:
                    additionalProperties:
                        type: string
                    description: Extra environment variables to set when executing script
                    properties: {}
                    title: Env variables
                    type: object
                id:
                    title: ID
                    type: string
            required:
                - id
                - command
            type: object
        SearchAggMode:
            enum:
                - Coordinated
                - CoordinatedSuppressPreview
                - DistributedCoordinated
                - DistributedCoordinatedSuppressPreview
                - Federated
            nullable: true
            type: string
        SearchAuditMetrics:
            properties:
                bytesIn:
                    type: number
                bytesOut:
                    type: number
                eventsIn:
                    type: number
                eventsOut:
                    type: number
                objects:
                    properties:
                        discovered:
                            type: number
                        scanned:
                            type: number
                        skipped:
                            type: number
                    required:
                        - discovered
                        - scanned
                        - skipped
                    type: object
                time:
                    properties:
                        queuedSec:
                            type: number
                        runningSec:
                            type: number
                        taskCompletionTotalSec:
                            type: number
                        taskReceivingTotalSec:
                            type: number
                    required:
                        - queuedSec
                        - runningSec
                        - taskCompletionTotalSec
                        - taskReceivingTotalSec
                    type: object
            required:
                - bytesIn
                - bytesOut
                - eventsIn
                - eventsOut
                - objects
                - time
            type: object
        SearchConfig:
            properties:
                canComputeMetadataDistributively:
                    type: boolean
                datasets:
                    items:
                        type: string
                    type: array
                hasSendOperator:
                    type: boolean
                orderedFieldNames:
                    items:
                        type: string
                    type: array
                referencedFieldNames:
                    items:
                        type: string
                    type: array
                searchTerms:
                    items:
                        $ref: '#/components/schemas/SearchTerm'
                    type: array
                sortFields:
                    items:
                        $ref: '#/components/schemas/SortByField'
                    type: array
                useFormattedVisualization:
                    type: boolean
            required:
                - datasets
                - hasSendOperator
                - orderedFieldNames
                - searchTerms
                - useFormattedVisualization
            type: object
        SearchDashboard:
            properties:
                cacheTTLSeconds:
                    type: number
                category:
                    type: string
                created:
                    type: number
                createdBy:
                    type: string
                description:
                    type: string
                displayCreatedBy:
                    type: string
                displayModifiedBy:
                    type: string
                elements:
                    items:
                        oneOf:
                            - properties:
                                description:
                                    type: string
                                empty:
                                    type: boolean
                                hidePanel:
                                    type: boolean
                                horizontalChart:
                                    type: boolean
                                id:
                                    type: string
                                index:
                                    type: number
                                inputId:
                                    type: string
                                layout:
                                    $ref: '#/components/schemas/DashboardLayout'
                                search:
                                    $ref: '#/components/schemas/SearchQuery'
                                title:
                                    type: string
                                type:
                                    $ref: '#/components/schemas/DashboardElementType'
                                value:
                                    additionalProperties: true
                                    type: object
                                variant:
                                    $ref: '#/components/schemas/DashboardElementVariant'
                              required:
                                - id
                                - layout
                                - search
                                - type
                              type: object
                            - properties:
                                description:
                                    type: string
                                empty:
                                    type: boolean
                                hidePanel:
                                    type: boolean
                                id:
                                    type: string
                                index:
                                    type: number
                                layout:
                                    $ref: '#/components/schemas/DashboardLayout'
                                title:
                                    type: string
                                type:
                                    enum:
                                        - markdown.default
                                    type: string
                                value:
                                    type: string
                                variant:
                                    enum:
                                        - markdown
                                    type: string
                              required:
                                - id
                                - layout
                                - type
                                - variant
                              type: object
                    type: array
                id:
                    type: string
                modified:
                    type: number
                modifiedBy:
                    type: string
                name:
                    type: string
                packId:
                    type: string
                refreshRate:
                    type: number
                resolvedDatasetIds:
                    items:
                        type: string
                    type: array
                schedule:
                    $ref: '#/components/schemas/SavedQuerySchedule'
            required:
                - created
                - createdBy
                - elements
                - id
                - modified
                - name
            type: object
        SearchEvent: {}
        SearchHealthCheckStatus:
            properties:
                reported_at:
                    type: number
                status:
                    enum:
                        - red
                        - green
                    type: string
            required:
                - reported_at
                - status
            type: object
        SearchJob:
            properties:
                accelerated:
                    type: boolean
                aliasOfOriginalJobId:
                    type: string
                compatibilityChecks:
                    properties:
                        datatypes:
                            type: boolean
                        stageIds:
                            items:
                                type: string
                            type: array
                    type: object
                completionInfo:
                    type: string
                context:
                    type: string
                correlationId:
                    type: string
                cpuMetrics:
                    $ref: '#/components/schemas/CPUTimeMetric'
                datatypeOverrides:
                    $ref: '#/components/schemas/DatatypeOverrides'
                disableNotifications:
                    type: boolean
                displayUsername:
                    type: string
                earliest:
                    oneOf:
                        - type: string
                        - type: number
                earliestEpoch:
                    type: number
                errorStateConfig:
                    $ref: '#/components/schemas/SearchJobErrorStateConfig'
                group:
                    type: string
                id:
                    type: string
                isPrivate:
                    type: boolean
                latest:
                    oneOf:
                        - type: string
                        - type: number
                latestEpoch:
                    type: number
                metadata:
                    $ref: '#/components/schemas/SearchJobMetadata'
                numEventsAfter:
                    type: number
                numEventsBefore:
                    type: number
                query:
                    type: string
                queryWithMacrosResolved:
                    type: string
                sampleRate:
                    type: number
                savedQueryName:
                    type: string
                searchParameterDeclarations:
                    items:
                        $ref: '#/components/schemas/SearchParameter'
                    type: array
                searchParameterValues:
                    $ref: '#/components/schemas/SearchParameters'
                stages:
                    items:
                        $ref: '#/components/schemas/SearchJobStageConfig'
                    type: array
                status:
                    enum:
                        - new
                        - failed
                        - running
                        - completed
                        - canceled
                        - queued
                    type: string
                tableConfig:
                    $ref: '#/components/schemas/TableViewSettings'
                targetEventTime:
                    type: number
                timeCompleted:
                    type: number
                timeCreated:
                    type: number
                timeStarted:
                    type: number
                timeToFirstByte:
                    type: number
                totalBytesScanned:
                    type: number
                totalEventCount:
                    type: number
                type:
                    enum:
                        - command
                        - standard
                        - datatypePreview
                        - scheduled
                        - dashboard
                    type: string
                usageGroupId:
                    type: string
                usageMetrics:
                    $ref: '#/components/schemas/SearchAuditMetrics'
                user:
                    type: string
            required:
                - displayUsername
                - group
                - id
                - query
                - status
                - timeCreated
                - timeStarted
                - user
            type: object
        SearchJobErrorStateConfig:
            properties:
                coordinated:
                    type: boolean
                errorMessages:
                    items:
                        type: string
                    type: array
            required:
                - coordinated
                - errorMessages
            type: object
        SearchJobMetadata:
            properties: {}
            type: object
        SearchJobResults:
            properties:
                isFinished:
                    type: boolean
                job:
                    $ref: '#/components/schemas/SearchJobResultsJobInfo'
                limit:
                    type: number
                offset:
                    type: number
                persistedEventCount:
                    type: number
                totalEventCount:
                    type: number
            required:
                - isFinished
                - job
                - offset
                - persistedEventCount
                - totalEventCount
            type: object
        SearchJobResultsJobInfo: {}
        SearchJobStageConfig:
            properties:
                cacheStatusByDatasetId:
                    $ref: '#/components/schemas/CacheStatusByDatasetId'
                dependencies:
                    items:
                        $ref: '#/components/schemas/StageDependency'
                    type: array
                earliest:
                    oneOf:
                        - type: string
                        - type: number
                executionWarnings:
                    items:
                        $ref: '#/components/schemas/JobExecutionWarning'
                    type: array
                filter:
                    type: string
                id:
                    type: string
                latest:
                    oneOf:
                        - type: string
                        - type: number
                resolvedDatasetIds:
                    items:
                        type: string
                    type: array
                searchConfig:
                    $ref: '#/components/schemas/SearchConfig'
                status:
                    enum:
                        - new
                        - failed
                        - running
                        - completed
                        - canceled
                        - queued
                    type: string
                subQueryText:
                    type: string
            required:
                - dependencies
                - filter
                - id
                - resolvedDatasetIds
                - searchConfig
                - status
                - subQueryText
            type: object
        SearchMacro:
            properties:
                created:
                    type: number
                createdBy:
                    type: string
                description:
                    type: string
                id:
                    type: string
                modified:
                    type: number
                replacement:
                    type: string
                tags:
                    type: string
            required:
                - id
                - replacement
            type: object
        SearchParameter:
            properties:
                defaultValue:
                    $ref: '#/components/schemas/SearchParameterValue'
                name:
                    type: string
                type:
                    $ref: '#/components/schemas/SearchParameterType'
            required:
                - name
                - type
            type: object
        SearchParameterType:
            enum:
                - string
                - number
                - boolean
            type: string
        SearchParameterValue:
            oneOf:
                - type: string
                - type: number
                - type: boolean
        SearchParameters: {}
        SearchQuery:
            oneOf:
                - properties:
                    query:
                        type: string
                    queryId:
                        type: string
                    runMode:
                        $ref: '#/components/schemas/SavesSearchRunMode'
                    type:
                        enum:
                            - saved
                        type: string
                  required:
                    - queryId
                    - type
                  type: object
                - properties:
                    earliest:
                        oneOf:
                            - nullable: true
                              type: string
                            - nullable: true
                              type: number
                    latest:
                        oneOf:
                            - nullable: true
                              type: string
                            - nullable: true
                              type: number
                    parentSearchId:
                        type: string
                    query:
                        oneOf:
                            - nullable: true
                              type: string
                    sampleRate:
                        type: number
                    timezone:
                        type: string
                    type:
                        enum:
                            - inline
                        type: string
                  required:
                    - earliest
                    - latest
                    - query
                    - type
                  type: object
                - properties:
                    type:
                        enum:
                            - values
                        type: string
                    values:
                        items:
                            type: string
                        type: array
                  required:
                    - type
                    - values
                  type: object
        SearchSettings:
            properties:
                compressObjectCacheArtifacts:
                    type: boolean
                fieldSummaryMaxFields:
                    type: number
                fieldSummaryMaxNestedDepth:
                    type: number
                maxConcurrentSearches:
                    $ref: '#/components/schemas/MaxConcurrentSearchesType'
                maxExecutorsPerSearch:
                    type: number
                maxResultsPerSearch:
                    type: number
                searchHistoryMaxJobs:
                    type: number
                searchQueueLength:
                    oneOf:
                        - type: number
                warmPoolSize:
                    oneOf:
                        - type: number
                        - enum:
                            - auto
                writeOnlyProviderSecrets:
                    type: boolean
            required:
                - compressObjectCacheArtifacts
                - fieldSummaryMaxFields
                - fieldSummaryMaxNestedDepth
                - maxConcurrentSearches
                - maxExecutorsPerSearch
                - maxResultsPerSearch
                - searchHistoryMaxJobs
                - searchQueueLength
                - warmPoolSize
                - writeOnlyProviderSecrets
            type: object
        SearchTerm:
            properties:
                isCaseSensitive:
                    type: boolean
                term:
                    type: string
            required:
                - isCaseSensitive
                - term
            type: object
        SecretType:
            enum:
                - text
                - keypair
                - credentials
            type: string
        SendDiagBundle:
            properties:
                includeGit:
                    default: true
                    description: Disable to exclude the git audit from the bundle
                    title: Include git
                    type: boolean
                includeInstallLogs:
                    default: false
                    description: Enable to include installation logs in the bundle (Windows only)
                    title: Include installation logs
                    type: boolean
                includeMetrics:
                    default: true
                    description: Disable to exclude metrics from the bundle
                    title: Include metrics
                    type: boolean
                includeTopTalkers:
                    default: false
                    description: Include data about your 10 highest-volume Sources, Destinations, Pipelines, Routes, and Packs in the diagnostic bundle
                    title: Include top talkers
                    type: boolean
                maxIncludeJobs:
                    description: Number of jobs, including all tasks that will be included in the bundle
                    minimum: 0
                    title: Latest number of jobs
                    type: number
                path:
                    description: Existing bundle that will be sent to Cribl Support. Max 100MB.
                    title: Diag bundle file path
                    type: string
                renameJs:
                    default: true
                    description: Append .txt to JavaScript files
                    title: Rename .js files
                    type: boolean
                sendToCribl:
                    default: false
                    description: Send diagnostic bundle to Cribl Support
                    title: Send to Cribl Support
                    type: boolean
            type: object
        ServicesLimits:
            properties:
                connections:
                    $ref: '#/components/schemas/CommonServiceLimitConfigs'
                metrics:
                    $ref: '#/components/schemas/CommonServiceLimitConfigs'
                notifications:
                    $ref: '#/components/schemas/CommonServiceLimitConfigs'
            required:
                - connections
                - metrics
                - notifications
            type: object
        SortByField:
            properties:
                direction:
                    enum:
                        - ascending
                        - descending
                    type: string
                fieldName:
                    type: string
                nullPosition:
                    enum:
                        - nullsFirst
                        - nullsLast
                    type: string
            required:
                - direction
                - fieldName
                - nullPosition
            type: object
        StageDependency:
            properties:
                dependentFields:
                    items:
                        type: string
                    type: array
                id:
                    $ref: '#/components/schemas/StageId'
                type:
                    $ref: '#/components/schemas/StageDependencyType'
            required:
                - id
                - type
            type: object
        StageDependencyType:
            enum:
                - stage
                - stage-scalar
            type: string
        StageId:
            type: string
        State:
            additionalProperties: true
            type: object
        Subscription:
            properties:
                consumer:
                    $ref: '#/components/schemas/SubscriptionConsumer'
                description:
                    type: string
                disabled:
                    type: boolean
                filter:
                    type: string
                id:
                    type: string
                pipeline:
                    type: string
            required:
                - id
                - pipeline
            type: object
        SubscriptionConsumer:
            properties:
                connections:
                    items:
                        $ref: '#/components/schemas/Connection'
                    type: array
                disabled:
                    type: boolean
                type:
                    type: string
            type: object
        SymLinkInfo:
            properties:
                symLinkTarget:
                    type: string
                symLinkTargetAbsolutePath:
                    type: string
                symLinkTargetIsDirectory:
                    type: boolean
                symLinkTargetIsFile:
                    type: boolean
            required:
                - symLinkTarget
                - symLinkTargetAbsolutePath
            type: object
        SystemConf:
            properties:
                installType:
                    type: string
                restart:
                    type: string
                upgrade:
                    type: string
            required:
                - installType
                - restart
                - upgrade
            type: object
        SystemInfo:
            properties:
                BUILD:
                    additionalProperties: true
                    type: object
                apiPort:
                    type: number
                conf:
                    properties:
                        confVersion:
                            type: string
                        inputs:
                            type: number
                        name:
                            type: string
                        outputs:
                            type: number
                        pipelines:
                            type: number
                        routes:
                            type: number
                        rules:
                            type: number
                    required:
                        - inputs
                        - outputs
                        - pipelines
                        - routes
                        - rules
                    type: object
                configPath:
                    type: string
                cpus:
                    items:
                        properties:
                            model:
                                type: string
                            speed:
                                type: number
                            times:
                                additionalProperties: true
                                type: object
                        required:
                            - model
                            - speed
                            - times
                        type: object
                    type: array
                diskUsage:
                    properties:
                        bytesAvailable:
                            type: number
                        bytesUsed:
                            type: number
                        diskPath:
                            type: string
                        totalDiskSize:
                            type: number
                    required:
                        - bytesAvailable
                        - bytesUsed
                        - diskPath
                        - totalDiskSize
                    type: object
                distMode:
                    $ref: '#/components/schemas/AppMode'
                env:
                    type: object
                guid:
                    type: string
                hasCloudWorkspace:
                    type: boolean
                hostname:
                    type: string
                installPath:
                    type: string
                isCriblSandbox:
                    type: boolean
                isFedRampEnabled:
                    type: boolean
                isFipsEnabled:
                    type: boolean
                license:
                    $ref: '#/components/schemas/LicenseInfo'
                limits:
                    properties:
                        samples:
                            properties:
                                maxSize:
                                    type: string
                            required:
                                - maxSize
                            type: object
                    required:
                        - samples
                    type: object
                loadavg:
                    items:
                        type: number
                    type: array
                memory:
                    properties:
                        free:
                            type: number
                        total:
                            type: number
                    required:
                        - free
                        - total
                    type: object
                messages:
                    items:
                        $ref: '#/components/schemas/BulletinMessage'
                    type: array
                net:
                    additionalProperties: true
                    type: object
                os:
                    properties:
                        arch:
                            type: string
                        endianness:
                            type: string
                        platform:
                            type: string
                        release:
                            type: string
                        type:
                            type: string
                    required:
                        - arch
                        - endianness
                        - platform
                        - release
                        - type
                    type: object
                systemConf:
                    $ref: '#/components/schemas/SystemConf'
                uptime:
                    type: number
                version:
                    type: string
                workerProcesses:
                    type: number
            required:
                - BUILD
                - apiPort
                - conf
                - configPath
                - cpus
                - diskUsage
                - distMode
                - env
                - guid
                - hostname
                - installPath
                - license
                - limits
                - loadavg
                - memory
                - messages
                - net
                - os
                - systemConf
                - uptime
                - version
                - workerProcesses
            type: object
        SystemMetricsEnum:
            properties:
                dimKeyFilter:
                    oneOf:
                        - type: string
                        - items:
                            type: string
                          type: array
                dimValueFilter:
                    oneOf:
                        - type: string
                        - items:
                            type: string
                          type: array
                earliest:
                    type: number
                filterExpr:
                    type: string
                maxValues:
                    type: number
                metricNameFilter:
                    oneOf:
                        - type: string
                        - items:
                            type: string
                          type: array
            type: object
        SystemSettings:
            properties:
                api:
                    properties:
                        baseUrl:
                            type: string
                        disableApiCache:
                            type: boolean
                        disabled:
                            type: boolean
                        headers:
                            type: object
                        host:
                            type: string
                        idleSessionTTL:
                            type: number
                        listenOnPort:
                            type: boolean
                        loginRateLimit:
                            type: string
                        port:
                            type: number
                        protocol:
                            type: string
                        scripts:
                            type: boolean
                        sensitiveFields:
                            items:
                                type: string
                            type: array
                        ssl:
                            properties:
                                caPath:
                                    type: string
                                certPath:
                                    type: string
                                disabled:
                                    type: boolean
                                passphrase:
                                    type: string
                                privKeyPath:
                                    type: string
                            required:
                                - certPath
                                - disabled
                                - passphrase
                                - privKeyPath
                            type: object
                        ssoRateLimit:
                            type: string
                        workerRemoteAccess:
                            type: boolean
                    required:
                        - disabled
                        - host
                        - port
                        - protocol
                        - ssl
                        - workerRemoteAccess
                    type: object
                auth:
                    $ref: '#/components/schemas/AuthConfig'
                backups:
                    properties:
                        backupPersistence:
                            type: string
                        backupsDirectory:
                            type: string
                    required:
                        - backupPersistence
                        - backupsDirectory
                    type: object
                customLogo:
                    properties:
                        enabled:
                            type: boolean
                        logoDescription:
                            type: string
                        logoImage:
                            type: string
                    required:
                        - enabled
                        - logoDescription
                        - logoImage
                    type: object
                distributed:
                    properties:
                        mode:
                            $ref: '#/components/schemas/AppMode'
                    required:
                        - mode
                    type: object
                fips:
                    type: boolean
                git:
                    $ref: '#/components/schemas/GitSettings'
                jobLimits:
                    $ref: '#/components/schemas/JobSettings'
                limits:
                    $ref: '#/components/schemas/Limits'
                pii:
                    properties:
                        enablePiiDetection:
                            type: boolean
                    required:
                        - enablePiiDetection
                    type: object
                proxy:
                    properties:
                        useEnvVars:
                            type: boolean
                    required:
                        - useEnvVars
                    type: object
                redisCacheLimits:
                    $ref: '#/components/schemas/RedisCacheLimits'
                redisLimits:
                    $ref: '#/components/schemas/RedisLimits'
                rollback:
                    properties:
                        rollbackEnabled:
                            type: boolean
                        rollbackRetries:
                            type: number
                        rollbackTimeout:
                            type: number
                    required:
                        - rollbackEnabled
                    type: object
                searchLimits:
                    $ref: '#/components/schemas/SearchSettings'
                servicesLimits:
                    $ref: '#/components/schemas/ServicesLimits'
                shutdown:
                    properties:
                        drainTimeout:
                            type: number
                    required:
                        - drainTimeout
                    type: object
                sni:
                    properties:
                        disableSNIRouting:
                            type: boolean
                    required:
                        - disableSNIRouting
                    type: object
                sockets:
                    properties:
                        directory:
                            type: string
                    type: object
                system:
                    properties:
                        intercom:
                            type: boolean
                        upgrade:
                            enum:
                                - false
                                - api
                    required:
                        - intercom
                        - upgrade
                    type: object
                tls:
                    properties:
                        defaultCipherList:
                            type: string
                        defaultEcdhCurve:
                            type: string
                        maxVersion:
                            type: string
                        minVersion:
                            type: string
                        rejectUnauthorized:
                            type: boolean
                    required:
                        - defaultCipherList
                        - defaultEcdhCurve
                        - maxVersion
                        - minVersion
                        - rejectUnauthorized
                    type: object
                upgradeGroupSettings:
                    $ref: '#/components/schemas/UpgradeGroupSettings'
                upgradeSettings:
                    $ref: '#/components/schemas/UpgradeSettings'
                workers:
                    properties:
                        count:
                            type: number
                        enableHeapSnapshots:
                            type: boolean
                        loadThrottlePerc:
                            type: number
                        memory:
                            type: number
                        minimum:
                            type: number
                        startupMaxConns:
                            type: number
                        startupThrottleTimeout:
                            type: number
                        v8SingleThread:
                            type: boolean
                    required:
                        - count
                        - memory
                        - minimum
                    type: object
            required:
                - api
                - auth
                - backups
                - customLogo
                - distributed
                - fips
                - git
                - jobLimits
                - limits
                - pii
                - proxy
                - redisCacheLimits
                - redisLimits
                - rollback
                - searchLimits
                - servicesLimits
                - shutdown
                - sni
                - system
                - tls
                - upgradeGroupSettings
                - upgradeSettings
                - workers
            type: object
        SystemSettingsConf:
            properties:
                api:
                    properties:
                        baseUrl:
                            type: string
                        disableApiCache:
                            type: boolean
                        disabled:
                            type: boolean
                        headers:
                            type: object
                        host:
                            type: string
                        idleSessionTTL:
                            type: number
                        listenOnPort:
                            type: boolean
                        loginRateLimit:
                            type: string
                        port:
                            type: number
                        protocol:
                            type: string
                        scripts:
                            type: boolean
                        sensitiveFields:
                            items:
                                type: string
                            type: array
                        ssl:
                            properties:
                                caPath:
                                    type: string
                                certPath:
                                    type: string
                                disabled:
                                    type: boolean
                                passphrase:
                                    type: string
                                privKeyPath:
                                    type: string
                            required:
                                - certPath
                                - disabled
                                - passphrase
                                - privKeyPath
                            type: object
                        ssoRateLimit:
                            type: string
                        workerRemoteAccess:
                            type: boolean
                    required:
                        - disabled
                        - host
                        - port
                        - protocol
                        - ssl
                        - workerRemoteAccess
                    type: object
                backups:
                    properties:
                        backupPersistence:
                            type: string
                        backupsDirectory:
                            type: string
                    required:
                        - backupPersistence
                        - backupsDirectory
                    type: object
                customLogo:
                    properties:
                        enabled:
                            type: boolean
                        logoDescription:
                            type: string
                        logoImage:
                            type: string
                    required:
                        - enabled
                        - logoDescription
                        - logoImage
                    type: object
                pii:
                    properties:
                        enablePiiDetection:
                            type: boolean
                    required:
                        - enablePiiDetection
                    type: object
                proxy:
                    properties:
                        useEnvVars:
                            type: boolean
                    required:
                        - useEnvVars
                    type: object
                rollback:
                    properties:
                        rollbackEnabled:
                            type: boolean
                        rollbackRetries:
                            type: number
                        rollbackTimeout:
                            type: number
                    required:
                        - rollbackEnabled
                    type: object
                shutdown:
                    properties:
                        drainTimeout:
                            type: number
                    required:
                        - drainTimeout
                    type: object
                sni:
                    properties:
                        disableSNIRouting:
                            type: boolean
                    required:
                        - disableSNIRouting
                    type: object
                sockets:
                    properties:
                        directory:
                            type: string
                    type: object
                system:
                    properties:
                        intercom:
                            type: boolean
                        upgrade:
                            enum:
                                - false
                                - api
                    required:
                        - intercom
                        - upgrade
                    type: object
                tls:
                    properties:
                        defaultCipherList:
                            type: string
                        defaultEcdhCurve:
                            type: string
                        maxVersion:
                            type: string
                        minVersion:
                            type: string
                        rejectUnauthorized:
                            type: boolean
                    required:
                        - defaultCipherList
                        - defaultEcdhCurve
                        - maxVersion
                        - minVersion
                        - rejectUnauthorized
                    type: object
                upgradeGroupSettings:
                    $ref: '#/components/schemas/UpgradeGroupSettings'
                upgradeSettings:
                    $ref: '#/components/schemas/UpgradeSettings'
                workers:
                    properties:
                        count:
                            type: number
                        enableHeapSnapshots:
                            type: boolean
                        loadThrottlePerc:
                            type: number
                        memory:
                            type: number
                        minimum:
                            type: number
                        startupMaxConns:
                            type: number
                        startupThrottleTimeout:
                            type: number
                        v8SingleThread:
                            type: boolean
                    required:
                        - count
                        - memory
                        - minimum
                    type: object
            required:
                - api
                - backups
                - customLogo
                - pii
                - proxy
                - rollback
                - shutdown
                - sni
                - system
                - tls
                - upgradeGroupSettings
                - upgradeSettings
                - workers
            type: object
        TLSClientParams:
            properties:
                caPath:
                    type: string
                certPath:
                    type: string
                checkServerIdentity:
                    type: object
                disabled:
                    type: boolean
                passphrase:
                    type: string
                privKeyPath:
                    type: string
                rejectUnauthorized:
                    type: boolean
                servername:
                    type: string
            required:
                - disabled
            type: object
        TableViewSettings:
            properties:
                columnFilterSettings:
                    $ref: '#/components/schemas/ColumnFilterSettings'
                columnFormatSettings:
                    $ref: '#/components/schemas/ColumnFormatSettings'
                columnOrderSettings:
                    $ref: '#/components/schemas/ColumnOrderSettings'
                columnSortSettings:
                    $ref: '#/components/schemas/ColumnSortSettings'
                eventDetailsPanel:
                    type: boolean
                eventTableFields:
                    items:
                        type: string
                    type: array
                rowNumberColumnWidth:
                    type: number
                showColumnTotals:
                    type: boolean
                showColumnTotalsPinned:
                    type: boolean
                showRowNumbers:
                    type: boolean
                showRowTotals:
                    type: boolean
                showRowTotalsPinned:
                    type: boolean
                wrapCells:
                    type: boolean
            required:
                - showColumnTotals
                - showColumnTotalsPinned
                - showRowNumbers
                - showRowTotals
                - showRowTotalsPinned
                - wrapCells
            type: object
        Team:
            properties:
                description:
                    type: string
                id:
                    type: string
                name:
                    type: string
                roles:
                    items:
                        type: string
                    type: array
                ssoGroupIds:
                    items:
                        type: string
                    type: array
            required:
                - description
                - id
                - name
                - roles
            type: object
        TeamAccessControlList:
            properties:
                perms:
                    items:
                        $ref: '#/components/schemas/ResourcePolicy'
                    type: array
                team:
                    type: string
            required:
                - perms
                - team
            type: object
        TrustPolicy:
            properties:
                id:
                    type: string
                policy:
                    $ref: '#/components/schemas/AMTrustPolicy'
            required:
                - id
                - policy
            type: object
        UiStatePatch:
            properties:
                args:
                    additionalProperties: true
                    type: object
                op:
                    enum:
                        - set
                        - push-recent
                    type: string
                value: {}
            required:
                - op
                - value
            type: object
        UpdateHecTokenRequest:
            properties:
                description:
                    type: string
                enabled:
                    type: boolean
                metadata:
                    items:
                        properties:
                            name:
                                type: string
                            value:
                                type: string
                        required:
                            - name
                            - value
                        type: object
                    type: array
            type: object
        UpgradeGroupSettings:
            properties:
                isRolling:
                    type: boolean
                quantity:
                    type: number
                retryCount:
                    type: number
                retryDelay:
                    type: number
            type: object
        UpgradeMasterRequest:
            properties:
                packages:
                    description: Provide your own URLs or local paths for platform-specific Cribl packages
                    items:
                        properties:
                            packageHashUrl:
                                description: Package's MD5 or SHA256 hash HTTP URL or local path
                                minLength: 1
                                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)\.(tgz|msi)?\.(md5|sha256)
                                title: Package Hash Location
                                type: string
                            packageUrl:
                                description: Package HTTP URL or local path
                                minLength: 1
                                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)
                                title: Platform-Specific Package Location
                                type: string
                        required:
                            - packageUrl
                        type: object
                    title: Custom Path
                    type: array
            type: object
        UpgradePackageUrls:
            properties:
                packageHashUrl:
                    type: string
                packageUrl:
                    type: string
            required:
                - packageUrl
            type: object
        UpgradeResult:
            properties:
                availableVersions:
                    items:
                        $ref: '#/components/schemas/VersionInfo'
                    type: array
                canUpgrade:
                    type: boolean
                installedVersion:
                    $ref: '#/components/schemas/VersionInfo'
                isSuccess:
                    type: boolean
                message:
                    type: string
                upgradedToVersion:
                    $ref: '#/components/schemas/VersionInfo'
            required:
                - availableVersions
                - canUpgrade
                - installedVersion
                - isSuccess
                - message
                - upgradedToVersion
            type: object
        UpgradeSettings:
            properties:
                automaticUpgradeCheckPeriod:
                    type: string
                disableAutomaticUpgrade:
                    type: boolean
                enableLegacyEdgeUpgrade:
                    type: boolean
                packageUrls:
                    items:
                        $ref: '#/components/schemas/UpgradePackageUrls'
                    type: array
                upgradeSource:
                    type: string
            required:
                - disableAutomaticUpgrade
                - enableLegacyEdgeUpgrade
                - upgradeSource
            type: object
        UsageGroup:
            properties:
                coordinatorHeapMemoryLimit:
                    type: number
                description:
                    type: string
                enabled:
                    type: boolean
                id:
                    type: string
                rules:
                    $ref: '#/components/schemas/LimitRuleDefinitions'
                usersCount:
                    type: number
            required:
                - id
                - rules
            type: object
        User:
            properties:
                currentPassword:
                    type: string
                disabled:
                    type: boolean
                email:
                    type: string
                first:
                    type: string
                id:
                    type: string
                last:
                    type: string
                password:
                    type: string
                roles:
                    items:
                        type: string
                    type: array
                teams:
                    items:
                        type: string
                    type: array
                username:
                    type: string
            required:
                - disabled
                - email
                - first
                - id
                - last
                - username
            type: object
        UserAccessControlList:
            properties:
                perms:
                    items:
                        $ref: '#/components/schemas/ResourcePolicy'
                    type: array
                user:
                    type: string
            required:
                - perms
                - user
            type: object
        UserInfo:
            properties:
                currentPassword:
                    type: string
                disabled:
                    type: boolean
                email:
                    type: string
                first:
                    type: string
                id:
                    type: string
                last:
                    type: string
                password:
                    type: string
                roles:
                    items:
                        type: string
                    type: array
                username:
                    type: string
            required:
                - disabled
                - email
                - first
                - id
                - last
                - username
            type: object
        UserProfile:
            properties:
                disabled:
                    type: boolean
                email:
                    type: string
                first:
                    type: string
                id:
                    type: string
                last:
                    type: string
                password:
                    type: string
                roles:
                    items:
                        type: string
                    type: array
                username:
                    type: string
            required:
                - disabled
                - email
                - first
                - id
                - last
                - username
            type: object
        VaultKMSTlsClientConfig:
            properties:
                caPath:
                    type: string
                certPath:
                    type: string
                certificateName:
                    type: string
                disabled:
                    type: boolean
                passphrase:
                    type: string
                privKeyPath:
                    type: string
                rejectUnauthorized:
                    type: boolean
                servername:
                    type: string
            required:
                - disabled
            type: object
        VersionInfo:
            properties:
                architecture:
                    type: string
                build:
                    type: string
                downloadUrl:
                    type: string
                fullVersion:
                    type: string
                major:
                    type: number
                minor:
                    type: number
                platform:
                    type: string
                point:
                    type: number
                preRelease:
                    type: string
            required:
                - build
                - fullVersion
                - major
                - minor
            type: object
        object:
            type: string
    securitySchemes:
        bearerAuth:
            bearerFormat: JWT
            scheme: bearer
            type: http
info:
    contact:
        email: support@cribl.io
        name: Support
    description: This API Reference lists available REST endpoints, along with their supported operations for accessing, creating, updating, or deleting resources. See our complementary product documentation at [docs.cribl.io](http://docs.cribl.io).
    title: Cribl API Reference
    version: 4.12.2-4b17c8d4-TfProviderUpdated
openapi: 3.0.2
paths:
    /ai/consent:
        get:
            deprecated: false
            description: Fetches the AI consent information, specifically the org GUID and accepted boolean.
            operationId: getAiConsent
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of Response objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Fetches the AI consent information, specifically the org GUID and accepted boolean.
            tags:
                - consent
        post:
            deprecated: false
            description: Stores the AI consent information, specifically the org GUID and accepted boolean.
            operationId: createAiConsent
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of Response objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Stores the AI consent information, specifically the org GUID and accepted boolean.
            tags:
                - consent
    /ai/settings/features:
        get:
            deprecated: false
            description: Returns all feature settings
            operationId: getAiSettingsFeatures
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of Response objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Returns all feature settings
            tags:
                - ai-settings
        post:
            deprecated: false
            description: Updates all AI settings at once
            operationId: createAiSettingsFeatures
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of Response objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Updates all AI settings at once
            tags:
                - ai-settings
    /ai/settings/features/{feature}:
        get:
            deprecated: false
            description: Returns setting for a specific feature
            operationId: getAiSettingsFeaturesByFeature
            parameters:
                - description: Feature name to get settings for
                  in: path
                  name: feature
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of Response objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Returns setting for a specific feature
            tags:
                - ai-settings
        post:
            deprecated: false
            description: Updates setting for a specific feature
            operationId: createAiSettingsFeaturesByFeature
            parameters:
                - description: Feature name to update settings for
                  in: path
                  name: feature
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of Response objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Updates setting for a specific feature
            tags:
                - ai-settings
    /auth/authorization-code/callback:
        get:
            operationId: getAuthAuthorizationCodeCallback
            parameters:
                - description: Authorization Code
                  in: query
                  name: code
                  schema:
                    type: string
                - in: query
                  name: state
                  schema:
                    type: string
            responses:
                "200":
                    description: Authorization success
                "401":
                    description: Unauthorized
            summary: API call that the IDP should use for an authorization code callback
            tags:
                - auth
    /auth/groups:
        get:
            deprecated: false
            description: List the external authentication system's groups
            operationId: getAuthGroups
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/CrudEntityBase'
                                        type: array
                                type: object
                    description: a list of CrudEntityBase objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: List the external authentication system's groups
            tags:
                - auth
    /auth/login:
        post:
            description: This endpoint is unavailable on Cribl.Cloud. Instead, follow the instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud to get an Auth token for Cribl.Cloud.
            operationId: login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginInfo'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthToken'
                    description: Authentication token
                "401":
                    description: Unauthorized
                "403":
                    description: Access denied
                "429":
                    description: Rate limit exceeded
            security: []
            summary: Log in and obtain Auth token
            tags:
                - auth
    /auth/logout:
        post:
            operationId: logout
            responses:
                "200":
                    description: Log out success
                "401":
                    description: Unauthorized
            summary: Log current user out
            tags:
                - auth
    /auth/metadata:
        get:
            operationId: getAuthMetadata
            responses:
                "200":
                    content:
                        text/xml:
                            schema:
                                type: string
                    description: Service Provider metadata
                "401":
                    description: Unauthorized
            summary: Obtain metadata which Cribl Stream/Edge uses when acting as a Service Provider
            tags:
                - auth
    /auth/multi-factor:
        get:
            deprecated: false
            description: Get PIV configuration
            operationId: getAuthMultiFactor
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/MultiFactorAuthSchema'
                                        type: array
                                type: object
                    description: a list of MultiFactorAuthSchema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get PIV configuration
            tags:
                - auth
    /auth/slo:
        get:
            operationId: getAuthSlo
            responses:
                "200":
                    description: SLO redirect info
                "400":
                    description: Bad Request
                "401":
                    description: Unauthorized
            summary: Redirect user to IDP with logout request
            tags:
                - auth
    /auth/slo/callback:
        get:
            operationId: getAuthSloCallback
            parameters:
                - description: Logout request object
                  in: query
                  name: SAMLResponse
                  schema:
                    type: string
                - in: query
                  name: RelayState
                  schema:
                    type: string
            responses:
                "200":
                    description: Logout success
                "400":
                    description: Bad Request
                "401":
                    description: Unauthorized
                "429":
                    description: Rate limit exceeded
            summary: Accepts a logout request from an IDP and logs out the user
            tags:
                - auth
        post:
            operationId: createAuthSloCallback
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            properties:
                                RelayState:
                                    type: string
                                SAMLResponse:
                                    description: Logout request object
                                    type: string
                            type: object
                description: Logout request object
                required: true
            responses:
                "200":
                    description: Logout success
                "400":
                    description: Bad Request
                "401":
                    description: Unauthorized
                "429":
                    description: Rate limit exceeded
            summary: API call that the IDP should use for a logout request
            tags:
                - auth
    /auth/sso:
        get:
            description: Obtain information needed to redirect users to the configured SSO IDP for authentication.
            operationId: getAuthSso
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RedirectInfo'
                    description: Redirect info
                "401":
                    description: Unauthorized
            summary: Obtain redirect information
            tags:
                - auth
    /auth/sso/callback:
        get:
            operationId: getAuthSsoCallback
            parameters:
                - description: Authentication request object
                  in: query
                  name: SAMLResponse
                  schema:
                    type: string
                - in: query
                  name: RelayState
                  schema:
                    type: string
            responses:
                "200":
                    description: Authentication success
                "400":
                    description: Bad Request
                "401":
                    description: Unauthorized
                "429":
                    description: Rate limit exceeded
            summary: Accepts an authentication request from an IDP and authenticates the user
            tags:
                - auth
        post:
            operationId: createAuthSsoCallback
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            properties:
                                RelayState:
                                    type: string
                                SAMLResponse:
                                    description: Authentication request object
                                    type: string
                            type: object
                description: Authentication request object
                required: true
            responses:
                "200":
                    description: Authentication success
                "400":
                    description: Bad Request
                "401":
                    description: Unauthorized
                "429":
                    description: Rate limit exceeded
            summary: API call that the IDP should use for an authentication request
            tags:
                - auth
    /auth/users/{id}/invalidation:
        delete:
            deprecated: false
            description: Remove invalidation for user ID
            operationId: deleteAuthUsersInvalidationById
            parameters:
                - description: ID of user to reenable
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Remove invalidation for user ID
            tags:
                - auth
    /auth/users/{id}/token:
        delete:
            deprecated: false
            description: Invalidate token(s) for user *id*
            operationId: deleteAuthUsersTokenById
            parameters:
                - description: ID of user to invalidate
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: TTL of the token being invalidated
                  in: query
                  name: ttl
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Invalidate token(s) for user *id*
            tags:
                - auth
    /authorize/policy:
        get:
            deprecated: false
            description: get the client's authorization policy
            operationId: getAuthorizePolicy
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AuthPolicyEntry'
                                        type: array
                                type: object
                    description: a list of AuthPolicyEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the client's authorization policy
            tags:
                - authorize
    /authorize/roles:
        get:
            deprecated: false
            description: get the client's roles
            operationId: getAuthorizeRoles
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the client's roles
            tags:
                - authorize
    /changelog/viewed:
        get:
            deprecated: false
            description: Get changelog viewed state
            operationId: getChangelogViewed
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ChangelogState'
                                        type: array
                                type: object
                    description: a list of ChangelogState objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get changelog viewed state
            tags:
                - changelog
        patch:
            deprecated: false
            description: Update changelog viewed state
            operationId: updateChangelogViewed
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ChangelogState'
                                        type: array
                                type: object
                    description: a list of ChangelogState objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update changelog viewed state
            tags:
                - system
    /clui:
        get:
            deprecated: false
            description: Get CLUI search results
            operationId: getClui
            parameters:
                - description: Search query
                  in: query
                  name: query
                  required: true
                  schema:
                    type: string
                - description: Search query context
                  in: query
                  name: context
                  required: false
                  schema:
                    enum:
                        - stream
                        - edge
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/CluiItem'
                                        type: array
                                type: object
                    description: a list of CluiItem objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get CLUI search results
            tags:
                - clui
    /collectors:
        get:
            description: Get a list of Collector objects
            operationId: listCollector
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Collector'
                                        type: array
                                type: object
                    description: a list of Collector objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Collector objects
            tags:
                - collectors
    /collectors/{id}:
        get:
            description: Get Collector by ID
            operationId: getCollectorById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Collector'
                                        type: array
                                type: object
                    description: a list of Collector objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Collector by ID
            tags:
                - collectors
    /conditions:
        get:
            description: Get a list of Condition objects
            operationId: listCondition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Condition'
                                        type: array
                                type: object
                    description: a list of Condition objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Condition objects
            tags:
                - conditions
    /conditions/{id}:
        get:
            description: Get Condition by ID
            operationId: getConditionById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Condition'
                                        type: array
                                type: object
                    description: a list of Condition objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Condition by ID
            tags:
                - conditions
    /edge/appscope/processes:
        get:
            deprecated: false
            description: Get a detailed list of scoped processes running on the edge host
            operationId: getEdgeAppscopeProcesses
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppScopeProcess'
                                        type: array
                                type: object
                    description: a list of AppScopeProcess objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a detailed list of scoped processes running on the edge host
            tags:
                - edgeAppScopeProcesses
                - edge
        post:
            deprecated: false
            description: Attach AppScope to a process running on the edge host
            operationId: createEdgeAppscopeProcesses
            parameters:
                - description: config string required
                  in: query
                  name: pid
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppScopeProcess'
                                        type: array
                                type: object
                    description: a list of AppScopeProcess objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Attach AppScope to a process running on the edge host
            tags:
                - edgeAppScopeProcesses
                - edge
    /edge/appscope/processes/{pid}:
        delete:
            deprecated: false
            description: Detach AppScope from a process running on the edge host
            operationId: deleteEdgeAppscopeProcessesByPid
            parameters:
                - description: config string required
                  in: path
                  name: pid
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppScopeProcess'
                                        type: array
                                type: object
                    description: a list of AppScopeProcess objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Detach AppScope from a process running on the edge host
            tags:
                - edgeAppScopeProcesses
                - edge
        get:
            deprecated: false
            description: Get details of a scoped process running on the edge host
            operationId: getEdgeAppscopeProcessesByPid
            parameters:
                - description: pid
                  in: path
                  name: pid
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppScopeProcess'
                                        type: array
                                type: object
                    description: a list of AppScopeProcess objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get details of a scoped process running on the edge host
            tags:
                - edgeAppScopeProcesses
                - edge
        put:
            deprecated: false
            description: Update AppScope configuration for a process running on the edge host
            operationId: updateEdgeAppscopeProcessesByPid
            parameters:
                - description: config string required
                  in: path
                  name: pid
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppScopeProcess'
                                        type: array
                                type: object
                    description: a list of AppScopeProcess objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update AppScope configuration for a process running on the edge host
            tags:
                - edgeAppScopeProcesses
                - edge
    /edge/containers:
        get:
            deprecated: false
            description: Get a detailed list of containers running on the edge host.
            operationId: getEdgeContainers
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Container'
                                        type: array
                                type: object
                    description: a list of Container objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a detailed list of containers running on the edge host.
            tags:
                - edgeContainers
                - edge
    /edge/containers/{id}:
        get:
            deprecated: false
            description: Get details for a single container on the edge host. Add stream=true to get a stream instead.
            operationId: getEdgeContainersById
            parameters:
                - description: ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Container'
                                        type: array
                                type: object
                    description: a list of Container objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get details for a single container on the edge host. Add stream=true to get a stream instead.
            tags:
                - edgeContainers
                - edge
    /edge/events/collectors:
        get:
            deprecated: false
            description: Get list of configured collectors
            operationId: getEdgeEventsCollectors
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get list of configured collectors
            tags:
                - edgeEvents
                - edge
    /edge/events/query:
        get:
            deprecated: false
            description: Get events generated by a specified source
            operationId: getEdgeEventsQuery
            parameters:
                - description: Optional parameter, when provided the files and provided offsets are used to look for events.
                  in: query
                  name: Files
                  required: false
                  schema:
                    type: string
                - description: The type of source events to search in the format {type}/{subtype} i.e system_state/hostsfile, system_state/routes, etc...
                  in: query
                  name: source
                  required: false
                  schema:
                    type: string
                - description: Maximum number of log lines to retrieve starting from offset.
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: integer
                - description: Epoch timestamp of the earliest event (includes rolled files present on disk)
                  in: query
                  name: et
                  required: false
                  schema:
                    type: integer
                - description: Epoch timestamp of the latest event (includes rolled files present on disk)
                  in: query
                  name: lt
                  required: false
                  schema:
                    type: integer
                - description: Filter
                  in: query
                  name: filter
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get events generated by a specified source
            tags:
                - events
    /edge/file/ingest:
        post:
            deprecated: false
            description: Ingest a specified file through a specified pipeline to a specified destination or send to routes.
            operationId: createEdgeFileIngest
            parameters:
                - description: Absolute path to file to ingest.
                  in: query
                  name: filePath
                  required: false
                  schema:
                    type: string
                - description: Id of the pipeline to use.
                  in: query
                  name: pipelineId
                  required: false
                  schema:
                    type: string
                - description: Destination to send events to.
                  in: query
                  name: outputId
                  required: false
                  schema:
                    type: string
                - description: Id to the pre-processing pipeline to use for routes.
                  in: query
                  name: preProcessingPipelineId
                  required: false
                  schema:
                    type: string
                - description: boolean condition required on whether to send events to routes.
                  in: query
                  name: sendToRoutes
                  required: false
                  schema:
                    type: string
                - description: Breaker rules to use on the file.
                  in: query
                  name: breakerRuleSet
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Ingest a specified file through a specified pipeline to a specified destination or send to routes.
            tags:
                - file
                - ingest
                - edge
    /edge/file/sample:
        get:
            deprecated: false
            description: Get some number of bytes from the file at the given path
            operationId: getEdgeFileSample
            parameters:
                - description: The path to the file to sample
                  in: query
                  name: path
                  required: true
                  schema:
                    type: string
                - description: The number of bytes to return;   this value could be constrained by system limits.
                  in: query
                  name: bytesRequested
                  required: false
                  schema:
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SampleFile'
                                        type: array
                                type: object
                    description: a list of SampleFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get some number of bytes from the file at the given path
            tags:
                - fileSampler
                - edge
    /edge/fileinspect:
        get:
            deprecated: false
            description: Get details about a file on the edge host.
            operationId: getEdgeFileinspect
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/EdgeFileInspectResponse'
                                        type: array
                                type: object
                    description: a list of EdgeFileInspectResponse objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get details about a file on the edge host.
            tags:
                - edgeFiles
                - edge
    /edge/kube-logs:
        post:
            deprecated: false
            description: Make a request to the K8s API logs endpoint
            operationId: createEdgeKubeLogs
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/object'
                                        type: array
                                type: object
                    description: a list of object objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Make a request to the K8s API logs endpoint
            tags:
                - edge
                - kube-logs
    /edge/kube-proxy:
        get:
            deprecated: false
            description: Make a GET request to the K8s API
            operationId: getEdgeKubeProxy
            parameters:
                - description: string optional
                  in: query
                  name: path
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/object'
                                        type: array
                                type: object
                    description: a list of object objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Make a GET request to the K8s API
            tags:
                - edge
                - kube-proxy
    /edge/logs:
        get:
            deprecated: false
            description: list log files
            operationId: getEdgeLogs
            parameters:
                - description: Discovery Mode (default is "auto")
                  in: query
                  name: mode
                  required: false
                  schema:
                    type: string
                - description: query array[string] optional List of allowed-filename wildcard patterns
                  in: query
                  name: allow
                  required: false
                  schema:
                    type: string
                - description: Search directory for "manual" mode
                  in: query
                  name: path
                  required: false
                  schema:
                    type: string
                - description: Search depth for "manual" mode
                  in: query
                  name: depth
                  required: false
                  schema:
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/EdgeFile'
                                        type: array
                                type: object
                    description: a list of EdgeFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: list log files
            tags:
                - edge
    /edge/ls{path}:
        get:
            deprecated: false
            description: Get a directory listing of the given path
            operationId: getEdgeLsByPath
            parameters:
                - description: Defaults to empty for the root directory
                  in: path
                  name: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/FilesystemEntry'
                                        type: array
                                type: object
                    description: a list of FilesystemEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a directory listing of the given path
            tags:
                - edgeLs
                - edge
    /edge/metadata:
        get:
            deprecated: false
            description: Get the host's metadata structure
            operationId: getEdgeMetadata
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Metadata'
                                        type: array
                                type: object
                    description: a list of Metadata objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get the host's metadata structure
            tags:
                - edge
    /edge/processes:
        get:
            deprecated: false
            description: Get a detailed list of processes running on the edge host
            operationId: getEdgeProcesses
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Process'
                                        type: array
                                type: object
                    description: a list of Process objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a detailed list of processes running on the edge host
            tags:
                - edgeProcesses
                - edge
    /edge/processes/{pid}:
        get:
            deprecated: false
            description: Get details of a process running on the edge host
            operationId: getEdgeProcessesByPid
            parameters:
                - description: PID of the process
                  in: path
                  name: pid
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Process'
                                        type: array
                                type: object
                    description: a list of Process objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get details of a process running on the edge host
            tags:
                - edgeProcesses
                - edge
    /executors:
        get:
            description: Get a list of Executor objects
            operationId: listExecutor
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Executor'
                                        type: array
                                type: object
                    description: a list of Executor objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Executor objects
            tags:
                - executors
    /executors/{id}:
        get:
            description: Get Executor by ID
            operationId: getExecutorById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Executor'
                                        type: array
                                type: object
                    description: a list of Executor objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Executor by ID
            tags:
                - executors
    /functions:
        get:
            description: Get a list of Function objects
            operationId: listFunction
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Function'
                                        type: array
                                type: object
                    description: a list of Function objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Function objects
            tags:
                - functions
    /functions/{id}:
        get:
            description: Get Function by ID
            operationId: getFunctionById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Function'
                                        type: array
                                type: object
                    description: a list of Function objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Function by ID
            tags:
                - functions
    /health:
        get:
            operationId: getHealthInfo
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthStatus'
                    description: Healthy status
                "420":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthStatus'
                    description: Shutting Down or Standby status
            security: []
            summary: Provides health info for REST server
            tags:
                - diag
                - health
    /jobs:
        get:
            deprecated: false
            description: Get info on jobs
            operationId: getJobs
            parameters:
                - description: Pagination offset
                  in: query
                  name: offset
                  required: false
                  schema:
                    type: integer
                - description: Maximum number of items to return
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: integer
                - description: Filter by job run type
                  in: query
                  name: runType
                  required: false
                  schema:
                    enum:
                        - adhoc
                        - scheduled
                        - system
                    type: string
                - description: Filter by current job state, e.g. "running"
                  in: query
                  name: state
                  required: false
                  schema:
                    type: string
                - description: Filter by job id, e.g. "id=1608713335.3&id=1608713326.1"
                  in: query
                  name: id
                  required: false
                  schema:
                    type: string
                - description: Filter by collector id, e.g. "collectorId=Prometheus-in"
                  in: query
                  name: collectorId
                  required: false
                  schema:
                    type: string
                - description: Filter by worker group id, e.g. "defaultHybrid"
                  in: query
                  name: groupId
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    items:
                                        description: the pre-limited items in the list of results
                                        items:
                                            $ref: '#/components/schemas/JobInfo'
                                        type: array
                                    limit:
                                        description: number of items present in the items array
                                        type: integer
                                    offset:
                                        description: pagination offset
                                        type: integer
                                type: object
                    description: a list of JobInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get info on jobs
            tags:
                - jobs
        post:
            deprecated: false
            description: Run or schedule a job
            operationId: createJobs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SavedJob'
                description: SavedJob object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Run or schedule a job
            tags:
                - jobs
    /jobs/{id}:
        delete:
            deprecated: false
            description: Remove job from job inspector by instance id
            operationId: deleteJobsById
            parameters:
                - description: Job instance id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Remove job from job inspector by instance id
            tags:
                - jobs
        get:
            deprecated: false
            description: Get job info by instance id
            operationId: getJobsById
            parameters:
                - description: Job instance id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/JobInfo'
                                        type: array
                                type: object
                    description: a list of JobInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get job info by instance id
            tags:
                - jobs
    /jobs/{id}/cancel:
        patch:
            deprecated: false
            description: Cancel a job by instance id
            operationId: updateJobsCancelById
            parameters:
                - description: Job instance id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/JobState'
                                        type: array
                                type: object
                    description: a list of JobState objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Cancel a job by instance id
            tags:
                - jobs
    /jobs/{id}/errors:
        get:
            deprecated: false
            description: Get Task errors for a job by id
            operationId: getJobsErrorsById
            parameters:
                - description: Instance id of the job to get results for
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Task errors for a job by id
            tags:
                - jobs
    /jobs/{id}/errors/{group}:
        get:
            deprecated: false
            description: Get Task errors for a job by id
            operationId: getJobsErrorsByIdAndGroup
            parameters:
                - description: Instance id of the job to get results for
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Group the job belongs to
                  in: path
                  name: group
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Task errors for a job by id
            tags:
                - jobs
    /jobs/{id}/keep:
        patch:
            deprecated: false
            description: prevent job from being deleted automatically
            operationId: updateJobsKeepById
            parameters:
                - description: Job Instance id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Group ID
                  in: query
                  name: groupId
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/JobInfo'
                                        type: array
                                type: object
                    description: a list of JobInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: prevent job from being deleted automatically
            tags:
                - jobs
    /jobs/{id}/pause:
        patch:
            deprecated: false
            description: Pause a job by instance id
            operationId: updateJobsPauseById
            parameters:
                - description: Job instance id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/JobState'
                                        type: array
                                type: object
                    description: a list of JobState objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Pause a job by instance id
            tags:
                - jobs
    /jobs/{id}/results:
        get:
            description: Get results for a discover job by instance id
            operationId: getJobResultsById
            parameters:
                - description: Job instance id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/x-ndjson:
                            schema:
                                format: binary
                                type: string
                    description: Get results for a discover job by instance id
                "401":
                    description: Unauthorized
                "500":
                    description: Unexpected error
            summary: Get results for a discover job by instance id
            tags:
                - jobs
    /jobs/{id}/results/{group}:
        get:
            deprecated: false
            description: Get results for a discover job by instance id
            operationId: getJobsResultsByIdAndGroup
            parameters:
                - description: Instance id of the job to get results for
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Maximum files to get job results
                  in: query
                  name: maxFiles
                  required: false
                  schema:
                    type: number
                - description: Group the job belongs to
                  in: path
                  name: group
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get results for a discover job by instance id
            tags:
                - jobs
    /jobs/{id}/resume:
        patch:
            deprecated: false
            description: Resume a job by instance id
            operationId: updateJobsResumeById
            parameters:
                - description: Job instance id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/JobState'
                                        type: array
                                type: object
                    description: a list of JobState objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Resume a job by instance id
            tags:
                - jobs
    /lib/appscope-configs:
        get:
            description: Get a list of AppscopeLibEntry objects
            operationId: listAppscopeLibEntry
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppscopeLibEntry'
                                        type: array
                                type: object
                    description: a list of AppscopeLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of AppscopeLibEntry objects
            tags:
                - appscope-configs
        post:
            description: Create AppscopeLibEntry
            operationId: createAppscopeLibEntry
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AppscopeLibEntry'
                description: New AppscopeLibEntry object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppscopeLibEntry'
                                        type: array
                                type: object
                    description: a list of AppscopeLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create AppscopeLibEntry
            tags:
                - appscope-configs
    /lib/appscope-configs/{id}:
        delete:
            description: Delete AppscopeLibEntry
            operationId: deleteAppscopeLibEntryById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppscopeLibEntry'
                                        type: array
                                type: object
                    description: a list of AppscopeLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete AppscopeLibEntry
            tags:
                - appscope-configs
        get:
            description: Get AppscopeLibEntry by ID
            operationId: getAppscopeLibEntryById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppscopeLibEntry'
                                        type: array
                                type: object
                    description: a list of AppscopeLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get AppscopeLibEntry by ID
            tags:
                - appscope-configs
        patch:
            description: Update AppscopeLibEntry
            operationId: updateAppscopeLibEntryById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AppscopeLibEntry'
                description: AppscopeLibEntry object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AppscopeLibEntry'
                                        type: array
                                type: object
                    description: a list of AppscopeLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update AppscopeLibEntry
            tags:
                - appscope-configs
    /lib/breakers:
        get:
            description: Get a list of Event Breaker Ruleset objects
            operationId: listEventBreakerRuleset
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/EventBreakerRuleset'
                                        type: array
                                type: object
                    description: a list of Event Breaker Ruleset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Event Breaker Ruleset objects
            tags:
                - event_breaker_rules
        post:
            description: Create Event Breaker Ruleset
            operationId: createEventBreakerRuleset
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EventBreakerRuleset'
                description: New Event Breaker Ruleset object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/EventBreakerRuleset'
                                        type: array
                                type: object
                    description: a list of Event Breaker Ruleset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Event Breaker Ruleset
            tags:
                - event_breaker_rules
    /lib/breakers/{id}:
        delete:
            description: Delete Event Breaker Ruleset
            operationId: deleteEventBreakerRulesetById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/EventBreakerRuleset'
                                        type: array
                                type: object
                    description: a list of Event Breaker Ruleset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Event Breaker Ruleset
            tags:
                - event_breaker_rules
        get:
            description: Get Event Breaker Ruleset by ID
            operationId: getEventBreakerRulesetById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/EventBreakerRuleset'
                                        type: array
                                type: object
                    description: a list of Event Breaker Ruleset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Event Breaker Ruleset by ID
            tags:
                - event_breaker_rules
        patch:
            description: Update Event Breaker Ruleset
            operationId: updateEventBreakerRulesetById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EventBreakerRuleset'
                description: Event Breaker Ruleset object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/EventBreakerRuleset'
                                        type: array
                                type: object
                    description: a list of Event Breaker Ruleset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Event Breaker Ruleset
            tags:
                - event_breaker_rules
    /lib/database-connections:
        get:
            deprecated: false
            description: Get a list of DatabaseConnection objects
            operationId: getDatabaseConnectionConfig
            parameters:
                - description: type of database connection
                  in: query
                  name: databaseType
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatabaseConnectionConfig'
                                        type: array
                                type: object
                    description: a list of DatabaseConnectionConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of DatabaseConnection objects
            tags:
                - database-connections
        post:
            description: Create DatabaseConnectionConfig
            operationId: createDatabaseConnectionConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatabaseConnectionConfig'
                description: New DatabaseConnectionConfig object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatabaseConnectionConfig'
                                        type: array
                                type: object
                    description: a list of DatabaseConnectionConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create DatabaseConnectionConfig
            tags:
                - database-connections
    /lib/database-connections/{id}:
        delete:
            description: Delete DatabaseConnectionConfig
            operationId: deleteDatabaseConnectionConfigById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatabaseConnectionConfig'
                                        type: array
                                type: object
                    description: a list of DatabaseConnectionConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete DatabaseConnectionConfig
            tags:
                - database-connections
        get:
            description: Get DatabaseConnectionConfig by ID
            operationId: getDatabaseConnectionConfigById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatabaseConnectionConfig'
                                        type: array
                                type: object
                    description: a list of DatabaseConnectionConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get DatabaseConnectionConfig by ID
            tags:
                - database-connections
        patch:
            description: Update DatabaseConnectionConfig
            operationId: updateDatabaseConnectionConfigById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatabaseConnectionConfig'
                description: DatabaseConnectionConfig object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatabaseConnectionConfig'
                                        type: array
                                type: object
                    description: a list of DatabaseConnectionConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update DatabaseConnectionConfig
            tags:
                - database-connections
    /lib/database-connections/test:
        post:
            deprecated: false
            description: Test a database connection given a type and connectionString
            operationId: createLibDatabaseConnectionsTest
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatabaseConnectionTest'
                description: DatabaseConnectionTest object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatabaseConnectionTestResult'
                                        type: array
                                type: object
                    description: a list of DatabaseConnectionTestResult objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Test a database connection given a type and connectionString
            tags:
                - database-connections
    /lib/expression:
        post:
            deprecated: false
            description: Evaluate JavaScript expression
            operationId: createLibExpression
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ExprLibEntry'
                                        type: array
                                type: object
                    description: a list of ExprLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Evaluate JavaScript expression
            tags:
                - expressions
    /lib/grok:
        get:
            description: Get a list of GrokFile objects
            operationId: listGrokFile
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GrokFile'
                                        type: array
                                type: object
                    description: a list of GrokFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of GrokFile objects
            tags:
                - grokfiles
        post:
            description: Create GrokFile
            operationId: createGrokFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GrokFile'
                description: New GrokFile object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GrokFile'
                                        type: array
                                type: object
                    description: a list of GrokFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create GrokFile
            tags:
                - grokfiles
    /lib/grok/{id}:
        delete:
            description: Delete GrokFile
            operationId: deleteGrokFileById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GrokFile'
                                        type: array
                                type: object
                    description: a list of GrokFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete GrokFile
            tags:
                - grokfiles
        get:
            description: Get GrokFile by ID
            operationId: getGrokFileById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GrokFile'
                                        type: array
                                type: object
                    description: a list of GrokFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get GrokFile by ID
            tags:
                - grokfiles
        patch:
            description: Update GrokFile
            operationId: updateGrokFileById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GrokFile'
                description: GrokFile object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GrokFile'
                                        type: array
                                type: object
                    description: a list of GrokFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update GrokFile
            tags:
                - grokfiles
    /lib/hmac-functions:
        get:
            description: Get a list of HmacFunction objects
            operationId: listHmacFunction
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/HmacFunction'
                                        type: array
                                type: object
                    description: a list of HmacFunction objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of HmacFunction objects
            tags:
                - hmac-functions
        post:
            description: Create HmacFunction
            operationId: createHmacFunction
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HmacFunction'
                description: New HmacFunction object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/HmacFunction'
                                        type: array
                                type: object
                    description: a list of HmacFunction objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create HmacFunction
            tags:
                - hmac-functions
    /lib/hmac-functions/{id}:
        delete:
            description: Delete HmacFunction
            operationId: deleteHmacFunctionById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/HmacFunction'
                                        type: array
                                type: object
                    description: a list of HmacFunction objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete HmacFunction
            tags:
                - hmac-functions
        get:
            description: Get HmacFunction by ID
            operationId: getHmacFunctionById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/HmacFunction'
                                        type: array
                                type: object
                    description: a list of HmacFunction objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get HmacFunction by ID
            tags:
                - hmac-functions
        patch:
            description: Update HmacFunction
            operationId: updateHmacFunctionById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HmacFunction'
                description: HmacFunction object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/HmacFunction'
                                        type: array
                                type: object
                    description: a list of HmacFunction objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update HmacFunction
            tags:
                - hmac-functions
    /lib/jobs:
        get:
            description: Get a list of SavedJob objects
            operationId: listSavedJob
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedJob'
                                        type: array
                                type: object
                    description: a list of SavedJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of SavedJob objects
            tags:
                - saved-jobs
        post:
            description: Create SavedJob
            operationId: createSavedJob
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SavedJob'
                description: New SavedJob object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedJob'
                                        type: array
                                type: object
                    description: a list of SavedJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create SavedJob
            tags:
                - saved-jobs
    /lib/jobs/{id}:
        delete:
            description: Delete SavedJob
            operationId: deleteSavedJobById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedJob'
                                        type: array
                                type: object
                    description: a list of SavedJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete SavedJob
            tags:
                - saved-jobs
        get:
            description: Get SavedJob by ID
            operationId: getSavedJobById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedJob'
                                        type: array
                                type: object
                    description: a list of SavedJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get SavedJob by ID
            tags:
                - saved-jobs
        patch:
            description: Update SavedJob
            operationId: updateSavedJobById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SavedJob'
                description: SavedJob object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedJob'
                                        type: array
                                type: object
                    description: a list of SavedJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update SavedJob
            tags:
                - saved-jobs
    /lib/parquet-schemas:
        get:
            description: Get a list of Schema objects
            operationId: listSchema
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Schema objects
            tags:
                - parquetschemas
        post:
            description: Create Schema
            operationId: createSchema
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SchemaLibEntry'
                description: New Schema object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Schema
            tags:
                - parquetschemas
    /lib/parquet-schemas/{id}:
        delete:
            description: Delete Schema
            operationId: deleteSchemaById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Schema
            tags:
                - parquetschemas
        get:
            description: Get Schema by ID
            operationId: getSchemaById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Schema by ID
            tags:
                - parquetschemas
        patch:
            description: Update Schema
            operationId: updateSchemaById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SchemaLibEntry'
                description: Schema object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Schema
            tags:
                - parquetschemas
    /lib/parsers:
        get:
            description: Get a list of Parser objects
            operationId: listParser
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ParserLibEntry'
                                        type: array
                                type: object
                    description: a list of Parser objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Parser objects
            tags:
                - parsers
        post:
            description: Create Parser
            operationId: createParser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ParserLibEntry'
                description: New Parser object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ParserLibEntry'
                                        type: array
                                type: object
                    description: a list of Parser objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Parser
            tags:
                - parsers
    /lib/parsers/{id}:
        delete:
            description: Delete Parser
            operationId: deleteParserById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ParserLibEntry'
                                        type: array
                                type: object
                    description: a list of Parser objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Parser
            tags:
                - parsers
        get:
            description: Get Parser by ID
            operationId: getParserById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ParserLibEntry'
                                        type: array
                                type: object
                    description: a list of Parser objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Parser by ID
            tags:
                - parsers
        patch:
            description: Update Parser
            operationId: updateParserById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ParserLibEntry'
                description: Parser object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ParserLibEntry'
                                        type: array
                                type: object
                    description: a list of Parser objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Parser
            tags:
                - parsers
    /lib/protobuf-libraries:
        get:
            deprecated: false
            description: Show list of Protobuf encodings for a given Library
            operationId: getProtobufLibraryConfig
            parameters:
                - description: onlyWithEncodings
                  in: query
                  name: onlyWithEncodings
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProtobufEncodingConfig'
                                        type: array
                                type: object
                    description: a list of ProtobufEncodingConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Show list of Protobuf encodings for a given Library
            tags:
                - protobuflibraries
    /lib/protobuf-libraries/{id}:
        get:
            deprecated: false
            description: Show Library by Id
            operationId: getProtobufLibraryConfigById
            parameters:
                - description: Library Id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProtobufLibraryConfig'
                                        type: array
                                type: object
                    description: a list of ProtobufLibraryConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Show Library by Id
            tags:
                - protobuflibraries
    /lib/protobuf-libraries/{id}/encodings:
        get:
            deprecated: false
            description: Show list of Protobuf encodings for a given Library
            operationId: getProtobufLibraryConfigEncodingsById
            parameters:
                - description: Library id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProtobufEncodingConfig'
                                        type: array
                                type: object
                    description: a list of ProtobufEncodingConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Show list of Protobuf encodings for a given Library
            tags:
                - protobuflibraries
    /lib/protobuf-libraries/{id}/encodings/{encid}:
        get:
            deprecated: false
            description: Show Protobuf library encodings by encoding id
            operationId: getProtobufLibraryConfigEncodingsByIdAndEncId
            parameters:
                - description: Library id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Encoding id
                  in: path
                  name: encid
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProtobufEncodingConfig'
                                        type: array
                                type: object
                    description: a list of ProtobufEncodingConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Show Protobuf library encodings by encoding id
            tags:
                - protobuflibraries
    /lib/regex:
        get:
            description: Get a list of RegexLibEntry objects
            operationId: listRegexLibEntry
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RegexLibEntry'
                                        type: array
                                type: object
                    description: a list of RegexLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of RegexLibEntry objects
            tags:
                - regexes
        post:
            description: Create RegexLibEntry
            operationId: createRegexLibEntry
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegexLibEntry'
                description: New RegexLibEntry object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RegexLibEntry'
                                        type: array
                                type: object
                    description: a list of RegexLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create RegexLibEntry
            tags:
                - regexes
    /lib/regex/{id}:
        delete:
            description: Delete RegexLibEntry
            operationId: deleteRegexLibEntryById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RegexLibEntry'
                                        type: array
                                type: object
                    description: a list of RegexLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete RegexLibEntry
            tags:
                - regexes
        get:
            description: Get RegexLibEntry by ID
            operationId: getRegexLibEntryById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RegexLibEntry'
                                        type: array
                                type: object
                    description: a list of RegexLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get RegexLibEntry by ID
            tags:
                - regexes
        patch:
            description: Update RegexLibEntry
            operationId: updateRegexLibEntryById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegexLibEntry'
                description: RegexLibEntry object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RegexLibEntry'
                                        type: array
                                type: object
                    description: a list of RegexLibEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update RegexLibEntry
            tags:
                - regexes
    /lib/schemas:
        get:
            description: Get a list of Schema objects
            operationId: listLibSchemas
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Schema objects
            tags:
                - schemas
        post:
            description: Create Schema
            operationId: createLibSchemas
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SchemaLibEntry'
                description: New Schema object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Schema
            tags:
                - schemas
    /lib/schemas/{id}:
        delete:
            description: Delete Schema
            operationId: deleteLibSchemasById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Schema
            tags:
                - schemas
        get:
            description: Get Schema by ID
            operationId: getLibSchemasById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Schema by ID
            tags:
                - schemas
        patch:
            description: Update Schema
            operationId: updateLibSchemasById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SchemaLibEntry'
                description: Schema object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Schema
            tags:
                - schemas
    /lib/vars:
        get:
            deprecated: false
            description: List all GlobalVars with references
            operationId: getGlobalVariable
            parameters:
                - description: Pass "refs" to include references to fields the variable is used in
                  in: query
                  name: with
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: List all GlobalVars with references
            tags:
                - global_variables
        post:
            description: Create Global Variable
            operationId: createGlobalVariable
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GlobalVar'
                description: New Global Variable object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Global Variable
            tags:
                - global_variables
    /lib/vars/{id}:
        delete:
            description: Delete Global Variable
            operationId: deleteGlobalVariableById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Global Variable
            tags:
                - global_variables
        get:
            description: Get Global Variable by ID
            operationId: getGlobalVariableById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Global Variable by ID
            tags:
                - global_variables
        patch:
            description: Update Global Variable
            operationId: updateGlobalVariableById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GlobalVar'
                description: Global Variable object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Global Variable
            tags:
                - global_variables
    /m/{groupId}/system/projects/{projectId}/capture:
        post:
            deprecated: false
            description: Capture live incoming data from a particular Project and Subscription at the Destination
            operationId: createSystemProjectsCaptureByGroupIdAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CaptureParams'
                description: CaptureParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: A list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Capture live incoming data from a particular Project and Subscription at the Destination
            tags:
                - preview
                - samples
                - projects
    /m/{groupId}/system/projects/{projectId}/pipelines:
        get:
            description: Get A list of Pipeline objects for specified Project
            operationId: getSystemProjectsPipelinesByGroupIdAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: A list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get A list of Pipeline objects for specified Project
            tags:
                - pipelines
                - projects
        post:
            description: Create Pipeline
            operationId: createSystemProjectsPipelinesByGroupIdAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Pipeline'
                description: New Pipeline object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: A list of Pipeline objects for specified Project
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Pipeline
            tags:
                - pipelines
                - projects
    /m/{groupId}/system/projects/{projectId}/pipelines/{pipelineId}:
        delete:
            description: Delete Pipeline in specified Project
            operationId: deleteSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: Pipeline Id
                  in: path
                  name: pipelineId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: A list of Pipeline objects for specified Project
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Pipeline in specified Project
            tags:
                - pipelines
                - projects
        get:
            description: Get Pipeline by ID in specified Project
            operationId: getSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: Pipeline Id
                  in: path
                  name: pipelineId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: A list of Pipeline objects in specified Project
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Pipeline by ID in specified Project
            tags:
                - pipelines
                - projects
        patch:
            description: Update Pipeline in specified Project
            operationId: updateSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: Pipeline iD
                  in: path
                  name: pipelineId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Pipeline'
                description: Pipeline object to be updated in specified Project
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: A list of Pipeline objects for specified Project
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Pipeline in specified Project
            tags:
                - pipelines
                - projects
    /m/{groupId}/system/projects/{projectId}/preview:
        post:
            deprecated: false
            description: Sends sample events through a Pipeline  for specified Project and returns the results
            operationId: createSystemProjectsPreviewByGroupIdAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PreviewDataParams'
                description: PreviewDataParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: A list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Sends sample events through a Pipeline  for specified Project and returns the results
            tags:
                - preview
                - samples
                - projects
    /m/{groupId}/system/projects/{projectId}/subscriptions:
        get:
            deprecated: false
            description: Get the Subscriptions associated with the Project
            operationId: getSystemProjectsSubscriptionsByGroupIdByAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Subscription'
                                        type: array
                                type: object
                    description: A list of Subscription objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get the Subscriptions associated with the Project
            tags:
                - projects
                - subscriptions
    /m/{groupId}/system/projects/{projectId}/subscriptions/{subscriptionId}/capture:
        post:
            deprecated: false
            description: Capture live incoming data from a particular Project and Subscription at the Subscription
            operationId: createSystemProjectsSubscriptionsCaptureByGroupIdAndSubscriptionId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: Subscription Id
                  in: path
                  name: subscriptionId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CaptureParams'
                description: CaptureParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: A list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Capture live incoming data from a particular Project and Subscription at the Subscription
            tags:
                - preview
                - samples
                - projects
    /m/{groupId}/system/projects/{projectId}/version/commit:
        post:
            deprecated: false
            description: Commit project changes
            operationId: createSystemProjectsVersionCommitByGroupIdAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectGitCommitParams'
                description: ProjectGitCommitParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitCommitSummary'
                                        type: array
                                type: object
                    description: A list of GitCommitSummary objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Commit project changes
            tags:
                - projects
                - versioning
                - git
    /m/{groupId}/system/projects/{projectId}/version/count:
        get:
            deprecated: false
            description: Get the count of files of changed
            operationId: getSystemProjectsVersionCountByGroupIdAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: A list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get the count of files of changed
            tags:
                - projects
                - versioning
                - git
    /m/{groupId}/system/projects/{projectId}/version/diff:
        get:
            deprecated: false
            description: Get the textual diff for given commit
            operationId: getSystemProjectsVersionDiffByGroupIdAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - in: query
                  name: commit
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: A list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get the textual diff for given commit
            tags:
                - projects
                - versioning
                - git
    /m/{groupId}/system/projects/{projectId}/version/files:
        get:
            deprecated: false
            description: Get the files changed
            operationId: getSystemProjectsVersionFilesByGroupIdAndProjectId
            parameters:
                - description: Group Id
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: Number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitFilesResponse'
                                        type: array
                                type: object
                    description: A list of GitFilesResponse objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get the files changed
            tags:
                - projects
                - versioning
                - git
    /master/bundles/{group}/{version}:
        get:
            operationId: getConfigBundlesByGroupAndVersion
            parameters:
                - in: path
                  name: group
                  required: true
                  schema:
                    type: string
                - in: path
                  name: version
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/tar+gzip:
                            schema:
                                format: binary
                                type: string
                    description: Get contents of a config bundle
                "400":
                    description: Invalid path
                "404":
                    description: File is missing
            summary: Download config bundle (used by remote nodes)
            tags:
                - distributed
    /master/groups/{id}:
        get:
            deprecated: false
            description: Get a specific ConfigGroup object
            operationId: getGroupsById
            parameters:
                - description: Group id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: 'fields to add to results: git.commit, git.localChanges, git.log'
                  in: query
                  name: fields
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ConfigGroup'
                                        type: array
                                type: object
                    description: a list of ConfigGroup objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a specific ConfigGroup object
            tags:
                - groups
    /master/groups/{id}/acl:
        get:
            deprecated: false
            description: ACL of members with permissions for resources in this Group
            operationId: getGroupsAclById
            parameters:
                - description: Group id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: resource type by which to filter access levels
                  in: query
                  name: type
                  required: false
                  schema:
                    enum:
                        - groups
                        - datasets
                        - dataset-providers
                        - projects
                        - dashboards
                        - macros
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UserAccessControlList'
                                        type: array
                                type: object
                    description: a list of UserAccessControlList objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: ACL of members with permissions for resources in this Group
            tags:
                - groups
                - users ACL
    /master/groups/{id}/configVersion:
        get:
            deprecated: false
            description: Get effective bundle version for given Group
            operationId: getGroupsConfigVersionById
            parameters:
                - description: Group ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get effective bundle version for given Group
            tags:
                - groups
    /master/summary:
        get:
            deprecated: false
            description: Get summary of Distributed deployment
            operationId: getSummary
            parameters:
                - description: product filter
                  in: query
                  name: mode
                  required: false
                  schema:
                    enum:
                        - worker
                        - managed-edge
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DistributedSummary'
                                        type: array
                                type: object
                    description: a list of DistributedSummary objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get summary of Distributed deployment
            tags:
                - distributed
    /master/summary/workers:
        get:
            deprecated: false
            description: get worker and edge nodes count
            operationId: getSummaryWorkers
            parameters:
                - description: Filter expression evaluated against nodes
                  in: query
                  name: filterExp
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: number
                                        type: array
                                type: object
                    description: a list of number objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get worker and edge nodes count
            tags:
                - distributed
                - workers
    /master/workers:
        get:
            deprecated: false
            description: get worker and edge nodes
            operationId: getWorkers
            parameters:
                - description: Filter expression evaluated against nodes
                  in: query
                  name: filterExp
                  required: false
                  schema:
                    type: string
                - description: Sorting object (JSON stringified) expression evaluated against nodes
                  in: query
                  name: sort
                  required: false
                  schema:
                    type: string
                - description: Sorting expression evaluated against nodes
                  in: query
                  name: sortExp
                  required: false
                  schema:
                    type: string
                - description: Maximum number of nodes to return
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: integer
                - description: Pagination offset
                  in: query
                  name: offset
                  required: false
                  schema:
                    type: integer
                - description: Filter object (JSON stringified) to select nodes
                  in: query
                  name: filter
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/MasterWorkerEntry'
                                        type: array
                                type: object
                    description: a list of MasterWorkerEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get worker and edge nodes
            tags:
                - distributed
                - workers
    /master/workers/restart:
        patch:
            deprecated: false
            description: restarts worker nodes
            operationId: updateWorkersRestart
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RestartResponse'
                                        type: array
                                type: object
                    description: a list of RestartResponse objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: restarts worker nodes
            tags:
                - distributed
                - workers
    /notification-targets:
        get:
            description: Get a list of NotificationTarget objects
            operationId: listNotificationTarget
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/NotificationTarget'
                                        type: array
                                type: object
                    description: a list of NotificationTarget objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of NotificationTarget objects
            tags:
                - notification-targets
        post:
            description: Create NotificationTarget
            operationId: createNotificationTarget
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NotificationTarget'
                description: New NotificationTarget object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/NotificationTarget'
                                        type: array
                                type: object
                    description: a list of NotificationTarget objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create NotificationTarget
            tags:
                - notification-targets
    /notification-targets/{id}:
        delete:
            description: Delete NotificationTarget
            operationId: deleteNotificationTargetById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/NotificationTarget'
                                        type: array
                                type: object
                    description: a list of NotificationTarget objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete NotificationTarget
            tags:
                - notification-targets
        get:
            description: Get NotificationTarget by ID
            operationId: getNotificationTargetById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/NotificationTarget'
                                        type: array
                                type: object
                    description: a list of NotificationTarget objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get NotificationTarget by ID
            tags:
                - notification-targets
        patch:
            description: Update NotificationTarget
            operationId: updateNotificationTargetById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NotificationTarget'
                description: NotificationTarget object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/NotificationTarget'
                                        type: array
                                type: object
                    description: a list of NotificationTarget objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update NotificationTarget
            tags:
                - notification-targets
    /notifications:
        get:
            description: Get a list of Notification objects
            operationId: listNotification
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Notification'
                                        type: array
                                type: object
                    description: a list of Notification objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Notification objects
            tags:
                - notifications
        post:
            description: Create Notification
            operationId: createNotification
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Notification'
                description: New Notification object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Notification'
                                        type: array
                                type: object
                    description: a list of Notification objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Notification
            tags:
                - notifications
    /notifications/{id}:
        delete:
            description: Delete Notification
            operationId: deleteNotificationById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Notification'
                                        type: array
                                type: object
                    description: a list of Notification objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Notification
            tags:
                - notifications
        get:
            description: Get Notification by ID
            operationId: getNotificationById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Notification'
                                        type: array
                                type: object
                    description: a list of Notification objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Notification by ID
            tags:
                - notifications
        patch:
            description: Update Notification
            operationId: updateNotificationById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Notification'
                description: Notification object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Notification'
                                        type: array
                                type: object
                    description: a list of Notification objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Notification
            tags:
                - notifications
    /output/click-house/describe-table:
        post:
            deprecated: false
            description: Retrieve the description of the configured ClickHouse table
            operationId: createOutputClickHouseDescribeTable
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CHOutConfig'
                description: CHOutConfig object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ClickHouseDescriptionResult'
                                        type: array
                                type: object
                    description: a list of ClickHouseDescriptionResult objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Retrieve the description of the configured ClickHouse table
            tags:
                - click-house
    /p/{pack}/functions:
        get:
            description: Get a list of Function objects within a Pack
            operationId: getFunctionByPack
            parameters:
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Function'
                                        type: array
                                type: object
                    description: a list of Function objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Function objects within a Pack
            tags:
                - functions
    /p/{pack}/functions/{id}:
        get:
            description: Get Function by ID within a Pack
            operationId: getFunctionByPackAndId
            parameters:
                - description: Unique ID to GET for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Function'
                                        type: array
                                type: object
                    description: a list of Function objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Function by ID within a Pack
            tags:
                - functions
    /p/{pack}/lib/schemas:
        get:
            description: Get a list of Schema objects within a Pack
            operationId: getSchemaLibByPack
            parameters:
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Schema objects within a Pack
            tags:
                - schemas
        post:
            description: Create Schema within a Pack
            operationId: createSchemaLibByPack
            parameters:
                - description: pack ID to POST
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SchemaLibEntry'
                description: New Schema object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Schema within a Pack
            tags:
                - schemas
    /p/{pack}/lib/schemas/{id}:
        delete:
            description: Delete Schema within a Pack
            operationId: deleteSchemaLibByPackAndId
            parameters:
                - description: Unique ID to DELETE for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to DELETE
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Schema within a Pack
            tags:
                - schemas
        get:
            description: Get Schema by ID within a Pack
            operationId: getSchemaLibByPackAndId
            parameters:
                - description: Unique ID to GET for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Schema by ID within a Pack
            tags:
                - schemas
        patch:
            description: Update Schema within a Pack
            operationId: updateSchemaLibByPackAndId
            parameters:
                - description: Unique ID to PATCH for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to PATCH
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SchemaLibEntry'
                description: Schema object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SchemaLibEntry'
                                        type: array
                                type: object
                    description: a list of Schema objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Schema within a Pack
            tags:
                - schemas
    /p/{pack}/lib/vars:
        get:
            deprecated: false
            description: List all GlobalVars with references within a Pack
            operationId: getGlobalVariableLibVarsByPack
            parameters:
                - description: Pass "refs" to include references to fields the variable is used in for pack
                  in: query
                  name: with
                  required: false
                  schema:
                    type: string
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: List all GlobalVars with references within a Pack
            tags:
                - global_variables
        post:
            description: Create Global Variable within a Pack
            operationId: createGlobalVariableLibVarsByPack
            parameters:
                - description: pack ID to POST
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GlobalVar'
                description: New Global Variable object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Global Variable within a Pack
            tags:
                - global_variables
    /p/{pack}/lib/vars/{id}:
        delete:
            description: Delete Global Variable within a Pack
            operationId: deleteGlobalVariableLibVarsByPackAndId
            parameters:
                - description: Unique ID to DELETE for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to DELETE
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Global Variable within a Pack
            tags:
                - global_variables
        get:
            description: Get Global Variable by ID within a Pack
            operationId: getGlobalVariableLibVarsByPackAndId
            parameters:
                - description: Unique ID to GET for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Global Variable by ID within a Pack
            tags:
                - global_variables
        patch:
            description: Update Global Variable within a Pack
            operationId: updateGlobalVariableLibVarsByPackAndId
            parameters:
                - description: Unique ID to PATCH for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to PATCH
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GlobalVar'
                description: Global Variable object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GlobalVar'
                                        type: array
                                type: object
                    description: a list of Global Variable objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Global Variable within a Pack
            tags:
                - global_variables
    /p/{pack}/pipelines:
        get:
            description: Get a list of Pipeline objects within a Pack
            operationId: getPipelineByPack
            parameters:
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Pipeline objects within a Pack
            tags:
                - pipelines
        post:
            description: Create Pipeline within a Pack
            operationId: createPipelineByPack
            parameters:
                - description: pack ID to POST
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Pipeline'
                description: New Pipeline object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Pipeline within a Pack
            tags:
                - pipelines
    /p/{pack}/pipelines/{id}:
        delete:
            description: Delete Pipeline within a Pack
            operationId: deletePipelineByPackAndId
            parameters:
                - description: Unique ID to DELETE for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to DELETE
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Pipeline within a Pack
            tags:
                - pipelines
        get:
            description: Get Pipeline by ID within a Pack
            operationId: getPipelineByPackAndId
            parameters:
                - description: Unique ID to GET for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Pipeline by ID within a Pack
            tags:
                - pipelines
        patch:
            description: Update Pipeline within a Pack
            operationId: updatePipelineByPackAndId
            parameters:
                - description: Unique ID to PATCH for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to PATCH
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Pipeline'
                description: Pipeline object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Pipeline within a Pack
            tags:
                - pipelines
    /p/{pack}/routes:
        get:
            description: Get a list of Routes objects within a Pack
            operationId: getRoutesByPack
            parameters:
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Routes'
                                        type: array
                                type: object
                    description: a list of Routes objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Routes objects within a Pack
            tags:
                - routes
    /p/{pack}/routes/{id}:
        get:
            description: Get Routes by ID within a Pack
            operationId: getRoutesByPackAndId
            parameters:
                - description: Unique ID to GET for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to GET
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Routes'
                                        type: array
                                type: object
                    description: a list of Routes objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Routes by ID within a Pack
            tags:
                - routes
        patch:
            description: Update Routes within a Pack
            operationId: updateRoutesByPackAndId
            parameters:
                - description: Unique ID to PATCH for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to PATCH
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Routes'
                description: Routes object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Routes'
                                        type: array
                                type: object
                    description: a list of Routes objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Routes within a Pack
            tags:
                - routes
    /p/{pack}/routes/{id}/append:
        post:
            deprecated: false
            description: Appends routes to the end of the routing table within a Pack
            operationId: createRoutesAppendByPackAndId
            parameters:
                - description: the route table to be appended to - currently default is the only supported value for pack
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: pack ID to POST
                  in: path
                  name: pack
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RouteDefinitions'
                description: RouteDefinitions object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Appends routes to the end of the routing table within a Pack
            tags:
                - routes
    /packs:
        get:
            deprecated: false
            description: Get info on packs
            operationId: getPacks
            parameters:
                - description: Comma separated list of entities, "outputs", "inputs"
                  in: query
                  name: with
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PackInfo'
                                        type: array
                                type: object
                    description: a list of PackInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get info on packs
            tags:
                - packs
        post:
            deprecated: false
            description: Install Pack
            operationId: createPacks
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PackRequestBody'
                description: PackRequestBody object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PackInstallInfo'
                                        type: array
                                type: object
                    description: a list of PackInstallInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Install Pack
            tags:
                - packs
        put:
            deprecated: false
            description: Upload Pack
            operationId: updatePacks
            parameters:
                - description: the file to upload
                  in: query
                  name: filename
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Upload Pack
            tags:
                - packs
    /packs/__clone__:
        post:
            deprecated: false
            description: Clone Pack
            operationId: createPacksClone
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PackClone'
                description: PackClone object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Clone Pack
            tags:
                - packs
    /packs/{id}:
        delete:
            deprecated: false
            description: Uninstall Pack from the system
            operationId: deletePacksById
            parameters:
                - description: Pack name
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PackInstallInfo'
                                        type: array
                                type: object
                    description: a list of PackInstallInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Uninstall Pack from the system
            tags:
                - packs
        patch:
            deprecated: false
            description: Upgrade Pack
            operationId: updatePacksById
            parameters:
                - description: Pack name
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: body string required Pack source
                  in: query
                  name: source
                  required: false
                  schema:
                    type: string
                - description: body boolean optional Only upgrade to minor/patch versions
                  in: query
                  name: minor
                  required: false
                  schema:
                    type: string
                - description: body string optional Specify a branch, tag or a semver spec
                  in: query
                  name: spec
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PackInfo'
                                        type: array
                                type: object
                    description: a list of PackInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Upgrade Pack
            tags:
                - packs
    /packs/{id}/export:
        get:
            deprecated: false
            description: Export Pack
            operationId: getPacksExportById
            parameters:
                - description: Pack name
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: 'Export mode. Note: "merge_safe" is deprecated and will be removed in v5.0.0. Use "merge" instead.'
                  in: query
                  name: mode
                  required: true
                  schema:
                    enum:
                        - merge
                        - default_only
                        - merge_safe
                    type: string
                - description: Filename of the exported Pack
                  in: query
                  name: filename
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Export Pack
            tags:
                - packs
    /packs/{id}/publish:
        post:
            deprecated: false
            description: Publish Pack back to its repository
            operationId: createPacksPublishById
            parameters:
                - description: Pack name
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PublishPackResponse'
                                        type: array
                                type: object
                    description: a list of PublishPackResponse objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Publish Pack back to its repository
            tags:
                - packs
    /packs/{id}/refs:
        get:
            deprecated: false
            description: Returns all entities that reference objects from outside of the pack
            operationId: getPacksRefsById
            parameters:
                - description: Pack name
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ReferencingEntity'
                                        type: array
                                type: object
                    description: a list of ReferencingEntity objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Returns all entities that reference objects from outside of the pack
            tags:
                - packs
    /pipelines:
        get:
            description: Get a list of Pipeline objects
            operationId: listPipeline
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Pipeline objects
            tags:
                - pipelines
        post:
            description: Create Pipeline
            operationId: createPipeline
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Pipeline'
                description: New Pipeline object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Pipeline
            tags:
                - pipelines
    /pipelines/{id}:
        delete:
            description: Delete Pipeline
            operationId: deletePipelineById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Pipeline
            tags:
                - pipelines
        get:
            description: Get Pipeline by ID
            operationId: getPipelineById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Pipeline by ID
            tags:
                - pipelines
        patch:
            description: Update Pipeline
            operationId: updatePipelineById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Pipeline'
                description: Pipeline object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Pipeline'
                                        type: array
                                type: object
                    description: a list of Pipeline objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Pipeline
            tags:
                - pipelines
    /preview:
        post:
            deprecated: false
            description: Sends sample events through a pipeline and returns the results
            operationId: createPreview
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PreviewDataParams'
                description: PreviewDataParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Sends sample events through a pipeline and returns the results
            tags:
                - preview
                - samples
    /products/{product}/groups:
        get:
            deprecated: false
            description: Get a list of ConfigGroup objects
            operationId: getProductsGroupsByProduct
            parameters:
                - description: 'fields to add to results: git.commit, git.localChanges, git.log'
                  in: query
                  name: fields
                  required: false
                  schema:
                    type: string
                - description: Cribl Product
                  in: path
                  name: product
                  required: true
                  schema:
                    enum:
                        - stream
                        - edge
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ConfigGroup'
                                        type: array
                                type: object
                    description: a list of ConfigGroup objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of ConfigGroup objects
            tags:
                - groups
        post:
            deprecated: false
            description: Create a Fleet or Worker Group
            operationId: createProductsGroupsByProduct
            parameters:
                - description: Cribl Product
                  in: path
                  name: product
                  required: true
                  schema:
                    enum:
                        - stream
                        - edge
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfigGroup'
                description: ConfigGroup object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ConfigGroup'
                                        type: array
                                type: object
                    description: a list of ConfigGroup objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create a Fleet or Worker Group
            tags:
                - groups
            x-speakeasy-entity-operation: Group#create
    /products/{product}/groups/{id}/acl/teams:
        get:
            deprecated: false
            description: ACL of team with permissions for resources in this Group
            operationId: getProductsGroupsAclTeamsByProductAndId
            parameters:
                - description: Cribl Product
                  in: path
                  name: product
                  required: true
                  schema:
                    enum:
                        - stream
                        - edge
                    type: string
                - description: Group ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: resource type by which to filter access levels
                  in: query
                  name: type
                  required: false
                  schema:
                    enum:
                        - groups
                        - datasets
                        - dataset-providers
                        - projects
                        - dashboards
                        - macros
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/TeamAccessControlList'
                                        type: array
                                type: object
                    description: a list of TeamAccessControlList objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: ACL of team with permissions for resources in this Group
            tags:
                - teams
    /products/{product}/users:
        get:
            deprecated: false
            description: Get Users belonging to a product
            operationId: getProductsUsersByProduct
            parameters:
                - description: product by which to filter members
                  in: path
                  name: product
                  required: true
                  schema:
                    enum:
                        - stream
                        - edge
                        - search
                        - lake
                    type: string
                - description: filter to specific group by groupId
                  in: query
                  name: groupId
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/User'
                                        type: array
                                type: object
                    description: a list of User objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Users belonging to a product
            tags:
                - users
    /products/{product}/users/__cache__:
        delete:
            deprecated: false
            description: Invalidate the members cache for a given product in SaaS deployment.
            operationId: deleteProductsUsersCacheByProduct
            parameters:
                - description: product by which to filter members
                  in: path
                  name: product
                  required: true
                  schema:
                    enum:
                        - stream
                        - edge
                        - search
                        - lake
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Invalidate the members cache for a given product in SaaS deployment.
            tags:
                - users
    /products/{product}/users/{id}/acl:
        get:
            deprecated: false
            description: Get user's Access Control List
            operationId: getProductsUsersAclByProductAndId
            parameters:
                - description: product by which to filter members
                  in: path
                  name: product
                  required: true
                  schema:
                    enum:
                        - stream
                        - edge
                        - search
                        - lake
                    type: string
                - description: user id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: resource type by which to filter access levels
                  in: query
                  name: type
                  required: false
                  schema:
                    enum:
                        - groups
                        - datasets
                        - dataset-providers
                        - projects
                        - dashboards
                        - macros
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ResourcePolicy'
                                        type: array
                                type: object
                    description: a list of ResourcePolicy objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get user's Access Control List
            tags:
                - users
    /products/edge/map/query:
        post:
            deprecated: false
            description: Data for the Map View for Edge Fleets (Leader only)
            operationId: createProductsEdgeMapQuery
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/EdgeMapQueryResult'
                                        type: array
                                type: object
                    description: a list of EdgeMapQueryResult objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Data for the Map View for Edge Fleets (Leader only)
            tags:
                - edge
    /products/lake/lakes/{lakeId}/datasets:
        get:
            deprecated: false
            description: Get the list of Dataset contained in the specified Lake
            operationId: getCriblLakeDatasetByLakeId
            parameters:
                - description: lake id that contains the Datasets
                  in: path
                  name: lakeId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/CriblLakeDataset'
                                        type: array
                                type: object
                    description: a list of CriblLakeDataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get the list of Dataset contained in the specified Lake
            tags:
                - lake
        post:
            deprecated: false
            description: Create a Dataset in the specified Lake
            operationId: createCriblLakeDatasetByLakeId
            parameters:
                - description: lake id that contains the Datasets
                  in: path
                  name: lakeId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CriblLakeDataset'
                description: CriblLakeDataset object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/CriblLakeDataset'
                                        type: array
                                type: object
                    description: a list of CriblLakeDataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create a Dataset in the specified Lake
            tags:
                - lake
    /products/lake/lakes/{lakeId}/datasets/{id}:
        delete:
            deprecated: false
            description: Delete a Dataset in the specified Lake
            operationId: deleteCriblLakeDatasetByLakeIdAndId
            parameters:
                - description: lake id that contains the Datasets
                  in: path
                  name: lakeId
                  required: true
                  schema:
                    type: string
                - description: dataset id to delete
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/CriblLakeDataset'
                                        type: array
                                type: object
                    description: a list of CriblLakeDataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete a Dataset in the specified Lake
            tags:
                - lake
        get:
            deprecated: false
            description: Get a Dataset in the specified Lake
            operationId: getCriblLakeDatasetByLakeIdAndId
            parameters:
                - description: lake id that contains the Datasets
                  in: path
                  name: lakeId
                  required: true
                  schema:
                    type: string
                - description: dataset id to get
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/CriblLakeDataset'
                                        type: array
                                type: object
                    description: a list of CriblLakeDataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a Dataset in the specified Lake
            tags:
                - lake
        patch:
            deprecated: false
            description: Update a Dataset in the specified Lake
            operationId: updateCriblLakeDatasetByLakeIdAndId
            parameters:
                - description: lake id that contains the Datasets
                  in: path
                  name: lakeId
                  required: true
                  schema:
                    type: string
                - description: dataset id to update
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CriblLakeDataset'
                description: CriblLakeDataset object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/CriblLakeDataset'
                                        type: array
                                type: object
                    description: a list of CriblLakeDataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update a Dataset in the specified Lake
            tags:
                - lake
    /routes:
        get:
            description: Get a list of Routes objects
            operationId: listRoutes
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Routes'
                                        type: array
                                type: object
                    description: a list of Routes objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Routes objects
            tags:
                - routes
    /routes/{id}:
        get:
            description: Get Routes by ID
            operationId: getRoutesById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Routes'
                                        type: array
                                type: object
                    description: a list of Routes objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Routes by ID
            tags:
                - routes
        patch:
            description: Update Routes
            operationId: updateRoutesById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Routes'
                description: Routes object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Routes'
                                        type: array
                                type: object
                    description: a list of Routes objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Routes
            tags:
                - routes
    /routes/{id}/append:
        post:
            deprecated: false
            description: Appends routes to the end of the routing table
            operationId: createRoutesAppendById
            parameters:
                - description: the route table to be appended to - currently default is the only supported value
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RouteDefinitions'
                description: RouteDefinitions object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Appends routes to the end of the routing table
            tags:
                - routes
    /search/dashboard-categories:
        get:
            description: Get a list of DashboardCategory objects
            operationId: listDashboardCategory
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DashboardCategory'
                                        type: array
                                type: object
                    description: a list of DashboardCategory objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of DashboardCategory objects
            tags:
                - dashboardCategories
        post:
            description: Create DashboardCategory
            operationId: createDashboardCategory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DashboardCategory'
                description: New DashboardCategory object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DashboardCategory'
                                        type: array
                                type: object
                    description: a list of DashboardCategory objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create DashboardCategory
            tags:
                - dashboardCategories
    /search/dashboard-categories/{id}:
        delete:
            description: Delete DashboardCategory
            operationId: deleteDashboardCategoryById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DashboardCategory'
                                        type: array
                                type: object
                    description: a list of DashboardCategory objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete DashboardCategory
            tags:
                - dashboardCategories
        get:
            description: Get DashboardCategory by ID
            operationId: getDashboardCategoryById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DashboardCategory'
                                        type: array
                                type: object
                    description: a list of DashboardCategory objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get DashboardCategory by ID
            tags:
                - dashboardCategories
        patch:
            description: Update DashboardCategory
            operationId: updateDashboardCategoryById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DashboardCategory'
                description: DashboardCategory object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DashboardCategory'
                                        type: array
                                type: object
                    description: a list of DashboardCategory objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update DashboardCategory
            tags:
                - dashboardCategories
    /search/dashboards:
        get:
            description: Get a list of SearchDashboard objects
            operationId: listSearchDashboard
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchDashboard'
                                        type: array
                                type: object
                    description: a list of SearchDashboard objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of SearchDashboard objects
            tags:
                - dashboards
        post:
            description: Create SearchDashboard
            operationId: createSearchDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchDashboard'
                description: New SearchDashboard object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchDashboard'
                                        type: array
                                type: object
                    description: a list of SearchDashboard objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create SearchDashboard
            tags:
                - dashboards
    /search/dashboards/{id}:
        delete:
            description: Delete SearchDashboard
            operationId: deleteSearchDashboardById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchDashboard'
                                        type: array
                                type: object
                    description: a list of SearchDashboard objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete SearchDashboard
            tags:
                - dashboards
        get:
            description: Get SearchDashboard by ID
            operationId: getSearchDashboardById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchDashboard'
                                        type: array
                                type: object
                    description: a list of SearchDashboard objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get SearchDashboard by ID
            tags:
                - dashboards
        patch:
            description: Update SearchDashboard
            operationId: updateSearchDashboardById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchDashboard'
                description: SearchDashboard object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchDashboard'
                                        type: array
                                type: object
                    description: a list of SearchDashboard objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update SearchDashboard
            tags:
                - dashboards
    /search/dashboards/{id}/acl:
        get:
            description: List accesses to SearchDashboard granted to users
            operationId: getSearchDashboardAclById
            parameters:
                - description: Unique ID for ACL Get
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UserAccessControlList'
                                        type: array
                                type: object
                    description: a list of UserAccessControlList objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get SearchDashboard ACL
            tags:
                - dashboards
                - users ACL
    /search/dashboards/{id}/acl/apply:
        post:
            description: Add/remove accesses to SearchDashboard for users
            operationId: createSearchDashboardAclApplyById
            parameters:
                - description: Unique ID for ACL Create
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessControlSchema'
                description: AccessControlSchema object
                required: true
            responses:
                "200":
                    description: N/A
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Modify SearchDashboard ACL
            tags:
                - dashboards
                - users ACL
    /search/dashboards/{id}/acl/teams:
        get:
            description: List accesses to SearchDashboard granted to Teams
            operationId: getSearchDashboardAclTeamsById
            parameters:
                - description: Unique ID for ACL Teams Get
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UserAccessControlList'
                                        type: array
                                type: object
                    description: a list of UserAccessControlList objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get SearchDashboard Teams
            tags:
                - dashboards
                - teams ACL
    /search/dashboards/{id}/acl/teams/apply:
        post:
            description: Add/remove accesses to SearchDashboard for Teams
            operationId: createSearchDashboardAclTeamsApplyById
            parameters:
                - description: Unique ID for ACL Teams Create
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessControlSchema'
                description: AccessControlSchema object
                required: true
            responses:
                "200":
                    description: N/A
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Modify SearchDashboard Teams ACL
            tags:
                - dashboards
                - teams ACL
    /search/dataset-provider-types:
        get:
            description: Get a list of DatasetProviderType objects
            operationId: listDatasetProviderType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProviderType'
                                        type: array
                                type: object
                    description: a list of DatasetProviderType objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of DatasetProviderType objects
            tags:
                - datasets
        post:
            description: Create DatasetProviderType
            operationId: createDatasetProviderType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatasetProviderType'
                description: New DatasetProviderType object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProviderType'
                                        type: array
                                type: object
                    description: a list of DatasetProviderType objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create DatasetProviderType
            tags:
                - datasets
    /search/dataset-provider-types/{id}:
        delete:
            description: Delete DatasetProviderType
            operationId: deleteDatasetProviderTypeById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProviderType'
                                        type: array
                                type: object
                    description: a list of DatasetProviderType objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete DatasetProviderType
            tags:
                - datasets
        get:
            description: Get DatasetProviderType by ID
            operationId: getDatasetProviderTypeById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProviderType'
                                        type: array
                                type: object
                    description: a list of DatasetProviderType objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get DatasetProviderType by ID
            tags:
                - datasets
        patch:
            description: Update DatasetProviderType
            operationId: updateDatasetProviderTypeById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatasetProviderType'
                description: DatasetProviderType object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProviderType'
                                        type: array
                                type: object
                    description: a list of DatasetProviderType objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update DatasetProviderType
            tags:
                - datasets
    /search/dataset-providers:
        get:
            description: Get a list of DatasetProvider objects
            operationId: listDatasetProvider
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProvider'
                                        type: array
                                type: object
                    description: a list of DatasetProvider objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of DatasetProvider objects
            tags:
                - datasets
        post:
            description: Create DatasetProvider
            operationId: createDatasetProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatasetProvider'
                description: New DatasetProvider object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProvider'
                                        type: array
                                type: object
                    description: a list of DatasetProvider objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create DatasetProvider
            tags:
                - datasets
    /search/dataset-providers/{id}:
        delete:
            description: Delete DatasetProvider
            operationId: deleteDatasetProviderById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProvider'
                                        type: array
                                type: object
                    description: a list of DatasetProvider objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete DatasetProvider
            tags:
                - datasets
        get:
            description: Get DatasetProvider by ID
            operationId: getDatasetProviderById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProvider'
                                        type: array
                                type: object
                    description: a list of DatasetProvider objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get DatasetProvider by ID
            tags:
                - datasets
        patch:
            description: Update DatasetProvider
            operationId: updateDatasetProviderById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatasetProvider'
                description: DatasetProvider object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DatasetProvider'
                                        type: array
                                type: object
                    description: a list of DatasetProvider objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update DatasetProvider
            tags:
                - datasets
    /search/datasets:
        get:
            description: Get a list of Dataset objects
            operationId: listDataset
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Dataset'
                                        type: array
                                type: object
                    description: a list of Dataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Dataset objects
            tags:
                - datasets
        post:
            description: Create Dataset
            operationId: createDataset
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Dataset'
                description: New Dataset object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Dataset'
                                        type: array
                                type: object
                    description: a list of Dataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Dataset
            tags:
                - datasets
    /search/datasets/{id}:
        delete:
            description: Delete Dataset
            operationId: deleteDatasetById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Dataset'
                                        type: array
                                type: object
                    description: a list of Dataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Dataset
            tags:
                - datasets
        get:
            description: Get Dataset by ID
            operationId: getDatasetById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Dataset'
                                        type: array
                                type: object
                    description: a list of Dataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Dataset by ID
            tags:
                - datasets
        patch:
            description: Update Dataset
            operationId: updateDatasetById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Dataset'
                description: Dataset object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Dataset'
                                        type: array
                                type: object
                    description: a list of Dataset objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Dataset
            tags:
                - datasets
    /search/datasets/{id}/acl:
        get:
            description: List accesses to Dataset granted to users
            operationId: getDatasetAclById
            parameters:
                - description: Unique ID for ACL Get
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UserAccessControlList'
                                        type: array
                                type: object
                    description: a list of UserAccessControlList objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Dataset ACL
            tags:
                - datasets
                - users ACL
    /search/datasets/{id}/acl/apply:
        post:
            description: Add/remove accesses to Dataset for users
            operationId: createDatasetAclApplyById
            parameters:
                - description: Unique ID for ACL Create
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessControlSchema'
                description: AccessControlSchema object
                required: true
            responses:
                "200":
                    description: N/A
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Modify Dataset ACL
            tags:
                - datasets
                - users ACL
    /search/datasets/{id}/acl/teams:
        get:
            description: List accesses to Dataset granted to Teams
            operationId: getDatasetAclTeamsById
            parameters:
                - description: Unique ID for ACL Teams Get
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UserAccessControlList'
                                        type: array
                                type: object
                    description: a list of UserAccessControlList objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Dataset Teams
            tags:
                - datasets
                - teams ACL
    /search/datasets/{id}/acl/teams/apply:
        post:
            description: Add/remove accesses to Dataset for Teams
            operationId: createDatasetAclTeamsApplyById
            parameters:
                - description: Unique ID for ACL Teams Create
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessControlSchema'
                description: AccessControlSchema object
                required: true
            responses:
                "200":
                    description: N/A
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Modify Dataset Teams ACL
            tags:
                - datasets
                - teams ACL
    /search/event-breaker-preview:
        post:
            deprecated: false
            description: Runs an event breaker rule on the specified data
            operationId: createSearchEventBreakerPreview
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatatypePreviewRequestBody'
                description: DatatypePreviewRequestBody object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PreviewResponseBody'
                                        type: array
                                type: object
                    description: a list of PreviewResponseBody objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Runs an event breaker rule on the specified data
            tags:
                - search
    /search/healthcheck:
        get:
            deprecated: false
            description: Get health check metric for search
            operationId: getSearchHealthcheck
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchHealthCheckStatus'
                                        type: array
                                type: object
                    description: a list of SearchHealthCheckStatus objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get health check metric for search
            tags:
                - search
    /search/job-metrics:
        get:
            deprecated: false
            description: List metrics for all search jobs
            operationId: getSearchJobMetrics
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: string object
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: List metrics for all search jobs
            tags:
                - search
    /search/jobs:
        get:
            description: Get a list of SearchJob objects
            operationId: listSearchJob
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchJob'
                                        type: array
                                type: object
                    description: a list of SearchJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of SearchJob objects
            tags:
                - search
        post:
            description: Create SearchJob
            operationId: createSearchJob
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchJob'
                description: New SearchJob object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchJob'
                                        type: array
                                type: object
                    description: a list of SearchJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create SearchJob
            tags:
                - search
    /search/jobs/{id}:
        delete:
            description: Delete SearchJob
            operationId: deleteSearchJobById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchJob'
                                        type: array
                                type: object
                    description: a list of SearchJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete SearchJob
            tags:
                - search
        get:
            description: Get SearchJob by ID
            operationId: getSearchJobById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchJob'
                                        type: array
                                type: object
                    description: a list of SearchJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get SearchJob by ID
            tags:
                - search
        patch:
            description: Update SearchJob
            operationId: updateSearchJobById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchJob'
                description: SearchJob object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchJob'
                                        type: array
                                type: object
                    description: a list of SearchJob objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update SearchJob
            tags:
                - search
    /search/jobs/{id}/dispatch-executors:
        post:
            deprecated: false
            description: internal endpoint, dispatch search *id* to worker nodes filtered by worker node filter using RPC
            operationId: createSearchJobDispatchExecutorsById
            parameters:
                - description: search job id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: internal endpoint, dispatch search *id* to worker nodes filtered by worker node filter using RPC
            tags:
                - search
    /search/jobs/{id}/logs:
        get:
            deprecated: false
            description: Get search logs
            operationId: getSearchJobLogsById
            parameters:
                - description: search job id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get search logs
            tags:
                - search
    /search/jobs/{id}/metrics:
        get:
            deprecated: false
            description: Get search job metrics
            operationId: getSearchJobsMetricsById
            parameters:
                - description: search job id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: string object
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get search job metrics
            tags:
                - search
    /search/jobs/{id}/results:
        get:
            deprecated: false
            description: List search results, when lower/upper bound is provided, offset is relative to the time range.
            operationId: getSearchJobsResultsById
            parameters:
                - description: search job id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: maximum number of events returned
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: number
                - description: starting offset of the events
                  in: query
                  name: offset
                  required: false
                  schema:
                    type: number
                - description: lower bound of the time range, inclusive
                  in: query
                  name: lowerBound
                  required: false
                  schema:
                    type: number
                - description: upper bound of the time range, exclusive
                  in: query
                  name: upperBound
                  required: false
                  schema:
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchJobResults'
                    description: SearchResultsResults for the Search /results and /results-poll endpoints. object
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: List search results, when lower/upper bound is provided, offset is relative to the time range.
            tags:
                - search
    /search/jobs/{id}/results-poll:
        get:
            deprecated: false
            description: List search results
            operationId: getSearchJobsResultsPollById
            parameters:
                - description: search job id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: maximum number of events returned
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: number
                - description: starting offset of the events
                  in: query
                  name: offset
                  required: false
                  schema:
                    type: number
                - description: lower bound of the time range, inclusive
                  in: query
                  name: lowerBound
                  required: false
                  schema:
                    type: number
                - description: upper bound of the time range, exclusive
                  in: query
                  name: upperBound
                  required: false
                  schema:
                    type: number
                - description: last known status of the Search Job. Used to return immediatelyupon status change if the status was queued.
                  in: query
                  name: lastJobStatus
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchJobResults'
                    description: SearchResultsResults for the Search /results and /results-poll endpoints. object
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: List search results
            tags:
                - search
    /search/jobs/{id}/stages/{stageId}/results:
        get:
            deprecated: false
            description: List search results for a given stage. Note that this cannot be the root stage!
            operationId: getSearchJobsStagesResultsByIdAndStageId
            parameters:
                - description: search job ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: id of the search job stage
                  in: path
                  name: stageId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: string object
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: List search results for a given stage. Note that this cannot be the root stage!
            tags:
                - search
    /search/macros:
        get:
            description: Get a list of SearchMacro objects
            operationId: listSearchMacro
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchMacro'
                                        type: array
                                type: object
                    description: a list of SearchMacro objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of SearchMacro objects
            tags:
                - macros
        post:
            description: Create SearchMacro
            operationId: createSearchMacro
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchMacro'
                description: New SearchMacro object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchMacro'
                                        type: array
                                type: object
                    description: a list of SearchMacro objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create SearchMacro
            tags:
                - macros
    /search/macros/{id}:
        delete:
            description: Delete SearchMacro
            operationId: deleteSearchMacroById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchMacro'
                                        type: array
                                type: object
                    description: a list of SearchMacro objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete SearchMacro
            tags:
                - macros
        get:
            description: Get SearchMacro by ID
            operationId: getSearchMacroById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchMacro'
                                        type: array
                                type: object
                    description: a list of SearchMacro objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get SearchMacro by ID
            tags:
                - macros
        patch:
            description: Update SearchMacro
            operationId: updateSearchMacroById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchMacro'
                description: SearchMacro object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchMacro'
                                        type: array
                                type: object
                    description: a list of SearchMacro objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update SearchMacro
            tags:
                - macros
    /search/preview:
        post:
            deprecated: false
            description: Applies a query snippet on a set of input events for preview
            operationId: createSearchPreview
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PreviewRequestBody'
                description: PreviewRequestBody object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PreviewResponseBody'
                                        type: array
                                type: object
                    description: a list of PreviewResponseBody objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Applies a query snippet on a set of input events for preview
            tags:
                - search
    /search/saved:
        get:
            description: Get a list of SavedQuery objects
            operationId: listSavedQuery
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedQuery'
                                        type: array
                                type: object
                    description: a list of SavedQuery objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of SavedQuery objects
            tags:
                - savedQueries
        post:
            description: Create SavedQuery
            operationId: createSavedQuery
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SavedQuery'
                description: New SavedQuery object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedQuery'
                                        type: array
                                type: object
                    description: a list of SavedQuery objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create SavedQuery
            tags:
                - savedQueries
    /search/saved/{id}:
        delete:
            description: Delete SavedQuery
            operationId: deleteSavedQueryById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedQuery'
                                        type: array
                                type: object
                    description: a list of SavedQuery objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete SavedQuery
            tags:
                - savedQueries
        get:
            description: Get SavedQuery by ID
            operationId: getSavedQueryById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedQuery'
                                        type: array
                                type: object
                    description: a list of SavedQuery objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get SavedQuery by ID
            tags:
                - savedQueries
        patch:
            description: Update SavedQuery
            operationId: updateSavedQueryById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SavedQuery'
                description: SavedQuery object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SavedQuery'
                                        type: array
                                type: object
                    description: a list of SavedQuery objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update SavedQuery
            tags:
                - savedQueries
    /search/trust-policies:
        get:
            description: Get a list of TrustPolicy objects
            operationId: listTrustPolicy
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/TrustPolicy'
                                        type: array
                                type: object
                    description: a list of TrustPolicy objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of TrustPolicy objects
            tags:
                - trust-policies
    /search/trust-policies/{id}: {}
    /search/usage-groups:
        get:
            description: Get a list of UsageGroup objects
            operationId: listUsageGroup
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UsageGroup'
                                        type: array
                                type: object
                    description: a list of UsageGroup objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of UsageGroup objects
            tags:
                - usage-groups
        post:
            description: Create UsageGroup
            operationId: createUsageGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UsageGroup'
                description: New UsageGroup object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UsageGroup'
                                        type: array
                                type: object
                    description: a list of UsageGroup objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create UsageGroup
            tags:
                - usage-groups
    /search/usage-groups/{id}:
        delete:
            description: Delete UsageGroup
            operationId: deleteUsageGroupById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UsageGroup'
                                        type: array
                                type: object
                    description: a list of UsageGroup objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete UsageGroup
            tags:
                - usage-groups
        get:
            description: Get UsageGroup by ID
            operationId: getUsageGroupById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UsageGroup'
                                        type: array
                                type: object
                    description: a list of UsageGroup objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get UsageGroup by ID
            tags:
                - usage-groups
        patch:
            description: Update UsageGroup
            operationId: updateUsageGroupById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UsageGroup'
                description: UsageGroup object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UsageGroup'
                                        type: array
                                type: object
                    description: a list of UsageGroup objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update UsageGroup
            tags:
                - usage-groups
    /security/kms/config:
        get:
            deprecated: false
            description: Get Cribl KMS config
            operationId: getSecurityKmsConfig
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/KMSProviderConfig'
                                        type: array
                                type: object
                    description: a list of KMSProviderConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Cribl KMS config
            tags:
                - security
        patch:
            deprecated: false
            description: Update Cribl KMS config
            operationId: updateSecurityKmsConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/KMSProviderConfig'
                description: KMSProviderConfig object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/KMSProviderConfig'
                                        type: array
                                type: object
                    description: a list of KMSProviderConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Cribl KMS config
            tags:
                - security
    /security/kms/health:
        get:
            deprecated: false
            description: Get Cribl KMS health
            operationId: getSecurityKmsHealth
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/KMSHealth'
                                        type: array
                                type: object
                    description: a list of KMSHealth objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Cribl KMS health
            tags:
                - security
    /settings/features:
        get:
            deprecated: false
            description: List all features
            operationId: getFeaturesEntry
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/FeaturesEntry'
                                        type: array
                                type: object
                    description: a list of FeaturesEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: List all features
            tags:
                - features
    /settings/features/{id}:
        get:
            deprecated: false
            description: Get feature by id (i.e. 'type-name`)
            operationId: getFeaturesEntryById
            parameters:
                - description: Feature id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/FeaturesEntry'
                                        type: array
                                type: object
                    description: a list of FeaturesEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get feature by id (i.e. 'type-name`)
            tags:
                - features
    /system/banners:
        get:
            description: Get a list of BannerMessage objects
            operationId: listBannerMessage
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BannerMessage'
                                        type: array
                                type: object
                    description: a list of BannerMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of BannerMessage objects
            tags:
                - banners
        post:
            description: Create BannerMessage
            operationId: createBannerMessage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BannerMessage'
                description: New BannerMessage object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BannerMessage'
                                        type: array
                                type: object
                    description: a list of BannerMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create BannerMessage
            tags:
                - banners
    /system/banners/{id}:
        delete:
            description: Delete BannerMessage
            operationId: deleteBannerMessageById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BannerMessage'
                                        type: array
                                type: object
                    description: a list of BannerMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete BannerMessage
            tags:
                - banners
        get:
            description: Get BannerMessage by ID
            operationId: getBannerMessageById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BannerMessage'
                                        type: array
                                type: object
                    description: a list of BannerMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get BannerMessage by ID
            tags:
                - banners
        patch:
            description: Update BannerMessage
            operationId: updateBannerMessageById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BannerMessage'
                description: BannerMessage object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BannerMessage'
                                        type: array
                                type: object
                    description: a list of BannerMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update BannerMessage
            tags:
                - banners
    /system/capture:
        post:
            deprecated: false
            description: Capture live incoming data
            operationId: createSystemCapture
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CaptureParams'
                description: CaptureParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Capture live incoming data
            tags:
                - preview
                - samples
    /system/certificates:
        get:
            description: Get a list of Certificate objects
            operationId: listCertificate
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Certificate'
                                        type: array
                                type: object
                    description: a list of Certificate objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Certificate objects
            tags:
                - certificates
        post:
            description: Create Certificate
            operationId: createCertificate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Certificate'
                description: New Certificate object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Certificate'
                                        type: array
                                type: object
                    description: a list of Certificate objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Certificate
            tags:
                - certificates
    /system/certificates/{id}:
        delete:
            description: Delete Certificate
            operationId: deleteCertificateById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Certificate'
                                        type: array
                                type: object
                    description: a list of Certificate objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Certificate
            tags:
                - certificates
        get:
            description: Get Certificate by ID
            operationId: getCertificateById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Certificate'
                                        type: array
                                type: object
                    description: a list of Certificate objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Certificate by ID
            tags:
                - certificates
        patch:
            description: Update Certificate
            operationId: updateCertificateById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Certificate'
                description: Certificate object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Certificate'
                                        type: array
                                type: object
                    description: a list of Certificate objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Certificate
            tags:
                - certificates
    /system/diag:
        delete:
            deprecated: false
            description: Remove diag bundle
            operationId: deleteSystemDiag
            parameters:
                - description: Diag bundle path
                  in: query
                  name: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Remove diag bundle
            tags:
                - diag
        get:
            deprecated: false
            description: Get list of existing diag bundles
            operationId: getSystemDiag
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Diag'
                                        type: array
                                type: object
                    description: a list of Diag objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get list of existing diag bundles
            tags:
                - diag
    /system/diag/download:
        get:
            operationId: getDiagBundle
            responses:
                "200":
                    content:
                        application/tar+gzip:
                            schema:
                                format: binary
                                type: string
                    description: A tar.gz file consisting all configuration files and recent logs
                "401":
                    description: Unauthorized
            summary: Returns a diag bundle as a tar.gz archive
            tags:
                - diag
    /system/diag/send:
        post:
            deprecated: false
            description: Send a diag bundle (tar.gz archive) to Cribl
            operationId: createSystemDiagSend
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendDiagBundle'
                description: SendDiagBundle object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Send a diag bundle (tar.gz archive) to Cribl
            tags:
                - diag
    /system/distributed/upgrade/{group}:
        post:
            deprecated: false
            description: Execute distributed group upgrade
            operationId: createSystemDistributedUpgradeByGroup
            parameters:
                - description: Group to upgrade
                  in: path
                  name: group
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DistributedUpgradeRequest'
                description: distributedUpgrade object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Execute distributed group upgrade
            tags:
                - system
    /system/distributed/upgrade/cancel/{group}:
        post:
            deprecated: false
            description: Cancel a running group upgrade
            operationId: createSystemDistributedUpgradeCancelByGroup
            parameters:
                - description: id of the group
                  in: path
                  name: group
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Cancel a running group upgrade
            tags:
                - system
    /system/distributed/upgrade/download/{file}:
        get:
            deprecated: false
            description: Get the previously downloaded Cribl package
            operationId: getSystemDistributedUpgradeDownloadByFile
            parameters:
                - description: Name of the file to be downloaded
                  in: path
                  name: file
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get the previously downloaded Cribl package
            tags:
                - system
    /system/distributed/upgrade/stage/{group}:
        post:
            deprecated: false
            description: Stage distributed group upgrade
            operationId: createSystemDistributedUpgradeStageByGroup
            parameters:
                - description: Group to upgrade
                  in: path
                  name: group
                  required: true
                  schema:
                    type: string
                - description: body number percentage of nodes on the worker group to upgrade
                  in: query
                  name: upgradePercentage
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Stage distributed group upgrade
            tags:
                - system
    /system/info:
        get:
            deprecated: false
            description: Get basic system information
            operationId: getSystemInfo
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SystemInfo'
                                        type: array
                                type: object
                    description: a list of SystemInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get basic system information
            tags:
                - diag
    /system/inputs:
        get:
            description: Get a list of Input objects
            operationId: listInput
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Input'
                                        type: array
                                type: object
                    description: a list of Input objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Input objects
            tags:
                - inputs
        post:
            description: Create Input
            operationId: createInput
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Input'
                description: New Input object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Input'
                                        type: array
                                type: object
                    description: a list of Input objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Input
            tags:
                - inputs
    /system/inputs/{id}:
        delete:
            description: Delete Input
            operationId: deleteInputById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Input'
                                        type: array
                                type: object
                    description: a list of Input objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Input
            tags:
                - inputs
        get:
            description: Get Input by ID
            operationId: getInputById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Input'
                                        type: array
                                type: object
                    description: a list of Input objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Input by ID
            tags:
                - inputs
        patch:
            description: Update Input
            operationId: updateInputById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Input'
                description: Input object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Input'
                                        type: array
                                type: object
                    description: a list of Input objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Input
            tags:
                - inputs
    /system/inputs/{id}/hectoken:
        post:
            deprecated: false
            description: Add token and optional metadata to an existing hec input
            operationId: createInputHecTokenById
            parameters:
                - description: hec input id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddHecTokenRequest'
                description: AddHecTokenRequest object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Add token and optional metadata to an existing hec input
            tags:
                - inputs
    /system/inputs/{id}/hectoken/{token}:
        patch:
            deprecated: false
            description: Update token metadata on existing hec input
            operationId: updateInputHecTokenByIdAndToken
            parameters:
                - description: hec input id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: token to update
                  in: path
                  name: token
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateHecTokenRequest'
                description: UpdateHecTokenRequest object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update token metadata on existing hec input
            tags:
                - inputs
    /system/iometrics:
        get:
            description: Get a list of IoMetricsEntry objects
            operationId: listIoMetricsEntry
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/IoMetricsEntry'
                                        type: array
                                type: object
                    description: a list of IoMetricsEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of IoMetricsEntry objects
            tags:
                - iometrics
    /system/iometrics/{id}:
        delete:
            description: Delete IoMetricsEntry
            operationId: deleteIoMetricsEntryById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/IoMetricsEntry'
                                        type: array
                                type: object
                    description: a list of IoMetricsEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete IoMetricsEntry
            tags:
                - iometrics
        get:
            description: Get IoMetricsEntry by ID
            operationId: getIoMetricsEntryById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/IoMetricsEntry'
                                        type: array
                                type: object
                    description: a list of IoMetricsEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get IoMetricsEntry by ID
            tags:
                - iometrics
        patch:
            description: Update IoMetricsEntry
            operationId: updateIoMetricsEntryById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/IoMetricsEntry'
                description: IoMetricsEntry object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/IoMetricsEntry'
                                        type: array
                                type: object
                    description: a list of IoMetricsEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update IoMetricsEntry
            tags:
                - iometrics
    /system/jobs/logs/{id}/{groupId}:
        get:
            deprecated: false
            description: Get contents of the log file
            operationId: getSystemJobsLogsByIdAndGroupId
            parameters:
                - description: Job id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Maximum number of log lines to retrieve starting from offset.
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: integer
                - description: Offset in the current log file to fetch the log events from.
                  in: query
                  name: offset
                  required: false
                  schema:
                    type: integer
                - description: in the current log file to fetch the log events upto.
                  in: query
                  name: endOffset
                  required: false
                  schema:
                    type: integer
                - description: Epoch timestamp of the earliest event (includes rolled files present on disk)
                  in: query
                  name: et
                  required: false
                  schema:
                    type: integer
                - description: Epoch timestamp of the latest event (includes rolled files present on disk)
                  in: query
                  name: lt
                  required: false
                  schema:
                    type: integer
                - description: Filter
                  in: query
                  name: filter
                  required: false
                  schema:
                    type: string
                - description: Group ID (optional)
                  in: path
                  name: groupId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get contents of the log file
            tags:
                - logging
    /system/keys:
        get:
            description: Get a list of KeyMetadataEntity objects
            operationId: listKeyMetadataEntity
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/KeyMetadataEntity'
                                        type: array
                                type: object
                    description: a list of KeyMetadataEntity objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of KeyMetadataEntity objects
            tags:
                - keys
        post:
            description: Create KeyMetadataEntity
            operationId: createKeyMetadataEntity
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/KeyMetadataEntity'
                description: New KeyMetadataEntity object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/KeyMetadataEntity'
                                        type: array
                                type: object
                    description: a list of KeyMetadataEntity objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create KeyMetadataEntity
            tags:
                - keys
    /system/keys/{id}:
        delete:
            description: Delete KeyMetadataEntity
            operationId: deleteKeyMetadataEntityById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/KeyMetadataEntity'
                                        type: array
                                type: object
                    description: a list of KeyMetadataEntity objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete KeyMetadataEntity
            tags:
                - keys
        get:
            description: Get KeyMetadataEntity by ID
            operationId: getKeyMetadataEntityById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/KeyMetadataEntity'
                                        type: array
                                type: object
                    description: a list of KeyMetadataEntity objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get KeyMetadataEntity by ID
            tags:
                - keys
        patch:
            description: Update KeyMetadataEntity
            operationId: updateKeyMetadataEntityById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/KeyMetadataEntity'
                description: KeyMetadataEntity object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/KeyMetadataEntity'
                                        type: array
                                type: object
                    description: a list of KeyMetadataEntity objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update KeyMetadataEntity
            tags:
                - keys
    /system/licenses:
        get:
            description: Get a list of License objects
            operationId: listLicense
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/License'
                                        type: array
                                type: object
                    description: a list of License objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of License objects
            tags:
                - licenses
        post:
            deprecated: false
            description: Add a license to your deployment
            operationId: createLicense
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LicenseRequest'
                description: LicenseRequest object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/License'
                                        type: array
                                type: object
                    description: a list of License objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Add a license to your deployment
            tags:
                - licenses
    /system/licenses/{id}:
        delete:
            description: Delete License
            operationId: deleteLicenseById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/License'
                                        type: array
                                type: object
                    description: a list of License objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete License
            tags:
                - licenses
        get:
            description: Get License by ID
            operationId: getLicenseById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/License'
                                        type: array
                                type: object
                    description: a list of License objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get License by ID
            tags:
                - licenses
    /system/licenses/usage:
        get:
            deprecated: false
            description: Get license usage metrics, aggregated by day, up to last 90 days
            operationId: getLicense
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DailyUsageMetrics'
                                        type: array
                                type: object
                    description: a list of DailyUsageMetrics objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get license usage metrics, aggregated by day, up to last 90 days
            tags:
                - licenses
    /system/logger:
        get:
            description: Get a list of LoggerConfig objects
            operationId: listLoggerConfig
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LoggerConfig'
                                        type: array
                                type: object
                    description: a list of LoggerConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of LoggerConfig objects
            tags:
                - logger
    /system/logger/{id}:
        delete:
            description: Delete LoggerConfig
            operationId: deleteLoggerConfigById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LoggerConfig'
                                        type: array
                                type: object
                    description: a list of LoggerConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete LoggerConfig
            tags:
                - logger
        get:
            description: Get LoggerConfig by ID
            operationId: getLoggerConfigById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LoggerConfig'
                                        type: array
                                type: object
                    description: a list of LoggerConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get LoggerConfig by ID
            tags:
                - logger
        patch:
            description: Update LoggerConfig
            operationId: updateLoggerConfigById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoggerConfig'
                description: LoggerConfig object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LoggerConfig'
                                        type: array
                                type: object
                    description: a list of LoggerConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update LoggerConfig
            tags:
                - logger
    /system/logs:
        get:
            deprecated: false
            description: Get a list of log files
            operationId: getSystemLogs
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LogFileInfo'
                                        type: array
                                type: object
                    description: a list of LogFileInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of log files
            tags:
                - logging
    /system/logs/{id}:
        get:
            deprecated: false
            description: Get contents of the log file
            operationId: getSystemLogsById
            parameters:
                - description: Log ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Maximum number of log lines to retrieve starting from offset.
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: integer
                - description: in the current log file to fetch the log events upto.
                  in: query
                  name: endOffset
                  required: false
                  schema:
                    type: integer
                - description: Epoch timestamp of the earliest event (includes rolled files present on disk)
                  in: query
                  name: et
                  required: false
                  schema:
                    type: integer
                - description: Epoch timestamp of the latest event (includes rolled files present on disk)
                  in: query
                  name: lt
                  required: false
                  schema:
                    type: integer
                - description: Filter
                  in: query
                  name: filter
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get contents of the log file
            tags:
                - logging
    /system/logs/search:
        get:
            deprecated: false
            description: Get contents of the log file
            operationId: getSystemLogsSearch
            parameters:
                - description: type of logs request single multi group
                  in: query
                  name: type
                  required: true
                  schema:
                    type: string
                - description: id of the group to query
                  in: query
                  name: groupId
                  required: false
                  schema:
                    type: string
                - description: query string[] optional file or files to query
                  in: query
                  name: files
                  required: false
                  schema:
                    type: string
                - description: Maximum number of log lines to retrieve starting from offset.
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: integer
                - description: Epoch timestamp of the earliest event (includes rolled files present on disk)
                  in: query
                  name: et
                  required: false
                  schema:
                    type: integer
                - description: Epoch timestamp of the latest event (includes rolled files present on disk)
                  in: query
                  name: lt
                  required: false
                  schema:
                    type: integer
                - description: Filter
                  in: query
                  name: filter
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get contents of the log file
            tags:
                - logging
    /system/lookups:
        get:
            description: Get a list of LookupFile objects
            operationId: listLookupFile
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LookupFile'
                                        type: array
                                type: object
                    description: a list of LookupFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of LookupFile objects
            tags:
                - lookups
        post:
            description: Create LookupFile
            operationId: createLookupFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LookupFile'
                description: New LookupFile object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LookupFile'
                                        type: array
                                type: object
                    description: a list of LookupFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create LookupFile
            tags:
                - lookups
        put:
            deprecated: false
            description: Upload LookupFile
            operationId: updateLookupFile
            parameters:
                - description: query LookupFilenameSchema required Filename
                  in: query
                  name: filename
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    text/csv:
                        schema:
                            type: string
                description: CSV text
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LookupFileInfoResponse'
                    description: LookupFileInfoResponse object
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Upload LookupFile
            tags:
                - lookups
    /system/lookups/{id}:
        delete:
            description: Delete LookupFile
            operationId: deleteLookupFileById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LookupFile'
                                        type: array
                                type: object
                    description: a list of LookupFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete LookupFile
            tags:
                - lookups
        get:
            description: Get LookupFile by ID
            operationId: getLookupFileById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LookupFile'
                                        type: array
                                type: object
                    description: a list of LookupFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get LookupFile by ID
            tags:
                - lookups
        patch:
            description: Update LookupFile
            operationId: updateLookupFileById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LookupFile'
                description: LookupFile object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/LookupFile'
                                        type: array
                                type: object
                    description: a list of LookupFile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update LookupFile
            tags:
                - lookups
    /system/messages:
        get:
            description: Get a list of BulletinMessage objects
            operationId: listBulletinMessage
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BulletinMessage'
                                        type: array
                                type: object
                    description: a list of BulletinMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of BulletinMessage objects
            tags:
                - messages
        post:
            description: Create BulletinMessage
            operationId: createBulletinMessage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulletinMessage'
                description: New BulletinMessage object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BulletinMessage'
                                        type: array
                                type: object
                    description: a list of BulletinMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create BulletinMessage
            tags:
                - messages
    /system/messages/{id}:
        delete:
            description: Delete BulletinMessage
            operationId: deleteBulletinMessageById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BulletinMessage'
                                        type: array
                                type: object
                    description: a list of BulletinMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete BulletinMessage
            tags:
                - messages
        get:
            description: Get BulletinMessage by ID
            operationId: getBulletinMessageById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/BulletinMessage'
                                        type: array
                                type: object
                    description: a list of BulletinMessage objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get BulletinMessage by ID
            tags:
                - messages
    /system/metrics:
        get:
            deprecated: false
            description: Query raw internal system metrics
            operationId: getSystemMetrics
            parameters:
                - description: worker process to query, this would work only on a worker node
                  in: query
                  name: wp
                  required: false
                  schema:
                    type: string
                - description: buckets in the past to include in the query results
                  in: query
                  name: numBuckets
                  required: false
                  schema:
                    type: number
                - description: earliest time to query against
                  in: query
                  name: earliest
                  required: false
                  schema:
                    type: string
                - description: latest time to query against
                  in: query
                  name: latest
                  required: false
                  schema:
                    type: string
                - description: can be a regex or an array of metric names
                  in: query
                  name: metricNameFilter
                  required: false
                  schema:
                    type: string
                - description: a js expression to apply against the metrics returned (can filter dimensions)
                  in: query
                  name: filterExpr
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of Response objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Query raw internal system metrics
            tags:
                - metrics
    /system/metrics/enum:
        post:
            deprecated: false
            description: Enumerate all internal system metrics
            operationId: createSystemMetricsEnum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SystemMetricsEnum'
                description: SystemMetricsEnum object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/MetricNameInfo'
                                        type: array
                                type: object
                    description: a list of MetricNameInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Enumerate all internal system metrics
            tags:
                - metrics
    /system/metrics/query:
        post:
            deprecated: false
            description: Aggregate raw internal system metrics
            operationId: createSystemMetricsQuery
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MetricsAggOpts'
                description: MetricsAggOpts object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of Response objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Aggregate raw internal system metrics
            tags:
                - metrics
    /system/outputs:
        get:
            description: Get a list of Output objects
            operationId: listOutput
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Output'
                                        type: array
                                type: object
                    description: a list of Output objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Output objects
            tags:
                - outputs
        post:
            description: Create Output
            operationId: createOutput
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Output'
                description: New Output object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Output'
                                        type: array
                                type: object
                    description: a list of Output objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Output
            tags:
                - outputs
    /system/outputs/{id}:
        delete:
            description: Delete Output
            operationId: deleteOutputById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Output'
                                        type: array
                                type: object
                    description: a list of Output objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Output
            tags:
                - outputs
        get:
            description: Get Output by ID
            operationId: getOutputById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Output'
                                        type: array
                                type: object
                    description: a list of Output objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Output by ID
            tags:
                - outputs
        patch:
            description: Update Output
            operationId: updateOutputById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Output'
                description: Output object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Output'
                                        type: array
                                type: object
                    description: a list of Output objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Output
            tags:
                - outputs
    /system/outputs/{id}/pq:
        delete:
            deprecated: false
            description: Clears destination persistent queue
            operationId: deleteOutputPqById
            parameters:
                - description: Output Id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Clears destination persistent queue
            tags:
                - outputs
        get:
            deprecated: false
            description: Retrieves status of latest clear PQ job for an output
            operationId: getOutputPqById
            parameters:
                - description: Output Id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Retrieves status of latest clear PQ job for an output
            tags:
                - outputs
    /system/outputs/{id}/samples:
        get:
            deprecated: false
            description: Retrieve samples data for the specified output. Used to get sample data for the test action.
            operationId: getOutputSamplesById
            parameters:
                - description: Output Id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/OutputSamplesResponse'
                                        type: array
                                type: object
                    description: a list of OutputSamplesResponse objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Retrieve samples data for the specified output. Used to get sample data for the test action.
            tags:
                - outputs
    /system/outputs/{id}/test:
        post:
            deprecated: false
            description: Send sample data to an output to validate configuration or test connectivity
            operationId: createOutputTestById
            parameters:
                - description: Output Id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OutputTestRequest'
                description: OutputTestRequest object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/OutputTestResponse'
                                        type: array
                                type: object
                    description: a list of OutputTestResponse objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Send sample data to an output to validate configuration or test connectivity
            tags:
                - outputs
    /system/policies:
        get:
            description: Get a list of PolicyRule objects
            operationId: listPolicyRule
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PolicyRule'
                                        type: array
                                type: object
                    description: a list of PolicyRule objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of PolicyRule objects
            tags:
                - policies
        post:
            description: Create PolicyRule
            operationId: createPolicyRule
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PolicyRule'
                description: New PolicyRule object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PolicyRule'
                                        type: array
                                type: object
                    description: a list of PolicyRule objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create PolicyRule
            tags:
                - policies
    /system/policies/{id}:
        delete:
            description: Delete PolicyRule
            operationId: deletePolicyRuleById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PolicyRule'
                                        type: array
                                type: object
                    description: a list of PolicyRule objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete PolicyRule
            tags:
                - policies
        get:
            description: Get PolicyRule by ID
            operationId: getPolicyRuleById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PolicyRule'
                                        type: array
                                type: object
                    description: a list of PolicyRule objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get PolicyRule by ID
            tags:
                - policies
        patch:
            description: Update PolicyRule
            operationId: updatePolicyRuleById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PolicyRule'
                description: PolicyRule object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PolicyRule'
                                        type: array
                                type: object
                    description: a list of PolicyRule objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update PolicyRule
            tags:
                - policies
    /system/processes:
        get:
            deprecated: false
            description: Get a list of processes under management
            operationId: getSystemProcesses
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProcessEntry'
                                        type: array
                                type: object
                    description: a list of ProcessEntry objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of processes under management
            tags:
                - processes
    /system/profiler:
        get:
            description: Get a list of ProfilerItem objects
            operationId: listProfilerItem
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProfilerItem'
                                        type: array
                                type: object
                    description: a list of ProfilerItem objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of ProfilerItem objects
            tags:
                - profiler
        post:
            description: Create ProfilerItem
            operationId: createProfilerItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProfilerItem'
                description: New ProfilerItem object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProfilerItem'
                                        type: array
                                type: object
                    description: a list of ProfilerItem objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create ProfilerItem
            tags:
                - profiler
    /system/profiler/{id}:
        delete:
            description: Delete ProfilerItem
            operationId: deleteProfilerItemById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProfilerItem'
                                        type: array
                                type: object
                    description: a list of ProfilerItem objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete ProfilerItem
            tags:
                - profiler
        get:
            description: Get ProfilerItem by ID
            operationId: getProfilerItemById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProfilerItem'
                                        type: array
                                type: object
                    description: a list of ProfilerItem objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get ProfilerItem by ID
            tags:
                - profiler
        patch:
            description: Update ProfilerItem
            operationId: updateProfilerItemById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProfilerItem'
                description: ProfilerItem object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProfilerItem'
                                        type: array
                                type: object
                    description: a list of ProfilerItem objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update ProfilerItem
            tags:
                - profiler
    /system/projects:
        get:
            description: Get a list of Project objects
            operationId: listProject
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProjectConfig'
                                        type: array
                                type: object
                    description: a list of Project objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Project objects
            tags:
                - projects
        post:
            description: Create Project
            operationId: createProject
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectConfig'
                description: New Project object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProjectConfig'
                                        type: array
                                type: object
                    description: a list of Project objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Project
            tags:
                - projects
    /system/projects/{id}:
        delete:
            description: Delete Project
            operationId: deleteProjectById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProjectConfig'
                                        type: array
                                type: object
                    description: a list of Project objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Project
            tags:
                - projects
        get:
            description: Get Project by ID
            operationId: getProjectById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProjectConfig'
                                        type: array
                                type: object
                    description: a list of Project objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Project by ID
            tags:
                - projects
        patch:
            description: Update Project
            operationId: updateProjectById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectConfig'
                description: Project object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProjectConfig'
                                        type: array
                                type: object
                    description: a list of Project objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Project
            tags:
                - projects
    /system/projects/{id}/acl:
        get:
            description: List accesses to Project granted to users
            operationId: getProjectAclById
            parameters:
                - description: Unique ID for ACL Get
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UserAccessControlList'
                                        type: array
                                type: object
                    description: a list of UserAccessControlList objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Project ACL
            tags:
                - projects
                - users ACL
    /system/projects/{id}/acl/apply:
        post:
            description: Add/remove accesses to Project for users
            operationId: createProjectAclApplyById
            parameters:
                - description: Unique ID for ACL Create
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessControlSchema'
                description: AccessControlSchema object
                required: true
            responses:
                "200":
                    description: N/A
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Modify Project ACL
            tags:
                - projects
                - users ACL
    /system/projects/{id}/acl/teams:
        get:
            description: List accesses to Project granted to Teams
            operationId: getProjectAclTeamsById
            parameters:
                - description: Unique ID for ACL Teams Get
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UserAccessControlList'
                                        type: array
                                type: object
                    description: a list of UserAccessControlList objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Project Teams
            tags:
                - projects
                - teams ACL
    /system/projects/{id}/acl/teams/apply:
        post:
            description: Add/remove accesses to Project for Teams
            operationId: createProjectAclTeamsApplyById
            parameters:
                - description: Unique ID for ACL Teams Create
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessControlSchema'
                description: AccessControlSchema object
                required: true
            responses:
                "200":
                    description: N/A
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Modify Project Teams ACL
            tags:
                - projects
                - teams ACL
    /system/projects/{projectId}/capture:
        post:
            deprecated: false
            description: Capture live incoming data from a particular project and subscription at the destination
            operationId: createSystemProjectsCaptureByProjectId
            parameters:
                - description: Project ID
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CaptureParams'
                description: CaptureParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Capture live incoming data from a particular project and subscription at the destination
            tags:
                - preview
                - samples
    /system/projects/{projectId}/destinations:
        get:
            deprecated: false
            description: Lists destinations associated with this project.
            operationId: getProjectDestinationsByProjectId
            parameters:
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ProjectDestination'
                                        type: array
                                type: object
                    description: a list of ProjectDestination objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Lists destinations associated with this project.
            tags:
                - projects
    /system/projects/{projectId}/subscriptions:
        get:
            deprecated: false
            description: Get the subscriptions associated with the project
            operationId: getSubscriptionByProjectId
            parameters:
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Subscription'
                                        type: array
                                type: object
                    description: a list of Subscription objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get the subscriptions associated with the project
            tags:
                - projects
                - subscriptions
    /system/projects/{projectId}/subscriptions/{subscriptionId}/capture:
        post:
            deprecated: false
            description: Capture live incoming data from a particular project and subscription at the subscription
            operationId: createSystemProjectsSubscriptionsCaptureByProjectIdAndSubscriptionId
            parameters:
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: SubscriptionId Id
                  in: path
                  name: subscriptionId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CaptureParams'
                description: CaptureParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Capture live incoming data from a particular project and subscription at the subscription
            tags:
                - preview
                - samples
    /system/projects/{projectId}/version/commit:
        post:
            deprecated: false
            description: Commit project changes.
            operationId: createSystemProjectsVersionCommitByProjectId
            parameters:
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectGitCommitParams'
                description: ProjectGitCommitParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitCommitSummary'
                                        type: array
                                type: object
                    description: a list of GitCommitSummary objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Commit project changes.
            tags:
                - projects
                - versioning
                - git
    /system/projects/{projectId}/version/count:
        get:
            deprecated: false
            description: get the count of files of changed
            operationId: getSystemProjectsVersionCountByProjectId
            parameters:
                - description: Project ID
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: Commit ID
                  in: query
                  name: ID
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the count of files of changed
            tags:
                - projects
                - versioning
                - git
    /system/projects/{projectId}/version/diff:
        get:
            deprecated: false
            description: get the textual diff for given commit
            operationId: getSystemProjectsVersionDiffByProjectId
            parameters:
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: Commit hash (default is HEAD)
                  in: query
                  name: commit
                  required: false
                  schema:
                    type: string
                - description: Filename
                  in: query
                  name: filename
                  required: false
                  schema:
                    type: string
                - description: Limit maximum lines in the diff
                  in: query
                  name: diffLineLimit
                  required: false
                  schema:
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the textual diff for given commit
            tags:
                - projects
                - versioning
                - git
    /system/projects/{projectId}/version/files:
        get:
            deprecated: false
            description: get the files changed
            operationId: getSystemProjectsVersionFilesByProjectId
            parameters:
                - description: Project ID
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: Commit ID
                  in: query
                  name: ID
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitFilesResponse'
                                        type: array
                                type: object
                    description: a list of GitFilesResponse objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the files changed
            tags:
                - projects
                - versioning
                - git
    /system/projects/{projectId}/version/revert:
        post:
            deprecated: false
            description: Revert project changes.
            operationId: createSystemProjectsVersionRevertByProjectId
            parameters:
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectGitCommitParams'
                description: ProjectGitCommitParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitRevertResult'
                                        type: array
                                type: object
                    description: a list of GitRevertResult objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Revert project changes.
            tags:
                - projects
                - versioning
                - git
    /system/projects/{projectId}/version/show:
        get:
            deprecated: false
            description: Show project changes.
            operationId: getSystemProjectsVersionShowByProjectId
            parameters:
                - description: Project Id
                  in: path
                  name: projectId
                  required: true
                  schema:
                    type: string
                - description: Commit ID
                  in: query
                  name: ID
                  required: false
                  schema:
                    type: string
                - description: Filename
                  in: query
                  name: filename
                  required: false
                  schema:
                    type: string
                - description: Limit maximum lines in the diff
                  in: query
                  name: diffLineLimit
                  required: false
                  schema:
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Show project changes.
            tags:
                - projects
                - versioning
                - git
    /system/roles:
        get:
            description: Get a list of Role objects
            operationId: listRole
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Role'
                                        type: array
                                type: object
                    description: a list of Role objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Role objects
            tags:
                - roles
        post:
            description: Create Role
            operationId: createRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Role'
                description: New Role object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Role'
                                        type: array
                                type: object
                    description: a list of Role objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Role
            tags:
                - roles
    /system/roles/{id}:
        delete:
            description: Delete Role
            operationId: deleteRoleById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Role'
                                        type: array
                                type: object
                    description: a list of Role objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Role
            tags:
                - roles
        get:
            description: Get Role by ID
            operationId: getRoleById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Role'
                                        type: array
                                type: object
                    description: a list of Role objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Role by ID
            tags:
                - roles
        patch:
            description: Update Role
            operationId: updateRoleById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Role'
                description: Role object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Role'
                                        type: array
                                type: object
                    description: a list of Role objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Role
            tags:
                - roles
    /system/samples:
        get:
            description: Get a list of DataSample objects
            operationId: listDataSample
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DataSample'
                                        type: array
                                type: object
                    description: a list of DataSample objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of DataSample objects
            tags:
                - samples
        post:
            description: Create DataSample
            operationId: createDataSample
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DataSample'
                description: New DataSample object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DataSample'
                                        type: array
                                type: object
                    description: a list of DataSample objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create DataSample
            tags:
                - samples
    /system/samples/{id}:
        delete:
            description: Delete DataSample
            operationId: deleteDataSampleById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DataSample'
                                        type: array
                                type: object
                    description: a list of DataSample objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete DataSample
            tags:
                - samples
        get:
            description: Get DataSample by ID
            operationId: getDataSampleById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DataSample'
                                        type: array
                                type: object
                    description: a list of DataSample objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get DataSample by ID
            tags:
                - samples
        patch:
            description: Update DataSample
            operationId: updateDataSampleById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DataSample'
                description: DataSample object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/DataSample'
                                        type: array
                                type: object
                    description: a list of DataSample objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update DataSample
            tags:
                - samples
    /system/samples/{id}/content:
        get:
            deprecated: false
            description: Get sample content by ID
            operationId: getDataSampleContentById
            parameters:
                - description: Sample ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SampleContent'
                                        type: array
                                type: object
                    description: a list of SampleContent objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get sample content by ID
            tags:
                - samples
    /system/scripts:
        get:
            description: Get a list of Script objects
            operationId: listScript
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ScriptLibEntry'
                                        type: array
                                type: object
                    description: a list of Script objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Script objects
            tags:
                - scripts
        post:
            description: Create Script
            operationId: createScript
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ScriptLibEntry'
                description: New Script object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ScriptLibEntry'
                                        type: array
                                type: object
                    description: a list of Script objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Script
            tags:
                - scripts
    /system/scripts/{id}:
        delete:
            description: Delete Script
            operationId: deleteScriptById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ScriptLibEntry'
                                        type: array
                                type: object
                    description: a list of Script objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Script
            tags:
                - scripts
        get:
            description: Get Script by ID
            operationId: getScriptById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ScriptLibEntry'
                                        type: array
                                type: object
                    description: a list of Script objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Script by ID
            tags:
                - scripts
        patch:
            description: Update Script
            operationId: updateScriptById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ScriptLibEntry'
                description: Script object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ScriptLibEntry'
                                        type: array
                                type: object
                    description: a list of Script objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Script
            tags:
                - scripts
    /system/secrets:
        get:
            description: Get a list of RestSecret objects
            operationId: listRestSecret
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RestSecret'
                                        type: array
                                type: object
                    description: a list of RestSecret objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of RestSecret objects
            tags:
                - secrets
        post:
            description: Create RestSecret
            operationId: createRestSecret
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestSecret'
                description: New RestSecret object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RestSecret'
                                        type: array
                                type: object
                    description: a list of RestSecret objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create RestSecret
            tags:
                - secrets
    /system/secrets/{id}:
        delete:
            description: Delete RestSecret
            operationId: deleteRestSecretById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RestSecret'
                                        type: array
                                type: object
                    description: a list of RestSecret objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete RestSecret
            tags:
                - secrets
        get:
            description: Get RestSecret by ID
            operationId: getRestSecretById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RestSecret'
                                        type: array
                                type: object
                    description: a list of RestSecret objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get RestSecret by ID
            tags:
                - secrets
        patch:
            description: Update RestSecret
            operationId: updateRestSecretById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestSecret'
                description: RestSecret object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/RestSecret'
                                        type: array
                                type: object
                    description: a list of RestSecret objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update RestSecret
            tags:
                - secrets
    /system/settings:
        get:
            deprecated: true
            description: 'Get Cribl system settings. Deprecated: use specific endpoints /system/limits, /system/job-limits, /system/redis-cache-limits, /system/services-limits, /system/settings/git-settings, and /system/settings/conf respectively'
            operationId: getSystemSettings
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SystemSettings'
                                        type: array
                                type: object
                    description: a list of SystemSettings objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: 'Get Cribl system settings. Deprecated: use specific endpoints /system/limits, /system/job-limits, /system/redis-cache-limits, /system/services-limits, /system/settings/git-settings, and /system/settings/conf respectively'
            tags:
                - system
        patch:
            deprecated: true
            description: 'Update Cribl system settings. Deprecated: use specific endpoints /system/limits, /system/job-limits, /system/settings/git-settings, /system/settings/auth and /system/settings/conf respectively'
            operationId: updateSystemSettings
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SystemSettings'
                                        type: array
                                type: object
                    description: a list of SystemSettings objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: 'Update Cribl system settings. Deprecated: use specific endpoints /system/limits, /system/job-limits, /system/settings/git-settings, /system/settings/auth and /system/settings/conf respectively'
            tags:
                - system
    /system/settings/auth:
        get:
            deprecated: false
            description: Get authentication settings
            operationId: getSystemSettingsAuth
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AuthConfig'
                                        type: array
                                type: object
                    description: a list of AuthConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get authentication settings
            tags:
                - system
        patch:
            deprecated: false
            description: Update authentication settings
            operationId: updateSystemSettingsAuth
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/AuthConfig'
                                        type: array
                                type: object
                    description: a list of AuthConfig objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update authentication settings
            tags:
                - system
    /system/settings/conf:
        get:
            deprecated: false
            description: Get Cribl system settings
            operationId: getSystemSettingsConf
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SystemSettingsConf'
                                        type: array
                                type: object
                    description: a list of SystemSettingsConf objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Cribl system settings
            tags:
                - system
        patch:
            deprecated: false
            description: Update Cribl system settings
            operationId: updateSystemSettingsConf
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SystemSettingsConf'
                description: SystemSettingsConf object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SystemSettings'
                                        type: array
                                type: object
                    description: a list of SystemSettings objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Cribl system settings
            tags:
                - system
    /system/settings/cribl:
        get:
            deprecated: false
            description: Get public settings visible to any logged user
            operationId: getSystemSettingsCribl
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/PublicSettings'
                                        type: array
                                type: object
                    description: a list of PublicSettings objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get public settings visible to any logged user
            tags:
                - system
    /system/settings/git-settings:
        get:
            deprecated: false
            description: Get git settings
            operationId: getSystemSettingsGitSettings
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitSettings'
                                        type: array
                                type: object
                    description: a list of GitSettings objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get git settings
            tags:
                - system
                - git
        patch:
            deprecated: false
            description: Update git settings
            operationId: updateSystemSettingsGitSettings
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitSettings'
                                        type: array
                                type: object
                    description: a list of GitSettings objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update git settings
            tags:
                - system
                - git
    /system/settings/reload:
        post:
            operationId: reloadSettings
            responses:
                "200":
                    description: Success
                "500":
                    description: Internal error
            summary: Reload Cribl settings from the filesystem
            tags:
                - system
    /system/settings/restart:
        post:
            operationId: triggerRestart
            responses:
                "200":
                    description: Success
                "500":
                    description: Internal error
            summary: Restart Cribl server
            tags:
                - system
    /system/settings/search-limits:
        get:
            deprecated: false
            description: Get search limits
            operationId: getSystemSettingsSearchLimits
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/SearchSettings'
                                        type: array
                                type: object
                    description: a list of SearchSettings objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get search limits
            tags:
                - system
    /system/settings/upgrade:
        get:
            deprecated: false
            description: Get a list of Cribl versions available for upgrade
            operationId: getSystemSettingsUpgrade
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UpgradeResult'
                                        type: array
                                type: object
                    description: a list of UpgradeResult objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Cribl versions available for upgrade
            tags:
                - system
    /system/settings/upgrade-from-package:
        post:
            deprecated: false
            description: Upgrade master node with the provided package
            operationId: createSystemSettingsUpgradeFromPackage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpgradeMasterRequest'
                description: upgradeMaster object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Upgrade master node with the provided package
            tags:
                - system
    /system/settings/upgrade/{version}:
        post:
            deprecated: false
            description: Upgrade Cribl to a given version
            operationId: createSystemSettingsUpgradeByVersion
            parameters:
                - description: Version number
                  in: path
                  name: version
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Upgrade Cribl to a given version
            tags:
                - system
    /system/status/inputs:
        get:
            description: Get a list of InputStatus objects
            operationId: listInputStatus
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/InputStatus'
                                        type: array
                                type: object
                    description: a list of InputStatus objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of InputStatus objects
            tags:
                - inputs
    /system/status/inputs/{id}:
        get:
            description: Get InputStatus by ID
            operationId: getInputStatusById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/InputStatus'
                                        type: array
                                type: object
                    description: a list of InputStatus objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get InputStatus by ID
            tags:
                - inputs
    /system/status/outputs:
        get:
            description: Get a list of OutputStatus objects
            operationId: listOutputStatus
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/OutputStatus'
                                        type: array
                                type: object
                    description: a list of OutputStatus objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of OutputStatus objects
            tags:
                - outputs
    /system/status/outputs/{id}:
        get:
            description: Get OutputStatus by ID
            operationId: getOutputStatusById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/OutputStatus'
                                        type: array
                                type: object
                    description: a list of OutputStatus objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get OutputStatus by ID
            tags:
                - outputs
    /system/subscriptions:
        get:
            description: Get a list of Subscription objects
            operationId: listSubscription
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Subscription'
                                        type: array
                                type: object
                    description: a list of Subscription objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Subscription objects
            tags:
                - subscriptions
        post:
            deprecated: false
            description: Create subscription
            operationId: createSubscription
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Subscription'
                                        type: array
                                type: object
                    description: a list of Subscription objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create subscription
            tags:
                - subscriptions
    /system/subscriptions/{id}:
        delete:
            deprecated: false
            description: Delete subscription
            operationId: deleteSubscriptionById
            parameters:
                - description: Subscription ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Subscription'
                                        type: array
                                type: object
                    description: a list of Subscription objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete subscription
            tags:
                - subscriptions
        get:
            description: Get Subscription by ID
            operationId: getSubscriptionById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Subscription'
                                        type: array
                                type: object
                    description: a list of Subscription objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Subscription by ID
            tags:
                - subscriptions
        patch:
            deprecated: false
            description: Update subscription
            operationId: updateSubscriptionById
            parameters:
                - description: Subscription ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Subscription'
                                        type: array
                                type: object
                    description: a list of Subscription objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update subscription
            tags:
                - subscriptions
    /system/teams:
        get:
            deprecated: false
            description: Get a list of Team objects
            operationId: getTeam
            parameters:
                - description: filter teams by product
                  in: query
                  name: product
                  required: false
                  schema:
                    enum:
                        - stream
                        - edge
                        - search
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Team'
                                        type: array
                                type: object
                    description: a list of Team objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of Team objects
            tags:
                - teams
        post:
            description: Create Team
            operationId: createTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Team'
                description: New Team object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Team'
                                        type: array
                                type: object
                    description: a list of Team objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create Team
            tags:
                - teams
    /system/teams/{id}:
        delete:
            description: Delete Team
            operationId: deleteTeamById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Team'
                                        type: array
                                type: object
                    description: a list of Team objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete Team
            tags:
                - teams
        get:
            description: Get Team by ID
            operationId: getTeamById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Team'
                                        type: array
                                type: object
                    description: a list of Team objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Team by ID
            tags:
                - teams
        patch:
            description: Update Team
            operationId: updateTeamById
            parameters:
                - description: Unique ID to PATCH
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Team'
                description: Team object to be updated
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/Team'
                                        type: array
                                type: object
                    description: a list of Team objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update Team
            tags:
                - teams
    /system/teams/{id}/acl:
        get:
            deprecated: false
            description: Get Teams's Access Control List
            operationId: getTeamAclById
            parameters:
                - description: Team name
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: resource type by which to filter access levels
                  in: query
                  name: type
                  required: false
                  schema:
                    enum:
                        - groups
                        - datasets
                        - dataset-providers
                        - projects
                        - dashboards
                        - macros
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/ResourcePolicy'
                                        type: array
                                type: object
                    description: a list of ResourcePolicy objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get Teams's Access Control List
            tags:
                - teams
    /system/teams/{id}/users:
        get:
            deprecated: false
            description: Get users on a team
            operationId: getTeamUsersById
            parameters:
                - description: Team Name
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get users on a team
            tags:
                - teams
        post:
            deprecated: false
            description: Update existing users on a team – admin use only
            operationId: createTeamUsersById
            parameters:
                - description: Team name
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MembershipSchema'
                description: MembershipSchema object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update existing users on a team – admin use only
            tags:
                - teams
    /system/teams/users/{id}/roles:
        get:
            deprecated: false
            description: Get user's product roles
            operationId: getTeamRolesById
            parameters:
                - description: user id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            type: string
                                        type: array
                                type: object
                    description: a list of string objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get user's product roles
            tags:
                - teams
    /system/users:
        get:
            description: Get a list of User objects
            operationId: listUser
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/User'
                                        type: array
                                type: object
                    description: a list of User objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get a list of User objects
            tags:
                - users
                - onlyOnPrem
        post:
            description: Create User
            operationId: createUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                description: New User object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/User'
                                        type: array
                                type: object
                    description: a list of User objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Create User
            tags:
                - users
                - onlyOnPrem
    /system/users/{id}:
        delete:
            description: Delete User
            operationId: deleteUserById
            parameters:
                - description: Unique ID to DELETE
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/User'
                                        type: array
                                type: object
                    description: a list of User objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Delete User
            tags:
                - users
                - onlyOnPrem
        get:
            description: Get User by ID
            operationId: getUserById
            parameters:
                - description: Unique ID to GET
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/User'
                                        type: array
                                type: object
                    description: a list of User objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get User by ID
            tags:
                - users
                - onlyOnPrem
        patch:
            deprecated: false
            description: Update User properties – admin use only
            operationId: updateUserById
            parameters:
                - description: User Id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserProfile'
                description: UserProfile object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/UserProfile'
                                        type: array
                                type: object
                    description: a list of UserProfile objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update User properties – admin use only
            tags:
                - users
                - onlyOnPrem
    /system/users/{id}/info:
        patch:
            deprecated: false
            description: Update User except for their roles
            operationId: updateUserInfoById
            parameters:
                - description: User Id
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInfo'
                description: UserInfo object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/User'
                                        type: array
                                type: object
                    description: a list of User objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update User except for their roles
            tags:
                - users
                - onlyOnPrem
    /ui/{key}:
        get:
            deprecated: false
            description: Get UI state by key
            operationId: getUiByKey
            parameters:
                - description: UI state key
                  in: path
                  name: key
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get UI state by key
            tags:
                - uiState
        patch:
            deprecated: false
            description: Update UI state by key
            operationId: updateUiByKey
            parameters:
                - description: UI state key
                  in: path
                  name: key
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UiStatePatch'
                description: UI State Patch object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Update UI state by key
            tags:
                - uiState
    /version/branch:
        get:
            deprecated: false
            description: get the list of branches
            operationId: getVersionBranch
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the list of branches
            tags:
                - versioning
                - git
    /version/commit:
        post:
            deprecated: false
            description: create a new commit containing the current configs the given log message describing the changes.
            operationId: createVersionCommit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GitCommitParams'
                description: GitCommitParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitCommitSummary'
                                        type: array
                                type: object
                    description: a list of GitCommitSummary objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: create a new commit containing the current configs the given log message describing the changes.
            tags:
                - versioning
                - git
    /version/count:
        get:
            deprecated: false
            description: get the count of files of changed
            operationId: getVersionCount
            parameters:
                - description: Group ID
                  in: query
                  name: group
                  required: false
                  schema:
                    type: string
                - description: Commit ID
                  in: query
                  name: ID
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the count of files of changed
            tags:
                - versioning
                - git
    /version/current-branch:
        get:
            deprecated: false
            description: returns git branch that the config is checked out to, if any
            operationId: getVersionCurrentBranch
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: returns git branch that the config is checked out to, if any
            tags:
                - versioning
                - git
    /version/diff:
        get:
            deprecated: false
            description: get the textual diff for given commit
            operationId: getVersionDiff
            parameters:
                - description: Commit hash (default is HEAD)
                  in: query
                  name: commit
                  required: false
                  schema:
                    type: string
                - description: Group ID
                  in: query
                  name: group
                  required: false
                  schema:
                    type: string
                - description: Filename
                  in: query
                  name: filename
                  required: false
                  schema:
                    type: string
                - description: Limit maximum lines in the diff
                  in: query
                  name: diffLineLimit
                  required: false
                  schema:
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the textual diff for given commit
            tags:
                - versioning
                - git
    /version/files:
        get:
            deprecated: false
            description: get the files changed
            operationId: getVersionFiles
            parameters:
                - description: Group ID
                  in: query
                  name: group
                  required: false
                  schema:
                    type: string
                - description: Commit ID
                  in: query
                  name: ID
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitFilesResponse'
                                        type: array
                                type: object
                    description: a list of GitFilesResponse objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the files changed
            tags:
                - versioning
                - git
    /version/info:
        get:
            deprecated: false
            description: Get info about versioning availability
            operationId: getVersionInfo
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitInfo'
                                        type: array
                                type: object
                    description: a list of GitInfo objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: Get info about versioning availability
            tags:
                - versioning
                - git
    /version/push:
        post:
            deprecated: false
            description: push the current configs to the remote repository.
            operationId: createVersionPush
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: push the current configs to the remote repository.
            tags:
                - versioning
                - git
    /version/revert:
        post:
            deprecated: false
            description: revert a commit
            operationId: createVersionRevert
            parameters:
                - description: Group ID
                  in: query
                  name: group
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GitRevertParams'
                description: GitRevertParams object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitRevertResult'
                                        type: array
                                type: object
                    description: a list of GitRevertResult objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: revert a commit
            tags:
                - versioning
                - git
    /version/show:
        get:
            deprecated: false
            description: get the log message and textual diff for given commit
            operationId: getVersionShow
            parameters:
                - description: Commit hash (default is HEAD)
                  in: query
                  name: commit
                  required: false
                  schema:
                    type: string
                - description: Group ID
                  in: query
                  name: group
                  required: false
                  schema:
                    type: string
                - description: Filename
                  in: query
                  name: filename
                  required: false
                  schema:
                    type: string
                - description: Limit maximum lines in the diff
                  in: query
                  name: diffLineLimit
                  required: false
                  schema:
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the log message and textual diff for given commit
            tags:
                - versioning
                - git
    /version/status:
        get:
            deprecated: false
            description: get the the working tree status
            operationId: getVersionStatus
            parameters:
                - description: Group ID
                  in: query
                  name: group
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            $ref: '#/components/schemas/GitStatusResult'
                                        type: array
                                type: object
                    description: a list of GitStatusResult objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: get the the working tree status
            tags:
                - versioning
                - git
    /version/sync:
        post:
            deprecated: false
            description: syncs with remote repo via POST requests
            operationId: createVersionSync
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    count:
                                        description: number of items present in the items array
                                        type: integer
                                    items:
                                        items:
                                            additionalProperties: true
                                            type: object
                                        type: array
                                type: object
                    description: a list of any objects
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: syncs with remote repo via POST requests
            tags:
                - versioning
                - git
    /version/undo:
        post:
            description: undo the last commit
            operationId: undoLastCommit
            parameters:
                - description: Group ID
                  in: query
                  name: group
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    description: The operation completed
                "401":
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unexpected error
            summary: undo the last commit
            tags:
                - versioning
                - git
security:
    - bearerAuth: []
servers: |-
    - url: https://app.cribl.cloud
      x-speakeasy-server-id: cloud
      variables:
        workspaceName:
          default: main
          description: The Workspace name
        organizationId:
          default: ian description: the Organization ID
        cloudDomain:
          default: cribl.cloud
          description: Cribl Cloud domain name
    - url: https://{workspaceName}-{organizationId}.{cloudDomain}/api/v1/m/{groupName}
      x-speakeasy-server-id: cloud-group
      variables:
        workspaceName:
          default: main
          description: The Workspace name
        organizationId:
          default: ian
          description: The Organization ID
        cloudDomain:
          default: cribl.cloud
          description: Cribl Cloud domain name
        groupName:
          default: default
          description: The name of the Worker Group or Fleet
    - url: https://{hostname}:{port}/api/v1
      x-speakeasy-server-id: managed
      variables:
        hostname:
          default: localhost
          description: The hostname of the managed API server
        port:
          default: '9000'
          description: The port of the managed API server
    - url: https://{hostname}:{port}/api/v1/m/{groupName}
      x-speakeasy-server-id: managed-group
      variables:
        hostname:
          default: localhost
          description: The hostname of the managed API server
        port:
          default: '9000'
          description: The port of the managed API server
        groupName:
          default: default
          description: The name of the Worker Group or Fleet
tags:
    - description: Actions related to Ai Settings
      name: ai-settings
    - description: Actions related to Appscope Configs
      name: appscope-configs
    - description: Actions related to authentication. Do not use the /auth endpoints in Cribl.Cloud deployments. Instead, follow the instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud to authenticate for Cribl.Cloud.
      name: auth
    - description: Actions related to Authorize
      name: authorize
    - description: Actions related to Banners
      name: banners
    - description: Actions related to Certificates
      name: certificates
    - description: Actions related to Changelog
      name: changelog
    - description: Actions related to ClickHouse
      name: click-house
    - description: Actions related to CLUI
      name: clui
    - description: Actions related to Collectors
      name: collectors
    - description: Actions related to Conditions
      name: conditions
    - description: Actions related to Consent
      name: consent
    - description: Actions related to DashboardCategories
      name: dashboardCategories
    - description: Actions related to Dashboards
      name: dashboards
    - description: Actions related to Database Connections
      name: database-connections
    - description: Actions related to Datasets
      name: datasets
    - description: Actions related to diagnostics
      name: diag
    - description: Actions related to Distributed
      name: distributed
    - description: Actions enabled in Edge
      name: edge
    - description: Actions related to Edge AppScope processes
      name: edgeAppScopeProcesses
    - description: Actions related to Edge containers
      name: edgeContainers
    - description: Actions related to EdgeEvents
      name: edgeEvents
    - description: Actions related to Edge Files
      name: edgeFiles
    - description: Actions related to Edge listing
      name: edgeLs
    - description: Actions related to Edge processes
      name: edgeProcesses
    - description: Actions related to Event Breaker rules
      name: event_breaker_rules
    - description: Actions related to Events
      name: events
    - description: Actions related to Executors
      name: executors
    - description: Actions related to expressions
      name: expressions
    - description: Actions related to Features
      name: features
    - description: Actions related to File
      name: file
    - description: Actions related to FileSampler
      name: fileSampler
    - description: Actions related to functions
      name: functions
    - description: Actions related to Git
      name: git
    - description: Actions related to Global Variables
      name: global_variables
    - description: Actions related to Grok files
      name: grokfiles
    - description: Actions related to Groups
      name: groups
    - description: Actions related to REST server health
      name: health
    - description: Actions related to HMAC functions
      name: hmac-functions
    - description: Actions related to Ingest
      name: ingest
    - description: Actions related to inputs
      name: inputs
    - description: Actions related to source/destination metrics
      name: iometrics
    - description: Actions related to Jobs
      name: jobs
    - description: Actions related to encryption keys
      name: keys
    - description: Actions related to Kube Logs
      name: kube-logs
    - description: Actions related to Kube Proxy
      name: kube-proxy
    - description: Actions related to Lake
      name: lake
    - description: Actions related to licenses. The <code>/licenses</code> endpoints do not apply to Cribl.Cloud deployments.
      name: licenses
    - description: Actions related to Logger
      name: logger
    - description: Actions related to logging
      name: logging
    - description: Actions related to lookups
      name: lookups
    - description: Actions related to Macros
      name: macros
    - description: Actions related to messages
      name: messages
    - description: Actions related to metrics
      name: metrics
    - description: Actions related to Notification Targets
      name: notification-targets
    - description: Actions related to Notifications
      name: notifications
    - 'description:': Actions only available for onprem deployments and do not apply to Cribl.Cloud deployments
      name: onlyOnPrem
    - description: Actions related to outputs
      name: outputs
    - description: Actions related to Packs
      name: packs
    - description: Actions related to Parquet schemas
      name: parquetschemas
    - description: Actions related to parsers
      name: parsers
    - description: Actions related to Pipelines
      name: pipelines
    - description: Actions related to Policies
      name: policies
    - description: Actions related to data preview
      name: preview
    - description: Actions related to Processes
      name: processes
    - description: Actions related to Profiler
      name: profiler
    - description: Actions related to Projects
      name: projects
    - description: Actions related to Protobuf libraries
      name: protobuflibraries
    - description: Actions related to regular expressions
      name: regexes
    - description: Actions related to Roles
      name: roles
    - description: Actions related to Routes
      name: routes
    - description: Actions related to samples
      name: samples
    - description: Actions related to Saved Jobs
      name: saved-jobs
    - description: Actions related to saved queries
      name: savedQueries
    - description: Actions related to Schemas
      name: schemas
    - description: Actions related to scripts
      name: scripts
    - description: Actions related to Search
      name: search
    - description: Actions related to Secrets
      name: secrets
    - description: Actions related to Security
      name: security
    - description: Actions related to Subscriptions
      name: subscriptions
    - description: Actions related to system settings
      name: system
    - description: Actions related to Teams
      name: teams
    - description: Actions related to Teams ACL
      name: teams ACL
    - description: Actions related to Trust Policies
      name: trust-policies
    - description: Actions related to UiState
      name: uiState
    - description: Actions related to Usage Groups
      name: usage-groups
    - description: Actions related to users. The <code>/system/users</code> endpoints do not apply to Cribl.Cloud deployments. Instead use <code>/products/{product}/users</code>
      name: users
    - description: Actions related to Users ACL
      name: users ACL
    - description: Actions related to Users,onlyOnPrem
      name: users,onlyOnPrem
    - description: Actions related to Versioning
      name: versioning
    - description: Actions related to Workers
      name: workers
